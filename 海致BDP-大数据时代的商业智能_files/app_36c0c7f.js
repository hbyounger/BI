
! function (e, t) {
    "use strict";
    var a = ["ng", "oc.lazyLoad"],
        i = {},
        n = [],
        r = [],
        o = [],
        s = [],
        l = e.noop,
        d = {},
        c = [];
    e.module("oc.lazyLoad", ["ng"])
    .provider("$ocLazyLoad", ["$controllerProvider", "$provide", "$compileProvider", "$filterProvider", "$injector", "$animateProvider", function (p, f, g, m, _, v) {
        function b(t, i, n) {
            if (i) {
                var r, s, p, u = [];
                for (r = i.length - 1; r >= 0; r--)
                    if (s = i[r], e.isString(s) || (s = C(s)), s && c.indexOf(s) === -1 && (!k[s] || o.indexOf(s) !== -1)) {
                        var f = a.indexOf(s) === -1;
                        if (p = h(s), f && (a.push(s), b(t, p.requires, n)), p._runBlocks.length > 0)
                            for (d[s] = []; p._runBlocks.length > 0;) d[s].push(p._runBlocks.shift());
                        e.isDefined(d[s]) && (f || n.rerun) && (u = u.concat(d[s])), w(t, p._invokeQueue, s, n.reconfig), w(t, p._configBlocks, s, n.reconfig), l(f ? "ocLazyLoad.moduleLoaded" : "ocLazyLoad.moduleReloaded", s), i.pop(), c.push(s)
                    }
                var g = t.getInstanceInjector();
                e.forEach(u, function (e) {
                    g.invoke(e)
                })
            }
        }

        function y(t, a) {
            function n(t, a) {
                var i, n = !0;
                return a.length && (i = r(t), e.forEach(a, function (e) {
                    n = n && r(e) !== i
                })), n
            }

            function r(t) {
                return e.isArray(t) ? A(t.toString()) : e.isObject(t) ? A($(t)) : e.isDefined(t) && null !== t ? A(t.toString()) : t
            }
            var o = t[2][0],
                s = t[1],
                d = !1;
            e.isUndefined(i[a]) && (i[a] = {}), e.isUndefined(i[a][s]) && (i[a][s] = {});
            var c = function (e, t) {
                i[a][s].hasOwnProperty(e) || (i[a][s][e] = []), n(t, i[a][s][e]) && (d = !0, i[a][s][e].push(t), l("ocLazyLoad.componentLoaded", [a, s, e]))
            };
            if (e.isString(o)) c(o, t[2][1]);
            else {
                if (!e.isObject(o)) return !1;
                e.forEach(o, function (t, a) {
                    e.isString(t) ? c(t, o[1]) : c(a, t)
                })
            }
            return d
        }

        function w(t, a, i, r) {
            if (a) {
                var o, s, l, d;
                for (o = 0, s = a.length; o < s; o++)
                    if (l = a[o], e.isArray(l)) {
                        if (null !== t) {
                            if (!t.hasOwnProperty(l[0])) throw new Error("unsupported provider " + l[0]);
                            d = t[l[0]]
                        }
                        var c = y(l, i);
                        if ("invoke" !== l[1]) c && e.isDefined(d) && d[l[1]].apply(d, l[2]);
                        else {
                            var p = function (t) {
                                var a = n.indexOf(i + "-" + t);
                                (a === -1 || r) && (a === -1 && n.push(i + "-" + t), e.isDefined(d) && d[l[1]].apply(d, l[2]))
                            };
                            if (e.isFunction(l[2][0])) p(l[2][0]);
                            else if (e.isArray(l[2][0]))
                                for (var u = 0, h = l[2][0].length; u < h; u++) e.isFunction(l[2][0][u]) && p(l[2][0][u])
                        }
                    }
            }
        }

        function C(t) {
            var a = null;
            return e.isString(t) ? a = t : e.isObject(t) && t.hasOwnProperty("name") && e.isString(t.name) && (a = t.name), a
        }

        function x(t) {
            if (!e.isString(t)) return !1;
            try {
                return h(t)
            } catch (e) {
                if (/No module/.test(e) || e.message.indexOf("$injector:nomod") > -1) return !1
            }
        }
        var k = {},
            D = {
                $controllerProvider: p,
                $compileProvider: g,
                $filterProvider: m,
                $provide: f,
                $injector: _,
                $animateProvider: v
            },
            S = !1,
            T = !1,
            I = [],
            L = {};
        I.push = function (e) {
            this.indexOf(e) === -1 && Array.prototype.push.apply(this, arguments)
        }, 
        this.config = function (t) {
            e.isDefined(t.modules) && (e.isArray(t.modules) ? e.forEach(t.modules, function (e) {
                k[e.name] = e
            }) : k[t.modules.name] = t.modules), e.isDefined(t.debug) && (S = t.debug), e.isDefined(t.events) && (T = t.events)
        }, 
        this._init = function (i) {
            if (0 === r.length) {
                var n = [i],
                    o = ["ng:app", "ng-app", "x-ng-app", "data-ng-app"],
                    l = /\sng[:\-]app(:\s*([\w\d_]+);?)?\s/,
                    d = function (e) {
                        return e && n.push(e)
                    };
                e.forEach(o, function (t) {
                    o[t] = !0, d(document.getElementById(t)), t = t.replace(":", "\\:"), void 0 !== i[0] && i[0].querySelectorAll && (e.forEach(i[0].querySelectorAll("." + t), d), e.forEach(i[0].querySelectorAll("." + t + "\\:"), d), e.forEach(i[0].querySelectorAll("[" + t + "]"), d))
                }), e.forEach(n, function (t) {
                    if (0 === r.length) {
                        var a = " " + i.className + " ",
                            n = l.exec(a);
                        n ? r.push((n[2] || "").replace(/\s+/g, ",")) : e.forEach(t.attributes, function (e) {
                            0 === r.length && o[e.name] && r.push(e.value)
                        })
                    }
                })
            }
            0 !== r.length || (t.jasmine || t.mocha) && e.isDefined(e.mock) || console.error("No module found during bootstrap, unable to init ocLazyLoad. You should always use the ng-app directive or angular.boostrap when you use ocLazyLoad.");
            var c = function t(i) {
                if (a.indexOf(i) === -1) {
                    a.push(i);
                    var n = e.module(i);
                    w(null, n._invokeQueue, i), w(null, n._configBlocks, i), e.forEach(n.requires, t)
                }
            };
            e.forEach(r, function (e) {
                c(e)
            }), r = [], s.pop()
        };
        var $ = function (t) {
                try {
                    return JSON.stringify(t)
                } catch (i) {
                    var a = [];
                    return JSON.stringify(t, function (t, i) {
                        if (e.isObject(i) && null !== i) {
                            if (a.indexOf(i) !== -1) return;
                            a.push(i)
                        }
                        return i
                    })
                }
            },
            A = function (e) {
                var t, a, i, n = 0;
                if (0 == e.length) return n;
                for (t = 0, i = e.length; t < i; t++) a = e.charCodeAt(t), n = (n << 5) - n + a, n |= 0;
                return n
            };
        this.$get = ["$log", "$rootElement", "$rootScope", "$cacheFactory", "$q", function (t, n, o, d, p) {
            function f(e) {
                var a = p.defer();
                return t.error(e.message), a.reject(e), a.promise
            }
            var g, m = d("ocLazyLoad");
            return S || (t = {}, t.error = e.noop, t.warn = e.noop, t.info = e.noop), D.getInstanceInjector = function () {
                return g || (g = n.data("$injector") || e.injector())
            }, 
            l = function (e, a) {
                T && o.$broadcast(e, a), S && t.info(e, a)
            }, 
            {
                _broadcast: l,
                _$log: t,
                _getFilesCache: function () {
                    return m
                },
                toggleWatch: function (e) {
                    e ? s.push(!0) : s.pop()
                },
                getModuleConfig: function (t) {
                    if (!e.isString(t)) throw new Error("You need to give the name of the module to get");
                    return k[t] ? e.copy(k[t]) : null
                },
                setModuleConfig: function (t) {
                    if (!e.isObject(t)) throw new Error("You need to give the module config object to set");
                    return k[t.name] = t, t
                },
                getModules: function () {
                    return a
                },
                isLoaded: function (t) {
                    if (e.isString(t) && (t = [t]), e.isArray(t)) {
                        var i, n;
                        for (i = 0, n = t.length; i < n; i++)
                            if (! function (e) {
                                    var t = a.indexOf(e) > -1;
                                    return t || (t = !!x(e)), t
                                }(t[i])) return !1;
                        return !0
                    }
                    throw new Error("You need to define the module(s) name(s)")
                },
                _getModuleName: C,
                _getModule: function (e) {
                    try {
                        return h(e)
                    } catch (t) {
                        throw (/No module/.test(t) || t.message.indexOf("$injector:nomod") > -1) && (t.message = 'The module "' + $(e) + '" that you are trying to load does not exist. ' + t.message), t
                    }
                },
                moduleExists: x,
                _loadDependencies: function (t, a) {
                    var i, n, r, o = [],
                        s = this;
                    if (null === (t = s._getModuleName(t))) return p.when();
                    try {
                        i = s._getModule(t)
                    } catch (e) {
                        return f(e)
                    }
                    return n = s.getRequires(i), e.forEach(n, function (i) {
                        if (e.isString(i)) {
                            var n = s.getModuleConfig(i);
                            if (null === n) return void I.push(i);
                            i = n, n.name = void 0
                        }
                        if (s.moduleExists(i.name)) return r = i.files.filter(function (e) {
                            return s.getModuleConfig(i.name).files.indexOf(e) < 0
                        }), 0 !== r.length && s._$log.warn('Module "', t, '" attempted to redefine configuration for dependency. "', i.name, '"\n Additional Files Loaded:', r), e.isDefined(s.filesLoader) ? void o.push(s.filesLoader(i, a).then(function () {
                            return s._loadDependencies(i)
                        })) : f(new Error("Error: New dependencies need to be loaded from external files (" + i.files + "), but no loader has been defined."));
                        if (e.isArray(i)) {
                            var l = [];
                            e.forEach(i, function (e) {
                                var t = s.getModuleConfig(e);
                                null === t ? l.push(e) : t.files && (l = l.concat(t.files))
                            }), l.length > 0 && (i = {
                                files: l
                            })
                        } else e.isObject(i) && i.hasOwnProperty("name") && i.name && (s.setModuleConfig(i), I.push(i.name));
                        if (e.isDefined(i.files) && 0 !== i.files.length) {
                            if (!e.isDefined(s.filesLoader)) return f(new Error('Error: the module "' + i.name + '" is defined in external files (' + i.files + "), but no loader has been defined."));
                            o.push(s.filesLoader(i, a).then(function () {
                                return s._loadDependencies(i)
                            }))
                        }
                    }), p.all(o)
                },
                inject: function (t) {
                    var a = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        i = !(arguments.length <= 2 || void 0 === arguments[2]) && arguments[2],
                        n = this,
                        o = p.defer();
                    if (e.isDefined(t) && null !== t) {
                        if (e.isArray(t)) {
                            var s = [];
                            return e.forEach(t, function (e) {
                                s.push(n.inject(e, a, i))
                            }), p.all(s)
                        }
                        n._addToLoadList(n._getModuleName(t), !0, i)
                    }
                    if (r.length > 0) {
                        var l = r.slice();
                        ! function e(t) {
                            I.push(t), L[t] = o.promise, n._loadDependencies(t, a).then(function () {
                                try {
                                    c = [], b(D, I, a)
                                } catch (e) {
                                    return n._$log.error(e.message), void o.reject(e)
                                }
                                r.length > 0 ? e(r.shift()) : o.resolve(l)
                            }, function (e) {
                                o.reject(e)
                            })
                        }(r.shift())
                    } else {
                        if (a && a.name && L[a.name]) return L[a.name];
                        o.resolve()
                    }
                    return o.promise
                },
                getRequires: function (t) {
                    var i = [];
                    return e.forEach(t.requires, function (e) {
                        a.indexOf(e) === -1 && i.push(e)
                    }), i
                },
                _invokeQueue: w,
                _registerInvokeList: y,
                _register: b,
                _addToLoadList: u,
                _unregister: function (t) {
                    e.isDefined(t) && e.isArray(t) && e.forEach(t, function (e) {
                        i[e] = void 0
                    })
                }
            }
        }], 
        this._init(e.element(t.document))
    }]);
    var p = e.bootstrap;
    e.bootstrap = function (t, h, f) {
        return a = ["ng", "oc.lazyLoad"], 
        i = {}, 
        n = [], 
        r = [], 
        o = [], 
        s = [], 
        l = e.noop, 
        d = {}, 
        c = [], 
        e.forEach(h.slice(), function (e) {
            u(e, !0, !0)
        }), 
        p(t, h, f)
    };
    var u = function (t, a, i) {
            (s.length > 0 || a) && e.isString(t) && r.indexOf(t) === -1 && (r.push(t), i && o.push(t))
        },
        h = e.module;
    e.module = function (e, t, a) {
        return u(e, !1, !0), h(e, t, a)
    }, "undefined" != typeof module && "undefined" != typeof exports && module.exports === exports && (module.exports = "oc.lazyLoad")
}(angular, window);

function ocLazyLoad(e) {
    "use strict";
    e.module("oc.lazyLoad")
        .directive("ocLazyLoad", ["$ocLazyLoad", "$compile", "$animate", "$parse", "$timeout", function (t, a, i, n, r) {
            return {
                restrict: "A",
                terminal: !0,
                priority: 1e3,
                compile: function (r, o) {
                    var s = r[0].innerHTML;
                    return r.html(""),
                        function (r, o, l) {
                            var d = n(l.ocLazyLoad);
                            r.$watch(function () {
                                return d(r) || l.ocLazyLoad
                            }, function (n) {
                                e.isDefined(n) && t.load(n).then(function () {
                                    i.enter(s, o), a(o.contents())(r)
                                })
                            }, !0)
                        }
                }
            }
        }])
}(angular);
function provide(e) {
    "use strict";
    e.module("oc.lazyLoad")
    .config(["$provide", function (t) {
        t.decorator("$ocLazyLoad", ["$delegate", "$q", "$window", "$interval", function (t, a, i, n) {
            var r = !1,
                o = i.document.getElementsByTagName("head")[0] || i.document.getElementsByTagName("body")[0];
            return t.buildElement = function (s, l, d) {
                var c, p, u = a.defer(),
                    h = t._getFilesCache(),
                    f = function (e) {
                        var t = (new Date).getTime();
                        return e.indexOf("?") >= 0 ? "&" === e.substring(0, e.length - 1) ? e + "_dc=" + t : e + "&_dc=" + t : e + "?_dc=" + t
                    };
                switch (e.isUndefined(h.get(l)) && h.put(l, u.promise), s) {
                    case "css":
                        c = i.document.createElement("link"), c.type = "text/css", c.rel = "stylesheet", c.href = d.cache === !1 ? f(l) : l;
                        break;
                    case "js":
                        c = i.document.createElement("script"), c.src = d.cache === !1 ? f(l) : l;
                        break;
                    default:
                        h.remove(l), u.reject(new Error('Requested type "' + s + '" is not known. Could not inject "' + l + '"'))
                }
                c.onload = c.onreadystatechange = function (e) {
                    c.readyState && !/^c|loade/.test(c.readyState) || p || (c.onload = c.onreadystatechange = null, p = 1, t._broadcast("ocLazyLoad.fileLoaded", l), u.resolve(c))
                }, c.onerror = function () {
                    h.remove(l), u.reject(new Error("Unable to load " + l))
                }, c.async = d.serie ? 0 : 1;
                var g = o.lastChild;
                if (d.insertBefore) {
                    var m = e.element(e.isDefined(window.jQuery) ? d.insertBefore : document.querySelector(d.insertBefore));
                    m && m.length > 0 && (g = m[0])
                }
                if (g.parentNode.insertBefore(c, g), "css" == s) {
                    var _ = i.navigator.userAgent.toLowerCase();
                    if (_.indexOf("phantomjs/1.9") > -1) r = !0;
                    else if (/iP(hone|od|ad)/.test(i.navigator.platform)) {
                        var v = i.navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
                            b = parseFloat([parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)].join("."));
                        r = b < 6
                    } else if (_.indexOf("android") > -1) {
                        var y = parseFloat(_.slice(_.indexOf("android") + 8));
                        r = y < 4.4
                    } else if (_.indexOf("safari") > -1) {
                        var w = _.match(/version\/([\.\d]+)/i);
                        r = w && w[1] && parseFloat(w[1]) < 6
                    }
                    if (r) var C = 1e3,
                        x = n(function () {
                            try {
                                c.sheet.cssRules, n.cancel(x), c.onload()
                            } catch (e) {
                                --C <= 0 && c.onerror()
                            }
                        }, 20)
                }
                return u.promise
            }, t
        }])
    }])
}(angular);
function filesLoader(e) {
    "use strict";
    e.module("oc.lazyLoad")
    .config(["$provide", function (t) {
        t.decorator("$ocLazyLoad", ["$delegate", "$q", function (t, a) {
            return t.filesLoader = function (i) {
                var n = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                    r = [],
                    o = [],
                    s = [],
                    l = [],
                    d = null,
                    c = t._getFilesCache();
                t.toggleWatch(!0), e.extend(n, i);
                var p = function (a) {
                    var i, p = null;
                    if (e.isObject(a) && (p = a.type, a = a.path), d = c.get(a), e.isUndefined(d) || n.cache === !1) {
                        if (null !== (i = /^(css|less|html|htm|js)?(?=!)/.exec(a)) && (p = i[1], a = a.substr(i[1].length + 1, a.length)), !p)
                            if (null !== (i = /[.](css|less|html|htm|js)?((\?|#).*)?$/.exec(a))) p = i[1];
                            else {
                                if (t.jsLoader.hasOwnProperty("ocLazyLoadLoader") || !t.jsLoader.hasOwnProperty("requirejs")) return void t._$log.error("File type could not be determined. " + a);
                                p = "js"
                            }
                        "css" !== p && "less" !== p || r.indexOf(a) !== -1 ? "html" !== p && "htm" !== p || o.indexOf(a) !== -1 ? "js" === p || s.indexOf(a) === -1 ? s.push(a) : t._$log.error("File type is not valid. " + a) : o.push(a) : r.push(a)
                    } else d && l.push(d)
                };
                if (n.serie ? p(n.files.shift()) : e.forEach(n.files, function (e) {
                        p(e)
                    }), r.length > 0) {
                    var u = a.defer();
                    t.cssLoader(r, function (a) {
                        e.isDefined(a) && t.cssLoader.hasOwnProperty("ocLazyLoadLoader") ? (t._$log.error(a), u.reject(a)) : u.resolve()
                    }, n), l.push(u.promise)
                }
                if (o.length > 0) {
                    var h = a.defer();
                    t.templatesLoader(o, function (a) {
                        e.isDefined(a) && t.templatesLoader.hasOwnProperty("ocLazyLoadLoader") ? (t._$log.error(a), h.reject(a)) : h.resolve()
                    }, n), l.push(h.promise)
                }
                if (s.length > 0) {
                    var f = a.defer();
                    t.jsLoader(s, function (a) {
                        e.isDefined(a) && (t.jsLoader.hasOwnProperty("ocLazyLoadLoader") || t.jsLoader.hasOwnProperty("requirejs")) ? (t._$log.error(a), f.reject(a)) : f.resolve()
                    }, n), l.push(f.promise)
                }
                if (0 === l.length) {
                    var g = a.defer(),
                        m = "Error: no file to load has been found, if you're trying to load an existing module you should use the 'inject' method instead of 'load'.";
                    return t._$log.error(m), g.reject(m), g.promise
                }
                return n.serie && n.files.length > 0 ? a.all(l).then(function () {
                    return t.filesLoader(i, n)
                }) : a.all(l).finally(function (e) {
                    return t.toggleWatch(!1), e
                })
            },
                t.load = function (i) {
                    var n, r = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                        o = this,
                        s = null,
                        l = [],
                        d = a.defer(),
                        c = e.copy(i),
                        p = e.copy(r);
                    if (e.isArray(c)) return e.forEach(c, function (e) {
                        l.push(o.load(e, p))
                    }), a.all(l).then(function (e) {
                        d.resolve(e)
                    }, function (e) {
                        d.reject(e)
                    }), d.promise;
                    if (e.isString(c) ? (s = o.getModuleConfig(c)) || (s = {
                            files: [c]
                        }) : e.isObject(c) && (s = e.isDefined(c.path) && e.isDefined(c.type) ? {
                            files: [c]
                        } : o.setModuleConfig(c)), null === s) {
                        return n = 'Module "' + (o._getModuleName(c) || "unknown") + '" is not configured, cannot load.', t._$log.error(n), d.reject(new Error(n)), d.promise
                    }
                    e.isDefined(s.template) && (e.isUndefined(s.files) && (s.files = []), e.isString(s.template) ? s.files.push(s.template) : e.isArray(s.template) && s.files.concat(s.template));
                    var u = e.extend({}, p, s);
                    return e.isUndefined(s.files) && e.isDefined(s.name) && t.moduleExists(s.name) ? t.inject(s.name, u, !0) : (t.filesLoader(s, u).then(function () {
                        t.inject(null, u).then(function (e) {
                            d.resolve(e)
                        }, function (e) {
                            d.reject(e)
                        })
                    }, function (e) {
                        d.reject(e)
                    }), d.promise)
                },
                t
        }])
    }])
}(angular);
function cssLoader(e) {
    "use strict";
    e.module("oc.lazyLoad").config(["$provide", function (t) {
        t.decorator("$ocLazyLoad", ["$delegate", "$q", function (t, a) {
            return t.cssLoader = function (i, n, r) {
                var o = [];
                e.forEach(i, function (e) {
                    o.push(t.buildElement("css", e, r))
                }), a.all(o).then(function () {
                    n()
                }, function (e) {
                    n(e)
                })
            }, t.cssLoader.ocLazyLoadLoader = !0, t
        }])
    }])
}(angular);
function jsLoader(e) {
    "use strict";
    e.module("oc.lazyLoad").config(["$provide", function (t) {
        t.decorator("$ocLazyLoad", ["$delegate", "$q", function (t, a) {
            return t.jsLoader = function (i, n, r) {
                var o = [];
                e.forEach(i, function (e) {
                    o.push(t.buildElement("js", e, r))
                }), a.all(o).then(function () {
                    n()
                }, function (e) {
                    n(e)
                })
            }, t.jsLoader.ocLazyLoadLoader = !0, t
        }])
    }])
}(angular);
function templatesLoader(e) {
    "use strict";
    e.module("oc.lazyLoad").config(["$provide", function (t) {
        t.decorator("$ocLazyLoad", ["$delegate", "$templateCache", "$q", "$http", function (t, a, i, n) {
            return t.templatesLoader = function (r, o, s) {
                var l = [],
                    d = t._getFilesCache();
                return e.forEach(r, function (t) {
                    var r = i.defer();
                    l.push(r.promise), n.get(t, s).then(function (i) {
                        var n = i.data;
                        e.isString(n) && n.length > 0 && e.forEach(e.element(n), function (e) {
                            "SCRIPT" === e.nodeName && "text/ng-template" === e.type && a.put(e.id, e.innerHTML)
                        }), e.isUndefined(d.get(t)) && d.put(t, !0), r.resolve()
                    }).catch(function (e) {
                        r.reject(new Error('Unable to load template file "' + t + '": ' + e.data))
                    })
                }), i.all(l).then(function () {
                    o()
                }, function (e) {
                    o(e)
                })
            },
                t.templatesLoader.ocLazyLoadLoader = !0,
                t
        }])
    }])
}(angular);

Array.prototype.indexOf || (Array.prototype.indexOf = function (e, t) {
    var a;
    if (null == this) throw new TypeError('"this" is null or not defined');
    var i = Object(this),
        n = i.length >>> 0;
    if (0 === n) return -1;
    var r = +t || 0;
    if (Math.abs(r) === 1 / 0 && (r = 0), r >= n) return -1;
    for (a = Math.max(r >= 0 ? r : n - Math.abs(r), 0); a < n;) {
        if (a in i && i[a] === e) return a;
        a++
    }
    return -1
});

!function (e) {
    function t(a) {
        if (i[a])
            return i[a].exports;
        var n = i[a] = {
            i: a,
            l: !1,
            exports: {}
        };
        return
        e[a].call(n.exports, n, n.exports, t),
            n.l = !0,
            n.exports
    }
    var a = window.webpackJsonp;
    window.webpackJsonp = function (t, i, r) {
        for (var o, s, l = 0, d = []; l < t.length; l++)
            s = t[l],
            n[s] && d.push(n[s][0]),
                n[s] = 0;
        for (o in i)
            Object.prototype.hasOwnProperty.call(i, o) && (e[o] = i[o]);
        for (a && a(t, i, r); d.length;)
            d.shift()()
    };
    var i = {},
        n = {
            4: 0
        };
    t.e = function (e) {
        function a() {
            s.onerror = s.onload = null, clearTimeout(l);
            var t = n[e];
            0 !== t && (t && t[1](new Error("Loading chunk " + e + " failed.")), n[e] = void 0)
        }
        var i = n[e];
        if (0 === i) return new Promise(function (e) {
            e()
        });
        if (i) return i[2];
        var r = new Promise(function (t, a) {
            i = n[e] = [t, a]
        });
        i[2] = r;
        var o = document.getElementsByTagName("head")[0],
            s = document.createElement("script");
        s.type = "text/javascript", s.charset = "utf-8", s.async = !0, s.timeout = 12e4, t.nc && s.setAttribute("nonce", t.nc), s.src = t.p + "" + e + ".chunk-9da522.js";
        var l = setTimeout(a, 12e4);
        return s.onerror = s.onload = a, o.appendChild(s), r
    },
        t.m = e,
        t.c = i,
        t.d = function (e, a, i) {
            t.o(e, a) || Object.defineProperty(e, a, {
                configurable: !1,
                enumerable: !0,
                get: i
            })
        },
        t.n = function (e) {
            var a = e && e.__esModule ? function () {
                return e.default
            } : function () {
                return e
            };
            return t.d(a, "a", a), a
        },
        t.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        },
        t.p = "https://s1.bdp.cn/dist/",
        t.oe = function (e) {
            throw console.error(e), e
        },
        t(t.s = 58)
}({
    //a(59), a(61), a(63), a(64)
    //BC
    58: function (e, t, a) {
        "use strict";
        var i = [a(59), a(61), a(63), a(64)],
            //所有模块 module
            n = [
                "oc.lazyLoad",
                "ui.router",
                "pascalprecht.translate",
                "BC.services",
                "BC.directives",
                "BC.controllers.project",
                "BC.controllers.dashboard",
                "BC.controllers.dataScreen",
                "BC.controllers.dashUpload",
                "BC.controllers.chartEdit",
                "BC.controllers.dataSource",
                "BC.controllers.dataSource.polymer",
                "BC.controllers.warn",
                "BC.controllers.notice",
                "BC.controllers.setWarn",
                "BC.controllers.template.home",
                "BC.controllers.template.config",
                "BC.controllers.template.rule",
                "BC.controllers.template.modify",
                "BC.controllers.workspace",
                "BC.controllers.authorManageCtrl",
                "BC.controllers.pay",
                "BC.personal",
                "mainNav",
                "bdp.charts",
                "ngDialog",
                "ui.bootstrap",
                "ui.select",
                "ui.tree",
                "lr.upload",
                "datePicker",
                "ui.sortable",
                "ui.mask",
                "filter",
                "monospaced.elastic",
                "ui-rangeSlider",
                "spectrumColorPicker",
                "promiseButton",
                "inputNumber",
                "ngInputText",
                "ngLoadingGif",
                "angular-click-outside",
                "angular-mouserover-hide",
                "textAngular",
                "ngFileUpload",
                "ngImgCrop",
                "bw.paging",
                "pasvaz.bindonce"
            ];
        n = n.concat(i.map(function (e) {
            return e.name
        }));
        var r = angular.module("BC", n);
        r.run([//设置全局变量
            "$rootScope",
            "$location",
            "$window",
            "$timeout",
            "$translate",
            "$http",
            "ngDialog",
            "$state",
            "$stateParams",
            "pendingRequests",
            "webSocket",
            "autoRefreshChart",
            function (
                e, //$rootScope
                t, //$location
                a, //$window
                i, //$timeout
                n, //$translate
                r, //$http
                o, //ngDialog
                s, //$state
                l, //$stateParams
                d, //pendingRequests
                c, //webSocket
                p  //autoRefreshChart
            ) {
                function u(e) {
                    var t = "",
                        a = e.pop(),
                        i = a.split("/"),
                        n = i[1],
                        r = e.pop(),
                        o = [];
                    "dash_edit_ws" == n ? 3 == i.length ? t = n : r ? (o = r.split("/"),
                    o[1] != n && (t = n)) : t = n : "dash_edit" == n ? 2 == i.length ? t = n : r ? (o = r.split("/"),
                    o[1] != n && (t = n)) : t = n : t = a.indexOf("training") > 0 ? a : n,
                    t && BDPLogger.log("feStatistics", {
                        category: "user_interact",
                        action: "pageview",
                        opt_label: t,
                        opt_value: 1
                    })
                }

                function h() {
                    function e() {
                        document[t] ? window.BDP_visibilityChangePageActive = !1 : (window.BDP_visibilityChangePageActive = !0, 
                        p.refreshWaitChart())
                    }
                    window.BDP_visibilityChangePageActive = !0;
                    var t, a;
                    void 0 !== document.hidden ? (t = "hidden", a = "visibilitychange") : void 0 !== document.msHidden ? (t = "msHidden", a = "msvisibilitychange") : void 0 !== document.webkitHidden && (t = "webkitHidden", a = "webkitvisibilitychange"), void 0 !== document.addEventListener && void 0 !== document[t] && (window.BDP_visibilityChangeFlag = !0, document.addEventListener(a, e, !1))
                }
                var f = [];
                e.historyTime = [],
                    e.back = function () {
                        if (1 == f.length && 0 == s.current.name.indexOf("training")) return void s.go("training", null, {
                            replace: !0
                        });
                        var a = f.length > 1 ? f.splice(-2)[0] : "/";
                        return e.historyTime.length > 1 && e.historyTime.splice(-2)[0], "/dash_edit" == a || "/" == a ? void(location.href = "/index.html") : void t.path(a)
                    },
                    e.$on("$stateChangeStart", function () {
                        e.pageLoading = !0, 
                        e.member_personal = !1, 
                        0 == +!!$.cookie("token") && (a.location.href = bdp.bdpLogin.checkPartnerLogin()), 
                        d.cancelAll(), $(".common-dot-guide").remove()
                    }),
                    e.$on("$stateChangeSuccess", function () {
                        f.push(t.path()), 
                        e.historyTime.push(t.path()), 
                        e.pageLoading = !1, 
                        e.advDashEditPage = !1, 
                        e.wsId = l.wsId, 
                        e.actualLocation = t.path(), 
                        u(angular.copy(f))
                    }),
                    e.$watch(function () {
                            return t.path()
                        },
                        function (t) {
                            e.actualLocation === t && o.closeAll()
                        }),
                    e.$on("changeCapacity", function () {
                        e.$broadcast("getCapacity", "change")
                    }),
                    e.$on("userInfoChange", function () {
                        e.$broadcast("getUserInfo", "change")
                    });
                var g = null;
                $(window).resize(function (t) {
                    t.target === window && (clearTimeout(g), 
                    g = setTimeout(function () {
                        e.$broadcast("afterWindowResize")
                    }, 300))
                });
                var m = function (a, i) {
                    e.view = a,
                    i && t.path(i)
                };
                e.click_show_view = function (a, i) {
                    function n(e, t) {
                        var a = !1;
                        return t.map(function (t) {
                            t.ws_id == e && (a = !0)
                        }), a
                    }
                    i = i || {};
                    var r, o, s = l.wsId,
                        d = e.workspaceList;
                    switch (a) {
                        case "dashboard":
                            if (r = "dashboard", s) {
                                d = d.dash;
                                var c = e.last_dash_path,
                                    p = n(s, d);
                                if (p) {
                                    o = c && c.indexOf(s) > -1 ? c : "dash_edit_ws/" + s;
                                    break
                                }
                            }
                            t.path().indexOf("dash_edit") < 0 && (o = c && c.indexOf("dash_edit_ws") > -1 ? "/dash_edit" : c || "/dash_edit");
                            break;
                        case "data_screen":
                            r = "data_screen", t.path().indexOf("data_screen") < 0 && (o = "/data_screen");
                            break;
                        case "data_screen_edit":
                            r = "data_screen_edit", t.path().indexOf("data_screen_edit") < 0 && (o = "/data_screen_edit");
                            break;
                        case "data_source":
                            if (o = "/data_source", r = "worktable", s) {
                                d = d.worktable;
                                var p = n(s, d);
                                if (p) {
                                    o = "data_source/" + s;
                                    break
                                }
                            }
                            o = "data_source";
                            break;
                        case "account":
                            o = "/account", r = "account";
                            break;
                        case "database":
                            o = "/database", r = "database";
                            break;
                        case "database_list":
                            o = "/database_list", r = "database_list";
                            break;
                        case "warn":
                            o = i.wsId ? "/warn/" + i.wsId : "/warn/", r = "warn";
                            break;
                        case "template_home":
                            if (r = "template", s) {
                                d = d.template;
                                var p = n(s, d);
                                if (p) {
                                    o = "template_home/" + s;
                                    break
                                }
                            }
                            "user" == e.role ? (s = e.workspaceList.template[0].ws_id, o = "template_home/" + s) : o = "/template_home";
                            break;
                        case "template_config":
                            o = i.wsId ? "/template_config/" + i.wsId : "/template_config", r = "template";
                            break;
                        case "template_rule":
                            o = i.wsId ? "/template_rule/" + i.wsId : "/template_rule/", r = "template";
                            break;
                        case "template_rule_create":
                            o = i.wsId ? "/template_rule_modify/create/" + i.wsId : "/template_rule_modify/create", r = "template";
                            break;
                        case "template_rule_modify":
                            o = i.wsId ? "/template_rule_modify/" + i.ruleId + "/" + i.wsId : "/template_rule_modify/" + i.ruleId, r = "template";
                            break;
                        case "workspace":
                            o = "/workspace", r = "workspace";
                            break;
                        case "security":
                            o = "/security", r = "security";
                            break;
                        case "training":
                            o = "/training", r = "training";
                            break;
                        case "chart_template":
                            o = "/chart_template", r = "chart_template";
                            break;
                        case "chart_template_config":
                            o = "/chart_template_config", r = "chart_template_config";
                            break;
                        case "chart_template_rule":
                            o = "/chart_template_rule", r = "chart_template_rule";
                            break;
                        case "chart_template_rule_modify":
                            o = "/chart_template_rule_modify/" + i.chartTplRuleId, r = "chart_template_rule_modify";
                            break;
                        case "chart_template_rule_create":
                            o = "/chart_template_rule_create", r = "chart_template_rule_create"
                    }
                    m(r, o)
                },
                    e.$editable = !1,
                    m("dashboard"),
                    e.proj_share = !1,
                    e.dash_share_name = "",
                    e.global = {},
                    e.permision = {},
                    e.show_bdp_header = !0,
                    window.usedThemeId = e.usedThemeId = parseInt($.cookie(window.BDPThemes.bdpThemeIdCookieName) || 2),
                    e.is_sub_admin = !!$.cookie("is_sub_admin"),
                "personal" === window._mc_role_ && (e.role = ""),
                    e.$on("onSearch", function (t, a) {
                        setTimeout(function () {
                            e.$broadcast("jumpToSearch", a)
                        }, 0)
                    }),
                    e.$on("$translateLoadingEnd", function (t, a) {
                        console.log(a), e.i18nLoaded = !0
                    }),
                    window.bdpChart = window.bdpChart || {},
                    e.$on("$translateChangeSuccess",
                        function (t, a) {
                            console.log("Language has been switched to " + a.language),
                                window.bdpChart.language = e.language = a.language, angular.element("body").removeClass("zh en").addClass(a.language);
                            var i = window.location.host || "",
                                n = document.domain || "";
                            i.indexOf("me.bdp.cn") < 0 && n.indexOf("me.bdp.cn") < 0 && ("zh" == a.language ? document.getElementsByTagName("title")[0].innerHTML = "海致BDP-大数据时代的商业智能" : "en" == a.language && (document.getElementsByTagName("title")[0].innerHTML = "HaiZhi BDP"))
                        }),
                    e.dotGuideStepModify = function (t) {
                        "table_guide" == t && (e.personalInfo.table_guide = 1), "chart_guide" == t && (e.personalInfo.chart_guide = 1), "dashboard_guide" == t && (e.personalInfo.dashboard_guide = 1)
                    },
                    e.$on("noticeListClose", function (t, a) {
                        e.$broadcast("getNavNoticeList", a)
                    }),
                    e.$on("ngDialog.opened", function (e, t) {
                        setTimeout(function () {
                            t.find(".ngdialog-content")[0].getBoundingClientRect().top < 0 && t.css({
                                display: "block"
                            })
                        }, 100)
                    }),
                navigator.userAgent && (isIE || window.ActiveXObject || "ActiveXObject" in window) && ($("body").removeClass("IE-BDP"), 
                $("body").addClass("IE-BDP")),
                    e.$watch("themeChangeFlag", function (t, a) {
                        t == a || "dashboard" != e.view && "dash_tpl" != e.view && "data_screen" != e.view || e.$broadcast("fire-refresh-dashboard"),
                        t != a && "worktable" == e.view && e.$broadcast("refresh-relation-path")
                    });
                var _ = "_websocketChartMessage_",
                    v = location.protocol,
                    b = v + "//ws.bdp.cn";
                0 == "ws.bdp.cn".indexOf(":") && (b = v + "//" + location.hostname + "ws.bdp.cn");
                var y = b + "/api/chat";
                e[_] = {},
                    e[_].lock = !1,
                e[_].lock || setTimeout(function () {
                    e.socketConn = c.connect(y, {
                        onMessage: function (t) {
                            t = t || {}, t._t = new Date, e.$broadcast(_, t)
                        },
                        onOpen: function () {},
                        onClose: function () {}
                    })
                }, 100),
                    setTimeout(function () {
                            h()
                        },
                        5e3)
            }]),
            r.config(["treeConfig", function (e) {
                e.placeholderClass = "angular-ui-tree-placeholder dash-sort-placeholder"
            }]),
            r.config([
                "$stateProvider", 
                "$urlRouterProvider", 
                "$translateProvider", 
                "ngDialogProvider", 
                "uiMask.ConfigProvider", 
                "$rootScopeProvider", function (e, t, a, n, r, o) {
                function s(t, a, i) {
                    var n;
                    a.length ? (1 == a.length && (t.resolve = i), e.state(a.join("."), t), n = t.nested, delete t.nested) : n = t, n && angular.forEach(n, function (e, t) {
                        s(e, [].concat(a, t), i)
                    })
                }

                function l(e, t) {
                    var a = !1,
                        i = ["$ocLazyLoad", "$q", function (i, n) {
                            if (!a) {
                                var r = n.defer();
                                return e(function () {
                                    return a = !0, i.load({
                                        name: t
                                    }), r.resolve(), a
                                }), r.promise.then(function () {
                                    console.log(" lazyload done! ")
                                }), r.promise
                            }
                        }],
                        n = {
                            lala: i
                        };
                    return function () {
                        return n
                    }
                }

                function d(e) {
                    s(e.routes, [], l(e.requires, e.name)())
                }
                t.otherwise("/dash_edit"),
                
                    e.state("dash_edit", {
                        url: "/dash_edit",
                        templateUrl: "/static/js/dashboard/tpl/project_view.html",
                        controller: "ProjectController"
                    })
                        .state("dash_edit.dash", {
                            url: "/:projId/:dashId?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/dash-edit.html",
                            controller: "DashController"
                        })
                        .state("dash_edit.rule", {
                            url: "/:projId/:dashId/:ruleId?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/dash-edit.html",
                            controller: "DashController"
                        })
                        .state("dash_fullscreen", {
                            url: "/dash_fullscreen/:projId/:dashId?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/dash-fullscreen.html",
                            controller: "DashController"
                        })
                        .state("dash_fullscreen.rule?df_id&range", {
                            url: "/:ruleId",
                            templateUrl: "/static/js/dashboard/tpl/dash-fullscreen.html",
                            controller: "DashController"
                        })
                        .state("dash_edit.adv", {
                            url: "/:projId/:dashId/:mode/:category?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("dash_edit.adv_rule", {
                            url: "/:projId/:dashId/:ruleId/:mode/:category?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("adv_dash_edit", {
                            url: "/adv_dash_edit/:projId/:dashId/:mode/:category",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard_edit.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("adv_dash_edit_ws", {
                            url: "/adv_dash_edit_ws/:wsId/:projId/:dashId/:mode/:category",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard_edit.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("adv_dash_fullscreen", {
                            url: "/adv_dash_fullscreen/:projId/:dashId/:mode/:category?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard_fullscreen.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("adv_dash_fullscreen_rule", {
                            url: "/adv_dash_fullscreen/:projId/:dashId/:ruleId/:mode/:category?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard_fullscreen.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("ws_dash", {
                            url: "/dash_edit_ws/:wsId",
                            templateUrl: "/static/js/dashboard/tpl/project_view.html",
                            controller: "ProjectController"
                        })
                        .state("ws_dash.dash", {
                            url: "/:projId/:dashId?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/dash-edit.html",
                            controller: "DashController"
                        })
                        .state("ws_dash.adv", {
                            url: "/:projId/:dashId/:mode/:category?df_id&range",
                            templateUrl: "/static/js/dashboard/tpl/adv_dashboard.html",
                            controller: "advDashboardCtrl"
                        })
                        .state("data_screen", {
                            url: "/data_screen",
                            templateUrl: "/static/js/dashboard/tpl/project_view.html",
                            controller: "ProjectController"
                        })

                        .state("data_screen.dash", {
                            url: "/:projId/:dashId",
                            templateUrl: "/static/js/dashboard/tpl/data_screen.html",
                            controller: "DataScreenCtrl"
                        })
                        .state("data_screen_edit", {
                            url: "/data_screen_edit/:projId/:dashId",
                            templateUrl: "/static/js/dashboard/tpl/data_screen_edit.html",
                            controller: "DataScreenCtrl"
                        })
                        .state("third_iframe", {
                            url: "/third_iframe",
                            templateUrl: "/static/js/dashboard/tpl/project_view.html",
                            controller: "ProjectController"
                        })
                        .state("third_iframe.dash", {
                            url: "/:projId/:dashId",
                            templateUrl: "/static/js/dashboard/tpl/dash-edit.html",
                            controller: "DashController"
                        })
                        .state("ws_dash_fullscreen", {
                            url: "/dash_fullscreen_ws/:wsId/:projId/:dashId",
                            templateUrl: "/static/js/dashboard/tpl/dash-fullscreen.html",
                            controller: "DashController"
                        })
                        .state("chart_edit", {
                            url: "/chart_edit/:projId/:dashId/:chartId?page_referrer",
                            templateUrl: "/static/js/dashboard/tpl/chart-edit.html",
                            controller: "ChartController"
                        })
                        .state("chart_edit_ws", {
                            url: "/chart_edit_ws/:wsId/:projId/:dashId/:chartId?page_referrer",
                            templateUrl: "/static/js/dashboard/tpl/chart-edit.html",
                            controller: "ChartController"
                        })
                        .state("custom_chart_edit", {
                            url: "/custom_chart_edit/:projId/:dashId/:chartId?page_referrer",
                            templateUrl: "/static/js/dashboard/tpl/custom-chart-edit.html",
                            controller: "CustomChartEditCtrl"
                        })
                        .state("upgrade", {
                            url: "/upgrade",
                            templateUrl: "/static/view/partner_upgrade.html",
                            controller: "partnerUpgradeCtrl"
                        })
                        .state("data_source", {
                            url: "/data_source",
                            templateUrl: "/static/js/worktable/preview/worktable.html",
                            controller: "WorktableCtrl"
                        })
                        .state("data_source_ws", {
                            url: "/data_source/:wsId",
                            templateUrl: "/static/js/worktable/preview/worktable.html",
                            controller: "WorktableCtrl"
                        })
                        .state("warn", {
                            url: "/warn",
                            templateUrl: "/static/view/warning-message.html",
                            controller: "WarnController"
                        })
                        .state("notice_list", {
                            url: "/notice",
                            templateUrl: "/static/view/notice_list.html",
                            controller: "noticeCtrl"
                        })
                        .state("notice", {
                            url: "/notice/:noticeTpye",
                            templateUrl: "/static/view/notice_list.html",
                            controller: "noticeCtrl"
                        })
                        .state("warn_ws", {
                            url: "/warn/:wsId",
                            templateUrl: "/static/view/warning-message.html",
                            controller: "WarnController"
                        })
                        .state("template_home", {
                            url: "/template_home",
                            templateUrl: "/static/view/template_home.html",
                            controller: "TemplateHomeController"
                        })
                        .state("template_home_ws", {
                            url: "/template_home/:wsId",
                            templateUrl: "/static/view/template_home.html",
                            controller: "TemplateHomeController"
                        })

                        .state("template_config_ws", {
                            url: "/template_config/:wsId",
                            templateUrl: "/static/view/template_config.html",
                            controller: "TemplateConfigController"
                        })
                        .state("template_config", {
                            url: "/template_config",
                            templateUrl: "/static/view/template_config.html",
                            controller: "TemplateConfigController"
                        })
                        .state("template_rule", {
                            url: "/template_rule",
                            templateUrl: "/static/view/template_rule.html",
                            controller: "templateRuleCtrl"
                        })
                        .state("template_rule_ws", {
                            url: "/template_rule/:wsId",
                            templateUrl: "/static/view/template_rule.html",
                            controller: "templateRuleCtrl"
                        })
                        .state("template_rule_modify", {
                            url: "/template_rule_modify/:module",
                            templateUrl: "/static/view/template_rule_modify.html",
                            controller: "templateRuleModifyCtrl"
                        })
                        .state("template_rule_modify.ws", {
                            url: "/:wsId",
                            templateUrl: "/static/view/template_rule_modify.html",
                            controller: "templateRuleModifyCtrl"
                        })
                        .state("template_rule_create", {
                            url: "/template_rule_create",
                            templateUrl: "/static/view/template_rule_modify.html",
                            controller: "templateRuleModifyCtrl"
                        })
                        .state("template_rule_create_ws", {
                            url: "/template_rule_create/:wsId",
                            templateUrl: "/static/view/template_rule_modify.html",
                            controller: "templateRuleModifyCtrl"
                        })
                        .state("join_table", {
                            url: "/jointable",
                            templateUrl: "/static/js/worktable/join/view/join-table.html",
                            controller: "joinTableController"
                        })
                        .state("join_table_edit", {
                            url: "/jointable/:tbId",
                            templateUrl: "/static/js/worktable/join/view/join-table.html",
                            controller: "joinTableController"
                        })
                        .state("join_table_ws", {
                            url: "/jointable_ws/:wsId",
                            templateUrl: "/static/js/worktable/join/view/join-table.html",
                            controller: "joinTableController"
                        })
                        .state("join_table_ws_edit", {
                            url: "/jointable_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/join/view/join-table.html",
                            controller: "joinTableController"
                        })
                        .state("polymer_table", {
                            url: "/polymer_table",
                            templateUrl: "/static/js/worktable/polymer/polymer_table.html",
                            controller: "polymerTableCtrl"
                        })
                        .state("polymer_table_edit", {
                            url: "/polymer_table/:tbId",
                            templateUrl: "/static/js/worktable/polymer/polymer_table.html",
                            controller: "polymerTableCtrl"
                        })
                        .state("polymer_table_ws", {
                            url: "/polymer_table_ws/:wsId",
                            templateUrl: "/static/js/worktable/polymer/polymer_table.html",
                            controller: "polymerTableCtrl"
                        })
                        .state("polymer_table_ws_edit", {
                            url: "/polymer_table_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/polymer/polymer_table.html",
                            controller: "polymerTableCtrl"
                        })

                        .state("union_table", {
                            url: "/union_table/",
                            templateUrl: "/static/js/worktable/union/union_table.html",
                            controller: "UnionTableCtrl"
                        })
                        .state("union_table_edit", {
                            url: "/union_table/:tbId",
                            templateUrl: "/static/js/worktable/union/union_table.html",
                            controller: "UnionTableCtrl"
                        })
                        .state("union_table_ws", {
                            url: "/union_table_ws/:wsId",
                            templateUrl: "/static/js/worktable/union/union_table.html",
                            controller: "UnionTableCtrl"
                        })
                        .state("union_table_ws_edit", {
                            url: "/union_table_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/union/union_table.html",
                            controller: "UnionTableCtrl"
                        })
                        .state("transpose_table", {
                            url: "/transpose_table",
                            templateUrl: "/static/js/worktable/transpose/transpose_table.html",
                            controller: "transposeTableCtrl"
                        })
                        .state("transpose_table_edit", {
                            url: "/transpose_table/:tbId",
                            templateUrl: "/static/js/worktable/transpose/transpose_table.html",
                            controller: "transposeTableCtrl"
                        })
                        .state("transpose_table_ws", {
                            url: "/transpose_table_ws/:wsId",
                            templateUrl: "/static/js/worktable/transpose/transpose_table.html",
                            controller: "transposeTableCtrl"
                        })
                        .state("transpose_table_ws_edit", {
                            url: "/transpose_table_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/transpose/transpose_table.html",
                            controller: "transposeTableCtrl"
                        })
                        .state("extract_table", {
                            url: "/extract_table",
                            templateUrl: "/static/js/worktable/extract/extract_table.html",
                            controller: "ExtractTableCtrl"
                        })
                        .state("sql_table", {
                            url: "/sql_table",
                            templateUrl: "/static/js/worktable/sql/sqlMergeTable.html",
                            controller: "SQLTableCtrl"
                        })
                        .state("sql_table_edit", {
                            url: "/sql_table/:tbId",
                            templateUrl: "/static/js/worktable/sql/sqlMergeTable.html",
                            controller: "SQLTableCtrl"
                        })
                        .state("sql_table_ws", {
                            url: "/sql_table/:wsId",
                            templateUrl: "/static/js/worktable/sql/sqlMergeTable.html",
                            controller: "SQLTableCtrl"
                        })
                        .state("sql_table_ws_edit", {
                            url: "/sql_table/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/sql/sqlMergeTable.html",
                            controller: "SQLTableCtrl"
                        })
                        .state("workspace", {
                            url: "/workspace",
                            templateUrl: "/static/view/workspace.html",
                            controller: "workspaceCtrl"
                        })
                        .state("gis_edit", {
                            url: "/gis_edit/:projId/:dashId/:chartId?page_referrer",
                            templateUrl: "/static/js/dashboard/tpl/gis_edit.html",
                            controller: "gisCtrl"
                        })
                        .state("gis_edit_ws", {
                            url: "/gis_edit_ws/:wsId/:projId/:dashId/:chartId?page_referrer",
                            templateUrl: "/static/js/dashboard/tpl/gis_edit.html",
                            controller: "gisCtrl"
                        })
                        .state("parse_url", {
                            url: "/parse_url/:tbId",
                            templateUrl: "/static/js/worktable/parse/parse_url.html",
                            controller: "parseUrlCtrl"
                        })
                        .state("parse_url_ws", {
                            url: "/parse_url_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/parse/parse_url.html",
                            controller: "parseUrlCtrl"
                        })
                        .state("merge_field", {
                            url: "/merge_field/:tbId",
                            templateUrl: "/static/js/worktable/parse/merge_field.html",
                            controller: "mergeFieldCtrl"
                        })
                        .state("merge_field_ws", {
                            url: "/merge_field_ws/:wsId/:tbId",
                            templateUrl: "/static/js/worktable/parse/merge_field.html",
                            controller: "mergeFieldCtrl"
                        })
                        .state("author_manage", {
                            url: "/author_manage",
                            templateUrl: "/static/view/author-manage.html",
                            controller: "authorManageCtrl"
                        })

                        .state("member", {
                            url: "/member",
                            templateUrl: "/static/pay/member/view/member.html",
                            controller: "memberCtrl"
                        })
                        .state("member_upgrade", {
                            url: "/member_upgrade",
                            templateUrl: "/static/pay/member/view/member_upgrade.html",
                            controller: "memberUpgradeCtrl"
                        })
                        .state("member_upgrade_level", {
                            url: "/member_upgrade/:upgradeId",
                            templateUrl: "/static/pay/member/view/member_upgrade.html",
                            controller: "memberUpgradeCtrl"
                        })
                        .state("page_upload_add", {
                            url: "/page_upload/:operate",
                            templateUrl: "/static/view/page_upload.html",
                            controller: "pageUploadCtrl"
                        })
                        .state("page_upload_replace", {
                            url: "/page_upload/:operate/:tbId",
                            templateUrl: "/static/view/page_upload.html",
                            controller: "pageUploadCtrl"
                        })
                        .state("page_upload_singlereplace", {
                            url: "/page_upload/:operate/:tbId/:mapId",
                            templateUrl: "/static/view/page_upload.html",
                            controller: "pageUploadCtrl"
                        })
                        .state("table_capacity", {
                            url: "/table_capacity",
                            templateUrl: "/static/js/worktable/preview/table_capacity.html",
                            controller: "tableCapacityCtrl"
                        })
                        .state("table_capacity_ws", {
                            url: "/table_capacity/:wsId",
                            templateUrl: "/static/js/worktable/preview/table_capacity.html",
                            controller: "tableCapacityCtrl"
                        }),
                    i.forEach(function (e) {
                        return d(e)
                    }),
                "me.bdp.cn" === location.host && $.cookie("locale", "zh", {
                    path: "/",
                    expires: 365
                }),
                a.useSanitizeValueStrategy("escapeParameters")
                .useLoaderCache(!0)
                .useStaticFilesLoader({
                    prefix: "/static/i18n/locale.",
                    suffix: ".json"
                })
                .registerAvailableLanguageKeys(["zh", "en"], {
                    "zh-CN": "zh",
                    "en-US": "en",
                    "en-UK": "en",
                    "en-GB": "en"
                })
                        .determinePreferredLanguage(function () {
                            return $.cookie("locale") || navigator.language || navigator.languages && navigator.languages[0] || navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage
                        }),
                    n.setDefaults({
                        closeByDocument: !1,
                        closeByEscape: !1,
                        trapFocus: !1,
                        preserveFocus: !1,
                        overlay: !1
                    }),
                    r.eventsToHandle(["input"]),
                    o.digestTtl(15)
            }])
            .controller("LogoutController", ["$scope", "$http", "$window", "$rootScope", "commonService", function (e, t, a, i, n) {
                    e.logout = function () {
                        var e = {
                            access_token: $.cookie("token")
                        };
                        n.user.logout(e).then(function (e) {
                            $.cookie("token", "", {
                                expires: -1,
                                path: "/"
                            }), $.cookie("master_role", "", {
                                expires: -1,
                                path: "/"
                            }), $.cookie("is_weak", "", {
                                expires: -1
                            }),
                            2 == i.enterprise_type && window.close(),
                                window.location.href = bdp.bdpLogin.checkPartnerLogin(e.result.idp_logout)
                        })
                    },
                        window.onbeforeunload = function () {
                            i.securityStrategy && i.securityStrategy.closeBrowserTokenFailure ? window.localStorage.setItem("latestLeaveTime", (new Date).getTime()) : window.localStorage.setItem("latestLeaveTime", 0)
                        }
                }]),
            $(function () {
                ! function () {
                    for (var e = document.cookie.split(";"), t = "", a = 0, i = e.length; i > a; a++) {
                        var n = e[a].split("=");
                        /domain/.test(n[0]) && n[1], 
                        /locale/.test(n[0]) && (t = n[1])
                    }
                    var r = window.location.host || "",
                        o = document.domain || "";
                    r.indexOf("me.bdp.cn") < 0 && o.indexOf("me.bdp.cn") < 0 && "en" == t && (document.getElementsByTagName("title")[0].innerHTML = "BDP")
                }()
            })
    },
    //a(60), a(71)
    59: function (e, t, a) {
        "use strict";
        var i = angular.module("BC.database", []),
            n = function (e) {
                a.e(0).then(function () {
                    function t() {
                        return i--, 0 === i ? e() : void 0
                    }
                    var i = 0;
                    a(0)(t),
                        i++,
                        a(1),
                        a(2), a(3), a(4), a(5), a(6), a(7), a(8), a(9), a(10), a(11),
                        a(12), a(13), a(14), a(15), a(16), a(17), a(18), a(19), a(20),
                        a(21), a(22), a(23), a(24), a(25), a(26), a(27), a(28), a(29),
                        a(30), a(31), a(32), a(33), a(34), a(35), a(36), i++, t()
                }.bind(null, a)).catch(a.oe)
            };
        a(60), a(71);
        var r = {
            database: {
                url: "/database",
                templateUrl: "/static/database/view/database.html",
                controller: "databaseCtrl"
            },
            database_list: {
                url: "/database_list",
                templateUrl: "/static/database/view/database_list.html",
                controller: "databaseListCtrl"
            },
            database_create: {
                url: "/database_create/:dbType",
                templateUrl: "/static/database/view/database_create.html",
                controller: "databaseCreateCtrl"
            },
            database_excel_plugin: {
                url: "/database_excel_plugin/",
                templateUrl: "/static/database/view/excel_plugin.html",
                controller: "excelPluginCtrl"
            },
            database_sync_client: {
                url: "/database_sync_client/",
                templateUrl: "/static/database/view/database_sync_client.html",
                controller: "databaseSyncClientCtrl"
            },
            database_sync_client_big: {
                url: "/database_sync_client_big/",
                templateUrl: "/static/database/view/database_sync_client_big.html",
                controller: "databaseSyncClientCtrl"
            },
            database_log: {
                url: "/database_log/:dsId",
                templateUrl: "/static/database/view/database_log.html",
                controller: "databaseLogCtrl"
            },
            database_ba: {
                url: "/database_ba/:ds_id",
                templateUrl: "/static/database/view/database_ba.html",
                controller: "databaseBaController"
            },
            database_bdp: {
                url: "/database_bdp/:dbType",
                templateUrl: "/static/database/view/database_bdp.html",
                controller: "databaseBdpCtrl"
            },
            ba_config: {
                url: "/ba/:dsId",
                templateUrl: "/static/view/ba_config.html",
                controller: "BAConfigController"
            },
            database_baidu_search: {
                url: "/database_baidu_search/:dsId/:realtimeId",
                templateUrl: "/static/view/database_baidu_search.html",
                controller: "databaseBaiduSearchCtrl"
            },
            database_baidu_search_list: {
                url: "/database_baidu_search_list/:dsId",
                templateUrl: "/static/view/database_baidu_search_list.html",
                controller: "databaseBaiduSearchListCtrl"
            },
            database_baidu_index: {
                url: "/database_baidu_index/:dsId/:indexId",
                templateUrl: "/static/view/database_baidu_index.html",
                controller: "databaseBaiduIndexCtrl"
            },
            database_baidu_index_list: {
                url: "/database_baidu_index_list/:dsId",
                templateUrl: "/static/view/database_baidu_index_list.html",
                controller: "databaseBaiduIndexListCtrl"
            },
            database_wechat_index: {
                url: "/database_wechat_index/:dsId/:indexId",
                templateUrl: "/static/database/view/database_wechat_index.html",
                controller: "databaseWechatIndexCtrl"
            },
            database_wechat_index_list: {
                url: "/database_wechat_index_list/:dsId",
                templateUrl: "/static/database/view/database_wechat_index_list.html",
                controller: "databaseWechatIndexListCtrl"
            },
            database_toutiao_index: {
                url: "/database_toutiao_index/:dsId/:indexId",
                templateUrl: "/static/database/view/database_toutiao_index.html",
                controller: "databaseToutiaoIndexCtrl"
            },
            database_toutiao_index_list: {
                url: "/database_toutiao_index_list/:dsId",
                templateUrl: "/static/database/view/database_toutiao_index_list.html",
                controller: "databaseToutiaoIndexListCtrl"
            },
            database_index_list: {
                url: "/database_index_list/:dbType/:dsId",
                templateUrl: "/static/database/view/database_index_list.html",
                controller: "databaseIndexListCtrl"
            },
            database_index_task: {
                url: "/database_index_task/:dbType/:dsId/:indexId",
                templateUrl: "/static/database/view/database_index_task.html",
                controller: "databaseIndexTaskCtrl"
            }
        };
        e.exports = {
            name: i.name,
            routes: r,
            requires: n
        }
    },
    60: function () {
        "use strict";

        function e(e, t, a) {
            e.viewGuide = "", 
            e.showGuide = !1, 
            e.guide = 0, 
            e.have_dialog = !0, a
            .current.name, 
            $.cookie("user_id"), 
            e.closeManualSyncGuide = function () {
                e.showManualSync = !1
            },
                function () {
                    t.global.databaseSyncGuide_66 ? (e.showManualSync = !0, void(t.global.databaseSyncGuide_66 = 0)) : void 0
                }()
        }
        e.$inject = ["$scope", "$rootScope", "$state", "$location", "$timeout", "$interval", "commonHttp", "ngDialog"],
        angular.module("BC.database")
                .directive("dbGuide", ["$timeout", function () {
                    return {
                        restrict: "EA",
                        templateUrl: " /static/database/partials/database_guide.html",
                        controller: e,
                        scope: {
                            num: "=",
                            descInfo: "=",
                            usageHeight: "="
                        }
                    }
                }])
    },
    //a(62), a(71);
    61: function (e, t, a) {
        "use strict";
        var i = angular.module("BC.machineLearning", ["ngDragDrop", "ui.bootstrap.bindHtml"]),
            n = function (e) {
                a.e(3).then(function () {
                    function t() {
                        return i--, 0 === i ? e() : void 0
                    }
                    var i = 0;
                    a(37)(t), 
                    i++, 
                    a(38), 
                    a(39), 
                    i++, 
                    t()
                }.bind(null, a)).catch(a.oe)
            };
        a(62), a(71);
        var r = {
            training: {
                url: "/training?ml_id",
                reloadOnSearch: !1,
                templateUrl: "/static/training/view/machine_learning_entry.html",
                controller: "MachineLearningConsoleController",
                params: {
                    ml_id: null
                }
            },
            training_setup: {
                url: "/training/setup?ml_id&type&t",
                templateUrl: "/static/training/view/setup_training.html",
                controller: "SetupTrainingController",
                params: {
                    type: null,
                    ml_id: null,
                    t: null
                },
                nested: {
                    step1: {
                        url: "/step1",
                        templateUrl: "/static/training/view/include/select-worktable.html",
                        controller: "SelectWorktableController"
                    },
                    step2: {
                        url: "/step2",
                        templateUrl: "/static/training/view/include/config-train-set.html",
                        controller: "ConfigTrainSetController"
                    },
                    step3: {
                        url: "/step3",
                        templateUrl: "/static/training/view/include/confirm-training.html",
                        controller: "ConfirmTrainingController"
                    }
                }
            },
            training_detail: {
                url: "/training/detail?ml_id&page_referrer",
                templateUrl: "/static/training/view/training-detail.html",
                controller: "TrainingDetailController",
                params: {
                    result: null,
                    meta: null
                }
            },
            training_dataset: {
                url: "/training/dataset?ml_id",
                templateUrl: "/static/training/view/training-dataset.html",
                controller: "ConfigTrainSetController",
                params: {
                    ml_id: null
                }
            },
            training_switch_algorithm: {
                url: "/training/switch_algorithm?ml_id",
                templateUrl: "/static/training/view/switch-algorithm.html",
                controller: "SwitchAlgorithmController",
                params: {
                    ml_id: null
                }
            }
        };
        e.exports = {
            name: i.name,
            routes: r,
            requires: n
        }
    },
    62: function () {
        "use strict";

        function e(e, t, a, i, n, r) {
            e.model_list = [], e.ml_selected = null, e.modelInfo = null;
            var o = r.page_referrer;
            o && o.indexOf("data_screen") >= 0 && (e.isDataScreen = !0), e.$watch("ml_selected", function (a) {
                a && t.getModelInfo(a).then(function (t) {
                    0 == t.status && (e.modelInfo = t.result)
                })
            });
            var s = "";
            e.checkFieldAllowed = function (e, t) {
                return 1 == t.is_build_aggregated ? (s = n.instant("ML_tip.cantUseAggr"), !1) : t.data_type != e.data_type ? (s = n.instant("ML_tip.dataTypeNotMatch"), !1) : (s = "", !0)
            }, e.autoFill = function () {
                var t = e.modelInfo.meta.train_set_info.features,
                    i = {},
                    r = e.fieldList,
                    o = !1;
                t.forEach(function (e) {
                    for (var t, a = r.length; a--;)
                        if (t = r[a], t.data_type == e.data_type && (t.name == e.name || t.name == e.name) && !i[t.fid]) {
                            e.assigned_fd = t, i[t.fid] = !0, o = !0;
                            break
                        }
                }), o || a(n.instant("ML_tip.notFoundFieldMatch"))
            }, e.fieldDropOnFeature = function (t, i, n) {
                e.dragField && (e.checkFieldAllowed(n, e.dragField) ? n.assigned_fd = e.dragField : a(s))
            };
            var l = !1;
            e.onClickApply = function () {
                if (!l) {
                    var r = i.reject("input check failed");
                    if (!e.field_name) return a(n.instant("ML_tip.inputFieldName")), r;
                    var o = !1,
                        s = _.reduce(e.modelInfo.meta.train_set_info.features, function (e, t) {
                            return t.assigned_fd ? (e[t.fid] = t.assigned_fd.fid, e) : (o = !0, e)
                        }, {});
                    if (o) return a(n.instant("ML_tip.matchAllField")), r;
                    var d = {
                        tb_id: e.tb_id,
                        ml_id: e.modelInfo.ml_id,
                        name: e.field_name,
                        fid_dict: JSON.stringify(s)
                    };
                    e.ct_id && (d.ct_id = e.ct_id), l = !0;
                    var c = t.calcFieldByModel(d);
                    return c.finally(function () {
                        l = !1
                    }), c
                }
            }, 
            t.getModelList().then(function (t) {
                0 == t.status && (e.model_list = _.filter(t.result, function (e) {
                    return (0 == e.status || 4 == e.status) && (e.iconId = "ico-mltype-" + e.type, !0)
                }))
            }).then(function () {
                !e.ml_selected && e.model_list.length && (e.ml_selected = e.model_list[0].ml_id)
            })
        }

        function t() {
            return {
                template: '\n            <div class="machine-learning ml-add-field">\n                <div class="mt8 select-model">\n                    {{\'ML_wd.runModel\' | translate}}\n                    <div class="select-wrap">\n                        <div select-search-list select-data="ml_selected" search-list="model_list" mode-type="mlModelSelector"></div>\n                    </div>\n                </div>\n                <div class="mt16 select-model" ng-hide="!modelInfo">\n                    {{\'ML_wd.newFieldName\' | translate}}\n                    <input type="text" class="select-wrap" ng-model="field_name" placeholder="{{\'ML_wd.plzInputFieldName\' | translate}}"></input>\n                </div>\n                <div class="mt16" ng-hide="modelInfo.status == 4 || !modelInfo">\n                    {{\'ML_wd.fieldConfig\' | translate}}\n                    <a class="bdp-btn fr" ng-click="autoFill()">{{\'ML_wd.autoFillField\'|translate}}</a>\n                </div>\n                <div ng-if="modelInfo && modelInfo.status == 4" class="text-center">\n                    <p class="mt16 mb16">{{\'ML_tip.needConfirmClusterNames\' | translate}}</p>\n                    <a class="active-font" href="#/training/detail?ml_id={{modelInfo.ml_id}}" ng-if="!isDataScreen"> {{\'ML_tip.goToConfirmCluster\' | translate}}</a>\n                    <a class="active-font" href="#/training/detail?ml_id={{modelInfo.ml_id}}&page_referrer=data_screen_edit" ng-if="isDataScreen"> {{\'ML_tip.goToConfirmCluster\' | translate}}</a>\n                </div>\n                <ul class="features-map mt8" ng-show="modelInfo && modelInfo.status != 4">\n                    <li class="clearfix"\n                        ng-repeat="ft in modelInfo.meta.train_set_info.features"\n                        ng-class="{\'dropable\' : dropable }"\n                    >\n                        <!-- 工作表中select操作 -->\n                        <select class="cursor-pointer"\n                            ng-if="!dropable"\n                            ng-options="fd.name for fd in fieldList track by fd.fid" \n                            ng-model="ft.assigned_fd"\n                        >\n                            <option value="">{{\'ML_tip.plzSelect\' | translate}}</option>\n                        </select>\n\n                        <label>\n                            <span class="nowrap" title="{{ft.name}}"\n                                ng-class="{\'has-more-info\': !!ft.comments}"\n                                bdp-tooltip="ft.comments" \n                                tooltip-placement="top-left"\n                                tooltip-enable="!!ft.comments"\n                            >{{ft.name}}</span>\n                            <span class="fr">\n                                <i class="bdp-icon ico-type-{{ft.data_type}}"></i>\n                            </span>\n                        </label>\n\n                        <!-- 图表中拖拽操作 -->\n                        <div class="drag-target-inner"\n                            ng-if="dropable"\n                            ng-class="{\'blank\':!stepData.label_field}" \n                            data-drop="true" \n                            data-jqyoui-droppable="{onDrop:\'fieldDropOnFeature(ft)\'}"\n                        >\n                            <span ng-if="!ft.assigned_fd" class="mute-font">{{\'ML_tip.dragFieldHere\' | translate}}</span>\n                            <span ng-if="ft.assigned_fd" class="tag ui-select">\n                                <span class="name nowrap">\n                                    {{ft.assigned_fd.name}}\n                                </span>\n                            </span>\n                        </div>\n\n                    </li>\n                </ul>\n            </div>\n        ',
                restrict: "A",
                scope: {
                    fieldList: "=",
                    control: "=",
                    tb_id: "=tbId",
                    ct_id: "=ctId",
                    dropable: "=fieldDropable",
                    dragField: "="
                },
                link: function (e, t) {
                    var a = e.control || {};
                    a.onClose = function () {}, a.onOk = function () {
                        return e.onClickApply()
                    };
                    var i = t.closest(".ngdialog");
                    i.css("position", "absolute"), i.css("left", "calc(50% - 150px)"), i.css("right", "initial"), i.css("z-index", "1000")
                },
                controller: "ApplyMachineLearningController"
            }
        }

        function a() {
            return {
                restrict: "A",
                priority: 1,
                scope: {
                    field: "=mlField",
                    action: "@mlFieldAction"
                },
                link: function (e, t) {
                    var a = function () {
                        e[e.action]()
                    };
                    t.on("click", a), e.$on("$destroy", function () {
                        t.off("click", a)
                    })
                },
                controller: ["$scope", "mlearningService", "errHint", "ngDialog", function (e, t, a, i) {
                    e.updateFieldMM = function () {
                        console.log("update field machine-model"), t.updateFieldModel(e.field).then(function (n) {
                            0 == n.status && (e.fieldModelVersion = n.result, i.openConfirm({
                                template: '\n                            <h3 class="ngdialog-title">{{ \'机器学习字段 \'+ field.name +\' 更新\' | translate}}</h3>\n                            <div class="ngdialog-message">\n                                <p>{{\'当前使用的模型版本：\' | translate}} <span class="bright-font">{{fieldModelVersion.old_end_time}}</span> {{\'完成训练\'|translate}}</p>\n                                <p>{{\'此模型的最新版本：\' | translate}} <span class="bright-font">{{fieldModelVersion.new_end_time}}</span> {{\'完成训练\'|translate}}</p>\n                                <p class="mt16">{{\'是否确认更新?\' | translate}}</p>\n                            </div>\n                            <div class="ngdialog-buttons">\n                                <input type="button"\n                                        class="ngdialog-button ngdialog-button-primary"\n                                        ng-click="confirm()"\n                                        value="{{ \'ok\' | translate }}" />\n                                <input type="button"\n                                        class="ngdialog-button ngdialog-button-primary"\n                                        ng-click="closeThisDialog()"\n                                        value="{{ \'cancel\' | translate }}" />\n                            </div>\n                        ',
                                className: "ngdialog-theme-default ngDialog-width-400",
                                plain: !0,
                                scope: e
                            }).then(function () {
                                t.updateFieldModel(e.field, "do").then(function (t) {
                                    0 == t.status && (a("更新成功"), e.emit("fieldMMRefresh"))
                                })
                            }))
                        })
                    }
                }]
            }
        }

        function i(e, t, a, i, n, r, o, s, l) {
            function d(e) {
                return a.get("/api/ml/train_set_preview", e)
            }

            function c() {
                return {
                    MODEL_TYPES: o,
                    ALGORITHMS: s,
                    EVALUATES: l
                }
            }

            function p(e) {
                return [null, {
                    algorithm: [1, 4]
                }, {
                    algorithm: [2],
                    train_option: {
                        k: {
                            type: "number",
                            title: "ML_tm.clusteringNumbers",
                            validation: function (e, t) {
                                return e > 30 || 2 > e || parseInt(e) != e ? n.instant("ML_tip.clusterCountRange") : t.dataCount < 30 && e > t.dataCount ? n.instant("ML_tip.clusterCountLimit") : void 0
                            }
                        }
                    }
                }, {
                    algorithm: [3, 6, 7],
                    evaluate: [1]
                }][e]
            }
            return {
                getConfigurableMap: function (e, t, a) {
                    var i = angular.copy(p(e));
                    return c(), t = t || i, a || (t.algorithm = i.algorithm), t.train_option && t != i && (_.each(i.train_option, function (e, i) {
                        e.value = t.train_option[i], "k" != i || e.value || (e.value = a && a.k)
                    }), t.train_option = i.train_option), angular.copy(t)
                },
                configMapToMeta: function (e) {
                    var t = {};
                    return t.algorithm = e.algorithm, t.evaluate = e.evaluate, e.train_option && (t.train_option = _.reduce(e.train_option, function (e, t, a) {
                        return e[a] = t.value, e
                    }, {})), t
                },
                availableVisualModes: function (e, t) {
                    var a = {
                        1: ["formula"],
                        4: ["dtree"],
                        2: ["kcurve"],
                        5: ["kcurve"],
                        3: ["matrix", "dtree"],
                        6: ["matrix"],
                        7: ["matrix"]
                    };
                    return t && t.roc && t.roc.length > 4 && a[e].splice(1, 0, "roc"), a[e]
                },
                availableVisualModesForType: function (e, t) {
                    var a = {
                        1: ["formula", "dtree"],
                        2: ["kcurve"],
                        3: ["matrix", "roc", "dtree"]
                    };
                    if (t && "3" == e) {
                        _.every(t, function (e) {
                            return !e.roc || e.roc.length < 4
                        }) && a[3].splice(1, 1)
                    }
                    return a[e]
                },
                getIndicators: function (e, t) {
                    switch (1 * e) {
                        case 1:
                            return 1 == t.algorithm ? {
                                r2: {
                                    name: "ML_tm.fitR",
                                    reading: ["decimal", 4]
                                },
                                adjustedR2: {
                                    name: "ML_tm.fitRAdjusted",
                                    reading: ["decimal", 4]
                                },
                                fValue: {
                                    name: "ML_tm.fValue",
                                    reading: ["decimal", 3]
                                },
                                pValue: {
                                    name: "ML_tm.pValue",
                                    reading: ["decimal", 3]
                                }
                            } : {
                                mse: {
                                    name: "MSE",
                                    reading: ["decimal", 4]
                                }
                            };
                        case 2:
                            return {
                                centers_length: {
                                    name: "ML_tm.clusterCount"
                                },
                                total_numbers: {
                                    name: "ML_tm.rowCount"
                                },
                                total_distance: {
                                    name: "ML_tm.sumOfSquares",
                                    reading: ["decimal", 4]
                                }
                            };
                        case 3:
                            var a = {
                                f_measure: {
                                    name: "ML_tm.fMeasure",
                                    reading: ["percentage", 2]
                                },
                                precision: {
                                    name: "ML_tm.precision",
                                    reading: ["percentage", 2]
                                },
                                recall: {
                                    name: "ML_tm.recall",
                                    reading: ["percentage", 2]
                                },
                                auc: {
                                    name: "AUC",
                                    reading: ["decimal", 2]
                                }
                            };
                            return t.roc.length < 4 && delete a.auc, a
                    }
                },
                getTrainSetPreview: d,
                fieldStats: function (e, t, i, n, r) {
                    return a.get("/api/ml/field_stats", {
                        tb_id: e,
                        fid: t,
                        data_type: i,
                        filter_list: n,
                        stats: r
                    })
                },
                getModelInfo: function (e) {
                    return a.get("/api/ml/info", {
                        ml_id: e
                    }).then(function (e) {
                        if (0 == e.status) {
                            e.result && e.result.train_result && e.result.train_result.train_result && (e.result.selected_result = e.result.train_result.train_result[e.result.chose], e.result.train_result.train_result.forEach(function (t, a) {
                                t.algorithm = e.result.meta.algorithm[a]
                            }));
                            var t = e.result.algorithm.indexOf(4);
                            if (0 > t && 0 > (t = e.result.algorithm.indexOf(3))) return e
                        }
                        return e
                    })
                },
                chooseAlgorithm: function (e, t) {
                    return a.get("/api/ml/choose", {
                        ml_id: e,
                        chose: t
                    })
                },
                submitTraining: function (e, t) {
                    var i = angular.extend({}, e, {
                        meta: JSON.stringify(t)
                    });
                    return a.post("/api/ml/modify", i)
                },
                getModelList: function () {
                    return a.get("/api/ml/list")
                },
                delModel: function (e) {
                    return a.post("/api/ml/delete", {
                        ml_id: e
                    })
                },
                calcFieldByModel: function (e) {
                    return a.post("/api/ml/field_modify", e)
                },
                updateFieldModel: function (e, t) {
                    return a.post("api/ml/field_refresh", {
                        tb_id: e.tb_id,
                        fid: e.fid,
                        commit: 1 & !!t
                    }).then(function (e) {
                        return 0 != e.status && (26106 == e.status && r(n.instant("老模型不支持更新")), 26105 == e.status && r(n.instant("当前模型已经最新，不需要更新 ")), 26107 == e.status && r(n.instant("模型结构已改变，不支持更新 "))), e
                    })
                },
                chart2table: function (e) {
                    var t = e.x.map(function (e) {
                            return _.pick(e, "data_type", "name", "nick_name", "fid")
                        }),
                        a = e.x.length,
                        n = e.x[0].data.map(function (n, r) {
                            for (var o = [], s = 0; a > s; s++) o.push("date" == t[s].data_type ? i("date")(e.x[s].data[r], "yyyy-M-d h:mm:ss") : e.x[s].data[r]);
                            return o
                        });
                    return {
                        schema: t,
                        data: n
                    }
                }
            }
        }
        e.$inject = ["$scope", "mlearningService", "errHint", "$q", "$translate", "$stateParams"],
            i.$inject = ["commonService", "$q", "commonHttp", "$filter", "$translate", "errHint", "ML_MODEL_TYPES", "ML_ALGORITHMS", "ML_EVALUATES"],
            angular
                .module("BC.machineLearning")
                .controller("ApplyMachineLearningController", e)
                .directive("mlAddField", t)
                .directive("mlField", a)
                .service("mlearningService", i),
            angular
                .module("BC.machineLearning")
                .constant("ML_MODEL_TYPES", [null, {
                    code: 1,
                    name: "ML_tm.regression",
                    key: "regression"
                }, {
                    code: 2,
                    name: "ML_tm.clustering",
                    key: "clustering"
                }, {
                    code: 3,
                    name: "ML_tm.classification",
                    key: "classification"
                }]).constant("ML_ALGORITHMS", [{
                code: 0,
                name: "ML_wd.autoRecommend",
                key: "autoRecommend"
            }, {
                code: 1,
                name: "ML_tm.multLinearRegression",
                key: "mlinearRegression"
            }, {
                code: 2,
                name: "ML_tm.K-Means",
                key: "KMeans"
            }, {
                code: 3,
                name: "ML_tm.decisionTree",
                key: "decisionTree"
            }, {
                code: 4,
                name: "决策树回归",
                key: "DTreeRegression"
            }, {
                code: 5,
                name: "混合高斯模型",
                key: "MixedGaussianModel"
            }, {
                code: 6,
                name: "Logistic回归",
                key: "LogisticRegression"
            }, {
                code: 7,
                name: "神经网络",
                key: "NeuralNetworks"
            }]).constant("ML_EVALUATES", [null, {
                code: 1,
                name: "ML_tm.5-FoldXValid",
                key: "5FoldXValid"
            }])
    },
    //a(71);
    63: function (e, t, a) {
        "use strict";
        var i = angular.module("BC.chartTemplate", ["ngDragDrop"]),
            n = function (e) {
                a.e(2).then(function () {
                    function t() {
                        return i--, 0 === i ? e() : void 0
                    }
                    var i = 0;
                    a(40)(t), i++, a(41), a(42), a(43), i++, t()
                }.bind(null, a)).catch(a.oe)
            };
        a(71);
        var r = {
            chart_template: {
                url: "/chart_template",
                templateUrl: "/static/chartTemplate/view/chart_template.html",
                controller: "chartTemplate"
            },
            chart_template_config: {
                url: "/chart_template_config",
                templateUrl: "/static/chartTemplate/view/chart_template_config.html",
                controller: "chartTemplateConfig"
            },
            chart_template_rule: {
                url: "/chart_template_rule",
                templateUrl: "/static/chartTemplate/view/chart_template_rule.html",
                controller: "chartTemplateRuleList"
            },
            chart_template_rule_modify: {
                url: "/chart_template_rule_modify/:chartTplRuleId",
                templateUrl: "/static/chartTemplate/view/chart_template_rule_modify.html",
                controller: "chartTemplateRule"
            },
            chart_template_rule_create: {
                url: "/chart_template_rule_create",
                templateUrl: "/static/chartTemplate/view/chart_template_rule_modify.html",
                controller: "chartTemplateRule"
            }
        };
        e.exports = {
            name: i.name,
            requires: n,
            routes: r
        }
    },
    //a(71), a(65), a(66), a(67), a(68);
    64: function (e, t, a) {
        "use strict";
        var i = angular.module("BC.accountPermission", []),
            n = function (e) {
                a.e(1).then(function () {
                    function t() {
                        return i--, 0 === i ? e() : void 0
                    }
                    var i = 0;
                    a(44)(t), i++, a(45), a(46), a(47), a(48), a(49), a(50), a(51), a(52), a(53), a(54), a(55), a(56), a(57), i++, t()
                }.bind(null, a)).catch(a.oe)
            };
        a(71), a(65), a(66), a(67), a(68);
        var r = {
            account: {
                url: "/account",
                templateUrl: "/static/accountPermission/view/accountPermission.html",
                controller: "accountPermissionCtrl"
            }
        };
        e.exports = {
            name: i.name,
            routes: r,
            requires: n
        }
    },

    //BC.accountPermission orgTreeHandleService
    65: function () {
        "use strict";
        angular.module("BC.accountPermission")
        .factory("orgTreeHandleService", ["$timeout", function () {
            function e() {
                f = "", 
                v = [], 
                b = [], 
                y = [], 
                w = [], 
                C = {}, 
                _ = {}, 
                g = 0, 
                m = 0
            }

            function t(e) {
                x[e.group_id] = {
                    usable: e.usable,
                    group_level: e.group_level
                }
            }

            function a(e) {
                var t = 0;
                t = 0 == e.group_level ? 16 : h * e.group_level + 16, e.calcStyle = {
                    "padding-left": t + "px"
                }, e.group_list = e.group_list ? e.group_list : [], m = e.nodeCollapse && m == e.group_level && e.group_list.length ? ++m : m, g = Math.max(g, e.group_level)
            }

            function i(e, t) {
                _[f].push({
                    self_id: e.group_id,
                    self_name: e.group_name,
                    parent_id: t ? t.group_id : "",
                    parent_name: t ? t.group_name : ""
                })
            }

            function n(e) {
                if (e) {
                    v.push(e), i(e), t(e);
                    for (var a = null; 0 !== v.length;) 
                        a = v.shift(), 
                        angular.forEach(a.group_list, function (e) {
                            v.push(e), i(e, a), t(a)
                        })
                }
            }

            function r(e) {
                if (e) {
                    v.push(e);
                    for (var t = null; 0 !== v.length;) 
                        t = v.shift(), 
                        a(t), 
                        angular.forEach(t.group_list, function (e) {
                            v.push(e)
                        })
                }
            }

            function o(e, t) {
                e && (b.push(e), 
                y.push(e.group_id), 
                w.push(e.group_name), 
                e.items && 0 != e.items.length || t && t(), 
                C[e.group_id] = {
                    id: angular.copy(y),
                    name: angular.copy(w)
                }, 
                angular.forEach(e.group_list, function (e) {
                    o(e, t)
                }), 
                b.pop(), 
                y.pop(), 
                w.pop())
            }

            function s() {
                return {
                    flatLevelTreeMap: _,
                    allNodePathQueue: C,
                    nodeConfigMap: x
                }
            }

            function l(e, t) {
                m = 0, angular.forEach(e, function (e) {
                    f = e.group_id, r(e)
                });
                var a = 0;
                if (t) {
                    var i = 0 > m - 1 ? 0 : m - 1,
                        n = t + h * i;
                    a = Math.max(t, n)
                }
                return a
            }

            function d(t) {
                e(), angular.forEach(t, function (e) {
                    f = e.group_id, _[e.group_id] = [], n(e), o(e)
                })
            }

            function c(e) {
                var t = {},
                    a = s().flatLevelTreeMap,
                    i = !1;
                for (var n in a) {
                    var r = a[n];
                    if (!i)
                        for (var o = 0, l = r.length; l > o; o++)
                            if (r[o].self_id == e) {
                                t = r[o], i = !0;
                                break
                            }
                }
                return t
            }

            function p(e, t, a) {
                function i(t) {
                    r.indexOf(t.group_id) >= 0 && (t.nodeCollapse = !0), t.group_id == e && (t.nodeCollapse = !1, t.checked = a && a[t.group_id] ? a[t.group_id] : t.checked), angular.forEach(t.group_list, function (e) {
                        i(e)
                    })
                }
                var n = s().allNodePathQueue,
                    r = n[e] && n[e].id || [];
                angular.forEach(t, function (e) {
                    i(e)
                })
            }

            function u() {
                e()
            }
            var h = 24,
                f = "",
                g = 0,
                m = 0,
                _ = {},
                v = [],
                b = [],
                y = [],
                w = [],
                C = {},
                x = {};
            return {
                formatTreeConstructor: d,
                getOrgTreeLevelInfo: s,
                calcTreeNodeStyle: l,
                findNodeInfoById: c,
                setNodeCollapseStatus: p,
                clearTreeData: u
            }
        }])
    },
    //BC.accountPermission orgTreeSearch
    66: function () {
        "use strict";

        function e(e, t, a) {
            return {
                restrict: "EA",
                replace: !0,
                scope: !1,
                templateUrl: "/static/accountPermission/view/templates/directiveTemplates/orgTreeSearch.html",
                link: function (e, i, n) {
                    function r(e) {
                        var t = angular.element(i).next(".org-tree-map"),
                            a = t.find("#J_group_" + e),
                            n = t[0].scrollWidth - t[0].offsetWidth;
                        n = n >= 8 ? n : 8;
                        var r = a.offset().top - t.offset().top - t.height() + 32 + n + t.scrollTop();
                        a.addClass("J-select-active"), scrollToTargetPos(t, r)
                    }

                    function o(e, t) {
                        return e.toString().toLowerCase().indexOf(t.toLowerCase()) >= 0
                    }

                    function s() {
                        function t(e, t) {
                            if (n.style.visibility = "hidden", n.style.fontSize = t || "12px", document.body.appendChild(n), void 0 !== n.textContent ? n.textContent = e : n.innerText = e, n.offsetWidth > r) {
                                var a = Math.ceil(e.length * (n.offsetWidth - r) / n.offsetWidth),
                                    i = e.substring(a + 3);
                                i = "..." + i
                            }
                            return i || e
                        }
                        var n = document.createElement("span");
                        n.className = "J-org-path";
                        var r = i.children(".query-text").outerWidth() - 32,
                            s = e.queryText,
                            l = a.getOrgTreeLevelInfo().flatLevelTreeMap,
                            d = a.getOrgTreeLevelInfo().allNodePathQueue,
                            c = [];
                        if (s) {
                            e.showQueryOptionList = !0;
                            for (var p in l) {
                                var u = l[p],
                                    h = "";
                                angular.forEach(u, function (e) {
                                    o(e.self_name, s) && (h = d[e.self_id] ? d[e.self_id].name.join(" > ") : "", e.treePath = t(h), c.push(e))
                                })
                            }
                            e.queryOptionList = c, n && n.parentNode && n.parentNode.removeChild(n)
                        } else e.showQueryOptionList = !1;
                        e.$$phase || e.$digest()
                    }
                    e.queryOptionList = [], e.showQueryOptionList = !1, n.clickAction && (e.clickAction = e.$eval(n.clickAction)), n.treeData && (e.treeData = e.$eval(n.treeData)), e.selectResultOption = function (n) {
                        var o = {
                            group_id: n.self_id
                        };
                        e.clickAction && e.clickAction(o), n.checked = !0;
                        var s = {};
                        s[n.self_id] = n.checked, a.setNodeCollapseStatus(n.self_id, e.treeData, s), a.calcTreeNodeStyle(e.treeData, Number(angular.element(i).width())), t(function () {
                            r(n.self_id)
                        }, 100), e.queryOptionList = [], e.showQueryOptionList = !1
                    };
                    var l = null;
                    e.keyUpFunc = function () {}, angular.element(i).on("keyup", function () {
                        clearTimeout(l), l = setTimeout(s, 100)
                    }), angular.element(i).on("mousedown", function () {
                        !e.showQueryOptionList && e.queryText && s()
                    })
                }
            }
        }
        e.$inject = ["$rootScope", "$timeout", "orgTreeHandleService"],
            angular.module("BC.accountPermission").directive("orgTreeSearch", e)
    },
    //BC.accountPermission orgTreeMap
    67: function () {
        "use strict";

        function e(e, t, a, i, n, r) {
            return {
                restrict: "EA",
                replace: !0,
                scope: !1,
                templateUrl: "/static/accountPermission/view/templates/directiveTemplates/orgTreeMap.html",
                link: function (e, o, s) {
                    function l(e) {
                        $(e.target).hasClass("J-tree-option") || o.find(".J-select-active").removeClass("J-select-active")
                    }
                    e.hasCheckbox = s.checkBox || !1, e.ableSort = s.ableSort || !1, 
                    e.resizeWidth = s.resizeWidth, 
                    e.minWidth = s.minWidth, 
                    s.orgTree && (e.orgTreeData = e.$eval(s.orgTree)), 
                    s.clickAction && (e.clickAction = e.$eval(s.clickAction)), 
                    s.checkAction && (e.checkAction = e.$eval(s.checkAction)), 
                    s.openAction && (e.openAction = e.$eval(s.openAction)), 
                    s.deleteAction && (e.deleteAction = e.$eval(s.deleteAction)), 
                    s.doOpen && (e.doOpen = e.$eval(s.doOpen)), 
                    s.hasOpt && (e.hasOpt = e.$eval(s.hasOpt)), 
                    s.nodeTooltip && (e.nodeTooltip = e.$eval(s.nodeTooltip)), 
                    e.$on("updateOrgScope", function (t, a) {
                        a && (e.hasOpt = a.permission.ableOptGroup)
                    }), 
                    e.$on("updateCurNode", function (t, a) {
                        a && (e.curNodeId = a)
                    }), 
                    a(function () {
                        var t = e.resizeWidth ? Number(e.resizeWidth) : 0;
                        i.formatTreeConstructor(e.orgTreeData);
                        var a = i.calcTreeNodeStyle(e.orgTreeData, t);
                        e.resizeWidth && angular.element(".J-first-level-node").width(a), s.curNodeId && (e.curNodeId = e.$eval(s.curNodeId)), e.accountOrgData && e.accountOrgData.oldOpenStatus ? i.setNodeCollapseStatus(e.curNodeId, e.orgTreeData, e.accountOrgData.oldOpenStatus) : i.setNodeCollapseStatus(e.curNodeId, e.orgTreeData), angular.forEach(e.orgTreeData, function (e) {
                            e.nodeCollapse = !0
                        });
                        var n = 0,
                            r = 0;
                        $(window).resize(function () {
                            Number(e.minWidth) && Number(o.width()) < Number(e.minWidth) && (n = Number(o.width()), Math.abs(n - r) > 30 && (e.treeOuterWidth = i.calcTreeNodeStyle(e.orgTreeData, Number(e.minWidth)), e.resizeWidth && angular.element(".J-first-level-node").width(a), r = n))
                        })
                    }, 10), 
                    e.nodeCollapseHandle = function (t, a) {
                        t && t.stopPropagation(), 
                        a.nodeCollapse = !a.nodeCollapse;
                        var n = e.resizeWidth ? Number(e.resizeWidth) : 0,
                            r = 0;
                        r = Number(e.minWidth) && Number(o.width()) < Number(e.minWidth) ? i.calcTreeNodeStyle(e.orgTreeData, Number(o.width())) : i.calcTreeNodeStyle(e.orgTreeData, n), 
                        e.resizeWidth && angular.element(".J-first-level-node").width(r), 
                        e.accountOrgData && e.accountOrgData.oldOpenStatus && (e.accountOrgData.oldOpenStatus[a.group_id] = a.nodeCollapse)
                    }, 
                    e.getNodeInfo = function (t, a) {
                        t && t.stopPropagation(), e.clickAction ? e.clickAction(a) : e.checkAction || a.group_list && a.group_list.length > 0 && e.nodeCollapseHandle("", a)
                    }, 
                    e.changeCheckStatus = function (t, a) {
                        t && t.stopPropagation(), a.checked, a.checked && (a.partialChecked = !1), e.checkAction && e.checkAction(a)
                    };
                    var d = null;
                    e.orgTreeSort = {
                        beforeDrag: function (t) {
                            var a = !1;
                            return e.accountRootScope && (a = 0 == e.accountRootScope.userRole && e.ableSort), 0 == t.$modelValue.group_level && (a = !1), "edit" == e.infoMode.base && (n(r.instant("account.isEditingPleaseSave")), t.preventDefault(), a = !1), a
                        },
                        dragStart: function () {
                            d = angular.copy(e.orgTreeData)
                        },
                        dragMove: function (e) {
                            var t = e.dest.nodesScope.$parent.$modelValue.group_level,
                                a = t > 0 ? 16 * t + 24 + 20 : 24;
                            angular.element(".angular-ui-tree-placeholder").css({
                                "margin-left": a + "px"
                            })
                        },
                        dragStop: function (a) {
                            function i(e, t) {
                                l = Math.max(l, t), e.map(function (e) {
                                    e.group_level = t, e.group_list && e.group_list.length > 0 && i(e.group_list, t + 1)
                                })
                            }
                            var o = a.dest.nodesScope.$parent.$modelValue,
                                s = a.source.nodeScope.$modelValue;
                            if (!o || !s) return e.orgTreeData = angular.copy(d), void(d = null);
                            s.group_level = o.group_level + 1;
                            var l = s.group_level;
                            if (s.group_list && s.group_list.length > 0 && i(s.group_list, s.group_level + 1), l > 10) return n(r.instant("account.exceedLevelLimit")), e.orgTreeData = angular.copy(d), void(d = null);
                            var c = [];
                            ! function () {
                                o.group_list.map(function (e) {
                                    c.push(e.group_id)
                                })
                            }();
                            var p = {};
                            p = o.group_id != s.parent_group_id ? {
                                parent_group_id: o.group_id,
                                group_id_list: angular.toJson(c),
                                group_id: s.group_id
                            } : {
                                parent_group_id: s.parent_group_id,
                                group_id_list: angular.toJson(c)
                            }, e.pageStatus.groupList = !0;
                            var u = {
                                parent_group_id: p.parent_group_id,
                                parent_level: o.group_level,
                                group_id: s.group_id
                            };
                            e.handleNodeLatestPos(u), t.account.groupOrder(p).then(function (t) {
                                e.pageStatus.groupList = !1, 0 == t.status || (e.getGroupList(), n(+t.status, {
                                    warn_msg: t.errstr
                                }))
                            })
                        }
                    }, e.handleNodeLatestPos = function (t) {
                        function a(e, t) {
                            angular.forEach(e.group_list, function (e) {
                                e.group_level = t + 1, e.group_list && a(e.group_list, t + 1)
                            })
                        }

                        function n(e) {
                            angular.forEach(e, function (e) {
                                e.group_id == t.group_id && (r = !0, e.parent_group_id = t.parent_group_id, e.group_level = t.parent_level + 1, a(e, e.group_level)), !r && e.group_list && n(e.group_list)
                            })
                        }
                        var r = !1;
                        n(e.orgTreeData), i.formatTreeConstructor(e.orgTreeData);
                        var o = i.calcTreeNodeStyle(e.orgTreeData, 0);
                        e.resizeWidth && angular.element(".J-first-level-node").width(o), t.group_id == e.accountOrgData.curGroupID && e.getGroupInfo({
                            group_id: t.group_id
                        })
                    }, $(document).bind("click", l), e.$on("$destroy", function () {
                        e.orgTreeData = [], $(document).unbind("click", l)
                    })
                }
            }
        }
        e.$inject = ["$rootScope", "commonService", "$timeout", "orgTreeHandleService", "errHint", "$translate"],
            angular.module("BC.accountPermission")
                .directive("orgTreeMap", e)
    },

    //BC.accountPermission selectGroup
    68: function () {
        "use strict";

        function e(t, a, i, n, r) {
            return {
                restrict: "EA",
                replace: !0,
                scope: {
                    selectGroup: "="
                },
                templateUrl: "/static/accountPermission/view/templates/directiveTemplates/select_group_directive.html",
                link: function (t) {
                    function o(e) {
                        function t(e) {
                            a[e.group_id] = {
                                usable: e.usable,
                                group_level: e.group_level
                            }, angular.forEach(e.group_list, function (e) {
                                t(e)
                            })
                        }
                        var a = {};
                        angular.forEach(e, function (e) {
                            t(e)
                        })
                    }(function () {
                        t.viewData = {
                            showGroupList: !1,
                            loading: !1,
                            list: [],
                            listOuterWidth: null
                        }
                    })(), t.showGroupList = function () {
                        var e = t.viewData;
                        e.showGroupList = !t.viewData.showGroupList, t.viewData.showGroupList && (e.list.length > 0 || (e.loading = !0, a.account.groupList().then(function (t) {
                            e.loading = !1, 0 == t.status && (e.list = angular.copy(t.result), o(t.result), e.list[0].nodeCollapse = !0, e.listOuterWidth = i.calcTreeNodeStyle(e.list, 170))
                        })))
                    }, t.selectGroupFun = function (a, i) {
                        a && a.stopPropagation(), i.group_id != e.group_id && (i.usable ? (t.selectGroup.group_id = i.group_id, t.selectGroup.group_name = i.group_name, t.viewData.showGroupList = !1) : r(n.instant("account.noMovePermission")))
                    }, t.collapseParentGroup = function (e, a) {
                        var n = t.viewData;
                        e.stopPropagation(), a.nodeCollapse = !a.nodeCollapse, n.listOuterWidth = i.calcTreeNodeStyle(n.list, 170)
                    }
                }
            }
        }
        e.$inject = ["$rootScope", "commonService", "orgTreeHandleService", "$translate", "errHint"],
            angular.module("BC.accountPermission")
                .directive("selectGroup", e)
    },


    69: function (e) {
        "use strict";

        function t(e, t) {
            Object.keys(t).forEach(function (a) {
                e.setAttribute(a, t[a])
            })
        }
        var a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
            return typeof e
        } : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        };
        e.exports = function (e, i) {
            i = i || {}, 
            i.attrs = "object" === a(i.attrs) ? i.attrs : {};
            var n = document.createElement("link");
            n.rel = "stylesheet", 
            n.type = "text/css", 
            n.href = e, 
            i.onload && (n.onload = i.onload), 
            t(n, i.attrs), 
            document.getElementsByTagName("head")[0].appendChild(n)
        }
    },


    70: function (e) {
        "use strict";

        function t(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }
        var a = function ()
            {
                function e(e, t) {
                    for (var a = 0; a < t.length; a++) {
                        var i = t[a];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }
                return function (t, a, i) {
                    return a && e(t.prototype, a), i && e(t, i), t
                }
            }(),
            i = function () {
                function e() {
                    t(this, e), this.themes = {}, this.debind = []
                }
                return a(e, [{
                    key: "regStyle",
                    value: function (e, t) {
                        this.themes[e] = {
                            style: t
                        }
                    }
                }, {
                    key: "applyTheme",
                    value: function (e) {
                        this.themes[e] && $(this.styleElement).html(this.themes[e].style)
                    }
                }, {
                    key: "active",
                    value: function () {
                        var e = this,
                            t = function (t, a) {
                                e.applyTheme(a)
                            };
                        $(document).on("themeChanged", t), e.debind.push({
                            $el: $(document),
                            name: "themeChanged",
                            handler: t
                        });
                        var a = document.createElement("style");
                        a.type = "text/css", document.head.appendChild(a), this.styleElement = a, this.applyTheme(window.usedThemeName)
                    }
                }, {
                    key: "destroy",
                    value: function () {
                        var e = this;
                        document.head.removeChild(this.styleElement), this.styleElement = null;
                        for (var t; t = e.debind.pop();) t.$el.off(t.name, t.handler)
                    }
                }]),
                    e
            }();
        e.exports = i
    },


    71: function (e) {
        e.exports = function (e) {
            return e()
        }, 
        e.hot && e.hot.accept()
    }
});

angular
    .module("BC")
    .run(["$templateCache", function (e) {
        e.put("/static/js/common/tpl/nav_notice.html", '<div class="pr">\n    <span class="bdp-icon-wrap pr" ng-class="{\'unread\':unread > 0}" title="消息中心" ng-click="goToListPage()">\n        <i class="bdp-icon ico-message"></i>\n        <i ng-show="hasNewNotice.unReadTotal > 0" class="unwatched active"></i>\n    </span>\n\n    <div class="nav-notice-list-wrap J_personal_notice_layer" ng-class="{\'single-notice\': hasNewNotice.unReadTypeLen == 1}" ng-if="hasNewNotice.show">\n        <ul class="nav-notice-list">\n            <li class="nav-notice-item" ng-if="noticTipsMol[navNoticeItem.typeId].show" ng-repeat="navNoticeItem in navNoticeList" ng-click="goToListPage(navNoticeItem.typeId)">你有 {{navNoticeItem.unReadNewsLen}}条<span class="notice-type">【{{navNoticeItem.typeId | noticeTypeMap}}】</span>消息</li>\n        </ul>\n        <!-- <div class="operat-wrap clearfix" ng-if="hasNewNotice.unReadTypeLen > 1">\n            <a class="see-all" ng-click="goToListPage()">查看全部</a>\n        </div> -->\n        <div class="close-notice-btn"><i class="bdp-icon ico-gis-close cursor-pointer" ng-click="closeNavNotice()"></i></div>\n    </div>\n</div>'), e.put("/static/js/common/tpl/nav_project_list.html", '<div class="side-nouse-wrap"></div>\n<a class="drag-btn" resize-project-list data-draw-chart-url="draw_chart_url" bindonce="i18nLoaded" bo-title="\'dragResize\' | translate" ng-if="view != \'dash_tpl\'"></a>\n\n<div class="create-block" bindonce="i18nLoaded">\n    <p class="fl" ng-if="view != \'dash_tpl\' && view != \'data_screen\'" bo-text="\'dash\' | translate"></p>\n    <p class="fl" ng-if="view == \'dash_tpl\'">模板列表</p>\n    <p class="fl" ng-if="view == \'data_screen\'" bo-text="\'dash.dataScreen.dataScreen\' | translate"></p>\n    <div class="pa">\n        <div class="display-inline-block search-chart-wrap" search-chart ng-class="{open : showSearchBox}">\n            <a class="bdp-icon-wrap" ng-click="showSearchBar()">\n                <i class="bdp-icon ico-search"></i>\n            </a>\n            <div class="dropdown-wrap search-chart-box" ng-show="showSearchBox">\n                <div>\n                    <input class="dash-search-input" type="text" ng-model="search_name" ng-keyup="onSearchKeyUp($event)" placeholder="{{\'dash.searchChart\'|translate}}">\n                    <div class="empty-tip height-32" ng-if="search_name && search_result_empty" bo-text="\'dash.searchChartEmpty\'| translate"></div>\n                    <div ng-loading-gif size="size-1x" ng-show="showSearchBoxLoading"></div>\n                    <ul class="search-chart-list" ng-show="!!search_name && !showSearchBoxLoading">\n\n                        <li class="search-result-type" ng-if="old_search_chart_list.length > 0">\n                            <span bo-text="\'chart\' | translate"></span>\n                            <span class="search-result-list-num">{{old_search_chart_list.length}}</span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getMoreSearchList($event,\'chart\')" ng-show="old_search_chart_list.length > 3 && old_search_chart_list.length != search_chart_list.length" bo-text="\'more\' | translate"></span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getFoldUpSearchList($event,\'chart\')" ng-show="old_search_chart_list.length > 3 && old_search_chart_list.length == search_chart_list.length" bo-text="\'foldUp\' | translate"></span>\n                        </li>\n                        <li ng-repeat="item in search_chart_list" class="cursor-pointer search-result-item" ng-click="jumpToSearchChart(item)">\n                            <p class="nowrap chart-name" bo-title="item.ct_name" bo-text="item.ct_name"></p>\n                            <p class="nowrap dash-name" bo-title="item.path" bo-text="item.path"></p>\n                        </li>\n\n                        <li class="search-result-type" ng-if="old_search_dashboard_list.length > 0">\n                            <span bo-text="\'dash\' | translate"></span>\n                            <span class="search-result-list-num">{{old_search_dashboard_list.length}}</span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getMoreSearchList($event,\'dashboard\')" ng-show="old_search_dashboard_list.length > 3 && old_search_dashboard_list.length != search_dashboard_list.length" bo-text="\'more\' | translate"></span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getFoldUpSearchList($event,\'dashboard\')" ng-show="old_search_dashboard_list.length > 3 && old_search_dashboard_list.length == search_dashboard_list.length" bo-text="\'foldUp\' | translate"></span>\n                        </li>\n                        <li ng-repeat="item in search_dashboard_list" class="cursor-pointer search-result-item" ng-click="jumpToSearchDashboard(item)">\n                            <p class="nowrap chart-name" bo-title="item.dsh_name" bo-class="{\'has-label\': !!item.label}">\n                                <span class="chart-name-span nowrap" bo-text="item.dsh_name"></span><span class="item-label dash nowrap" bo-show="!!item.label" bo-text="item.label"></span>\n                            </p>\n                            <p class="nowrap dash-name" bo-title="item.path" bo-text="item.path"></p>\n                        </li>\n\n                        <li class="search-result-type" ng-if="old_search_project_list.length > 0">\n                            <span bo-text="\'folder\' | translate"></span>\n                            <span class="search-result-list-num">{{old_search_project_list.length}}</span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getMoreSearchList($event,\'project\')" ng-show="old_search_project_list.length > 3 && old_search_project_list.length != search_project_list.length" bo-text="\'more\' | translate"></span>\n                            <span class="search-result-list-more fr cursor-pointer" ng-click="getFoldUpSearchList($event,\'project\')" ng-show="old_search_project_list.length > 3 && old_search_project_list.length == search_project_list.length" bo-text="\'foldUp\' | translate"></span>\n                        </li>\n                        <li ng-repeat="item in search_project_list" class="cursor-pointer search-result-item" ng-click="jumpToSearchProject(item)">\n                            <p class="nowrap chart-name" bo-title="item.name" bo-text="item.name"></p>\n                            <p class="nowrap dash-name" bo-title="item.path" bo-text="item.path"></p>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class="display-inline-block show-add op-add-icon" ng-if="permision.projEdit" ng-click="show_add = !show_add" click-outside="show_add = false" outside-active="show_add">\n            <a class="bdp-icon-wrap"><i class="bdp-icon ico-plus1"></i></a>\n            <ul class="dropdown-wrap create-op-list" ng-show="show_add">\n                <li>\n                    <a ng-click="showCreateProjDialog()" class="dropdown-item" bo-text="\'dash.createProj\' | translate">\n                    </a>\n                </li>\n                <li>\n                    <a ng-click="showCreateDashDialog()" class="dropdown-item" bo-if="view != \'data_screen\'" bo-text="\'dash.createDash\' | translate"></a>\n                    <a ng-click="showCreateDashDialog(\'dataScreen\')" class="dropdown-item" bo-if="view == \'data_screen\'" bo-text="\'dash.createDataScreen\' | translate"></a>\n                </li>\n            </ul>\n        </div>\n\n        <div class="display-inline-block show-add" ng-if="permision.projEdit" ng-click="show_add = !show_add" click-outside="show_add = false" outside-active="show_add">\n            <a class="bdp-icon-wrap"><i class="bdp-icon ico-more"></i></a>\n            <ul class="dropdown-wrap create-op-list" ng-show="show_add" ng-class="{\'switch-all\': !(permision.dashHidden&&!wsId)}">\n                <li>\n                    <a ng-click="tapAllProject(all_project_list,1)" class="dropdown-item" bo-text="\'dash.closeAll\' | translate">\n                    </a>\n                </li>\n                <li>\n                    <a ng-click="tapAllProject(all_project_list,0)" class="dropdown-item" bo-text="\'dash.openAll\' | translate">\n                    </a>\n                </li>\n                <li ng-if="view != \'data_screen\'">\n                    <a ng-click="setHideDash(all_project_list)" class="dropdown-item" bo-text="\'dash.setHidden\' | translate" ng-if="permision.dashHidden && !wsId"></a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class="J-scroll-project project-nav project-list project-list-common" ng-class="{\'under-workspace\': workspaceList && workspaceList[\'dash\'].length > 0 && view != \'data_screen\'}">\n    <div class="list-hd" ui-tree="navListOption" ng-show="all_project_list.length > 0" data-drag-enabled="navListOption.enabled" data-max-depth="5">\n        \n        <div ng-if="isThirdIframeMobile.type" class="thirdIframe-dash-list-title">我的仪表盘</div> \n        \n        <ul class="own-project-list" ui-tree-nodes ng-model="all_project_list">\n\n            <li class="project-item J-project-item" ng-class="{\'J-sort-disabled\':view == \'dash_tpl\' || isThirdIframeMobile.type || !!node.hidden}" bo-show="!node.hidden" ng-repeat="node in all_project_list" ui-tree-node ng-include="\'navListTreeTpl\'">\n            </li>\n        </ul>\n        \n    </div>\n    <script type="text/ng-template" id="navListTreeTpl">\n\n        <div class="cat-op-parent level-{{node.deep}}" \n            ng-mouseenter="showTooltip(node, $event)"\n            ng-mouseleave="hideTooltip(node, $event)"\n            ui-tree-handle\n            >\n            <i bo-class="{\n                \'bdp-icon fl\': node.attribute == \'project\', \n                \'ico-folder1\': node.type == 0 && projFolding[node.proj_id + node.type] && !node.property, \n                \'ico-folder2-open\': node.type == 0 && !projFolding[node.proj_id + node.type] && !node.property,\n                \'ico-folder-rule\':(node.property || node.type == 2) && projFolding[node.proj_id + node.type], \n                \'ico-folder-rule-open\': (node.property || node.type == 2) && !projFolding[node.proj_id + node.type],\n                \'ico-folder-shared\': node.type == 1 && projFolding[node.proj_id + node.type],\n                \'ico-folder-shared-open\': node.type == 1 && !projFolding[node.proj_id + node.type]\n            }" class="J-folder-icon" ng-click="tapNodeName($event, true, node)"></i>\n            <div class="cat-op cat-op-show fr" \n                bo-hide="node.type !== 0 && node.attribute == \'project\' || node.parent && node.parent.type !== 0 || node.only_display || node.property" >\n                <div class="bdp-icon-wrap" title="More" \n                    ng-click="node.handler_more_show = !node.handler_more_show;copyDashboard.handlerMorePos($event);"\n                    ng-show="node.handler_more_show || node.over_handler_more == true"\n                    outside-active="node.handler_more_show"\n                    click-outside="node.handler_more_show = false" \n                    nav-project-drop-down \n                    drop-down-flag="node.handler_more_show">\n                    <i class="bdp-icon ico-more"></i>\n                    <ul class="dropdown-wrap field-editable-handler-more" ng-style="moreListPosStyle" ng-if="node.handler_more_show && node.attribute == \'project\'">\n                        <li class="dropdown-item" ng-if="node.subs.length > 0 && share && node.type == 0 && permision.innerShare && !wsId  && view != \'data_screen\'" ng-click="shareCtrl.open(\'folder\', node.proj_id)" bo-text="\'share\' | translate"></li>\n                        <li ng-click="getProName(node, $parentNodesScope.$modelValue)" class="dropdown-item ng-binding" bo-text="\'edit\' | translate"></li>\n                        <li ng-click="moveProject.open(node)" class="dropdown-item" bo-text="\'move\' | translate"></li>\n                        <li ng-click="delProject($index,node,$event)" class="ng-binding dropdown-item" bo-text="\'remove\' | translate"></li>\n                    </ul>\n                    <ul class="dropdown-wrap field-editable-handler-more" ng-style="moreListPosStyle" ng-if="node.handler_more_show && node.attribute == \'dashboard\'">\n                        <li ng-click="dashboard.edit($event, node)" class=" dropdown-item ng-binding" bo-text="\'edit\' | translate"></li>\n                        <li class="dropdown-item" ng-if="view != \'data_screen\' && !wsId && permision.innerShare" ng-click="shareCtrl.open(\'dashboard\', node.dsh_id)" bo-text="\'share\' | translate"></li>\n                        <li ng-click="copyDashboard.open(node)" ng-if="node.attribute == \'dashboard\'" class="dropdown-item" bo-text="\'copy\' | translate"></li>\n                        <li ng-click="moveDashboard.open(node)" class="dropdown-item" bo-text="\'move\' | translate"></li>\n                        <li ng-click="delDashboard($index,node, $parentNodesScope.$modelValue)" class="ng-binding dropdown-item" bo-text="\'remove\' | translate"></li>\n                    </ul>\n                </div>\n            </div>\n            <a class="nowrap" ng-class="{\'project-name\':node.attribute == \'project\',\'dash-name\':node.attribute == \'dashboard\'}" ng-click="tapNodeName($event, false, node)">\n                <i class="bdp-icon mt-2" bo-if="node.attribute == \'dashboard\' && node.category != 1" bo-class="{\'ico-dashboard\': node.category == 0, \'ico-dashboard-pro\':node.category == 2}"></i>\n                <span>{{node.name}}</span>\n            </a>\n        </div> \n        <ul ui-tree-nodes class="dash-list" ng-model="node.subs" bo-class="{\'own-dash-list\': node.type == 0 && node.attribute !== \'dashboard\'}" ng-if="node.attribute == \'project\' && !projFolding[node.proj_id + node.type] || node.attribute == \'dashboard\' && !projFolding[node.dsh_id]">\n            <li class="J-project-item"\n                ng-class="{\n                    \'active\':node.attribute==\'dashboard\' && node.dsh_id+node.type == selected.dsh_id_type, \n                    \'has-label\': !!node.label || !!node.comment, \n                    \'J-sort-disabled\':view == \'dash_tpl\' || isThirdIframeMobile.type || !!node.hidden, \n                    \'project-item\':node.attribute==\'project\', \n                    \'dashboard-item\':node.attribute==\'dashboard\'}"\n                bo-show="!node.hidden" \n                ng-repeat="node in node.subs" \n                ui-tree-node \n                ng-include="\'navListTreeTpl\'" data-scroll-container=".J-scroll-project">\n            </li>\n        </ul>\n        <div class="mb8 empty-placeholder" ng-if="node.subs.length == 0 && !projFolding[node.proj_id + node.type]">\n        </div>\n    </script>\n</div>\n'), e.put("/static/js/common/tpl/notice_broadcast.html", '<div class="new-broadcast-wrap" ng-show="enterprise_type == 3 && personalInfo.new_version">\n    <div class="new-broadcast-bg"></div>\n    <div class="new-broadcast">\n        <div class="btn-close" ng-click="closeBroadcast()">\n            ×\n        </div>\n        <!-- <p class="broadcast-title">BDP个人版重装上线啦~</p> -->\n        <div class="broadcast-info">\n            <!-- <dl class="info-list">\n                <dt class="info-title">会员体系</dt>\n                <dd class="info-content">为满足不同用户的数据分析需求，我们新增了银钻和金钻会员等级。会员用户将享有直连数据库、使用数据同步客户端、使用专属APP、超大数据容量等各种超值特权。</dd>\n                <dt class="info-title">数据容量扩充</dt>\n                <dd class="info-content">所有免费用户数据容量已经从20M提升至了100M，让数据更好地服务于工作。</dd>\n                <dt class="info-title">行业模板库</dt>\n                <dd class="info-content">针对不同行业的用户，贴心打造了行业数据模板。你只需要通过BDP的“替换数据”功能，将你的数据套用到模板数据中，即可让模板为你所用。</dd>\n            </dl> -->\n            <p class="activity-intro">即日起，邀请2个好友即可免费享各种会员特权，已邀请的好友人数按最新规则算，奖励更多哦！快去召唤小伙伴吧~</p>\n            <p class="activity-intro mt8">活动截止时间: 2017年5月31日</p>\n            <div class="btn-learn-more" ng-click="toLearn()">立即参加</div>\n        </div>\n    </div>\n</div>'), e.put("/static/js/common/tpl/directive/labelCommentTooltip.html", '<div class="tooltip {{placement}} tooltip-bg-white bdp-tips label-comment-tooltip" ng-class="{ in: isOpen(), fade: animation() }" ng-show="!!content.name || (!!content.origin_name && content.origin_name != content.name) || !!content.owner_name || !!content.label || !!content.comment || !!content.share_name || !!content.rule_user">\n    <div class="tooltip-inner">\n        <div class="box">\n            <div class="tooltip-block" ng-show="!!content.name">\n                <span>{{\'name\' | translate}}</span>\n                <span>{{content.name}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.origin_name && content.origin_name != content.name">\n                <span>{{\'wb.worktableOriginalName\' | translate}}</span>\n                <span>{{content.origin_name}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.label">\n                <span>{{\'label\' | translate}}</span>\n                <span>{{content.label}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.comment">\n                <span>{{\'comment\' | translate}}</span>\n                <span>{{content.comment}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.share_name">\n                <span>{{\'dash.sharedFrom\' | translate}}</span>\n                <span>{{content.share_name}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.rule_user">\n                <span>{{\'dash.allocatedFrom\' | translate}}</span>\n                <span>{{content.rule_user}}</span>\n            </div>\n            <div class="tooltip-block mt4" ng-show="!!content.owner_name">\n                <span>{{\'wb.sharedFrom\' | translate}}</span>\n                <span>{{content.owner_name}}</span>\n            </div>\n        </div>\n    </div>\n</div>\n'), e.put("/static/js/common/tpl/directive/navWorkspace.html", '<div ng-if="workspaceList && curWsList.length > 0">\n    <div class="nav-workspace-list">\n        <ul>\n            <li class="display-inline-block cursor-pointer" ng-class="{\'active\':!wsId}" ng-click="tabWorkspace($event,undefined)" ng-if="(view !== \'template\' && view !==\'template_config\' && view != \'template_rule\') || role !== \'user\'">\n                <div class="workspace-nav">\n                    <div class="workspace-nav-content nowrap">\n                        我的工作区\n                    </div>\n                    <div class="right-border"></div>\n                </div>\n            </li>\n            <li ng-repeat="item in curWsList" class="display-inline-block cursor-pointer" ng-class="{\'active\':item.ws_id == wsId}" ng-click="tabWorkspace($event,item.ws_id,item.admin)">\n                <div class="workspace-nav">\n                    <div class="workspace-nav-content nowrap">\n                        {{item.name}}\n                    </div>\n                    <div class="right-border"></div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n'),
        e.put("/static/js/common/tpl/guide/database_guide.html", '<div class="database-view guide-page" ng-if="showGuide">\n    <div class="nav" ng-if="[3].indexOf(guide) != -1"><span>数据源</span></div>\n    <div class="dashed pa" ng-if="[3].indexOf(guide) != -1"></div>\n    <div class="init-guide pr" ng-if="[3].indexOf(guide) != -1">\n        <div class="db-guide-init"></div>\n        <i class="close-init pa opacity6" ng-click="closeInit()"></i>\n        <a class="btn-blue pa font-size-14 font-w-b cursor-pointer" ng-click="gotoDataSource()"><span class="font-w-b">立即体验</span></a>\n    </div>\n    <div class="statistics-layer pr" ng-if="viewGuide == \'guide-step1\'">\n        <ul>\n            <li class="pr">\n                <div class="box">\n                    <span class="mb4">全部</span>\n                    <b>21</b>\n                </div>\n            </li>\n            <li>\n                <div class="box box-other">\n                    <span class="mb4">已完成</span>\n                    <b>12</b>\n                </div>\n            </li>\n            <li>\n                <div class="box box-other">\n                    <span class="mb4">正在运行</span>\n                    <b>3</b>\n                </div>\n            </li>\n            <li>\n                <div class="box box-other">\n                    <span class="cr-hint mb4">失败</span>\n                    <b>3</b>\n                </div>\n            </li>\n            <li>\n                <div class="box box-other">\n                    <span class="mb4">停用</span>\n                    <b>3</b>\n                </div>\n            </li>\n        </ul>\n        <div class="db-guide-tooltip center pr">\n            <div class="triangle-up"></div>\n            全局状态筛选，已有数据源概况一览无余。\n            <span class="pa guide-step1">1/4</span>\n            <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="goOn(\'guide-step2\')">继续</a>\n\n        </div>\n    </div>\n    <div class="guide-main mt16 no-padding">\n        <div class="view-side-list pt16 pr" ng-if="viewGuide == \'guide-step2\'">\n            <div class="db-guide-tooltip pa guide-tip2">\n                <div class="triangle-up head-left"></div>\n                局部类型筛选与搜索，配合状态筛选，快速找到目标数据源，可搜索源标签搜索。\n                <span class="pa guide-step1">2/4</span>\n                <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="goOn(\'guide-step3\')">继续</a>\n            </div>\n            <div class="list-masking pa" style="width: 200px;height: 200px;z-index: 9999"></div>\n            <div class="view-list-header pl16 pr">\n                <span class="title">我的数据源</span>\n                <div class="search-bar pa">\n                    <i class="bdp-icon ico-search cursor-pointer"></i>\n                </div>\n            </div>\n            <div class="view-list-body">\n                <ul>\n                    <li class="active pl24">全部</li>\n                    <li class="pl24">\n                    MySQL</li>\n                    <li class="pl24">百度实况</li>\n                    <li class="pl24">百度搜索推广</li>\n                </ul>\n            </div>\n        </div>\n        <div class="view-main-body pt16 pr24 pr" style="top: 210px;overflow: initial" id="table_list" ng-if="viewGuide == \'guide-step3\'">\n            <div class="db-guide-tooltip pa guide-tip3">\n                <div class="triangle-up head-bottom"></div>\n                <!-- 数据源列表新面貌，鼠标移动至上方显示相关操作、类型及详细时间，点击数据源名称可查看同步记录和其下工作表的使用情况。 -->\n                简洁的数据源列表，鼠标移动至数据源上方，显示相关操作、提示信息，删除支持直接删除数据源及其下工作表；点击数据源名称可查看同步记录和其下工作表的使用情况。\n                <span class="pa guide-step1">3/4</span>\n                <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="goOn(\'guide-step4\')">继续</a>\n            </div>\n            <div class="masking2"></div>\n            <table class="bdp-table-normal w100 database-table">\n                <thead>\n                    <tr>\n                        <th class="db-name cursor-pointer">名称</th>\n                        <th class="cursor-pointer db-status">状态</th>\n                        <th class="cursor-pointer db-sync-time">最近同步时间</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td class="pr">\n                            <img ng-src="/static/images/s-logo.png" width="40" class="fl">\n                            <div class="database-table-name pr">\n                                <div>\n                                    <a class="ds-name">我的数据源1</a>\n                                    <span class="display-block tag-label">#标签1#</span>\n                                </div>\n                                <div class="operate-layer pa" style="display: block">\n                                    <a class="bdp-btn-blue cursor-pointer">详情配置</a>\n                                    <a class="bdp-btn-blue cursor-pointer">同步</a>\n                                    <a class="bdp-btn-blue cursor-pointer">合并</a>\n                                    <a class="bdp-btn-blue cursor-pointer">删除</a>\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <span>正在运行</span>\n                        </td>\n                        <td>\n                            <span>一天前</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class="pr">\n                            <img ng-src="/static/images/s-logo.png" width="40" class="fl">\n                            <div class="database-table-name pr">\n                                <div class="line-height-40">\n                                    <a class="ds-name">我的数据源2</a>\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <span class="cr-hint">失败:余额不足，请充值</span>\n                        </td>\n                        <td>\n                            <span>一天前</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class="pr">\n                            <img ng-src="/static/images/s-logo.png" width="40" class="fl">\n                            <div class="database-table-name pr">\n                                <div>\n                                    <a class="ds-name">我的数据源3</a>\n                                    <span class="display-block tag-label">#标签1#</span>\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <span>正在运行</span>\n                        </td>\n                        <td>\n                            <span>一天前</span>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class="pr">\n                            <img ng-src="/static/images/s-logo.png" width="40" class="fl">\n                            <div class="database-table-name pr">\n                                <div class="line-height-40">\n                                    <a class="ds-name">我的数据源4</a>\n                                </div>\n                            </div>\n                        </td>\n                        <td>\n                            <span>正在运行</span>\n                        </td>\n                        <td>\n                            <span>一天前</span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div ng-if="viewGuide == \'guide-step4\'">\n        <div class="btn-layer">\n            <a class="nowrap add">\n                <i class="bdp-icon ico-add-database ico-opacity"></i>\n                <span class="pr ml4">\n                    {{ \'ds.adddatasource\' | translate }}\n                </span>\n            </a>\n            <div class="db-guide-tooltip pa guide-tip4">\n                <div class="triangle-up head-top"></div>\n                全新的数据源列表页，全面直观浏览全部可用数据源，优化了添加流程，操作更加便捷。\n                <span class="pa guide-step1">4/4</span>\n                <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="quit()">我知道了</a>\n            </div>\n        </div>\n    </div>\n    <div ng-if="viewGuide == \'guide-step5\'">\n            <div class="block-beta pa"><i class="ico-beta"></i></div>\n        <div class="db-guide-tooltip pa guide-tip5">\n            <div class="triangle-up head-bottom1"></div>\n            <p class="font-size-14 mb8 font-w-b">公开试用</p>\n            带有BETA标识数据源为最近上线，由于第三方限制，可能会偶尔同步失败或延迟，BDP会结成推动第三方优化，稳定后将自动升级为正式服务。\n            <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="quit()">我知道了</a>\n        </div>\n    </div>\n    <div ng-if="viewGuide == \'guide-step6\'">\n        <div class="guide-usage pa" ng-style="style">\n            <div class="db-guide-tooltip pa guide-tip6">\n                <div class="triangle-up head-right"></div>\n                <p class="font-size-14 mb8 font-w-b">使用说明</p>\n                可以在右侧查看数据源配置的所需信息，帮助你快速完成添加配置。\n                <a class="pa know1 font-size-14 cursor-pointer" ng-click="quit()">我知道了</a>\n            </div>\n            <div class="mg24" style="overflow: auto">\n                <p class="form-desc-title mb16 font-w-b">使用说明</p>\n                <dl ng-repeat="it in descInfo" class="mb8">\n                    <dt>{{it.name[language]}}</dt>\n                    <dd ng-bind-html="it.desc[language] | htmlFilter"></dd>\n                </dl>\n            </div>\n        </div>\n    </div>\n    <a class="quit pa font-underline cursor-pointer" ng-click="quit(\'quit\')" ng-if="showGuide && [3].indexOf(guide) == -1">退出引导</a>\n</div>\n<div ng-if="showManualSync" class="database-view guide-page">\n    <div class="view-main-body" style="margin-top:277px">\n        <table class="bdp-table-normal w100 db-guide-table">\n            <tr>\n                <td width="55%">\n                    <div class="bdp-btn-blue display-inline-block pr fr mt16" style="margin-right:40px">\n                        <a class="display-block">{{\'ds.dsSync\' | translate}}</a>\n                        <div class="db-guide-tooltip center pa text-left" style="left:-128px;top:38px">\n                            <div class="triangle-up"></div>\n                            {{\'ds.guide.manualSync\' | translate}}\n                            <a class="pa know1 font-size-14 cursor-pointer font-w-b" ng-click="closeManualSyncGuide()">{{\'close\' | translate}}</a>\n                        </div>\n                    </div>\n                </td>\n                <td></td>\n                <td></td>\n            </tr>\n        </table>\n    </div>\n</div>\n'), e.put("/static/js/common/tpl/guide/dot_guide.html", '<div ng-if="watchStatus == dotGuideData[guideItem].guideNum">\n    <div class="dot-guide" ng-hide="dotMask == true || !dotGuideData[guideItem].tooltipText" ng-click="clickShowInfo()">\n        <!-- {{showDotGuideTip}} -->\n    </div>\n    <div class="circle-group" ng-click="guideItem == \'drillChart\' ? clickShowInfo() : null" ng-class="{\'cursor-pointer\': guideItem == \'drillChart\'}"><!--  ng-click="clickShowInfo()" -->\n        <div class="circle4"></div>\n        <div class="circle3"></div>\n        <div class="circle2"></div>\n        <div class="circle1"></div>\n    </div>\n    <div class="dot-guide-tip J_dash_dot_guide" ng-show="showDotGuideTip == true && dotGuideData[guideItem].tooltipText">\n        <p class="dot-guide-tip-text" ng-bind-html="dotGuideData[guideItem].tooltipText | toSce"></p>\n        <div class="tip-operate clearfix">\n            <div class="see-help" ng-show="dotGuideData[guideItem].videoSrc">\n                <span class="" ng-click="seeHelpVideo();showDotVideo = true">\n                    <i class="bdp-icon ico-help"></i>\n                    <span class="ico-help-text">{{\'operatorHelp\'|translate}}</span>\n                </span>\n            </div>\n            <div class="know-and-close" ng-click="iKnowClick()">知道了</div>\n        </div>\n    </div>\n</div>'), e.put("/static/js/dashboard/tpl/adv_dashboard.html", '<div class="dash-edit-content-view data-screen-wrap adv-dashboard-wrap">\n    <div class="dash-title-wrap view-header-wrap">\n        <div class="clearfix dash-title view-header">\n            <h2>{{dashTitle}}</h2>\n            <div class="btn-layer" ng-if="!dashFullscreen && permision.dashEdit && property == 0 && !isThirdIframeMobile.type">\n                <div class="display-inline-block pr">\n                    <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.design" guide-item="design" guide-type="dash_edit" watch-status="personalInfo.dashboard_guide" btn-class="J-dot-design" add-class="\'dot-guide-design\'"></div>\n\n                    <a ng-if="!proj_share && !(enterprise_type == 5 || enterprise_type == 6)" ng-click="enterEditAdvDash()" ng-if="permision.dashEdit && property == 0" class="J-design-button J-dot-design">\n                        <i class="bdp-icon ico-edit-layout"></i>\n                        <span class="btn-layer-opt">\n                            <span>{{ \'design\' | translate }}</span>\n                            <span class="btn-layer-hover-line"></span>\n                        </span>\n                    </a>\n                </div>\n\n                <a ng-if="!permision.outerShare" ng-click="enterFullScreen()">\n                    <i class="bdp-icon ico-fullscreen-2"></i>\n                    <span class="btn-layer-opt">\n                            {{ \'dash.fullscreen\' | translate }}\n                            <span class="btn-layer-hover-line"></span>\n                    </span>\n                </a>\n\n                <social-share ng-if="permision.dashEdit && property == 0 && permision.outerShare" outer-share-info="outer_share_info" dash-selected="currDash.dashSelected" dash-title="dashTitle"></social-share>\n\n                <a class="more-btn" ng-click="btn_layer.show_more_btn = !btn_layer.show_more_btn" click-outside="btn_layer.show_more_btn = false" outside-active="btn_layer.show_more_btn">\n                    <i class="bdp-icon ico-more"></i>\n                    <ul class="dropdown-wrap dash-more-list J_dashboard_more_btn" ng-show="btn_layer.show_more_btn">\n                        <li ng-if="permision.allowExporting" export-dashboard ng-click="showExportDialog(\'img\')" class="dropdown-item dash-add-item-btn">\n                            {{ \'dash.exportDashboard\' | translate }}\n                        </li>\n                        <li ng-if="permision.allowExporting" export-dashboard ng-click="showExportDialog(\'pdf\')" class="dropdown-item dash-add-item-btn">\n                            {{ \'dash.exportDashPdf\' | translate }}\n                        </li>\n                    </ul>\n                </a>\n            </div>\n        </div>\n    </div>\n    <div class="screen-dashboard">\n        <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" on-share-page="isThirdIframe" draw-chart-url="draw_chart_url">\n        </div>\n        <div ng-include="\'./static/js/dashboard/tpl/adv_dashboard_main.html\'"></div>\n    </div>\n</div>\n\n<div ng-loading-gif ng-show="dashLoading"></div>\n'), e.put("/static/js/dashboard/tpl/adv_dashboard_edit.html", '<div class="data-screen-wrap adv-dashboard-wrap adv-dashboard-edit-wrap">\n    <div class="view-header">\n        <a class="back-btn" ng-click="backAdvDash()" href="javascript:;">\n            <i class="bdp-icon ico-back"></i>\n        </a>\n        <h2 class="text-center data-screen-edit-title">\n            <div class="edit-title-detail">{{dashTitle}}</div>\n        </h2>\n        <div class="btn-layer">\n            <a ng-click="backAdvDash()" href="javascript:;">\n                <i class="bdp-icon ico-ok-blue"></i>\n                <span class="btn-layer-opt">\n                    {{ \'complete\' | translate }}\n                    <span class="btn-layer-hover-line"></span>\n                </span>\n            </a>\n        </div>\n    </div>\n    <div class="data-screen-content">\n        <div class="screen-main">\n            <div class="screen-wrap">\n                <div class="screen-btn-bar clearfix">\n                    <div class="toolbar-left bdp-icon-hover-light">\n                        <span class="display-inline-block toolbar-title">{{ \'dash.advDash.addEle\' | translate }}</span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addChart" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-screen-chart cursor-pointer" ng-click="addItem()"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addTitle" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-attr cursor-pointer" ng-click="dash.addTextComponent(\'C105\')"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addText" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-text cursor-pointer" ng-click="dash.addTextComponent(\'C101\')"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addImage" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-img cursor-pointer" ng-click="dash.addImageComponent()"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addVideo" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-video cursor-pointer" ng-click="dash.addVideoComponent()"></i>\n                        </span>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.guideLine\' | translate }}</span>\n                        <label class="cursor-pointer ml8">\n                            <input type="checkbox" ng-click="showDataScreenGrid = !showDataScreenGrid" ng-model="showDataScreenGrid"><span class="ml4">{{ \'dash.advDash.show\' | translate }}</span>\n                        </label>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.layer\' | translate }}</span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.top" tooltip-placement="bottom" ng-click="dash.setZIndex(\'top\')">\n                            <i class="bdp-icon ico-layer-rise cursor-pointer J_set_zindex"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.bottom" tooltip-placement="bottom" ng-click="dash.setZIndex(\'bottom\')">\n                            <i class="bdp-icon ico-layer-fall cursor-pointer J_set_zindex"></i>\n                        </span>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.scale\' | translate }}</span>\n                        <label class="display-inline-block ml16">\n                            <select ng-model="dash.scaleDashbord.selectedData" ng-change="dash.scaleDashbord.modifyScale();">\n                                <option value="1">{{ \'dash.advDash.actualSize\' | translate }}</option>\n                                <option value="2">{{ \'dash.advDash.selfAdaption\' | translate }}</option>\n                            </select>\n                        </label>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="global-filter-set cursor-pointer ml16 toolbar-title" ng-if="!proj_share && dashSelected" global-filter-set original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" dash-standard-items="dashStandardItems" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" draw_chart_url="draw_chart_url">\n                            {{ "dash.globalFilter" | translate }}\n                            <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.globalFilter" tooltip-placement="bottom">\n                                <i class="bdp-icon ico-add-filter cursor-pointer"></i>\n                            </span>\n                        </span>\n                    </div>\n                </div>\n                <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" on-share-page="isThirdIframe" draw-chart-url="draw_chart_url">\n                </div>\n                <div class="screen-dashboard-wrap screen-dashboard-edit-wrap">\n                    <div class="screen-dashboard">\n                        <div class="dash-edit-content-view J-dash-edit-content-view">\n                            <div ng-include="\'./static/js/dashboard/tpl/adv_dashboard_main.html\'"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="side-panel J_side_panel adv-dash-side-panel">\n            <div datascreen-page-ele ng-if="dash.editChartMetaVisible.pageEle"></div>\n            <div chart-style-text save-func="saveDashboard()" ng-if="dash.editChartMetaVisible.text"></div>\n            <div chart-style-extend save-func="dash.saveChartStyle(chart)" ng-if="dash.editChartMetaVisible.style"></div>\n            <div chart-screen-numerical ng-if="dash.editChartMetaVisible.numerical"></div>\n            <div chart-screen-video ng-if="dash.editChartMetaVisible.video"></div>\n            <div chart-screen-img ng-if="dash.editChartMetaVisible.img"></div>\n            <div datascreen-page-wrap ng-show="dash.editChartMetaVisible.pageWrap"></div>\n        </div>\n    </div>\n</div>\n'), e.put("/static/js/dashboard/tpl/adv_dashboard_fullscreen.html", '<div class="dash-fullscreen-wrap display-device-{{fullDisplayDevice}} display-theme-{{fullDisplayTheme === 1 ? \'dark\' : \'light\'}} dash-edit-content-view data-screen-wrap adv-dashboard-wrap">\n    <div class="dash-title-wrap view-header-wrap">\n        <div class="clearfix dash-title view-header">\n            <h2>{{dashTitle}}</h2>\n            <div class="btn-layer">\n                <a class="full-display-setting" ng-click="show_display_theme = !show_display_theme" click-outside="show_display_theme = false" outside-active="show_display_theme">\n                    <span class="setting-label">{{ \'dash.displayTheme\' | translate }}</span>\n                    <span class="btn-layer-opt">\n                        {{fullDisplayTheme === 1 ? \'dash.darkTheme\' : \'dash.lightTheme\' | translate}}\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down"></i>\n                    <ul class="dropdown-wrap" ng-show="show_display_theme">\n                        <li class="dropdown-item" ng-click="setFullDisplayTheme(1)">{{ \'dash.darkTheme\' | translate }}</li>\n                        <li class="dropdown-item" ng-click="setFullDisplayTheme(2)">{{ \'dash.lightTheme\' | translate }}</li>\n                    </ul>\n                </a>\n                <a class="full-display-setting" ng-click="show_display_devices = !show_display_devices" click-outside="show_display_devices = false" outside-active="show_display_devices">\n                    <span class="setting-label">{{ \'dash.displayDevice\' | translate }}</span>\n                    <span class="btn-layer-opt">\n                        <i class="bdp-icon ico-device ico-device-{{fullDisplayDevice}}"></i>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down"></i>\n                    <ul class="dropdown-wrap" ng-show="show_display_devices">\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'pc\')">\n                            <i title="{{ \'dash.pcDevice\' | translate }}" class="bdp-icon ico-device-pc"></i>\n                        </li>\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'projector\')">\n                            <i title="{{ \'dash.projectorDevice\' | translate }}" class="bdp-icon ico-device-projector"></i>\n                        </li>\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'tv\')">\n                            <i title="{{ \'dash.tvDevice\' | translate }}" class="bdp-icon ico-device-tv"></i>\n                        </li>\n                    </ul>\n                </a>\n                <a ng-click="exitFullScreen();removeFullDisplayStyle()">\n                    <i class="bdp-icon ico-exit-fullscreen"></i>\n                    <span class="btn-layer-opt">\n                        {{ \'exitFullscreen\' | translate }}\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                </a>\n            </div>\n        </div>\n    </div>\n    <div class="screen-dashboard-wrap screen-dashboard-edit-wrap">\n        <div class="screen-dashboard">\n            <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" on-share-page="isThirdIframe" draw-chart-url="draw_chart_url">\n            </div>\n            <div ng-include="\'./static/js/dashboard/tpl/adv_dashboard_main.html\'"></div>\n        </div>\n    </div>\n\n</div>\n'),
        e.put("/static/js/dashboard/tpl/adv_dashboard_main.html", '<div class="dash-wrapper J-dash-wrapper" ng-class="{\n    \'dash-one-block\':!dashLayoutInfo.show_block,\n    \'edit-mode\':dashEditMode,\n    \'readonly-mode\': !dashEditMode,\n    \'dash-fixed-width\':dashLayoutInfo.fixed_width,\n    \'hide-block-watermark\':!dashLayoutInfo.show_block && global.watterMark,\n    \'under-workspace\':(workspaceList && workspaceList[\'dash\'].length > 0),\n    \'dash-mode-free\':dashLayoutInfo.layout_style == 2,\n    \'has-global-filter\': global.globalDashFilter.length > 0\n    }" ng-style="dashLayoutInfo.dashWrapperStyle">\n\n    <div class="folder-empty" ng-if="noDashes">\n        <i class="bdp-icon ico-new-dashboard ico-no-opacity"></i>\n        <p translate="dash.emptyDash" class="mt8 font-text-tip"></p>\n    </div>\n    <div gridster="gridsterOpts" id="J-export-dashboard-height" class="J_data_screen_hook" ng-style="dashLayoutInfo.gridsterStyle">\n        \n        <ul id="J_gridster" ng-if="dashLayoutInfo.layout_style == 2">\n            <li gridster-item="item" class="J-export-img-elem-item" ng-repeat="item in dashStandardItems" ng-style="item.itemStyle" ng-hide="chartdel[\'chart\'+current_item.meta.ct_id]" id="{{item.children[0].meta.ct_id}}" data-chart-type="{{item.children[0].meta.type}}" data-chart-id="{{item.children[0].meta.ct_id}}" data-is-special-chart="{{item.children[0].meta.is_special_chart}}" ng-mouseleave="mouseleaveItem()" ng-class="{\n                        \'selected\':dashLayoutInfo.ct_id === item.children[0].meta.ct_id,\n                        \'border-left\':item.children[0].meta.dash_setting.border_left,\n                        \'border-right\':item.children[0].meta.dash_setting.border_right,\n                        \'border-top\':item.children[0].meta.dash_setting.border_top,\n                        \'border-bottom\':item.children[0].meta.dash_setting.border_bottom,\n                        \'no-title\': item.children[0].meta.type === \'C310\' || !item.children[0].meta.dash_setting.show_title,\n                        \'no-axis\': !item.children[0].meta.dash_setting.show_axis,\n                        \'no-legend\': !item.children[0].meta.dash_setting.show_legend,\n                        \'component-text\': item.children[0].meta.ct_id.indexOf(\'text_\') > -1 || item.children[0].meta.type == \'C105\',\n                        \'no-edit-mode\': !dashEditMode,\n                        \'top-index-layer\': item.isTopIndex,\n                        \'gridster-no-resize\': lockItemPosMap && lockItemPosMap[item.children[0].meta.ct_id]\n                    }">\n                <div class="data-screen-item-box gridbox-border-{{item.borderType}}" ng-show="item.borderType && item.borderType != \'CUSTOM\'">\n                    <div class="data-screen-item-top">\n                        <div class="data-screen-item-left"></div>\n                        <div class="data-screen-item-center"></div>\n                        <div class="data-screen-item-right"></div>\n                    </div>\n                    <div class="data-screen-item-middle">\n                        <div class="data-screen-item-left"></div>\n                        <div class="data-screen-item-center"></div>\n                        <div class="data-screen-item-right"></div>\n                    </div>\n                    <div class="data-screen-item-bottom">\n                        <div class="data-screen-item-left"></div>\n                        <div class="data-screen-item-center"></div>\n                        <div class="data-screen-item-right"></div>\n                    </div>\n                </div>\n                <div ng-repeat="child in item.children" ng-class="{\'chart-box\': [\'C102\',\'C104\'].indexOf(child.meta.type) < 0, \'gridster-no-drag\': lockItemPosMap && lockItemPosMap[child.meta.ct_id] }" class="auto-size J_chart_box" ng-click="dash.clickGridsterItem(child, item)">\n                    <!-- 文本组件已不需要，先保留 -->\n                    <div ng-if="child.meta.ct_id.indexOf(\'text_\') > -1 || child.meta.type == \'C105\'" ng-class="{\'ta-edit-mode-on\':dashEditMode && textComponentEditMode[child.meta.ct_id]}">\n                        <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                            <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item);$event.stopPropagation();" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item);">\n                                <i class="bdp-icon ico-more cursor-pointer"></i>\n                                <ul ng-show="more_show" class="dropdown-wrap">\n                                    <li class="dropdown-item" translate="edit" ng-click="dash.editTextFromMore(child,item)"></li>\n                                    <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id)"></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div ng-if="dashEditMode" text-angular ng-model="child.meta.html" ng-style="child.meta.style" ng-blur="dash.saveTextComponent(child)" name="{{child.meta.ct_id}}" ta-toolbar="[[]]" ta-unsafe-sanitizer="true"></div>\n                        <div ng-if="!dashEditMode" text-angular class="item-text-chart" ng-style="child.meta.style" ng-model="child.meta.html" ta-disabled="true" ta-unsafe-sanitizer="true"></div>\n                        <div ng-show="dashEditMode && !textComponentEditMode[child.meta.ct_id]" class="base-loading-layer" ng-click="dash.clickGridsterItem(child, item);$event.stopPropagation();"></div>\n                    </div>\n\n                    <div ng-if="child.meta.type && child.meta.type.indexOf(\'C102\') > -1" class="auto-size screen-item-image">\n                        <div ng-if="item.url" class="auto-size" style="background:url({{item.url}}) no-repeat center; background-size: contain"></div>\n                        <div ng-if="!item.url" class="auto-size screen-item-placeholder-image"></div>\n                        <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                            <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item)" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item);">\n                                <i class="bdp-icon ico-more"></i>\n                                <ul ng-show="more_show" class="dropdown-wrap">\n                                    <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id);$event.stopPropagation();"></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div ng-if="child.meta.type && child.meta.type.indexOf(\'C103\') > -1" class="auto-size screen-item-image" ng-class="{\'screen-item-video\': dashLayoutInfo.ct_id === item.children[0].meta.ct_id}">\n                        <div ng-if="!item.src" class="auto-size screen-item-placeholder-video"></div>\n                        <video class="auto-size ng-hide" ng-if="item.autoplay  && item.loop && item.src" ng-show="item.autoplay  && item.loop" muted="muted" preload="auto" controls="controls" autoplay="autoplay" loop="loop" ng-src="{{item.src | trustUrl}}">\n                        </video>\n                        <video class="auto-size ng-hide" ng-if="item.autoplay  && !item.loop && item.src" ng-show="item.autoplay  && !item.loop" muted="muted" preload="auto" controls="controls" autoplay="autoplay" ng-src="{{item.src | trustUrl}}">\n                        </video>\n                        <video class="auto-size ng-hide" ng-if="!item.autoplay  && item.loop && item.src" ng-show="!item.autoplay  && item.loop" muted="muted" preload="auto" controls="controls" loop="loop" ng-src="{{item.src | trustUrl}}">\n                        </video>\n                        <video class="auto-size ng-hide" ng-if="!item.autoplay  && !item.loop && item.src" ng-show="!item.autoplay  && !item.loop" muted="muted" preload="auto" controls="controls" ng-src="{{item.src | trustUrl}}">\n                        </video>\n\n                        <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                            <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item)" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item);">\n                                <i class="bdp-icon ico-more"></i>\n                                <ul ng-show="more_show" class="dropdown-wrap">\n                                    <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                    <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id);$event.stopPropagation();"></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- 注意ngIf增加了一个子作用域，所以$parent要增加一层 -->\n                    <div ng-if="child.meta.type && [\'C101\',\'C102\',\'C103\',\'C104\',\'C105\'].indexOf(child.meta.type) < 0">\n                        <div class="item-chart-title">\n                            <div class="item-chart-title-bd nowrap J-item-chart-title-bd">\n                                <div class="display-inline-block drill-tip" ng-if="child.meta.level_fields.length > 1">\n                                    <i class="bdp-icon ico-drill"></i>\n                                    <div class="dropdown-wrap drill-tip-bd">\n                                            <span ng-repeat="drill_field in child.meta.level_fields">\n                                                <i class="bdp-icon ico-slicesnav-arrow" ng-show="!$first"></i>\n                                                {{drill_field.nick_name || drill_field.name}}\n                                            </span>\n                                    </div>\n                                </div>\n                                <i class="bdp-icon ico-linked" ng-if="child.meta.chart_link.linked_chart_type == \'2\'"></i>\n                                <i class="bdp-icon ico-chart-jump" ng-if="child.meta.chart_jump.can_jump == \'1\'"></i>\n                                <span class="no-margin" ng-click="">{{child.meta.name}}</span>\n                                <div class="loading-wrap">\n                                    <div class="loader-inner ball-spin-fade-loader">\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                    </div>\n                                </div>\n                                    <span class="filter-item" ng-repeat="it in child.meta.filter_list_inner" ng-if="it.range.length && !it.adv_type">\n                                        <em ng-if="it.data_type === \'date\' && !it.granularity" ng-hide="AllMap.indexOf( (it.range | format_date:child.meta.adv_date_list ) ) >= 0">\n                                            {{it.range | format_date:child.meta.adv_date_list}}\n                                            <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                        </em>\n                                        <em ng-if="it.data_type === \'date\' && it.granularity">{{it.range | inner_range_date_format:it}}\n                                            <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                        </em>\n                                        <em ng-if="it.data_type !== \'date\' && !it.inner_adv_type && it.range_type != 0">{{it.range | dash_sub_date:it}}</em>\n                                        <em ng-if="it.data_type !== \'date\' && ( (it.inner_adv_type && it.rangeNumber != 1) || it.range_type == 0 )">\n                                            <span ng-if="!it.nick_name">{{it.name}}</span>\n                                            <span ng-if="!!it.nick_name">{{it.nick_name}}</span>\n                                            {{\'custom\' | translate}}\n                                        </em>\n                                        <em ng-if="it.data_type !== \'date\' && it.inner_adv_type && it.rangeNumber == 1 && it.range_type != 0 ">\n                                            {{it.rangeFirstField | dash_sub_date:it}}\n                                        </em>\n                                    </span>\n                                    <span class="filter-item" ng-repeat="it in child.meta.diff_filter">\n                                        <em>{{it}}</em>\n                                    </span>\n                            </div>\n                        </div>\n                        <div class="item-chart gridster-no-drag" ng-class="{\'noscroll\':selected_type === \'C200\' || selected_type === \'C400\'}" id="{{child.dom_id}}" size-x="{{item.sizeX}}" size-y="{{item.sizeY}}">\n                            <div class="drill-crumbs-wrap"></div>\n                            <div bdp-chart="draw_chart_url[child.dom_id].options" display-mode="{{item.sizeX + \'*\' + item.sizeY}}" data-updatetime="{{child.meta.update_time}}" data-index="$parent.$parent.$index" data-domid="child.dom_id" data-lazy-loaded="draw_chart_url[child.dom_id].lazyload" class="chart J-export-img-elem-chart" ng-class="{\'chart-table\':selected_type === \'C200\',\n                                        \'chart-canvas-table\': selected_type === \'C200\',\n                                        \'chart-map\':selected_type === \'C271\' || selected_type === \'C272\',\n                                        \'chart-funnel overflow-hidden\':selected_type === \'C330\',\n                                        \'show-datalabels\': child.meta.dash_setting.show_datalabels,\n                                        \'hide-total\':!child.meta.dash_setting.show_total}" data-ctid="{{draw_chart_url[child.dom_id].options.ct_id}}"></div>\n                            <div class="loading-wrap" ng-if="item.children[0].meta.type === \'C310\'">\n                                <div class="loader-inner ball-spin-fade-loader">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div chart-operate data-ct-id="{{child.meta.ct_id}}" class="gridster-no-drag" data-origin="adv_dash_edit"></div>\n                    </div>\n                </div>\n\n            </li>\n        </ul>\n        <div ng-show="showDataScreenGrid" class="data-screen-grid"></div>\n    </div>\n\n</div>'),
        e.put("/static/js/dashboard/tpl/chart-edit.html", '<div class="chart-edit-layer" bindonce="i18nLoaded">\r\n    <div class="view-header J_view_header">\r\n        <a class="back-btn J-create-chart-ok-button" bo-title="\'done\' | translate" ng-click="verifyChartArgs()">\r\n            <i class="bdp-icon ico-back"></i>\r\n        </a>\r\n        <div class="view-header-seperate-line"></div>\r\n        <h2 class="text-left view-header-left-name ng-cloak" bo-text="\'chart.edit\' | translate"></h2>\r\n        <span class="btn-layer">\r\n            <a class="help-btn" bo-title="\'help\' | translate" ng-click="show_edit_help(this)" ng-show="!isPersonal">\r\n                <i class="bdp-icon ico-info-bold no-margin"></i>\r\n            </a>\r\n            <a class="help-btn color-blue text-undeline J-how-create-button" title="操作示例" ng-click="show_guide_video()" ng-show="!!isPersonal">\r\n                <i class="bdp-icon ico-play-small"></i>操作示例\r\n            </a>\r\n        </span>\r\n    </div>\r\n    <div class="chart-left J_chart_left">\r\n        <div chart-data-info class="J_chart_data_info"></div>\r\n        <div class="hd pr hd-field-wrap chart-right-margin J_field_search field-search-cover">\r\n            <p class="hd-field-tip" bo-text="\'chart.field\'|translate"></p>\r\n            <div class="query-box auto no-margin">\r\n                <input type="text" class="query-text" ng-input-text ng-model="query">\r\n            </div>\r\n            <div class="add pr">\r\n                <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.addChartField" guide-item="addChartField" guide-type="chart_edit" watch-status="personalInfo.chart_guide" btn-class="J-dot-add-chart-field" add-class="\'dot-guide-add-chart-field\'"></div>\r\n                \r\n                <div class="J-dot-add-chart-field" ng-click="newFieldTypeSelect = !newFieldTypeSelect" click-outside="newFieldTypeSelect = false" outside-active="newFieldTypeSelect">\r\n                    <a class="cursor-pointer bdp-icon-wrap" bo-title="\'chart.addField\' | translate">\r\n                        <i class="bdp-icon ico-plus1"></i>\r\n                    </a>\r\n                    <ul class="field-type-select dropdown-wrap" ng-show="newFieldTypeSelect">\r\n                        <li class="dropdown-item" ng-click="createFieldFormula()" bo-text="\'chart.addFormulaField\'|translate"></li>\r\n                        <li class="dropdown-item" ng-click="createFieldGroup()" bo-text="\'chart.addGroupField\'|translate"></li>\r\n                        <li class="dropdown-item" ng-click="createFieldByML()" bo-text="\'ML_wd.btnRunModel\'|translate" ng-if="permision.newTraining && !wsId"></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="bd chart-right-margin J_field_list">\r\n            <ul class="field-list" ng-if="dataInfo.length == 1">\r\n                <li ng-repeat="field in field_list | query_fields:query" ng-class="{\'handler-more\':field.handler_more_show}" ng-mouseenter="field.justshowme = true" ng-mouseleave="field.justshowme = false" title="{{field.name}}">\r\n                    <div ng-click="show_edit = !show_edit" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},onStart:\'dragTbFunc(field)\',onStop:\'stopDragField()\'}" class="title nowrap {{field.data_type}}-title cursor-pointer" ng-class="{\'field-drag-title\': !chartMainMask}">\r\n                        <i ng-if="field.data_type===\'date\'" class="bdp-icon ico-triangle-right" ng-class="{\'ico-triangle-down\':show_edit}"></i>\r\n                        <i class="bdp-icon ico-type-{{field.ico_type}}" ng-class="{\'ico-type-{{field.ico_type}}-orange\':field.formula, \'-ml\': field.made_by_ml && field.formula}"></i>\r\n                        <span class="data-tag" field-set-tooltip="field" tooltip-placement="top-left" ng-if="tbType != \'public\'" ng-class="{\'border-bottom-5182E4\': (field.original_name != field.name || field.remark)}" ng-bind="field.name"></span>\r\n                        <span class="data-tag" ng-if="tbType == \'public\'" ng-bind="field.name"></span>\r\n                        <span class="field-handler display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type !== \'group\'">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li ng-if="field.made_by_ml" class="dropdown-item" ml-field="field" ml-field-action="updateFieldMM" bo-text="\'ML_wd.fieldRefresh\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type === \'group\'" class="field-handler hover-show display-block" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid ,false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type != \'string\'" class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-click="modifyField(field)" ng-hide="field.made_by_ml" bo-title="\'edit\' | translate">\r\n                                <i class="bdp-icon ico-edit"></i>\r\n                            </span>\r\n                            <span class="bdp-icon-wrap" ng-click="delNewField(field.name,field.fid)" bo-title="\'remove\' | translate">\r\n                                <i class="bdp-icon ico-trash"></i>\r\n                            </span>\r\n                        </span>\r\n                        <span class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-if="field.data_type == \'string\' && field.formula ==\'\'" bo-title="\'sort\' | translate" ng-click="showEnumOrder(field.fid, false, \'source\')">\r\n                                <i class="bdp-icon ico-config-order hover-show"></i>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <ul ng-if="field.data_type == \'date\'" ng-show="show_edit" class="date-field ml20">\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'year\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'year\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'quarter\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'quarter\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'month\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'month\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'week\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'week\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'day\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'day\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'hour\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'hour\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'minute\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'minute\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'second\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'second\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <ul class="field-list" ng-if="dataInfo.length > 1 && field_list.hasDimension">\r\n                <div style="line-height: 32px">\r\n                    <span bo-text="\'chart.dimension\' | translate"></span>\r\n                    <span class="bdp-icon-wrap fr mt4 cursor-pointer" ng-click="editDimension()">\r\n                        <i class="bdp-icon ico-edit"></i>\r\n                    </span>\r\n                </div>\r\n                <li ng-repeat="field in field_list | filter: {type: \'dimension\'} | query_fields:query" ng-class="{\'handler-more\':field.handler_more_show}" ng-mouseenter="field.justshowme = true" ng-mouseleave="field.justshowme = false" title="{{field.name}}">\r\n                    <div ng-click="show_edit = !show_edit" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragTbFunc(field)\',onStop:\'stopDragField()\'}" class="title nowrap {{field.data_type}}-title field-drag-title cursor-pointer">\r\n                        <i ng-if="field.data_type===\'date\'" class="bdp-icon ico-triangle-right" ng-class="{\'ico-triangle-down\':show_edit}"></i>\r\n                        <i class="bdp-icon ico-type-{{field.ico_type}}" ng-class="{\'ico-type-{{field.ico_type}}-orange\':field.formula, \'-ml\': field.made_by_ml && field.formula}"></i>\r\n                        <span class="data-tag" field-set-tooltip="field" tooltip-placement="top-left" ng-if="tbType != \'public\'" ng-class="{\'border-bottom-5182E4\': (field.original_name != field.name || field.remark)}" ng-bind="field.name"></span>\r\n                        <span class="data-tag" ng-if="tbType == \'public\'" ng-bind="field.name"></span>\r\n                        <span class="field-handler display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type !== \'group\'">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li ng-if="field.made_by_ml" class="dropdown-item" ml-field="field" ml-field-action="updateFieldMM" bo-text="\'ML_wd.fieldRefresh\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type === \'group\'" class="field-handler hover-show display-block" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type != \'string\' " class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-click="modifyField(field)" bo-title="\'edit\' | translate">\r\n                                <i class="bdp-icon ico-edit"></i>\r\n                            </span>\r\n                        <span class="bdp-icon-wrap" ng-click="delNewField(field.name,field.fid)" bo-title="\'remove\' | translate">\r\n                            <i class="bdp-icon ico-trash"></i>\r\n                        </span>\r\n                        </span>\r\n                        <span class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-if="field.data_type == \'string\' && field.formula ==\'\'" bo-title="\'sort\' | translate" ng-click="showEnumOrder(field.fid, false, \'source\')">\r\n                                <i class="bdp-icon ico-config-order hover-show"></i>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <ul ng-if="field.data_type == \'date\'" ng-show="show_edit" class="date-field ml20">\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'year\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'year\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'quarter\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'quarter\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'month\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'month\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'week\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'week\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'day\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'day\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'hour\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'hour\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'minute\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'minute\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'second\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'second\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <ul class="field-list" ng-if="dataInfo.length > 1 && field_list.hasMeasure">\r\n                <div style="line-height: 32px">\r\n                    <span bo-text="\'chart.valueAxis\' | translate"></span>\r\n                </div>\r\n                <li ng-repeat="field in field_list | filter: {type: \'measure\'} | query_fields:query" ng-class="{\'handler-more\':field.handler_more_show}" ng-mouseenter="field.justshowme = true" ng-mouseleave="field.justshowme = false" title="{{field.name}}">\r\n                    <div ng-click="show_edit = !show_edit" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragTbFunc(field)\',onStop:\'stopDragField()\'}" class="title nowrap {{field.data_type}}-title field-drag-title cursor-pointer">\r\n                        <i ng-if="field.data_type===\'date\'" class="bdp-icon ico-triangle-right" ng-class="{\'ico-triangle-down\':show_edit}"></i>\r\n                        <i class="bdp-icon ico-type-{{field.ico_type}}" ng-class="{\'ico-type-{{field.ico_type}}-orange\':field.formula, \'-ml\': field.made_by_ml && field.formula}"></i>\r\n                        <span class="data-tag" field-set-tooltip="field" tooltip-placement="top-left" ng-if="tbType != \'public\'" ng-class="{\'border-bottom-5182E4\': (field.original_name != field.name || field.remark)}" ng-bind="field.name"></span>\r\n                        <span class="data-tag" ng-if="tbType == \'public\'" ng-bind="field.name"></span>\r\n                        <span class="field-handler display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type !== \'group\'">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li ng-if="field.made_by_ml" class="dropdown-item" ml-field="field" ml-field-action="updateFieldMM" bo-text="\'ML_wd.fieldRefresh\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type === \'group\'" class="field-handler hover-show display-block" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <div class="bdp-icon-wrap" bo-title="\'more\' | translate" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)" bo-text="\'edit\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')" bo-text="\'sort\' | translate"></li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)" bo-text="\'remove\' | translate"></li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type != \'string\'" class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-click="modifyField(field)" ng-hide="field.param.type == \'ml\'" bo-title="\'edit\' | translate">\r\n                                <i class="bdp-icon ico-edit"></i>\r\n                            </span>\r\n                            <span class="bdp-icon-wrap" ng-click="delNewField(field.name,field.fid)" bo-title="\'remove\' | translate">\r\n                                <i class="bdp-icon ico-trash"></i>\r\n                            </span>\r\n                        </span>\r\n                        <span class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-if="field.data_type == \'string\' && field.formula ==\'\'" bo-title="\'sort\' | translate" ng-click="showEnumOrder(field.fid, false, \'source\')">\r\n                                <i class="bdp-icon ico-config-order hover-show"></i>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <ul ng-if="field.data_type == \'date\'" ng-show="show_edit" class="date-field ml20">\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'year\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'year\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'quarter\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'quarter\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'month\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'month\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'week\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'week\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'day\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'day\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'hour\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'hour\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'minute\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'minute\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'second\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span bo-text="\'second\'|translate"></span>\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <!--end chart-left-->\r\n    <a class="toggle-nav drag-btn J-toggle-nav-chart-left chart-left-drag-btn" resize-width-fields-list bo-title="\'dragResize\' | translate"></a>\r\n    <div class="chart-main">\r\n        <div class="chart-args">\r\n            <!-- 层级 -->\r\n            <div ng-show="chart_ops.meta.level_fields.length > 1" class="row axis level" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <span class="fl axis-head">\r\n                    <span class="axis-head-name" bo-text="\'chart.layer\'|translate"></span>\r\n                </span>\r\n                <div class="drag-target">\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target-inner" ng-model="level_fields" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'join_field(\\\'drill\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-layer J-delete-target-id" ui-sortable="sortAxisDrillField" id="dragDrill" ng-model="chart_ops.meta.level_fields">\r\n                            <li ng-repeat="it in chart_ops.meta.level_fields" class="drag-item drag-level-item J-delete-item-cls" ng-class="{\'active\': $index === drill_level,\'not-drill-item\': $index > drill_level}">\r\n                                <div class="data-tag remove-icon-pr">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="emitCrumbsClick($index)">\r\n                                            <span class="nowrap nick-name" ng-bind="it.nick_name || it.name"></span>\r\n                                            <i class="inline fl nowrap" ng-if="it.data_type === \'date\'">\r\n                                                ({{it.granularity | granularity}})\r\n                                            </i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small-gray remove-it-icon" ng-click="removeAxisAction($event, \'drill\', it);"></i>\r\n                                    </span>\r\n                                    <i class="bdp-icon ico-level-arrow" ng-hide="$last"></i>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 维度 -->\r\n            <div class="row axis" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <span class="fl axis-head">\r\n                    <span class="axis-head-name" bo-text="\'chart.dimension\' | translate"></span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'x\')"></i>\r\n                </span>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-hide="!!viewMeta.compare_axis || viewMeta.chart_type == \'C280\' || viewMeta.chart_type == \'C340\'" ng-click="axisHandle.add(\'compare_axis\')">\r\n                        <i class="bdp-icon ico-handle-compare"></i>\r\n                        <span bo-text="\'chart.addCompareAxis\' | translate"></span>\r\n                    </div>\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target-inner xAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'x\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension J-delete-target-id" id="dragX" ui-sortable="sortAxisField" ng-model="viewMeta.x">\r\n                            <li ng-repeat="it in viewMeta.x" class="drag-item J-delete-item-cls" ng-class="{\'not-sortable\': chart_ops.meta.level_fields.length > 1 && !$index && it.fid === chart_ops.meta.level_fields[drill_level].fid}" click-outside="it.show_formula = false" outside-active="it.show_formula" data-jqyoui-options="{appendTo:\'body\', scroll: false,animate:false,greedy:true, accept: \'.field-list .field-drag-title\'}" data-drop="true" data-jqyoui-droppable="{onDrop:\'join_field(\\\'x\\\',$index,it)\'}">\r\n                                <div class="data-tag" ng-class="{\'remove-icon-pr\': !(chart_ops.meta.level_fields.length > 1 && !$index && it.fid === chart_ops.meta.level_fields[drill_level].fid)}">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)" ng-click="it.show_formula = !it.show_formula">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.sort.type !==\'\' && viewMeta.sort.type !== \'custom\' && viewMeta.sort.axis === \'x\' && viewMeta.sort.fid == it.fid && viewMeta.is_advanced_sort == 0 && isSortField({\'field\':it, axis:\'x\'})" ng-class="fieldSortType({index: $index})"></i>\r\n                                            <span class="nowrap" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                            <span class="nowrap nick-name" ng-bind="it.nick_name" ng-if="it.nick_name != undefined && it.nick_name != \'\'"></span>\r\n                                            <i class="inline fl nowrap granularity" ng-if="it.data_type === \'date\'">\r\n                                                ({{it.granularity|granularity}})\r\n                                            </i>\r\n                                            <i class="inline fl nowrap granularity" ng-if="viewMeta.chart_type === \'C200\' && it.data_type === \'string\' && permision.tableImg">\r\n                                                ({{it.data_show_type|dataShowType}})\r\n                                            </i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-if="!(chart_ops.meta.level_fields.length > 1 && !$index && it.fid === chart_ops.meta.level_fields[drill_level].fid)" ng-click="removeAxisAction($event, \'x\', it);"></i>\r\n                                        <div class="data-formula" ng-show="it.show_formula">\r\n                                            <div string-data-show-type ng-if="viewMeta.chart_type === \'C200\' && it.data_type === \'string\' && permision.tableImg" tb-id="tb_id" field="it" axis="\'x\'" set-data-show-type="setDataShowType"></div>\r\n                                             <div date-granularity ng-if="it.data_type === \'date\'" tb-id="tb_id" field="it" axis="\'x\'" set-granularity="setGranularity"></div>\r\n                                             <div dimension-compare-sort axis="x"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                                <div class="field-tip dropdown-wrap">\r\n                                    <span>{{it.name}}</span>\r\n                                </div>\r\n                            </li>\r\n                            <div class="pr display-inline-block" ng-if="enterprise_type == 3 && viewMeta.x && viewMeta.x.length > 0">\r\n                                <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.drillChart" guide-item="drillChart" guide-type="chart_edit" watch-status="personalInfo.chart_guide" btn-class="J-dot-drill-chart" add-class="\'dot-guide-drill-chart\'"></div>\r\n                            </div>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <!--end drag-target-->\r\n            </div>\r\n            <!-- 对比 -->\r\n            <div class="row axis" ng-if="!!viewMeta.compare_axis" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <span class="fl axis-head">\r\n                    <span class="axis-head-name" bo-text="\'chart.compare\' | translate"></span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'compare_axis\')"></i>\r\n                </span>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-click="axisHandle.remove(\'compare_axis\')">\r\n                        <i class="bdp-icon ico-handle-compare"></i>\r\n                        <span bo-text="\'chart.removeCompareAxis\' | translate"></span>\r\n                    </div>\r\n                    <div class="drag-target-inner yAxis" ng-model="compare_list" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'compare_axis\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension J-delete-target-id" id="dragCompare_axis" ui-sortable="sortAxisField" ng-model="viewMeta.compare_axis">\r\n                            <li ng-repeat="it in viewMeta.compare_axis track by $index" class="drag-item J-delete-item-cls" click-outside="it.show_formula = false" outside-active="it.show_formula" ng-class="{\'virtual-field\': it.data_type === \'virtual\'}">\r\n                                <div class="virtual-field-hint bdp-tooltip" ng-if="!hasShownVirtualFieldHint && it.data_type === \'virtual\'">\r\n                                    <i class="bdp-icon ico-cancel" ng-click="turnOffVirtualFieldHint();"></i>\r\n                                    <div class="bdp-tooltip-content">\r\n                                        <div class="content">\r\n                                            <p><span bo-text="\'chart.virtualFieldHint_1\' | translate"></span><br><span bo-text="\'chart.virtualFieldHint_2\' | translate"></span></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="data-tag" ng-class="{\'remove-icon-pr\': !(it.data_type === \'virtual\')}">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="it.show_formula = !it.show_formula">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl" ng-if="it.data_type != \'virtual\' || (viewMeta.chart_type == \'C200\' && viewMeta.tb_flip)"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.is_advanced_sort != 1 && it.compare_sort.type !==\'\' && it.compare_sort.type !== \'custom\' && isSortField({\'field\':it, axis:\'compare_axis\', \'index\': $index})" ng-class="fieldSortType({\'axis\': \'compare_axis\', \'index\': $index})"></i>\r\n                                            <span class="nowrap" ng-bind="it.name"></span>\r\n                                            <i class="inline fl nowrap granularity" ng-if="it.data_type === \'date\'">\r\n                                                ({{it.granularity|granularity}})\r\n                                            </i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'compare_axis\', it);" ng-if="it.data_type != \'virtual\'"></i>\r\n                                        <div class="data-formula" ng-if="it.data_type != \'virtual\' || (viewMeta.chart_type == \'C200\' && viewMeta.tb_flip)" ng-show="it.show_formula">\r\n                                            <div date-granularity ng-if="it.data_type === \'date\'" tb-id="tb_id" field="it" axis="\'compare_axis\'" set-granularity="setGranularity"></div>\r\n                                            <div dimension-compare-sort axis="compare_axis"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--drag target inner-->\r\n                </div>\r\n            </div>\r\n            <!-- 数值 普通 双轴左 散点X -->\r\n            <div class="row axis" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <div class="fl axis-head">\r\n                    <span class="axis-head-name" ng-if="viewMeta.chart_type == \'C280\'" bo-text="\'chart.scatterX\'|translate"></span>\r\n                    <span class="axis-head-name" ng-if="viewMeta.chart_type !== \'C280\'" bo-text="\'chart.valueAxis\'|translate"></span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'y\')" ng-if="!(viewMeta.chart_type === \'C250\') && !(viewMeta.show_y_axis_optional)"></i>\r\n                    <div class="axis-type" ng-if="viewMeta.chart_type === \'C250\'" double-yaxis-chart-type chart-ops="chart_ops" type="0" drill-level="drill_level" save="saveChartImmediate" warn-setting="warnSetting"></div>\r\n                </div>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-hide="viewMeta.show_y_axis_optional || viewMeta.chart_type == \'C280\'">\r\n                        <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.biaxialDiagram" guide-item="biaxialDiagram" guide-type="chart_edit" watch-status="personalInfo.chart_guide" btn-class="J-dot-biaxial-diagram" add-class="\'dot-guide-biaxial-diagram\'"></div>\r\n                            <div class="J-dot-biaxial-diagram" ng-click="axisHandle.add(\'y_optional\')">\r\n                                <i class="bdp-icon ico-handle-yaxis"></i>\r\n                                <span bo-text="\'chart.addYAxis\' | translate"></span>\r\n                            </div>\r\n                    </div>\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target-inner yAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'y\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension pr J-delete-target-id" id="dragY" ui-sortable="sortAxisField" ng-class="{\'not-sortable\':viewMeta.chart_type == \'C280\'}" ng-model="viewMeta.y">\r\n                            <li ng-repeat="it in viewMeta.y" class="drag-item J-delete-item-cls" click-outside="it.show_formula = false" outside-active="it.show_formula" ng-class="{\'virtual-field\': it.data_type === \'virtual\', \'not-sortable\': it.data_type === \'virtual\'}" mask-guide ng-mg-if="guideApi.timePredicted && chart_ops.meta.level[drill_level].chart_type == \'C220\' && viewMeta.x && viewMeta.x.length == 1 && viewMeta.x[0].data_type == \'date\'" ng-mg-key="timePredicted">\r\n                                <div class="data-tag" ng-class="{\'remove-icon-pr\': !(it.data_type === \'virtual\')}">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="showFormula(it)" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                            <i class="fl bdp-icon ico-filter-white" ng-if="it.post_filter && it.post_filter.enabled != 0"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.is_advanced_sort == 0 && isSortField({\'field\':it, axis:\'y\'}) && viewMeta.sort.axis === \'y\'" ng-class="fieldSortType()"></i>\r\n                                            <span class="nowrap nick-name" ng-bind="it.nick_name" ng-if="it.nick_name != undefined && it.nick_name != \'\'"></span>\r\n                                            <span class="nowrap" title="" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                            <i data-total="it.aggregator" ng-if="it.aggregator != undefined && !it.nick_name" class="inline fl aggr-name nowrap" title="">{{setAdvanceAggregatorName(it)}}</i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'y\', it);" ng-if="!(it.data_type === \'virtual\')"></i>\r\n                                        <div class="data-formula" ng-show="it.show_formula" field-formula="{data_type:it.data_type}"></div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                                <div class="field-tip dropdown-wrap" ng-if="(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\')">\r\n                                    <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--drag target inner-->\r\n                </div>\r\n            </div>\r\n            <!-- 数值 双轴右 -->\r\n            <div class="row axis" ng-if="viewMeta.show_y_axis_optional" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <div class="fl axis-head">\r\n                    <span class="axis-head-name" bo-text="\'chart.valueAxis\'|translate"></span>\r\n                    <div class="axis-type" ng-if="viewMeta.chart_type === \'C250\'" double-yaxis-chart-type chart-ops="chart_ops" type="1" drill-level="drill_level" save="saveChartImmediate" warn-setting="warnSetting"></div>\r\n                </div>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-show="viewMeta.show_y_axis_optional" ng-click="axisHandle.remove(\'y_optional\')">\r\n                        <i class="bdp-icon ico-handle-yaxis"></i>\r\n                        <span bo-text="\'chart.removeYAxis\' | translate"></span>\r\n                    </div>\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target">\r\n                        <div class="drag-target-inner yAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'y_optional\\\')\'}">\r\n                            <ul class="drag-target-list drag-target-list-dimension J-delete-target-id" id="dragY_optional" ui-sortable="sortAxisField" ng-model="viewMeta.y_optional">\r\n                                <li ng-repeat="it in viewMeta.y_optional" class="drag-item J-delete-item-cls" ng-init="it.show_formula = false" click-outside="it.show_formula = false" outside-active="it.show_formula">\r\n                                    <div class="data-tag remove-icon-pr">\r\n                                        <span class="tag ui-select">\r\n                                            <span class="name" ng-click="showFormula(it)" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\r\n                                                <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                                <i class="fl bdp-icon ico-filter-white" ng-if="it.post_filter && it.post_filter.enabled != 0"></i>\r\n                                                <i class="fl bdp-icon ico-sort" ng-if="isSortField({\'field\':it, axis:\'y_optional\'}) && viewMeta.sort.axis === \'y\'" ng-class="fieldSortType()"></i>\r\n                                                <span class="nowrap" ng-bind="it.nick_name" ng-if="!!it.nick_name"></span>\r\n                                                <span class="nowrap" title="" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                                <i ng-if="it.aggregator != undefined && !it.nick_name" class="inline fl nowrap aggr-name" title="">{{setAdvanceAggregatorName(it)}}</i>\r\n                                            </span>\r\n                                            <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'y_optional\', it);"></i>\r\n                                            <div class="data-formula" ng-show="it.show_formula" field-formula="{data_type:it.data_type,yAxis:\'y_optional\'}"></div>\r\n                                        </span>\r\n                                    </div>\r\n                                    <!--end data-tag-->\r\n                                    <div class="field-tip dropdown-wrap" ng-if="(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\')">\r\n                                        <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <!--drag target inner-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 数值 散点Y -->\r\n            <div class="row axis" ng-if="viewMeta.chart_type == \'C280\'">\r\n                <div class="fl axis-head">\r\n                    <span class="axis-head-name" bo-text="\'chart.scatterY\'|translate"></span>\r\n                </div>\r\n                <div class="drag-target">\r\n                    <div class="drag-target-inner yAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'y_scatter\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension not-sortable J-delete-target-id" id="dragY_scatter" ui-sortable="sortAxisField" ng-model="viewMeta.y_scatter">\r\n                            <li ng-repeat="it in viewMeta.y_scatter" class="drag-item J-delete-item-cls" click-outside="it.show_formula = false" outside-active="it.show_formula">\r\n                                <div class="data-tag remove-icon-pr">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="showFormula(it)" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                            <i class="fl bdp-icon ico-filter-white" ng-if="it.post_filter && it.post_filter.enabled != 0"></i>\r\n                                            <span class="nowrap" ng-bind="it.nick_name" ng-if="!!it.nick_name"></span>\r\n                                            <span class="nowrap" title="" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                            <i ng-if="it.aggregator != undefined && !it.nick_name" class="inline fl aggr-name nowrap" title="">{{setAdvanceAggregatorName(it)}}</i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'y_scatter\', it);"></i>\r\n                                        <div class="data-formula" ng-show="it.show_formula" field-formula="{data_type:it.data_type, yAxis: \'y_scatter\'}"></div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                                <div class="field-tip dropdown-wrap">\r\n                                    <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--drag target inner-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--end chart args-->\r\n        <div class="chart-left-side" ng-class="{\'hide-color-setting\': !canSetColor(viewMeta.chart_type)}">\r\n            <div chart-filter></div>\r\n            <div class="color-setting-layer" chart-color-setting ng-show="canSetColor(viewMeta.chart_type)" ng-if="viewMeta.chart_type != \'C280\'"></div>\r\n            <div class="scatter-bubble-layer" ng-if="viewMeta.chart_type == \'C280\'" ng-controller="bubbleTabCtrl">\r\n                <hr class="split">\r\n                <div class="tab-hd clearfix">\r\n                    <a class="tab-hd-item" ng-click="tab.index = 0" ng-class="{active : tab.index == 0}" bo-text="\'color\'|translate"></a>\r\n                    <a class="tab-hd-item" ng-click="tab.index = 1" ng-class="{active : tab.index == 1}" bo-text="\'size\'|translate"></a>\r\n                </div>\r\n                <div class="tab-bd">\r\n                    <div class="tab-scatter-color" chart-color-setting ng-show="tab.index == 0"></div>\r\n                    <div class="tab-scatter-bubble" bubble-size ng-show="tab.index == 1"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <a class="toggle-nav drag-btn" resize-width-filter-list bo-title="\'dragResize\'|translate"></a>\r\n        <div id="chartBox">\r\n            <div chart-info-summary class="cursor-pointer chart-info-summary-icon">\r\n                <i class="bdp-icon ico-info-sign"></i>\r\n                <div class="dropdown-wrap chart-info-summary">\r\n                    <em class="arrow-up"></em>\r\n                    <div class="summary-content-wrap">\r\n                        <table class="chart-info-summary-content">\r\n                            <ul>\r\n                                <li class="label nowrap" bo-text="\'chart.dataUpdate\'|translate"></li>\r\n                                <li class="text">{{tb_update_time | date:\'yyyy-MM-dd HH:mm:ss\'}}</li>\r\n                            </ul>\r\n                            <ul ng-repeat="y in yAxis" ng-if="y.description">\r\n                                <li class="label nowrap">{{y.nick_name || y.name}}</li>\r\n                                <li class="text">{{y.description}}</li>\r\n                            </ul>\r\n                            <ul ng-repeat="x in xAxis" ng-if="x.description">\r\n                                <li class="label nowrap">{{x.nick_name || x.name}}</li>\r\n                                <li class="text">{{x.description}}</li>\r\n                            </ul>\r\n                            <ul ng-if="description">\r\n                                <li class="label nowrap" bo-text="\'chart.description\'|translate"></li>\r\n                                <li class="text">{{description}}</li>\r\n                            </ul>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div chart-inner-filter chartid="chartid" class="clearfix"></div>\r\n\r\n            <advance-sort chart-options="draw_chart_url.options" chart-meta="viewMeta" drill-level="drill_level" bdp-chart-obj="$bdpChart" save-chart-fun="saveChartImmediate()" chart-mode="edit"></advance-sort>\r\n\r\n            <a href="javascript:;" class="table-flip" ng-if="selected_type === \'C200\'" title="{{ \'chart.tableFlip\' | translate}}">\r\n                <i class="bdp-icon" ng-class="{\'ico-flip-ccw\':viewMeta.tb_flip,\'ico-flip-cw\':!viewMeta.tb_flip}"></i>\r\n            </a>\r\n            <a href="javascript:;" style="display: none" ng-click="revertSelection()" class="bdp-icon-wrap revert-selection J-revert-selection" ng-if="chartConfig.canSetSelectionAnalysis" bo-title="\'chart.reverSelection\' | translate">\r\n                <i class="bdp-icon ico-revert-selection"></i>\r\n            </a>\r\n            <div class="drill-crumbs-wrap"></div>\r\n            <div bdp-chart="draw_chart_url.options" display-mode="edit" data-options="draw_chart_url.options" data-lazy-loaded="draw_chart_url.lazyload" class="chart J_chart_box" ng-class="{\r\n                    \'cursor-crosshair\': inAddingMarkPoint,\r\n                    \'chart-table\':selected_type === \'C200\',\r\n                    \'chart-canvas-table\': selected_type === \'C200\',\r\n                    \'chart-funnel overflow-hidden\':selected_type === \'C330\',\r\n                    \'show-datalabels\': viewMeta.show_datalabels == true\r\n                }"></div>\r\n        </div>\r\n        <div class="chart-main-mask" ng-if="chartMainMask"></div>\r\n    </div>\r\n    <!--end chart-main-->\r\n    <div class="chart-right J-chart-right" chart-config></div>\r\n    <!--end chart-right-->\r\n    <div class="chart-type-tip">\r\n        <em class="arrow"></em>\r\n        <p class="chart-type-name">{{chartTypeConfigMesg.name}}</p>\r\n        <p ng-if="chartTypeConfigMesg.showCombination.length == 0">\r\n            <span>{{chartTypeConfigMesg.showDimension}}</span>\r\n            <span ng-if="chartTypeConfigMesg.dimension == \'only0\' || chartTypeConfigMesg.dimension == \'onlyOne\' || chartTypeConfigMesg.dimension == \'0orOne\'" bo-text="\'chart_type_tip.dimension\'|translate"></span>\r\n            <span ng-if="chartTypeConfigMesg.dimension != \'only0\' && chartTypeConfigMesg.dimension != \'onlyOne\' && chartTypeConfigMesg.dimension != \'0orOne\'" bo-text="\'chart_type_tip.dimensions\'|translate"></span>\r\n            <span ng-if="chartTypeConfigMesg.type === \'C271\' || chartTypeConfigMesg.type === \'C272\'">(<span bo-text="\'chart_type_tip.administrativeRegion\'|translate"></span>)</span>\r\n            <span ng-if="chartTypeConfigMesg.needComparison">(<span bo-text="\'chart_type_tip.enableComparison\'|translate"></span>)</span>\r\n        </p>\r\n        <p ng-if="chartTypeConfigMesg.showCombination.length == 0">\r\n            <span>{{chartTypeConfigMesg.showMetric}}</span>\r\n            <span bo-text="\'chart_type_tip.metrics\'|translate"></span>\r\n        </p>\r\n        <p ng-if="chartTypeConfigMesg.showCombination.length > 0">{{chartTypeConfigMesg.showCombination[0]}}\r\n            <span ng-if="chartTypeConfigMesg.needComparison">(<span bo-text="\'chart_type_tip.enableComparison\'|translate"></span>)</span>\r\n        </p>\r\n        <p ng-if="chartTypeConfigMesg.showCombination.length > 0">{{chartTypeConfigMesg.showCombination[1]}}</p>\r\n    </div>\r\n    <div class="guide guide-chart-edit" ng-show="show_chart_edit_guide">\r\n        <div class="guide-switch-ds">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-up"></em>\r\n                <span bo-text="\'chart.switchDs\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-chart-field">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-down"></em>\r\n                <span bo-text="\'chart.fieldList\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-chart-axis">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-down"></em>\r\n                <span bo-text="\'chart.dragAxisTip\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-chart-title">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-down"></em>\r\n                <span bo-text="\'chart.modifyChartName\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-chart-filter">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-down"></em>\r\n                <span bo-text="\'chart.addFilter\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-switch-type">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-right"></em>\r\n                <span bo-text="\'chart.switchChartTypeTip\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-chart-setting">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip">\r\n                <em class="arrow arrow-right"></em>\r\n                <span bo-text="\'chart.settingsTip\' | translate"></span>\r\n            </div>\r\n        </div>\r\n        <div class="guide-draw-chart">\r\n            <div class="guide-opacity-bg"></div>\r\n            <div class="guide-tip" bo-text="\'chart.renderChartTip\'|translate"></div>\r\n        </div>\r\n    </div>\r\n    <div class="guide guide-add-to-axis" ng-if="add_to_axis_guide">\r\n        <div class="guide-opacity-bg"></div>\r\n        <div class="guide-tip">\r\n            <em class="arrow arrow-down"></em>\r\n            <span bo-text="\'chart.axisTip\' | translate"></span>\r\n        </div>\r\n    </div>\r\n    <div class="guide guide-select-chart-type" ng-if="select_chart_type_guide">\r\n        <div class="guide-opacity-bg"></div>\r\n        <div class="guide-tip">\r\n            <em class="arrow arrow-up"></em>\r\n            <span bo-text="\'chart.selectType\' | translate"></span>\r\n        </div>\r\n    </div>\r\n    <div class="add-point-mask" ng-if="inAddingMarkPoint">\r\n        <div class="mask-left mask"></div>\r\n        <div class="mask-top mask">\r\n            <div bo-text="\'chart.addMarkPointTip\'|translate"></div>\r\n        </div>\r\n        <div class="mask-right mask"></div>\r\n    </div>\r\n</div>\r\n<div class="guide-video" ng-show="showGuideVideo" bindonce>\r\n    <div class="video-wrap J-guide-video slow-in">\r\n        <span class="video-close bdp-icon" bo-title="\'close\'|translate" ng-click="close_guide_video()">\r\n            <i class="bdp-icon ico-cancel-white"></i>\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<div class="hz-tip error hidden" id="dataOver">\r\n    <span></span>\r\n</div>\r\n\r\n<div ng-loading-gif ng-show="chartContentLoading"></div>'),
        e.put("/static/js/dashboard/tpl/chart-operate-more.html", '\n<div class="chart-operate-more bdp-icon-wrap J-dot-dash-edit" ng-class="{\'active is-show-wrap-bg\':more_show == true}" click-outside="more_show = false" outside-active="more_show" bo-title="\'more\'|translate" ng-click="setOperatorPos($event, child.meta.ct_id, item);" ng-mouseleave="setOperatorIndex(false,false,item);" data-ct-id="{{child.meta.ct_id}}">\n    <i class="bdp-icon ico-more"></i>\n    <ul bindonce ng-show="more_show" class="dropdown-wrap">\n        <li ng-if="permision.allowExporting && [\'C200\', \'C310\'].indexOf(child.meta.drillChartType) < 0 && !child.meta.split_compare && !child.meta.is_js_chart && chartOptMorePermission.exportingChart" export-img data-mode="dashboard" data-setting="{{child.meta.dash_setting}}" bo-text="\'dash.exportImg\'|translate" data-filename="{{child.meta.name}}" class="dropdown-item"></li>\n\n        <li ng-if="permision.allowExporting && global.exportDataSetting.is_export == 1 && (child.meta.type !== \'C500\' || (child.meta.type === \'C500\' && customChartEnableExportExcel)) && chartOptMorePermission.exportingExcel" data-charttype="{{child.meta.type}}" export-excel data-mode="dashboard" class="dropdown-item" bo-text="\'dash.exportExcel\'|translate"></li>\n        <li ng-if="!proj_share && permision.dashOperate && child.meta.property == 0 && chartOptMorePermission.moveChart" ng-click="move_chart()" class="dropdown-item" bo-text="\'dash.moveChart\'|translate"></li>\n        <li ng-if="!proj_share && permision.dashOperate  && child.meta.property == 0 && chartOptMorePermission.copyChart" ng-click="copy_chart()" class="dropdown-item" bo-text="\'dash.copyChart\'|translate"></li>\n        <li ng-if="!proj_share && permision.dashOperate  && child.meta.property == 0" ng-click="chartChain.open(child.meta)" class="pr chart-china-text dropdown-item" ng-class="{\'dropdown-item-disabled\': !child.meta.supportChain}">\n            <span bo-text="\'dash.chartLink\'|translate"></span>\n            <span class="del-chart-chain" ng-if="child.meta.chart_link.linked_chart_type == \'2\'" ng-click="chartChain.del($event,child.meta.ct_id)">\n                <i class="bdp-icon ico-trash"></i>\n            </span>\n        </li>\n        <li ng-if="!proj_share && permision.dashOperate && permision.showChartJump && child.meta.property == 0 && chartOptMorePermission.jumpChart" ng-click="chartDashJump.showDia(child.meta)" class="pr chart-china-text dropdown-item" ng-class="{\'dropdown-item-disabled\': !chartDashJump.checkSupport(child.meta)}">\n            <span bo-text="\'dash.dashChartJump\'|translate"></span>\n            <span class="del-chart-chain" ng-if="child.meta.chart_jump.can_jump == \'1\'" ng-click="chartDashJump.del($event, child.meta.ct_id)">\n                <i class="bdp-icon ico-trash"></i>\n            </span>\n        </li>\n\n        <li ng-if="!proj_share && permision.dashOperate && child.meta.property == 0" ng-click="del()" bo-text="\'remove\'|translate" class="dropdown-item"></li>\n    </ul>\n</div>'), e.put("/static/js/dashboard/tpl/chart-operate.html", '<div class="chart-operate" bindonce="i18nLoaded">\n    <a class="cursor-pointer bdp-icon-wrap J-revert-selection" style="display: none" ng-click="revertSelection()" bo-title="\'dash.revertSelection\' | translate">\n        <i class="bdp-icon ico-revert-selection"></i>\n    </a>\n    <a class="cursor-pointer bdp-icon-wrap chart-op-refresh" ng-click="refreshChart({type:\'refresh\'})" bo-title="\'dash.chartRefresh\' | translate" ng-if="chartOptPermission.refresh">\n        <i class="bdp-icon ico-refresh"></i>\n    </a>\n    <a class="bdp-icon-wrap chart-op-edit" ng-if="!proj_share && permision.dashOperate && child.meta.property == 0 && !isFullscreenMode && chartOptPermission.edit" ng-click="edit()" bo-title="\'edit\' | translate">\n        <i class="bdp-icon ico-edit"></i>\n    </a>\n    <a ng-if="canEnterFullScreen() && chartOptPermission.fullScreen" chart-full-screen chart-url="draw_chart_url" domid="child.dom_id" standard-items="dashStandardItems" class="chart-op-fs"></a>\n    <div chart-info-summary class="pr bdp-icon-wrap chart-info-summary-icon chart-op-sum" ng-if="chartOptPermission.summary">\n        <i class="bdp-icon ico-info-bold" ng-class="{\'active\': child.meta.refresh}"></i>\n        <div class="dropdown-wrap chart-info-summary">\n            <em class="arrow-up"></em>\n            <div class="summary-content-wrap">\n                <table class="chart-info-summary-content">\n                    <ul>\n                        <li class="label" style="width:{{width}}px" bo-text="\'dash.dataUpdate\'| translate"></li>\n                        <li class="text">{{tb_update_time | date:\'yyyy-MM-dd HH:mm:ss\'}}</li>\n                    </ul>\n                    <ul ng-if="child.meta.refresh">\n                        <li class="label" style="width:{{width}}px" bo-text="\'dash.upadateStatus\'| translate"></li>\n                        <li class="text" bo-text="\'dash.chartDataRefresh\' | translate"></li>\n                    </ul>\n                    <ul ng-repeat="y in yAxis" ng-if="y.description">\n                        <li class="label" title="{{y.nick_name || y.name}}">{{y.nick_name || y.name}}</li>\n                        <li class="text">{{y.description}}</li>\n                    </ul>\n                    <ul ng-repeat="x in xAxis" ng-if="x.description">\n                        <li class="label" title="{{x.nick_name || x.name}}">{{x.nick_name || x.name}}</li>\n                        <li class="text">{{x.description}}</li>\n                    </ul>\n                    <ul ng-if="description">\n                        <li class="label" bo-text="\'dash.chartRemark\'| translate"></li>\n                        <li class="text">{{description}}</li>\n                    </ul>\n                </table>\n            </div>\n        </div>\n    </div>\n    <a class="bdp-icon-wrap chart-warn-alert-icon chart-op-warn" ng-if="canSetWarnLine() && chartOptPermission.sort" ng-click="showSetWarningDialog()" bo-title="\'chart.warningSetting\'| translate">\n        <i class="bdp-icon ico-alarm-on" ng-class="{\'ico-alarm-active\': warnSwitchOn, \'ico-always-highlight\': warnSwitchOn}"></i>\n    </a>\n    <div dash-filter adv-date-list="child.meta.adv_date_list" chart-options="draw_chart_url[child.dom_id].options" opts="item.children[0]" ng-if="chartOptPermission.dashFilter">\n    </div>\n\n    <advance-sort chart-options="draw_chart_url[child.dom_id].options" chart-meta="child.meta" drill-level="drill_level" bdp-chart-obj="$bdpChart" chart-mode="dashboard"></advance-sort>\n    \n    <div operate-more data-chart-url="draw_chart_url[child.dom_id]" opts="item.children[0]" ng-hide="global.hideChartMore || (proj_share && child.meta.type == \'C500\')" ng-if="chartOptPermission.more"></div>\n</div>\n'),
        e.put("/static/js/dashboard/tpl/custom-chart-edit.html", '<div class="chart-edit-layer custom-edit-mode {{\'show-\' + curView + \'-view\'}}">\r\n    <div class="view-header J_view_header">\r\n        <a class="back-btn J-create-chart-ok-button" title="{{\'done\' | translate}}" ng-click="verifyChartArgs()">\r\n            <i class="bdp-icon ico-back"></i>\r\n            <!-- <span translate="done"></span> -->\r\n        </a>\r\n        <div class="view-header-seperate-line"></div>\r\n        <h2 class="text-left view-header-left-name ng-cloak">{{ "chart.edit" | translate}}</h2>\r\n        <div class="tab-nav" mask-guide ng-mg-if="needShowGuide && guideApi.customChartEditGuide == 0" ng-mg-key="customChartEditGuide" ng-mg-keyindex="0">\r\n            <span ng-click="changeView(\'data\')" ng-class="{active: curView !== \'develop\'}">{{ "chart.dataView" | translate}}</span>\r\n            <span ng-click="changeView(\'develop\')" ng-class="{active: curView === \'develop\'}" mask-guide ng-mg-if="needShowGuide && guideApi.customChartEditGuide == 3" ng-mg-key="customChartEditGuide" ng-mg-keyindex="3">{{ "chart.devView" | translate}}</span>\r\n        </div>\r\n    </div>\r\n    <div class="panel-data">\r\n        <div class="chart-left J_chart_left">\r\n        <div custom-chart-data-info class="J_chart_data_info"></div>\r\n        <div class="hd pr hd-field-wrap chart-right-margin J_field_search field-search-cover" ng-show="currentView">\r\n            <p class="hd-field-tip" translate="chart.field"></p>\r\n            <div class="query-box auto no-margin">\r\n                <input type="text" class="query-text" ng-input-text ng-model="query">\r\n            </div>\r\n            <div class="add pr">\r\n                <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.addChartField" guide-item="addChartField" guide-type="chart_edit" watch-status="personalInfo.chart_guide" btn-class="J-dot-add-chart-field" add-class="\'dot-guide-add-chart-field\'"></div>\r\n                \r\n                <div class="J-dot-add-chart-field" ng-click="newFieldTypeSelect = !newFieldTypeSelect" click-outside="newFieldTypeSelect = false" outside-active="newFieldTypeSelect">\r\n                    <a class="cursor-pointer bdp-icon-wrap" title="{{\'chart.addField\' | translate}}">\r\n                        <i class="bdp-icon ico-plus1"></i>\r\n                    </a>\r\n                    <ul class="field-type-select dropdown-wrap" ng-show="newFieldTypeSelect">\r\n                        <li class="dropdown-item" ng-click="createFieldFormula()" translate="chart.addFormulaField"></li>\r\n                        <li class="dropdown-item" ng-click="createFieldGroup()" translate="chart.addGroupField"></li>\r\n                        <li class="dropdown-item" ng-click="createFieldByML()" translate="ML_wd.btnRunModel" ng-if="permision.newTraining && !wsId"></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="bd chart-right-margin J_field_list" ng-show="currentView">\r\n            <ul class="field-list">\r\n                <li ng-repeat="field in field_list | query_fields:query" ng-class="{\'handler-more\':field.handler_more_show}" ng-mouseenter="field.justshowme = true" ng-mouseleave="field.justshowme = false" title="{{field.name}}">\r\n                    <div ng-click="show_edit = !show_edit" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},onStart:\'dragTbFunc(field)\',onStop:\'stopDragField()\'}" class="title nowrap {{field.data_type}}-title cursor-pointer" ng-class="{\'field-drag-title\': !chartMainMask}">\r\n                        <i ng-if="field.data_type===\'date\'" class="bdp-icon ico-triangle-right" ng-class="{\'ico-triangle-down\':show_edit}"></i>\r\n                        <i class="bdp-icon ico-type-{{field.ico_type}}" ng-class="{\'ico-type-{{field.ico_type}}-orange\':field.formula, \'-ml\': field.made_by_ml && field.formula}"></i>\r\n                        <span class="data-tag" field-set-tooltip="field" tooltip-placement="top-left" ng-if="tbType != \'public\'" ng-class="{\'border-bottom-5182E4\': (field.original_name != field.name || field.remark)}" ng-bind="field.name"></span>\r\n                        <span class="data-tag" ng-if="tbType == \'public\'" ng-bind="field.name"></span>\r\n                        <span class="field-handler display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type !== \'group\'">\r\n                            <div class="bdp-icon-wrap" title="{{\'more\' | translate}}" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)">{{\'edit\' | translate}}</li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')">{{\'sort\' | translate}}</li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)">{{\'remove\' | translate}}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.field_type === \'group\'" class="field-handler hover-show display-block" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <div class="bdp-icon-wrap" title="{{\'more\' | translate}}" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">\r\n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\r\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\r\n                                    <li class="dropdown-item" ng-click="modifyField(field)">{{\'edit\' | translate}}</li>\r\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid ,false, \'source\')">{{\'sort\' | translate}}</li>\r\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)">{{\'remove\' | translate}}</li>\r\n                                </ul>\r\n                            </div>\r\n                        </span>\r\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type != \'string\'" class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-click="modifyField(field)" ng-hide="field.made_by_ml" title="{{\'edit\' | translate}}">\r\n                                <i class="bdp-icon ico-edit"></i>\r\n                            </span>\r\n                            <span class="bdp-icon-wrap" ng-click="delNewField(field.name,field.fid)" title="{{\'remove\' | translate}}">\r\n                                <i class="bdp-icon ico-trash"></i>\r\n                            </span>\r\n                        </span>\r\n                        <span class="field-handler hover-show" ng-hide="guide == 2 && enterprise_type == 3">\r\n                            <span class="bdp-icon-wrap" ng-if="field.data_type == \'string\' && field.formula ==\'\'" title="{{\'sort\' | translate}}" ng-click="showEnumOrder(field.fid, false, \'source\')">\r\n                                <i class="bdp-icon ico-config-order hover-show"></i>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <ul ng-if="field.data_type == \'date\'" ng-show="show_edit" class="date-field ml20">\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'year\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="year"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'quarter\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="quarter"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'month\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="month">月</span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'week\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="week"></span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'day\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="day">日</span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'hour\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="hour">时</span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'minute\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="minute">分</span>\r\n                            </p>\r\n                        </li>\r\n                        <li class="cursor-pointer">\r\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\', scroll: false}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'second\\\')\',onStop:\'stopDragField()\'}">\r\n                                <i class="bdp-icon ico-type-3"></i>\r\n                                <span translate="second">秒</span>\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        </div>\r\n        <a class="toggle-nav drag-btn J-toggle-nav-chart-left chart-left-drag-btn" resize-width-fields-list title="{{\'dragResize\' | translate}}"></a>\r\n        <div class="chart-main">\r\n        <div class="chart-args">\r\n            <!-- 维度 -->\r\n            <div class="row axis" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <span class="fl axis-head" flash-guide ng-fg-if="needShowGuide && guideApi.customChartEditGuide == 1" ng-fg-key="customChartEditGuide" ng-fg-keyindex="1">\r\n                    <span class="axis-head-name">{{\'chart.dimension\' | translate}}</span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'x\')"></i>\r\n                </span>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-hide="!!viewMeta.compare_axis || viewMeta.chart_type == \'C280\' || viewMeta.chart_type == \'C340\'" ng-click="axisHandle.add(\'compare_axis\')">\r\n                        <i class="bdp-icon ico-handle-compare"></i>\r\n                        <span>{{ \'chart.addCompareAxis\' | translate }}</span>\r\n                    </div>\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target-inner xAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'x\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension" id="dragX" ui-sortable="sortAxisField" ng-model="viewMeta.x">\r\n                            <li ng-repeat="it in viewMeta.x" class="drag-item" ng-class="{\'not-sortable\': chart_ops.meta.level_fields.length > 1 && !$index && it.fid === chart_ops.meta.level_fields[drill_level].fid}" click-outside="it.show_formula = false" outside-active="it.show_formula" data-jqyoui-options="{appendTo:\'body\', scroll: false,animate:false,greedy:true, accept: \'.field-list .field-drag-title\'}" data-drop="true">\r\n                                <div class="data-tag remove-icon-pr">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)" ng-click="it.show_formula = !it.show_formula">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.sort.type !==\'\' && viewMeta.sort.type !== \'custom\' && viewMeta.sort.axis === \'x\' && viewMeta.sort.fid == it.fid && viewMeta.is_advanced_sort == 0 && isSortField({\'field\':it, axis:\'x\', index: $index})" ng-class="fieldSortType()"></i>\r\n                                            <span class="nowrap" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                            <span class="nowrap nick-name" ng-bind="it.nick_name" ng-if="it.nick_name != undefined && it.nick_name != \'\'"></span>\r\n                                            <i class="inline fl nowrap granularity" ng-if="it.data_type === \'date\'">\r\n                                                ({{it.granularity|granularity}})\r\n                                            </i>\r\n                                            <i class="inline fl nowrap granularity" ng-if="viewMeta.chart_type === \'C200\' && it.data_type === \'string\' && permision.tableImg">\r\n                                                ({{it.data_show_type|dataShowType}})\r\n                                            </i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'x\', it);"></i>\r\n                                        <div class="data-formula" ng-show="it.show_formula">\r\n                                            <div string-data-show-type ng-if="viewMeta.chart_type === \'C200\' && it.data_type === \'string\' && permision.tableImg" tb-id="currentView.tb_id" field="it" axis="\'x\'" set-data-show-type="setDataShowType"></div>\r\n                                             <div date-granularity ng-if="it.data_type === \'date\'" tb-id="currentView.tb_id" field="it" axis="\'x\'" set-granularity="setGranularity"></div>\r\n                                             <div dimension-compare-sort axis="x"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                                <div class="field-tip dropdown-wrap">\r\n                                    <span>{{it.name}}</span>\r\n                                </div>\r\n                            </li>\r\n                            <div class="pr display-inline-block" ng-if="enterprise_type == 3 && viewMeta.x && viewMeta.x.length > 0">\r\n                                <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.drillChart" guide-item="drillChart" guide-type="chart_edit" watch-status="personalInfo.chart_guide" btn-class="J-dot-drill-chart" add-class="\'dot-guide-drill-chart\'"></div>\r\n                            </div>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <!--end drag-target-->\r\n            </div>\r\n            <!-- 对比 -->\r\n            <div class="row axis" ng-if="!!viewMeta.compare_axis" ng-class="{\'multi-axis\':viewMeta.chart_type === \'C250\'}">\r\n                <span class="fl axis-head">\r\n                    <span class="axis-head-name">{{\'chart.compare\' | translate}}</span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'compare_axis\')"></i>\r\n                </span>\r\n                <div class="drag-target">\r\n                    <div class="y_operate" ng-click="axisHandle.remove(\'compare_axis\')">\r\n                        <i class="bdp-icon ico-handle-compare"></i>\r\n                        <span>{{ \'chart.removeCompareAxis\' | translate }}</span>\r\n                    </div>\r\n                    <div class="drag-target-inner yAxis" ng-model="compare_list" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'compare_axis\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension" id="dragCompare_axis" ui-sortable="sortAxisField" ng-model="viewMeta.compare_axis">\r\n                            <li ng-repeat="it in viewMeta.compare_axis track by $index" class="drag-item" click-outside="it.show_formula = false" outside-active="it.show_formula" ng-class="{\'virtual-field\': it.data_type === \'virtual\'}">\r\n                                <div class="virtual-field-hint bdp-tooltip" ng-if="!hasShownVirtualFieldHint && it.data_type === \'virtual\'">\r\n                                    <i class="bdp-icon ico-cancel" ng-click="turnOffVirtualFieldHint();"></i>\r\n                                    <div class="bdp-tooltip-content">\r\n                                        <div class="content">\r\n                                            <p>{{\'chart.virtualFieldHint_1\' | translate}} <br> {{\'chart.virtualFieldHint_2\' | translate}}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="data-tag" ng-class="{\'remove-icon-pr\': !(it.data_type === \'virtual\')}">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="it.show_formula = !it.show_formula">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl" ng-if="it.data_type != \'virtual\'"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.is_advanced_sort != 1 && it.compare_sort.type !==\'\' && it.compare_sort.type !== \'custom\' && isSortField({\'field\':it, axis:\'compare_axis\', \'index\': $index})" ng-class="fieldSortType({\'axis\': \'compare_axis\', \'index\': $index})"></i>\r\n                                            <span class="nowrap" ng-bind="it.name"></span>\r\n                                            <i class="inline fl nowrap granularity" ng-if="it.data_type === \'date\'">\r\n                                                ({{it.granularity|granularity}})\r\n                                            </i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'compare_axis\', it);" ng-if="!(it.data_type === \'virtual\')"></i>\r\n                                        <div class="data-formula" ng-if="it.data_type != \'virtual\'" ng-show="it.show_formula">\r\n                                            <div date-granularity ng-if="it.data_type === \'date\'" tb-id="currentView.tb_id" field="it" axis="\'compare_axis\'" set-granularity="setGranularity"></div>\r\n                                            <div dimension-compare-sort axis="compare_axis"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--drag target inner-->\r\n                </div>\r\n            </div>\r\n            <!-- 数值 -->\r\n            <div class="row axis">\r\n                <div class="fl axis-head" flash-guide ng-fg-if="needShowGuide && guideApi.customChartEditGuide == 2" ng-fg-key="customChartEditGuide" ng-fg-keyindex="2">\r\n                    <span class="axis-head-name">{{\'chart.valueAxis\' | translate}}</span>\r\n                    <i class="bdp-icon ico-edit batch-add-axis-btn" ng-click="batchOnDropAdd(\'y\')"></i>\r\n                </div>\r\n                <div class="drag-target">\r\n                    <!--x、y正常显示-->\r\n                    <div class="drag-target-inner yAxis" data-drop="true" data-jqyoui-options="{greedy:true, accept: \'.field-list .field-drag-title\', scroll: false}" data-jqyoui-droppable="{onDrop:\'onDropAdd(\\\'y\\\')\'}">\r\n                        <ul class="drag-target-list drag-target-list-dimension" id="dragY" ui-sortable="sortAxisField" ng-class="{\'not-sortable\':viewMeta.chart_type == \'C280\'}" ng-model="viewMeta.y">\r\n                            <li ng-repeat="it in viewMeta.y" class="drag-item" click-outside="it.show_formula = false" outside-active="it.show_formula" ng-class="{\'virtual-field\': it.data_type === \'virtual\', \'not-sortable\': it.data_type === \'virtual\'}">\r\n                                <div class="data-tag" ng-class="{\'remove-icon-pr\': !(it.data_type === \'virtual\')}">\r\n                                    <span class="tag ui-select">\r\n                                        <span class="name" ng-click="showFormula(it)" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\r\n                                            <i class="bdp-icon ico-triangle-down1 fl"></i>\r\n                                            <i class="fl bdp-icon ico-filter-white" ng-if="it.post_filter && it.post_filter.enabled != 0"></i>\r\n                                            <i class="fl bdp-icon ico-sort" ng-if="viewMeta.is_advanced_sort == 0 && isSortField({\'field\':it, axis:\'y\', index: $index}) && viewMeta.sort.axis === \'y\'" ng-class="fieldSortType()"></i>\r\n                                            <span class="nowrap nick-name" ng-bind="it.nick_name" ng-if="it.nick_name != undefined && it.nick_name != \'\'"></span>\r\n                                            <span class="nowrap" title="" ng-bind="it.name" ng-if="!it.nick_name"></span>\r\n                                            <i data-total="it.aggregator" ng-if="it.aggregator != undefined && !it.nick_name" class="inline fl aggr-name nowrap" title="">{{setAdvanceAggregatorName(it)}}</i>\r\n                                        </span>\r\n                                        <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeAxisAction($event, \'y\', it);" ng-if="!(it.data_type === \'virtual\')"></i>\r\n                                        <div class="data-formula" ng-show="it.show_formula" field-formula="{data_type:it.data_type}"></div>\r\n                                    </span>\r\n                                </div>\r\n                                <!--end data-tag-->\r\n                                <div class="field-tip dropdown-wrap" ng-if="(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\')">\r\n                                    <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--drag target inner-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!--end chart args-->\r\n        <div class="chart-left-side">\r\n            <div chart-filter></div>\r\n        </div>\r\n        <a class="toggle-nav drag-btn" resize-width-filter-list title="{{\'dragResize\'|translate}}"></a>\r\n        <div id="chartBox">\r\n            <div chart-info-summary class="cursor-pointer chart-info-summary-icon">\r\n                <i class="bdp-icon ico-info-sign"></i>\r\n                <div class="dropdown-wrap chart-info-summary">\r\n                    <em class="arrow-up"></em>\r\n                    <div class="summary-content-wrap">\r\n                        <table class="chart-info-summary-content">\r\n                            <tr>\r\n                                <td class="label nowrap" translate="chart.dataUpdate"></td>\r\n                                <td class="text">{{tb_update_time | date:\'yyyy-MM-dd HH:mm:ss\'}}</td>\r\n                            </tr>\r\n                            <tr ng-repeat="y in yAxis" ng-if="y.description">\r\n                                <td class="label nowrap">{{y.nick_name || y.name}}</td>\r\n                                <td class="text">{{y.description}}</td>\r\n                            </tr>\r\n                            <tr ng-repeat="x in xAxis" ng-if="x.description">\r\n                                <td class="label nowrap">{{x.nick_name || x.name}}</td>\r\n                                <td class="text">{{x.description}}</td>\r\n                            </tr>\r\n                            <tr ng-if="description">\r\n                                <td class="label nowrap" translate="chart.description"></td>\r\n                                <td class="text">{{description}}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div chart-inner-filter chartid="currentView.ct_id" class="clearfix" ng-if="currentView"></div>\r\n            \r\n            <advance-sort chart-options="draw_chart_url.options" chart-meta="viewMeta" drill-level="drill_level" bdp-chart-obj="$bdpChart" save-chart-fun="saveChartImmediate()" chart-mode="edit"></advance-sort>\r\n\r\n            <a href="javascript:;" class="table-flip" title="{{ \'chart.tableFlip\' | translate}}">\r\n                <i class="bdp-icon" ng-class="{\'ico-flip-ccw\':viewMeta.tb_flip,\'ico-flip-cw\':!viewMeta.tb_flip}"></i>\r\n            </a>\r\n            <div bdp-chart="draw_chart_url.options" display-mode="edit" data-options="draw_chart_url.options" data-lazy-loaded="draw_chart_url.lazyload" class="chart chart-table J_subchart"></div>\r\n        </div>\r\n        <div class="chart-main-mask" ng-if="chartMainMask"></div>\r\n        </div>\r\n        <div class="chart-right chart-config-container">\r\n            <h4 class="block-title" translate="chart.chartSetting"></h4>\r\n            <div class="block chart-title">\r\n                <div class="hd" translate="chart.name"></div>\r\n                <div class="bd">\r\n                    <input type="text" ng-model="chart_ops.name" class="input-text-block chart-ops-inp" ng-click="ifClearName($event)" ng-keydown="ifEnterDown($event)" ng-blur="saveAfterCheckDirty({not_need_redraw:true,only_refresh_data:false,closeDialog:false}, true)" placeholder="{{\'chart.untitledChart\'|translate}}" ng-disabled="selected_type === \'C310\'">\r\n                </div>\r\n            </div>\r\n            <div class="block no-shadow">\r\n                <div class="hd" translate="chart.description"></div>\r\n                <div class="bd">\r\n                    <textarea msd-elastic class="input-text-block chart-description" ng-model="chart_ops.description" ng-keyup="lazySaveChart({not_need_redraw:true,only_refresh_data:false},200, true);description=chart_ops.description"></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <h4 class="block-title" translate="chart.datasetSetting" ng-if="currentView"></h4>\r\n            <div class="block chart-inner-filter-level" chart-inner-filter-level opts="chart_ops" chartid="currentView.ct_id" save="saveChartImmediate" fields="field_list" current-view="currentView" ng-if="currentView">\r\n                <!-- 内置筛选 -->\r\n            </div>\r\n\r\n            <!-- <div plot-line></div> -->\r\n            <!-- <div chart-warning></div> -->\r\n\r\n            <div class="block statistic" ng-if="currentView">\r\n                <div class="hd block-header" translate="dash.advDash.tableSetting"></div>\r\n                <div class="bd block-body sub-block">\r\n                    <div table-statistic></div>\r\n                </div>\r\n                <div class="sub-block">\r\n                    <div class="hd mt10 block-header ng-scope">{{\'chart.mergeCell\'|translate}}</div>\r\n                    <input type="checkbox" ng-model="viewMeta.tb_merge_cell" ng-change="saveChartImmediate()">{{\'chart.mergeCell\'|translate}}\r\n                </div>\r\n            </div>\r\n            <div class="block top-chart-block show-item" ng-if="chart_ops.meta.level[drill_level].x.length || chart_ops.meta.level[drill_level].compare_axis.length">\r\n                <div class="hd block-header ng-scope" translate="chart.showItemNum"></div>\r\n                <div top-chart class="item-content"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="panel-develop show-fullview-{{curZoomView}}">\r\n        <div class="editor-block" ng-class="{\'show-editor-console\': showEditorConsole}">\r\n            <div class="block-hd">\r\n                <h4 class="title">{{ "editBlock" | translate}}</h4>\r\n                <span class="display-inline-block pd8" mask-guide ng-mg-if="needShowGuide && guideApi.customChartEditGuide == 4" ng-mg-key="customChartEditGuide" ng-mg-keyindex="4">\r\n                    <label for="lang-select" class="lang-label">{{ "language" | translate }}</label>\r\n                    <select id="lang-select" class="lang-select cursor-pointer" ng-model="chart_ops.rootMeta.custom_chart_setting.mode" ng-change="saveChartImmediate({\'only_redraw\': true})">\r\n                        <option value="vega">Vega</option>\r\n                        <option value="javascript">Javascript</option>\r\n                    </select>\r\n                </span>\r\n                <a class="display-inline-block" href="/platform/dev-document/_book/zi-ding-yi-tu-biao.html" target="_blank" title="{{\'chart.customChartHelp\'|translate}}">\r\n                    <span class="bdp-icon-wrap">\r\n                        <i class="bdp-icon ico-help-bold"></i>\r\n                    </span>\r\n                </a>\r\n                <i class="bdp-icon ico-enter-fullscreen-2 cursor-pointer" ng-if="curZoomView != \'editor\'" ng-click="zoomInView(\'editor\')"></i>\r\n                <i class="bdp-icon ico-exit-fullscreen-2 cursor-pointer" ng-if="curZoomView == \'editor\'" ng-click="zoomOut()"></i>\r\n            </div>\r\n            <div class="block-bd">\r\n                <div class="hint" ng-show="showCodeEditorHint">{{ "chart.codeEditorHint" | translate}}</div>\r\n                <div id="custom-code-editor" class="custom-editor-block"></div>\r\n<!--                 <div class="console-block">\r\n                    <div class="console-hd">\r\n                        <h4 class="title">Console</h4>\r\n                        <i class="bdp-icon ico-cancel cursor-pointer" ng-click="toggleEditorConsole()"></i>\r\n                    </div>\r\n                    <div id="console-message"></div>\r\n                </div> -->\r\n            </div>\r\n            <div class="custom-editor-ft">\r\n                <div class="left">\r\n                    <!-- <a class="bdp-btn-radius bdp-btn btn-toggle-console" ng-if="chart_ops.rootMeta.custom_chart_setting.mode == \'javascript\'" ng-click="toggleEditorConsole()">Console</a> -->\r\n                    <!-- <a class="bdp-btn-radius bdp-btn btn-insert-tpl" ng-click="insertVegaTpl()">{{ "chart.insertVegaTpl" | translate}}</a> -->\r\n                    <!-- <a class="bdp-btn-radius bdp-btn btn-format-code" ng-click="insertVegaTpl()">{{ "format" | translate}}</a> -->\r\n                </div>\r\n                <div class="right">\r\n<!--                     <label class="cursor-pointer">\r\n                        <input type="checkbox" ng-model="viewMeta.custom_chart_setting.autorun" ng-change="saveChartImmediate({only_redraw: true})" /> {{\'autorun\'|translate}}  \r\n                    </label> -->\r\n                    <a class="bdp-btn-radius bdp-btn-green btn-run-code" ng-click="runCode()" mask-guide ng-mg-if="needShowGuide && guideApi.customChartEditGuide == 5" ng-mg-key="customChartEditGuide" ng-mg-keyindex="5">{{ "run" | translate}}</a>\r\n                    <a class="bdp-btn-radius bdp-btn-blue2 btn-save-code" ng-click="saveCode()" mask-guide ng-mg-if="needShowGuide && guideApi.customChartEditGuide == 6" ng-mg-key="customChartEditGuide" ng-mg-keyindex="6">{{ "save" | translate}}</a>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n        <div class="exit-fullview-bar cursor-pointer" ng-if="curZoomView" ng-click="zoomOut()">\r\n            <i class="bdp-icon" ng-class="{\'ico-show-preview\': curZoomView == \'editor\', \'ico-show-editor\': curZoomView == \'preview\'}"></i>\r\n        </div>\r\n        <div class="preview-block">\r\n            <div class="block-hd">\r\n                <h4 class="title">{{ "preview" | translate}}</h4>\r\n                <div chart-inner-filter chartid="chartid" class="clearfix" ng-if="currentView"></div>\r\n                <i class="bdp-icon ico-enter-fullscreen-2 cursor-pointer" ng-if="curZoomView != \'preview\'" ng-click="zoomInView(\'preview\')"></i>\r\n                <i class="bdp-icon ico-exit-fullscreen-2 cursor-pointer" ng-if="curZoomView == \'preview\'" ng-click="zoomOut()"></i>\r\n            </div>\r\n            <div class="block-bd">\r\n                <div bdp-chart="draw_root_chart_url.options" display-mode="edit" data-options="draw_root_chart_url.options" data-lazy-loaded="draw_root_chart_url.lazyload" class="chart J_rootchart">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="hz-tip error hidden" id="dataOver">\r\n    <span></span>\r\n</div>\r\n\r\n<div ng-loading-gif ng-show="chartContentLoading"></div>\r\n\r\n<script id="vega-example-light" type="text/template">\r\n{\r\n  "data": [\r\n    {\r\n      "name": "table",\r\n      "source": "ds0",\r\n      "transform": [{"type": "pie", "field": "y0"}]\r\n    },\r\n    {\r\n      "name": "table_aggregate",\r\n      "source": "ds0",\r\n      "transform": [{"type": "aggregate", "fields": ["x0", "y0"], "ops": ["max", "max"], "as": ["x0", "max"]}]\r\n    },\r\n  ],\r\n   \r\n   "signals": [\r\n     {\r\n       "name": "sliceWidthRange",\r\n       "update": "[20, min(width, height)/3 + 50]",\r\n     },\r\n    {\r\n      "name": "hover",\r\n      "value": null,\r\n      "on": [\r\n        {"events": "arc:mouseover", "update": "datum"},\r\n        {"events": "arc:mouseout", "update": \'null\'}\r\n      ]\r\n    }\r\n  ],\r\n\r\n  "scales": [\r\n    {\r\n      "name": "r",\r\n      "type": "sqrt",\r\n      "domain": {"data": "table", "field": "y0"},\r\n      "zero": true,\r\n      "range": {\'signal\': "sliceWidthRange"}\r\n    },\r\n    {\r\n      "name": "color",\r\n      "domain": {"data": "table", "field": "x0"},\r\n      "type": "ordinal",\r\n      "range": {"scheme": "category20"}\r\n    }\r\n  ],\r\n\r\n  "legends": [\r\n    {\r\n      "entryPadding": 10,\r\n      "fill": "color", \r\n      "encode": {\r\n        "labels": {\r\n          "enter": {\r\n            "dx": 20,\r\n            "fill": {"value": "#333"}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n    \r\n  "marks": [\r\n    {\r\n      "type": "arc",\r\n      "from": {"data": "table"},\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"field": {"group": "width"}, "mult": 0.5},\r\n          "y": {"field": {"group": "height"}, "mult": 0.5},\r\n          "startAngle": {"field": "startAngle"},\r\n          "endAngle": {"field": "endAngle"},\r\n          "stroke": {"value": "#eee"},\r\n          "strokeWidth": {"value": 2},\r\n          "strokeOpacity": {"value": 1},        \r\n          "cursor": "pointer",\r\n        },\r\n        "update": {\r\n          "fill": {"scale": "color", "field": "x0"},\r\n          "fillOpacity": [\r\n            {"test": "datum === hover", "value": 0.8},\r\n            {"value": 1}\r\n          ],\r\n          "innerRadius": [\r\n            {"value": 50}\r\n           ],\r\n          "outerRadius": [\r\n            {"test": "datum === hover", "scale": "r", "field": "y0", "offset": 10},\r\n            {"scale": "r", "field": "y0"}\r\n           ],\r\n        }\r\n      }\r\n    }, \r\n    {\r\n      "type": "text",\r\n      "interactive": false,\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"signal": "width/2"},\r\n          "y": {"signal": "height/2 - 10"},\r\n          "fontWeight": {"value":"bold"},\r\n          "fontSize": {"value": 14},\r\n          "align": {"value": "center"}\r\n        },\r\n        "update": {\r\n          "fill": {"signal": "hover ? scale(\'color\', hover.x0) : \'#666\'"},\r\n          "text": {"signal": "hover ? hover.x0 : \'最大值\'"}\r\n        }\r\n      }\r\n    },\r\n    \r\n    {\r\n      "type": "text",\r\n      "interactive": false,\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"signal": "width/2"},\r\n          "y": {"signal": "height/2 + 14"},\r\n          "fill": {"value": "#666"},\r\n          "fontSize": {"value": 12},\r\n          "align": {"value": "center"}\r\n        },\r\n        "update": {\r\n          "text": {"signal": "format(hover ? hover.y0 : data(\'table_aggregate\')[0].max, \',\') "}\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n</script>\r\n<script id="vega-example-dark" type="text/template">\r\n{\r\n  "data": [\r\n    {\r\n      "name": "table",\r\n      "source": "ds0",\r\n      "transform": [{"type": "pie", "field": "y0"}]\r\n    },\r\n    {\r\n      "name": "table_aggregate",\r\n      "source": "ds0",\r\n      "transform": [{"type": "aggregate", "fields": ["x0", "y0"], "ops": ["max", "max"], "as": ["x0", "max"]}]\r\n    },\r\n  ],\r\n   \r\n   "signals": [\r\n     {\r\n       "name": "sliceWidthRange",\r\n       "update": "[20, min(width, height)/3 + 50]",\r\n     },\r\n    {\r\n      "name": "hover",\r\n      "value": null,\r\n      "on": [\r\n        {"events": "arc:mouseover", "update": "datum"},\r\n        {"events": "arc:mouseout", "update": \'null\'}\r\n      ]\r\n    }\r\n  ],\r\n\r\n  "scales": [\r\n    {\r\n      "name": "r",\r\n      "type": "sqrt",\r\n      "domain": {"data": "table", "field": "y0"},\r\n      "zero": true,\r\n      "range": {\'signal\': "sliceWidthRange"}\r\n    },\r\n    {\r\n      "name": "color",\r\n      "domain": {"data": "table", "field": "x0"},\r\n      "type": "ordinal",\r\n      "range": {"scheme": "set3"}\r\n    }\r\n  ],\r\n\r\n  "legends": [\r\n    {\r\n      "entryPadding": 10,\r\n      "fill": "color", \r\n      "encode": {\r\n        "labels": {\r\n          "enter": {\r\n            "fill": {"value": "#fff"}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n    \r\n  "marks": [\r\n    {\r\n      "type": "arc",\r\n      "from": {"data": "table"},\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"field": {"group": "width"}, "mult": 0.5},\r\n          "y": {"field": {"group": "height"}, "mult": 0.5},\r\n          "startAngle": {"field": "startAngle"},\r\n          "endAngle": {"field": "endAngle"},\r\n          "stroke": {"value": "#fff"},\r\n          "strokeWidth": {"value": 2},\r\n          "strokeOpacity": {"value": 1},\r\n        },\r\n        "update": {\r\n          "fill": {"scale": "color", "field": "x0"},\r\n          "innerRadius": [\r\n            {"value": 50}\r\n           ],\r\n          "outerRadius": [\r\n            {"test": "datum === hover", "scale": "r", "field": "y0", "offset": 10},\r\n            {"scale": "r", "field": "y0"}\r\n           ],\r\n        }\r\n      }\r\n    }, \r\n    \r\n    {\r\n      "type": "text",\r\n      "interactive": false,\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"signal": "width/2"},\r\n          "y": {"signal": "height/2 - 10"},\r\n          "fontWeight": {"value":"bold"},\r\n          "fontSize": {"value": 14},\r\n          "align": {"value": "center"}\r\n        },\r\n        "update": {\r\n          "fill": {"signal": "hover ? scale(\'color\', hover.x0) : \'#fff\'"},\r\n          "text": {"signal": "hover ? hover.x0 : \'最大值\'"}\r\n        }\r\n      }\r\n    },\r\n    \r\n    {\r\n      "type": "text",\r\n      "interactive": false,\r\n      "encode": {\r\n        "enter": {\r\n          "x": {"signal": "width/2"},\r\n          "y": {"signal": "height/2 + 14"},\r\n          "fill": {"value": "#fff"},\r\n          "fontSize": {"value": 12},\r\n          "align": {"value": "center"}\r\n        },\r\n        "update": {\r\n          "text": {"signal": "format(hover ? hover.y0 : data(\'table_aggregate\')[0].max, \',\') "}\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n\r\n</script>\r\n\r\n'),
        e.put("/static/js/dashboard/tpl/dash-edit.html", '<div ng-if="!global.showMobLayout" id="J_dashEditView" class="dash-edit-content-view" ng-class="{\'add-chart-ref\':newChartFunc.showHandlers}" bindonce="i18nLoaded">\n        \n    <div class="dash-title-wrap view-header-wrap" ng-hide="dashEditMode">\n        <div class="clearfix dash-title view-header">\n            <h2>{{dashTitle}}</h2>\n            <div class="btn-layer" ng-if="!dashFullscreen && permision.dashEdit && property == 0 && !isThirdIframeMobile.type">\n                \n                <a ng-if="!proj_share && !dashEditMode && !(enterprise_type == 5 || enterprise_type == 6)" class="dash-add-item-btn" flash-guide ng-fg-if="dashStandardItems.length > 0 && guideApi.addChartGuide == 1" ng-fg-key="addChartGuide">\n                    <i class="bdp-icon ico-add-chart" ng-click="addItem()"></i>\n                    <span class="btn-layer-opt" ng-click="addItem()">\n                        <span bo-text="\'dash.addChart\' | translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down" ng-if="dashStandardItems.length > 0" ng-click="btn_layer.show_addchart_opt = !btn_layer.show_addchart_opt" click-outside="btn_layer.show_addchart_opt = false" outside-active="btn_layer.show_addchart_opt"></i>\n                    <ul class="dropdown-wrap" ng-show="btn_layer.show_addchart_opt">\n                        <li class="dropdown-item" ng-click="newChartFunc.editState(true)">\n                            <i class="bdp-icon ico-designate"></i>\n                            <span bo-text="\'dash.createChartSelctPos\'|translate"></span>\n                        </li>\n                    </ul>\n                </a>\n                <div class="display-inline-block pr">\n                    <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.design" guide-item="design" guide-type="dash_edit" watch-status="personalInfo.dashboard_guide" btn-class="J-dot-design" add-class="\'dot-guide-design\'"></div>\n                    \n                    <a ng-if="!proj_share && !dashEditMode && !(enterprise_type == 5 || enterprise_type == 6)" ng-click="makeDashEdit(true)" ng-if="permision.dashEdit && property == 0" class="J-design-button J-dot-design">\n                        <i class="bdp-icon ico-edit-layout"></i>\n                        <span class="btn-layer-opt">\n                            <span bo-text="\'design\' | translate"></span>\n                            <span class="btn-layer-hover-line"></span>\n                        </span>\n                    </a>\n                </div>\n\n                <a ng-if="!dashEditMode && !permision.outerShare">\n                    <i class="bdp-icon ico-fullscreen-2" ng-click="enterFullScreen(false)"></i>\n                    <span class="btn-layer-opt" ng-click="enterFullScreen(false)">                \n                        <span bo-text="\'dash.fullscreen\' | translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down" ng-click="btn_layer.show_presentation_mode = !btn_layer.show_presentation_mode" click-outside="btn_layer.show_presentation_mode = false" outside-active="btn_layer.show_presentation_mode"></i>\n                    <ul class="dropdown-wrap dash-display-mode-list J_dashboard_presentation" ng-show="btn_layer.show_presentation_mode">\n                        <li class="dropdown-item" ng-click="enterFullScreen(true)">\n                            <i class="bdp-icon ico-presentation-mode"></i>\n                            <span bo-text="\'dash.presentationMode\' | translate"></span>\n                        </li>\n                    </ul>\n                </a>\n                \n                <social-share ng-if="permision.dashEdit && property == 0 && permision.outerShare" outer-share-info="outer_share_info" dash-selected="currDash.dashSelected" dash-title="dashTitle"></social-share>\n\n                <a class="more-btn" ng-if="!dashEditMode" ng-click="btn_layer.show_more_btn = !btn_layer.show_more_btn" click-outside="btn_layer.show_more_btn = false" outside-active="btn_layer.show_more_btn">\n                    <i class="bdp-icon ico-more"></i>\n                    <ul class="dropdown-wrap dash-more-list J_dashboard_more_btn" ng-show="btn_layer.show_more_btn">\n                        <li class="dropdown-item global-filter-set" ng-if="!proj_share && dashSelected" global-filter-set original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" dash-standard-items="dashStandardItems" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" draw_chart_url="draw_chart_url" bo-text="\'dash.globalFilter\' | translate"></li>\n                        <li bo-if="permision.allowExporting" export-dashboard ng-click="showExportDialog(\'img\')" class="dropdown-item dash-add-item-btn" bo-text="\'dash.exportDashboard\' | translate"></li>\n                        <li bo-if="permision.allowExporting" export-dashboard ng-click="showExportDialog(\'pdf\')" class="dropdown-item dash-add-item-btn" bo-text="\'dash.exportDashPdf\' | translate"></li>\n                    </ul>\n                </a>\n            </div>\n            <div class="mobile-dash-list" ng-if="isThirdIframeMobile.type" ng-click="showThirdIframeDshList()">\n                <i class="icon-third-back"></i>\n            </div>\n        </div>\n        <div class="clearfix dash-title view-header designate-header" ng-class="{\'fixed-width\':dashLayoutInfo.fixed_width}" ng-if="newChartFunc.showHandlers">\n            <h2 bo-text="\'dash.createChartSelctPos\'|translate"></h2>\n            <div class="btn-layer designate-btn">\n                <a href="javascript:;" class="bdp-icon ico-f-close" ng-click="newChartFunc.editState(false)"></a>\n            </div>\n        </div>\n    </div>\n    \n    <div class="view-header dash-edit-wrapper clearfix" ng-if="dashEditMode">\n        <h3 class="design-title" bo-text="\'dash.designDashboard\' | translate"></h3>\n        <div class="btn-layer">\n            <div class="item design-mob" ng-if="dashLayoutInfo.layout_style == 2">\n                <a ng-click="setMobLayout(true)">\n                    <i class="bdp-icon ico-mobile"></i>\n                    <span class="btn-layer-opt">\n                        <span bo-text="\'dash.dashModeMob\'|translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                </a>\n            </div>\n            <div class="item">\n                <div class="view-header-seperate-line" ng-if="dashLayoutInfo.layout_style == 2"></div>\n                <a class="make-dash-edit-done" ng-click="makeDashEdit(false)">\n                    <i class="bdp-icon ico-ok-blue"></i>\n                    <span class="btn-layer-opt">\n                        <span bo-text="\'done\' | translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                </a>\n            </div>\n        </div>\n        <div class="block" ng-if="dashLayoutInfo.layout_style != 2 && !dashLayoutInfo.id">\n            <div class="hd" bo-text="\'dash.layoutSetting\'|translate"></div>\n            <div class="bd">\n                <ul>\n                    <li>\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.show_block" ng-change="dash.modify(\'show_block\')">\n                            <span bo-text="\'dash.showElementBorder\'|translate"></span>\n                        </label>\n                    </li>\n                    <li>\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.fixed_width" ng-change="dash.modify(\'fixed_width\')">\n                            <span bo-text="\'dash.fixedWidth\'|translate"></span>\n                        </label>\n                    </li>\n                    \n                </ul>\n            </div>\n        </div>\n        <div class="block ml16" ng-if="!dashLayoutInfo.id">\n            <div class="view-header-seperate-line"></div>\n            <span class="setting-tip mr16" bo-text="\'dash.designTip1\'|translate"></span>\n        </div>\n        <div class="block ml16" ng-if="dashLayoutInfo.dash_setting" ng-show="dash.canSetTitle()">\n            <div class="view-header-seperate-line"></div>\n            <div class="hd" bo-text="\'dash.displayProperty\' | translate"></div>\n            <div class="bd">\n                <ul>\n                    <li ng-show="dash.canSetTitle()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_title" ng-change="dash.modify(\'title\')">\n                            <span bo-text="\'dash.showTitle\' | translate"></span>\n                        </label>\n                    </li>\n                    <li ng-show="dash.canSetLegend()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_legend" ng-change="dash.modify(\'legend\')">\n                            <span bo-text="\'dash.showLegend\' | translate"></span>\n                        </label>\n                    </li>\n                    <li ng-show="dash.canSetAxis()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_axis" ng-change="dash.modify(\'axis\')">\n                            <span bo-text="\'dash.showAxis\' | translate"></span>\n                        </label>\n                    </li>\n                    <li ng-show="dash.canSetDataLabels()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_datalabels" ng-change="dash.modify(\'datalabels\')">\n                            <span bo-text="\'dash.showDataLabels\' | translate"></span>\n                        </label>\n                    </li>\n                    <li ng-show="dash.canSetTotal()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_total" ng-change="dash.modify(\'total\')">\n                            <span bo-text="\'dash.showTotal\' | translate"></span>\n                        </label>\n                    </li>\n                    <li ng-show="dash.canSetNavigator()">\n                        <label>\n                            <input type="checkbox" ng-model="dashLayoutInfo.dash_setting.show_navigator" ng-change="dash.modify(\'navigator\')">\n                            <span bo-text="\'dash.showNavigator\' | translate"></span>\n                        </label>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class="block dash-border ml16" ng-show="dashLayoutInfo.ct_id && !dashLayoutInfo.show_block">\n            <div class="view-header-seperate-line"></div>\n            <div class="hd" bo-text="\'border\'|translate"></div>\n            <div class="bd">\n                <a class="bdp-icon-wrap" ng-class="{\'active\':dashLayoutInfo.dash_setting.border_null}" ng-click="dash.toggleBorder(\'null\')">\n                    <i class="bdp-icon ico-border-null"></i>\n                </a>\n                <a class="bdp-icon-wrap" ng-class="{\'active\':dashLayoutInfo.dash_setting.border_top}" ng-click="dash.toggleBorder(\'top\')">\n                    <i class="bdp-icon ico-border-top"></i>\n                </a>\n                <a class="bdp-icon-wrap" ng-class="{\'active\':dashLayoutInfo.dash_setting.border_right}" ng-click="dash.toggleBorder(\'right\')">\n                    <i class="bdp-icon ico-border-right"></i>\n                </a>\n                <a class="bdp-icon-wrap" ng-class="{\'active\':dashLayoutInfo.dash_setting.border_bottom}" ng-click="dash.toggleBorder(\'bottom\')">\n                    <i class="bdp-icon ico-border-bottom"></i>\n                </a>\n                <a class="bdp-icon-wrap" ng-class="{\'active\':dashLayoutInfo.dash_setting.border_left}" ng-click="dash.toggleBorder(\'left\')">\n                    <i class="bdp-icon ico-border-left"></i>\n                </a>\n            </div>\n        </div>\n    </div><!--end view-header -->\n    <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" on-share-page="isThirdIframe" draw-chart-url="draw_chart_url"></div>\n    <div class="dash-wrapper" ng-class="{\n            \'create-chart-mode\': newChartFunc.showHandlers,\n            \'dash-one-block\':!dashLayoutInfo.show_block,\n            \'edit-mode\':dashEditMode,\n            \'dash-fixed-width\':dashLayoutInfo.fixed_width,\n            \'hide-block-watermark\':!dashLayoutInfo.show_block && global.watterMark, \n            \'under-workspace\':(workspaceList && workspaceList[\'dash\'].length > 0),\n            \'has-global-filter\': global.globalDashFilter.length > 0,\n            \'operate-none-gridster\': proj_share || !permision.dashOperate\n            }">\n        <div class="folder-empty" ng-if="noDashes">\n            <i class="bdp-icon ico-new-dashboard ico-no-opacity"></i>\n            <p class="mt8 font-text-tip" bo-text="\'dash.emptyDash\' | translate"></p>\n        </div>\n        <div id="J-export-dashboard-height" gridster="gridsterOpts">\n            <div ng-if="!selected.proj_share" ng-hide="dashInit.load">\n                <div ng-if="!proj_share && selected.dsh_id  && dashStandardItems.length == 0" ng-click="addItem()" class="empty-dash-add">\n                    <span>\n                        <i class="a"></i>\n                        <i class="b"></i>\n                    </span>\n                    <div class="textalign-center empty-dash-add-tip" bo-text="\'dash.addChart\' | translate"></div>\n                </div>\n                <ul id="J_gridster">\n                    <li gridster-item="item" class="J-export-img-elem-item" ng-repeat="item in dashStandardItems" row="item.row" col="item.col" size-x="item.sizeX" size-y="item.sizeY" ng-hide="chartdel[\'chart\'+current_item.meta.ct_id]" id="{{item.children[0].meta.ct_id}}" data-chart-type="{{item.children[0].meta.type}}" data-chart-id="{{item.children[0].meta.ct_id}}" ng-mouseleave="mouseleaveItem()" ng-class="{\n                            \'selected\':dashLayoutInfo.ct_id === item.children[0].meta.ct_id,\n                            \'border-left\':item.children[0].meta.dash_setting.border_left,\n                            \'border-right\':item.children[0].meta.dash_setting.border_right,\n                            \'border-top\':item.children[0].meta.dash_setting.border_top,\n                            \'border-bottom\':item.children[0].meta.dash_setting.border_bottom,\n                            \'no-border\':item.children[0].meta.dash_setting.border_null,\n                            \'no-title\': item.children[0].meta.type === \'C310\' || !item.children[0].meta.dash_setting.show_title,\n                            \'no-axis\': !item.children[0].meta.dash_setting.show_axis,\n                            \'no-legend\': !item.children[0].meta.dash_setting.show_legend,\n                            \'component-text\': item.children[0].meta.ct_id.indexOf(\'text_\') > -1,\n                            \'J-dot-dash-edit-wrap\': $first\n                            }">\n                        <div class="pr" ng-if="$index === 0 && enterprise_type == 3" ng-show="!dashEditMode" ng-class="{\'dot-guide-C310\': item.children[0].meta.type == \'C310\', \'dot-guide-C101\': item.children[0].meta.type == \'C101\'}"> \n                            <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.dashEdit" guide-item="dashEdit" guide-type="dash_edit" watch-status="personalInfo.dashboard_guide" btn-class="J-dot-dash-edit-wrap .J-dot-dash-edit" add-class="\'dot-guide-dash-edit\'"></div>\n                        </div>\n                        <div ng-repeat="child in item.children" class="chart-box J_chart_box">\n                            \n                            <!-- 注意ngIf增加了一个子作用域，所以$parent要增加一层 -->\n                            <div ng-if="child.meta.ct_id.indexOf(\'text_\') < 0">\n                                <div class="item-chart-title">\n                                    <div class="item-chart-title-bd nowrap J-item-chart-title-bd">\n                                        <div class="display-inline-block drill-tip" ng-if="child.meta.level_fields.length > 1">\n                                            <i class="bdp-icon ico-drill"></i>\n                                            <div class="dropdown-wrap drill-tip-bd">\n                                                <span class="nowrap" ng-repeat="drill_field in child.meta.level_fields">\n                                                    <i class="bdp-icon ico-slicesnav-arrow" ng-show="!$first"></i>\n                                                    {{drill_field.nick_name || drill_field.name}}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <i class="bdp-icon ico-linked" ng-if="child.meta.chart_link.linked_chart_type == \'2\'"></i>\n                                        <i class="bdp-icon ico-chart-jump" ng-if="child.meta.chart_jump.can_jump == \'1\'"></i>\n                                        <span class="no-margin">{{child.meta.name}}</span>\n                                        <div class="loading-wrap">\n                                            <div class="loader-inner ball-spin-fade-loader">\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                        <span class="filter-item" ng-repeat="it in child.meta.filter_list_inner" ng-if="it.range.length && !it.adv_type">\n                                            <em ng-if="it.data_type === \'date\' && !it.granularity" ng-hide="AllMap.indexOf( (it.range | format_date:child.meta.adv_date_list ) ) >= 0">\n                                                {{it.range | format_date:child.meta.adv_date_list}}\n                                                <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                            </em>\n                                            <em ng-if="it.data_type === \'date\' && it.granularity">{{it.range | inner_range_date_format:it}}\n                                                <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                            </em>\n                                            <em ng-if="it.data_type !== \'date\' && !it.inner_adv_type && it.range_type != 0">{{it.range | dash_sub_date:it}}</em>\n                                            <em ng-if="it.data_type !== \'date\' && ( (it.inner_adv_type && it.rangeNumber != 1) || it.range_type == 0 )">\n                                                <span ng-if="!it.nick_name">{{it.name}}</span>\n                                                <span ng-if="!!it.nick_name">{{it.nick_name}}</span>\n                                                <span bo-text="\'custom\' | translate"></span>\n                                            </em>\n                                            <em ng-if="it.data_type !== \'date\' && it.inner_adv_type && it.rangeNumber == 1 && it.range_type != 0 ">\n                                                {{it.rangeFirstField | dash_sub_date:it}}\n                                            </em>\n                                        </span>\n                                        <span class="filter-item" ng-repeat="it in child.meta.diff_filter track by $index">\n                                            <em>{{it}}</em>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class="item-chart gridster-no-drag J_item_chart" ng-class="{\'noscroll\':selected_type === \'C200\' || selected_type === \'C400\'}" id="{{child.dom_id}}" size-x="{{item.sizeX}}" size-y="{{item.sizeY}}">\n                                    <div class="drill-crumbs-wrap"></div> \n                                    <div bdp-chart="draw_chart_url[child.dom_id].options" display-mode="{{item.sizeX + \'*\' + item.sizeY}}" data-updatetime="{{child.meta.update_time}}" data-index="$parent.$parent.$index" data-domid="child.dom_id" data-lazy-loaded="draw_chart_url[child.dom_id].lazyload" class="chart J-export-img-elem-chart" ng-class="{\'chart-table\':selected_type === \'C200\',\n                                            \'chart-canvas-table\': selected_type === \'C200\',\n                                            \'chart-custom\': selected_type === \'C500\',\n                                            \'chart-funnel overflow-hidden\':selected_type === \'C330\',\n                                            \'show-datalabels\': child.meta.dash_setting.show_datalabels,\n                                            \'hide-total\':!child.meta.dash_setting.show_total}" data-ctid="{{draw_chart_url[child.dom_id].options.ct_id}}"></div>\n                                    <div class="loading-wrap" ng-if="item.children[0].meta.type === \'C310\'">\n                                        <div class="loader-inner ball-spin-fade-loader">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div chart-operate data-ct-id="{{child.meta.ct_id}}" class="gridster-no-drag"></div>\n                                <div ng-show="dashEditMode" class="base-loading-layer" ng-click="dash.editChartMeta(child)"></div>\n                                <div ng-if="newChartFunc.showHandlers" class="base-loading-layer bdp-pos-handler-layer" ng-mouseover="newChartFunc.moveHandlersTo($event, item)"></div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n\n                <div id="J_bdpPosHandlers" class="bdp-pos-handlers" ng-mousemove="newChartFunc._onMouseMove($event)" ng-mouseleave="newChartFunc._onMouseOut($event)" ng-click="newChartFunc.create()">\n                    <div class="bdp-pos-handler bdp-pos-handler-top">\n                        <i class="bdp-pos-handler-add bdp-icon ico-plus-blue ico-always-opacity"></i>\n                    </div>\n                    <div class="bdp-pos-handler bdp-pos-handler-bottom">\n                        <i class="bdp-pos-handler-add bdp-icon ico-plus-blue ico-always-opacity"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div ng-if="global.showMobLayout" class="dash-mode-mob dash-edit-content-view">\n    <div class="view-header dash-edit-wrapper clearfix">\n        <div class="block mr16">\n            <a class="back-web" ng-click="setMobLayout(false)">\n                <i class="bdp-icon ico-back1"></i>\n                <span bo-text="\'dash.backToWeb\'|translate"></span>\n            </a>\n        </div>\n        <div class="block ml16">\n            <div class="view-header-seperate-line"></div>\n            <span class="setting-tip mr16" bo-text="\'dash.designTip2\'|translate"></span>\n        </div>\n    </div>\n\n    <div class="dash-wrapper">\n        <ul ui-sortable="sortMobCharts" ng-model="dashStandardItems">\n            <li ng-repeat="item in dashStandardItems" class="gridster-item" ng-class="{\n                    \'selected\':dashLayoutInfo.ct_id === item.children[0].meta.ct_id,\n                    \'no-title\': item.children[0].meta.type === \'C310\' || !item.children[0].meta.dash_setting.show_title,\n                    \'no-axis\': !item.children[0].meta.dash_setting.show_axis,\n                    \'no-legend\': !item.children[0].meta.dash_setting.show_legend,\n                    \'component-text\': item.children[0].meta.ct_id.indexOf(\'text_\') > -1\n                    }">\n                <div ng-repeat="child in item.children" class="chart-box">\n                    <!-- 注意ngIf增加了一个子作用域，所以$parent要增加一层 -->\n                    <div ng-if="child.meta.ct_id.indexOf(\'text_\') < 0">\n                        <div class="item-chart-title">\n                            <div class="item-chart-title-bd nowrap">\n                                <span class="no-margin" ng-click="">{{child.meta.name}}</span>\n                                <div class="loading-wrap">\n                                    <div class="loader-inner ball-spin-fade-loader">\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="item-chart gridster-no-drag J_item_chart" ng-class="{\n                                \'noscroll\':selected_type === \'C200\' \n                                || selected_type === \'C400\'\n                            }" id="{{child.dom_id}}">\n                            <div class="drill-crumbs-wrap"></div>\n                            <div bdp-chart="draw_chart_url[child.dom_id].options" display-mode="{{item.sizeX + \'*\' + item.sizeY}}" data-updatetime="{{child.meta.update_time}}" data-index="$parent.$parent.$index" data-domid="child.dom_id" data-lazy-loaded="draw_chart_url[child.dom_id].lazyload" class="chart" ng-class="{\'chart-table\': selected_type === \'C200\',\n                                    \'chart-canvas-table\': selected_type === \'C200\',\n                                    \'chart-custom\': selected_type === \'C500\',\n                                    \'chart-funnel overflow-hidden\':selected_type === \'C330\',\n                                    \'show-datalabels\': child.meta.dash_setting.show_datalabels,\n                                    \'hide-total\':!child.meta.dash_setting.show_total}" data-ctid="{{draw_chart_url[child.dom_id].options.ct_id}}"></div>\n                            <div class="loading-wrap" ng-if="item.children[0].meta.type === \'C310\'">\n                                <div class="loader-inner ball-spin-fade-loader">\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                    <div></div>\n                                </div>\n                            </div>\n                        </div>\n                       \n                        <div ng-show="dashEditMode" class="base-loading-layer" ng-click="dash.editChartMeta(child)"></div>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n\n<div ng-loading-gif ng-show="dashLoading"></div>'),
        e.put("/static/js/dashboard/tpl/dash-filter.html", '<div bindonce click-outside="show_dash_filter = false;" outside-active="show_dash_filter" ng-class="{\'is-show-wrap-bg\': show_dash_filter}" class="dash-filter bdp-icon-wrap" ng-show="show_filter">\n    <i class="bdp-icon ico-filter-white fs-filter-icon"></i>\n    <i class="bdp-icon ico-filter" ng-class="{\'ico-filter-active\':isActive, \'ico-always-highlight\':isActive}" ng-click="handleFilterPos($event)"></i>\n    <div class="bd filter-i-w J_filterLayer" ng-show="show_dash_filter">\n        <dl class="filter-i nowrap" ng-class="{\'disable\':it.disabled}" ng-repeat="it in filter_list_inner">\n            <dt class="nowrap" title="{{it.name}}{{setAdvanceAggregatorName(it)}}" ng-if="!(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\') ">{{it.name}}{{setAdvanceAggregatorName(it)}}</dt>\n            <dt class="nowrap" title="{{it.nick_name}}" ng-if="(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\') ">{{it.nick_name}}</dt>\n            <dd click-outside="show_options[it.fid+it.uniq_id] = false" outside-active="show_options[it.fid+it.uniq_id]" ng-if="it.data_type !== \'date\' && it.data_type !== \'number\' && !it.hasOwnProperty(\'aggregator\') ">\n                <div class="filter-i-list-w">\n                    <p class="filter-i-name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="!innerFilterModule.isShowFilter(it.fid,it.uniq_id) " ng-click="innerFilterModule.getItemList(opts.meta,it);">\n                        <span ng-if="!fullscreen && it.range_type != 0" class="nowrap" title="{{it.range | dash_sub_date:it}}">\n                            {{it.range | dash_sub_date:it}}\n                        </span>\n                        <span ng-if="!fullscreen && it.range_type == 0 " class="nowrap" bo-title="\'custom\' | translate" bo-text="\'custom\' | translate"></span>\n                        <span ng-if="fullscreen && ( (it.is_defined && it.rangeNumber != 1) || it.range_type == 0 )" class="nowrap" bo-title="\'custom\' | translate" bo-text="\'custom\' | translate"></span>\n                        <span ng-if="fullscreen && it.is_defined && it.rangeNumber == 1 && it.range_type != 0" class="nowrap" title="{{it.range | sub_date:it}}">\n                            {{it.rangeFirstField | dash_sub_date:it}}\n                            <em ng-if="it.rangeFirstField && it.data_type == \'date\' && it.granularity == \'week\'">\n                                ({{it.rangeFirstField | weekFormat:it.rangeFirstField}})\n                            </em>\n                        </span>\n                        <span ng-if="fullscreen && !it.is_defined && it.range_type != 0 " class="nowrap" title="{{it.range | sub_date:it}}">\n                            {{it.range | sub_date:it}}\n                        </span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n\n                    <p class="filter-i-name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="innerFilterModule.isShowFilter(it.fid,it.uniq_id) && (it.rangeNumber != 1 || it.range_type == 0 )" ng-click="innerFilterModule.getItemList(opts.meta,it);">\n                        <span class="nowrap" bo-text="\'custom\' | translate"></span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n                    <p class="filter-i-name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="innerFilterModule.isShowFilter(it.fid,it.uniq_id) && it.rangeNumber == 1 && it.range_type != 0" ng-click="innerFilterModule.getItemList(opts.meta,it);">\n                        <span class="nowrap">\n                            {{it.rangeFirstField | dash_sub_date:it}}\n                        </span>\n                        <em ng-if="it.rangeFirstField && it.data_type == \'date\' && it.granularity == \'week\'">\n                            ({{it.rangeFirstField | weekFormat:it.rangeFirstField}})\n                        </em>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n                    <div class="filter-i-list" ng-show="show_options[it.fid+it.uniq_id] && !it.disabled" ng-style="adjustWidth[it.fid]">\n\n                        <div ng-loading-gif size="size-1x" placeholder="true" ng-show="showLoading"></div>\n                        <div class="query-box auto" ng-if="(innerFilterItems[it.fid].total <= 100 && innerFilterItems[it.fid].list.length > 20)">\n                            <input type="text" class="query-text" ng-input-text ng-keyup="filterQueryModule.enterToQuery({\'e\':$event,\'filter\':it,\'is_advance\':false,\'real_search\':false})" ng-model="queryKwd[it.fid]">\n                        </div>\n                        <div ng-if="innerFilterItems[it.fid].total > 100" ng-show="!showLoading" class="query-box">\n                            <input type="text" ng-model="queryKwd[it.fid]" ng-keyup="filterQueryModule.enterToQuery({\'e\':$event,\'filter\':it,\'is_advance\':false,\'real_search\':true})" class="query-text">\n                            <a class="bdp-icon-wrap query-btn" ng-click="filterQueryModule.query(it,false)">\n                                <i class="bdp-icon ico-search"></i>\n                            </a>\n                        </div>\n                        <ul>\n                            <li ng-show="!showLoading && it.show_all">\n                                <a class="cursor-pointer" ng-click="innerFilterModule.setInnerFilter({range:[],index:$index,fid:it.fid,type:it.data_type,uniq_id:it.uniq_id});" ng-class="{\'active\':it.range && it.range.length == 0 }" bo-text="\'all\'|translate"></a>\n                            </li>\n                            <li ng-show="!showLoading" ng-repeat="range in innerFilterItems[it.fid].list | filter:innerFilterItems[it.fid].keyword track by $index">\n                                <a class="nowrap cursor-pointer" title="{{range | sub_date:it}}" ng-class="{\'active\': it.range[0] == range }" ng-click="innerFilterModule.setInnerFilter({range:[range],index:$parent.$parent.$index,fid:it.fid,type:it.data_type,uniq_id:it.uniq_id})">\n                                    {{range | sub_date:it}}\n                                </a>\n                            </li>\n\n                            <li ng-if="innerFilterItems[it.fid].list.length == 0" ng-show="!showLoading" class="empty" style="padding:3px">\n                                <p bo-text="\'dash.noSearchResult\'| translate"></p>\n                            </li>\n                        </ul>\n                    </div>\n                </div><span class="filter-i-adv" ng-click="innerFilterModule.getItemList(opts.meta,it,innerFilterModule.openAdvanceModal);" bo-text="\'multiSelect\'| translate"></span>\n            </dd>\n\n            <dd click-outside="show_options[it.fid+it.uniq_id] = false" outside-active="show_options[it.fid+it.uniq_id]" ng-if="it.data_type === \'date\' && !it.hasOwnProperty(\'aggregator\')">\n                <div class="filter-i-list-w">\n                    <p class="filter-i-name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="it.granularity !== \'\'" ng-click="innerFilterModule.getItemList(opts.meta,it);">\n\n                        <span ng-if="!fullscreen" class="nowrap" title="{{it.range | dash_sub_date:it}}">\n                            {{it.range | dash_sub_date:it}}\n                            <em ng-if="it.range[0] && it.granularity == \'week\'">\n                                ({{it.range[0] | weekFormat}})\n                            </em>\n                        </span>\n                        <span ng-if="fullscreen && it.is_defined" class="nowrap" title="{{it.range | sub_date:it}}" bo-text="\'custom\' | translate"></span>\n                        <span ng-if="fullscreen && !it.is_defined" class="nowrap" title="{{it.range | sub_date:it}}">\n                            {{it.range | sub_date:it}}\n                            <em ng-if="it.range[0] && it.granularity == \'week\'">\n                                ({{it.range[0] | weekFormat}})\n                            </em>\n                        </span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n\n                    <p class="filter-i-name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="!it.granularity" ng-click="innerFilterModule.getItemList(opts.meta,it);">\n\n                        <span class="nowrap" ng-if="fullscreen" title="{{it.range | format_date:adv_date_list:it.name}}">\n                            {{it.range | format_date:adv_date_list:it.name}}\n                        </span>\n                        <span class="nowrap" ng-if="!fullscreen" title="{{it.range | format_date:adv_date_list}}">\n                            {{it.range | format_date:adv_date_list}}\n                        </span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n                    <div class="filter-i-list" ng-show="show_options[it.fid+it.uniq_id] && !it.disabled" ng-style="adjustWidth[it.fid]">\n                        \n                        <div ng-loading-gif size="size-1x" placeholder="true" ng-show="showLoading"></div>\n                        <div class="query-box auto" ng-if="(innerFilterItems[it.fid].total <= 100 && innerFilterItems[it.fid].list.length > 20)">\n                            <input type="text" class="query-text" ng-model="queryKwd[it.fid]" ng-input-text ng-keyup="filterQueryModule.enterToQuery({\'e\':$event,\'filter\':it,\'is_advance\':false,\'real_search\':false})">\n                        </div>\n                        <div ng-if="innerFilterItems[it.fid].total > 100" ng-show="!showLoading" class="query-box">\n                            <input type="text" ng-model="queryKwd[it.fid]" ng-keyup="filterQueryModule.enterToQuery({\'e\':$event,\'filter\':it,\'is_advance\':false,\'real_search\':true})" class="query-text">\n                            <a class="bdp-icon-wrap query-btn" ng-click="filterQueryModule.query(it,false)">\n                                <i class="bdp-icon ico-search"></i>\n                            </a>\n                        </div>\n\n                        <ul ng-if="!it.granularity" ng-show="!showLoading">\n                            <li>\n                                <a ng-class="{\'active\':it.range[0] == \'\' || it.range.length == 0}" ng-show="it.show_all" ng-click="innerFilterModule.setInnerFilter({range:[],index:$parent.$index,fid:it.fid,type:\'date\',uniq_id:it.uniq_id})" bo-text="\'dash.allTime\'| translate"></a>\n                            </li>\n                            <li ng-repeat="adv in adv_date_list">\n                                <a class="nowrap pointer" title="{{adv.name}}" ng-class="{\'active\':it.range[0] == adv.opt_id}" ng-click="innerFilterModule.setInnerFilter({range:[adv.opt_id],index:$parent.$index,fid:it.fid,type:\'date\',uniq_id:it.uniq_id})">{{adv.name}}</a>\n                            </li>\n                            <li>\n                                <a class="cursor-pointer" bo-title="\'dash.definedTimeRange\'| translate" ng-class="{\'active\':it.range.length == 2}" ng-click="innerFilterModule.showDatePicker($parent.$index,it.range,it.fid)" bo-text="\'dash.definedTimeRange\'| translate"></a>\n                            </li>\n                        </ul>\n\n                        <!--granularity not null-->\n                        <ul ng-if="it.granularity !== \'\'">\n                            <li ng-show="it.show_all">\n                                <a ng-class="{\'active\':it.range[0] == \'\'}" ng-show="it.show_all" ng-click="innerFilterModule.setInnerFilter({range:[],index:$parent.$index,fid:it.fid,type:\'date\',uniq_id:it.uniq_id})" bo-text="\'dash.allTime\'| translate"></a>\n                            </li>\n                            <li ng-if="it.granularity !== \'week\'" ng-repeat="range in innerFilterItems[it.fid].list | query_inner:innerFilterItems[it.fid].keyword:it.granularity track by $index">\n                                <a class="nowrap cursor-pointer" title="{{range | timestamp2LocaleDate:it.granularity}}" ng-click="innerFilterModule.setInnerFilter({range:[range],index:$parent.$parent.$index,fid:it.fid,type:it.data_type,uniq_id:it.uniq_id})">\n                                    {{range | timestamp2LocaleDate:it.granularity}}\n                                </a>\n                            </li>\n                            <li ng-if="it.granularity == \'week\'" ng-repeat="range in innerFilterItems[it.fid].list | query_inner:innerFilterItems[it.fid].keyword:it.granularity track by $index">\n                                <a class="nowrap cursor-pointer" title="{{range | sub_date:it}}({{range | weekFormat}})" ng-click="innerFilterModule.setInnerFilter({range:[range],index:$parent.$parent.$index,fid:it.fid,type:it.data_type,uniq_id:it.uniq_id})">\n                                    {{range | sub_date:it}}\n                                    <span ng-if="it.data_type == \'date\' && it.granularity == \'week\'">({{range | weekFormat}})</span>\n                                </a>\n                            </li>\n\n                        </ul>\n                    </div>\n                </div>\n            </dd>\n\n            <dd ng-if="it.data_type === \'number\' || ( it.data_type !=\'number\' && it.hasOwnProperty(\'aggregator\') ) " click-outside="show_options[it.fid+it.uniq_id] = false" outside-active="show_options[it.fid+it.uniq_id]">\n                <div class="filter-i-list-w number-filter-i-list">\n                    <p class="filter-i-name name" ng-class="{\'selected\': show_options[it.fid+it.uniq_id]}" ng-if="!innerFilterModule.isShowFilter(it.fid,it.uniq_id)" ng-click="innerFilterModule.getItemListForNumber(opts.meta,it);">\n                        <span ng-if="!fullscreen" class="nowrap" title="{{numberConditionFormatString[it.fid+it.uniq_id]}}">\n                            {{numberConditionFormatString[it.fid+it.uniq_id]}}\n                        </span>\n                        <span ng-if="fullscreen && (it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\') " class="nowrap" title="{{it.nick_name}}{{numberConditionFormatString[it.fid+it.uniq_id]}}">\n                            {{it.nick_name}}{{numberConditionFormatString[it.fid+it.uniq_id]}}\n                        </span>\n                        <span ng-if="fullscreen && !(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\') " class="nowrap" title="{{it.name}}{{setAdvanceAggregatorName(it)}}{{numberConditionFormatString[it.fid+it.uniq_id]}}">\n                            {{it.name}}{{setAdvanceAggregatorName(it)}}{{numberConditionFormatString[it.fid+it.uniq_id]}}\n                        </span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n                    <div class="filter-i-list" ng-style="adjustWidth[it.fid]" ng-show="show_options[it.fid+it.uniq_id]">\n                        \n                        <div ng-loading-gif size="size-1x" placeholder="true" ng-show="showLoading"></div>\n                        <div ng-show="!showLoading" class="select-box">\n                            <select ng-model="innerFilterItems[it.fid+it.uniq_id].numOpt" ng-options="opt.value as opt.text for opt in numberInnerFilterMap" ng-change="changeNumberOpt(opts.meta, it, innerFilterItems[it.fid+it.uniq_id].numOpt)"></select>\n                        </div>\n                        <ul ng-show="!showLoading">\n                            <li class="none-filter-range" ng-if="nullRange[it.fid+it.uniq_id]">无范围</li>\n                            <li ng-loading-gif size="size-1x" placeholder="true" ng-show="rangeLoading"></li>\n                            <li class="range range-all" ng-if="!nullRange[it.fid+it.uniq_id] && defaultRange[it.fid+it.uniq_id].length > 0 && innerFilterItems[it.fid+it.uniq_id].numOpt == -1">\n                                {{defaultRange[it.fid+it.uniq_id][0]}}~{{defaultRange[it.fid+it.uniq_id][1]}}\n                            </li>\n                            <li class="range" ng-if="!nullRange[it.fid+it.uniq_id] && defaultRange[it.fid+it.uniq_id].length == 0 && innerFilterItems[it.fid+it.uniq_id].numOpt != -1">\n                                <input type="number" ng-model="innerFilterItems[it.fid+it.uniq_id].numRange[0]">\n                            </li>\n                            <li class="range" ng-if="!nullRange[it.fid+it.uniq_id] && defaultRange[it.fid+it.uniq_id].length == 0 && innerFilterItems[it.fid+it.uniq_id].numOpt == 12" bo-text="\'field.to\' | translate"></li>\n                            <li class="range" ng-if="!nullRange[it.fid+it.uniq_id] && defaultRange[it.fid+it.uniq_id].length == 0 && innerFilterItems[it.fid+it.uniq_id].numOpt == 12">\n                                <input type="number" ng-model="innerFilterItems[it.fid+it.uniq_id].numRange[1]">\n                            </li>\n                        </ul>\n                        <div class="operator" ng-show="!showLoading">\n                            <button class="bdp-btn bdp-btn-ok" bo-text="\'ok\'|translate" ng-click="innerFilterModule.setInnerFilterForNumber({fid:it.fid,index:$index,uniq_id:it.uniq_id})"></button>\n                        </div>\n\n                    </div>\n                </div>\n            </dd>\n        </dl>\n\n        <div class="fullscreen-hide" ng-class="{\'filter-i-compare-title pt10\': filter_list_inner.length > 0}" ng-show="opts.meta.compareDateFilter.length > 0" bo-text="\'dash.compareDateFilter\' | translate"></div>\n\n        <dl class="filter-i nowrap" ng-class="{\'disable\':it.disabled}" ng-repeat="item in opts.meta.compareDateFilter">\n\n            <dt class="nowrap" title="{{item.name}}">{{item.name}}</dt>\n            <dd click-outside="show_options[item.uniq_id] = false" outside-active="show_options[item.uniq_id]">\n                <div class="filter-i-list-w">\n                    <p class="filter-i-name nowrap" ng-click="toggleCmpDropdown($event, item)">\n                        <span class="nowrap fullscreen-hide" title="{{item.customName || item.aggregatorName}}">{{item.customName || item.aggregatorName}}</span>\n                        <span class="nowrap dash-hide" title="{{item.customName || getCmpDefaultName(item)}}">{{item.customName || getCmpDefaultName(item)}}</span>\n                        <i class="bdp-icon ico-triangle-down arrow-down"></i>\n                    </p>\n                    <div class="filter-i-list" ng-show="show_options[item.uniq_id]">\n                        <ul>\n                            <li>\n                                <a href="javascript:;" title="{{item.aggregatorName}}" ng-click="compareDateChange(\'default\', item)" ng-class="{\'active\': !item.compareType || item.compareType == \'default\'}">\n                                    {{item.aggregatorName}}\n                                </a>\n                            </li>\n                            <li>\n                                <a href="javascript:;" bo-title="\'dash.customDate\' | translate" ng-click="compareDateChange(\'custom\', item)" ng-class="{\'active\': item.compareType == \'custom\'}" bo-text="\'dash.customDate\' | translate"></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </dd>\n\n        </dl>\n    </div>\n</div>'),
        e.put("/static/js/dashboard/tpl/dash-fullscreen.html", '<div class="dash-fullscreen-wrap display-device-{{fullDisplayDevice}} display-theme-{{fullDisplayTheme === 1 ? \'dark\' : \'light\'}}" bindonce="i18nLoaded">\n    <div class="dash-title-wrap view-header-wrap">\n        <div class="clearfix dash-title view-header">\n            <h2 ng-bind="dashTitle"></h2>\n            <div class="btn-layer">\n                <a class="full-display-setting" ng-click="show_display_theme = !show_display_theme" click-outside="show_display_theme = false" outside-active="show_display_theme">\n                    <span class="setting-label" bo-text="\'dash.displayTheme\' | translate"></span>\n                    <span class="btn-layer-opt">\n                        <span bo-text="fullDisplayTheme === 1 ? \'dash.darkTheme\' : \'dash.lightTheme\' | translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down"></i>\n                    <ul class="dropdown-wrap" ng-show="show_display_theme">\n                        <li class="dropdown-item" ng-click="setFullDisplayTheme(1)" bo-text="\'dash.darkTheme\' | translate"></li>\n                        <li class="dropdown-item" ng-click="setFullDisplayTheme(2)" bo-text="\'dash.lightTheme\' | translate"></li>\n                    </ul>\n                </a>\n                <a class="full-display-setting" ng-click="show_display_devices = !show_display_devices" click-outside="show_display_devices = false" outside-active="show_display_devices">\n                    <span class="setting-label" bo-text="\'dash.displayDevice\' | translate"></span>\n                    <span class="btn-layer-opt">\n                        <i class="bdp-icon ico-device ico-device-{{fullDisplayDevice}}"></i>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                    <i class="bdp-icon ico-triangle-down"></i>\n                    <ul class="dropdown-wrap" ng-show="show_display_devices">\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'pc\')">   \n                           <i bo-title="\'dash.pcDevice\' | translate" class="bdp-icon ico-device-pc"></i>\n                        </li>\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'projector\')">   \n                           <i bo-title="\'dash.projectorDevice\' | translate" class="bdp-icon ico-device-projector"></i>\n                        </li>\n                        <li class="dropdown-item" ng-click="setFullDisplayDevice(\'tv\')">\n                           <i bo-title="\'dash.tvDevice\' | translate" class="bdp-icon ico-device-tv"></i>\n                        </li>\n                    </ul>\n                </a>\n                <a ng-click="exitFullScreen();removeFullDisplayStyle()">\n                    <i class="bdp-icon ico-exit-fullscreen"></i>\n                    <span class="btn-layer-opt">\n                        <span bo-text="\'exitFullscreen\' | translate"></span>\n                        <span class="btn-layer-hover-line"></span>\n                    </span>\n                </a>\n            </div>\n        </div>\n    </div>\n    <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" draw_chart_url="draw_chart_url"></div>\n    <div class="dash-wrapper operate-none-gridster" ng-class="{\n        \'dash-one-block\':!dashLayoutInfo.show_block,\n        \'edit-mode\':dashEditMode,\n        \'dash-fixed-width\':dashLayoutInfo.fixed_width,\n        \'hide-block-watermark\':!dashLayoutInfo.show_block && global.watterMark, \n        \'under-workspace\':(workspaceList && workspaceList[\'dash\'].length > 0),\n        \'has-global-filter\': global.globalDashFilter.length > 0\n        }">\n\n        <div class="folder-empty" ng-if="noDashes">\n            <i class="bdp-icon ico-new-dashboard ico-no-opacity"></i>\n            <p class="font-text-tip" class="mt8" bo-text="\'dash.emptyDash\'|translate"></p>\n        </div>\n\n        <slick class="slider single-item" on-before-change="onSlickBeforeChange" id="dash-slider" draggable="false" lazy-load="ondemand" autoplay="false" autoplay-speed="10000" init-onload="true" data="dashPages" infinite="true" dots="false" append-arrows=".page-nav">\n            <div class="gridster-page" ng-repeat="dashPageItems in dashPages" gridster="gridsterOpts">\n                <div ng-if="!selected.proj_share" ng-hide="dashInit.load">\n                    <div ng-if="selected.dsh_id  && dashPageItems.length == 0" ng-click="addItem()" class="empty-dash-add">\n                        <span>\n                            <i class="a"></i>\n                            <i class="b"></i>\n                        </span>\n                        <div class="textalign-center empty-dash-add-tip" bo-text="\'dash.addChart\' | translate"></div>\n                    </div>\n                </div>\n                <ul>\n                    <li gridster-item="item" ng-repeat="item in dashPageItems" row="item.row" col="item.col" size-x="item.sizeX" size-y="item.sizeY" ng-hide="chartdel[\'chart\'+current_item.meta.ct_id]" id="{{item.children[0].meta.ct_id}}" class="no-border" data-chart-id="{{item.children[0].meta.ct_id}}" ng-mouseleave="mouseleaveItem()" ng-class="{\n                            \'selected\':dashLayoutInfo.ct_id === item.children[0].meta.ct_id,\n                            \'no-title\': item.children[0].meta.type === \'C310\' || !item.children[0].meta.dash_setting.show_title,\n                            \'no-axis\': !item.children[0].meta.dash_setting.show_axis,\n                            }">\n                        <div ng-repeat="child in item.children" class="chart-box J_chart_box">\n                            <!-- 注意ngIf增加了一个子作用域，所以$parent要增加一层 -->\n                            <div ng-if="child.meta.ct_id.indexOf(\'text_\') < 0">\n                                <div class="item-chart-title">\n                                    <div class="item-chart-title-bd nowrap">\n                                        <div class="display-inline-block drill-tip" ng-if="child.meta.level_fields.length > 1">\n                                            <i class="bdp-icon ico-drill"></i>\n                                            <div class="drill-tip-bd mt5">\n                                                <span ng-repeat="drill_field in child.meta.level_fields">\n                                                    <i class="bdp-icon ico-slicesnav-arrow" ng-show="!$first"></i>\n                                                    {{drill_field.nick_name || drill_field.name}}\n                                                </span>\n                                                <div class="arrow"><em></em><span></span></div>\n                                            </div>\n                                        </div>\n                                        <i class="bdp-icon ico-linked" ng-if="child.meta.chart_link.linked_chart_type == \'2\'"></i>\n                                        <i class="bdp-icon ico-chart-jump" ng-if="child.meta.chart_jump.can_jump == \'1\'"></i>\n                                        <span class="no-margin" ng-click="">{{child.meta.name}}</span>\n                                        <span class="filter-item" ng-repeat="it in child.meta.filter_list_inner" ng-if="it.range.length && !it.adv_type">\n                                            <em ng-if="it.data_type === \'date\' && !it.granularity" ng-hide="AllMap.indexOf( (it.range | format_date:child.meta.adv_date_list ) ) >= 0">\n                                                {{it.range | format_date:child.meta.adv_date_list}}\n                                                <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                            </em>\n                                            <em ng-if="it.data_type === \'date\' && it.granularity">{{it.range | inner_range_date_format:it}}\n                                                <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                            </em>\n                                            <em ng-if="it.data_type !== \'date\' && !it.inner_adv_type">{{it.range | dash_sub_date:it}}</em>\n                                            <em ng-if="it.data_type !== \'date\' && it.inner_adv_type && (it.rangeNumber != 1 || it.range_type == 0 )">\n                                                <span ng-if="!it.nick_name">{{it.name}}</span>\n                                                <span ng-if="!!it.nick_name">{{it.nick_name}}</span>\n                                                <span bo-text="\'custom\' | translate"></span>\n                                            </em>\n                                            <em ng-if="it.data_type !== \'date\' && it.inner_adv_type && it.rangeNumber == 1 && it.range_type != 0 ">\n                                                {{it.rangeFirstField | dash_sub_date:it}}\n                                            </em>\n                                        </span>\n                                        <span class="filter-item" ng-repeat="it in child.meta.diff_filter">\n                                            <em>{{it}}</em>\n                                        </span>\n                                        <div class="loading-wrap">\n                                            <div class="loader-inner ball-spin-fade-loader">\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                                <div></div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="item-chart gridster-no-drag J_item_chart" ng-class="{\'noscroll\':selected_type === \'C200\'}" id="{{child.dom_id}}" size-x="{{item.sizeX}}" size-y="{{item.sizeY}}">\n                                    <div class="drill-crumbs-wrap"></div>\n                                    <div bdp-chart="draw_chart_url[child.dom_id].options" display-mode="{{item.sizeX + \'*\' + item.sizeY}}" data-updatetime="{{child.meta.update_time}}" data-index="item.index" data-domid="child.dom_id" data-lazy-loaded="draw_chart_url[child.dom_id].lazyload" class="chart" ng-class="{\'chart-table\':selected_type === \'C200\',\n                                            \'chart-canvas-table\': selected_type === \'C200\',\n                                            \'chart-custom\': selected_type === \'C500\',\n                                            \'chart-funnel overflow-hidden\':selected_type === \'C330\',\n                                            \'chart-sankey\': selected_type === \'C300\',\n                                            \'show-datalabels\': child.meta.dash_setting.show_datalabels,\n                                            \'hide-total\':!child.meta.dash_setting.show_total}"></div>\n                                </div>\n                                <div chart-operate data-ct-id="{{child.meta.ct_id}}" class="gridster-no-drag hidden"></div>\n                            </div>\n\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </slick>\n\n    </div>\n    <div class="page-nav">\n        <span class="page-ctrl-play" ng-click="toggleDashboardAutoplay()">\n            <i class="bdp-icon" ng-class="{\'ico-pause\': dashboardAutoplay, \'ico-play\': !dashboardAutoplay}"></i>\n        </span>\n    </div>\n</div>\n'), e.put("/static/js/dashboard/tpl/data_screen.html", '<div class="dash-edit-content-view data-screen-wrap data-screen-dashboard-wrap">\n    <div class="dash-title-wrap view-header-wrap">\n        <div class="clearfix dash-title view-header">\n            <h2>{{dashTitle}}</h2>\n            <div class="btn-layer" ng-if="!dashFullscreen && permision.dashEdit && property == 0 && !isThirdIframeMobile.type">\n                <div class="display-inline-block pr">\n                    <div ng-if="enterprise_type == 3" ng-show="guide != 1 && guide != 2" dot-guide dot-mask="dotMask.design" guide-item="design" guide-type="dash_edit" watch-status="personalInfo.dashboard_guide" btn-class="J-dot-design" add-class="\'dot-guide-design\'"></div>\n                    \n                    <a ng-if="!proj_share && !(enterprise_type == 5 || enterprise_type == 6)" ng-click="enterEditScreen()" ng-if="permision.dashEdit && property == 0" class="J-design-button J-dot-design">\n                        <i class="bdp-icon ico-edit-layout"></i>\n                        <span class="btn-layer-opt">\n                            <span>{{ \'design\' | translate }}</span>\n                            <span class="btn-layer-hover-line"></span>\n                        </span>\n                    </a>\n                </div>\n\n                <a ng-if="!permision.outerShare" ng-click="enterFullScreen()">\n                    <i class="bdp-icon ico-fullscreen-2"></i>\n                    <span class="btn-layer-opt">                \n                            {{ \'dash.fullscreen\' | translate }}\n                            <span class="btn-layer-hover-line"></span>\n                    </span>\n                    \n                </a>\n\n            </div>\n        </div>\n    </div>\n    <div class="screen-dashboard">\n        <div ng-if="!dashLoading && global.globalDashFilter.length" class="dash-global-wrap" global-filter original-global-filter="global.originalGlobalFilter" global-dash-filter="global.globalDashFilter" global-dash-filter-items="global.globalDashFilterItems" rule-id="global.rule_id" show-loading="showLoading" on-share-page="isThirdIframe" draw-chart-url="draw_chart_url">\n        </div>\n        <div ng-include="\'./static/js/dashboard/tpl/data_screen_main.html\'"></div>\n    </div>\n</div>\n\n<div ng-loading-gif ng-show="dashLoading"></div>\n'), e.put("/static/js/dashboard/tpl/data_screen_edit.html", '<div class="data-screen-wrap">\n    <div class="view-header">\n        <a class="back-btn" ng-click="backDataScreen()" href="javascript:;">\n           <i class="bdp-icon ico-back"></i>\n        </a>\n        <h2 class="text-center data-screen-edit-title">\n            <div class="edit-title-detail">{{dashTitle}}</div>\n        </h2>\n        <div class="btn-layer">\n            <a ng-click="backDataScreen()" href="javascript:;">\n                <i class="bdp-icon ico-ok-blue"></i>\n                <span class="btn-layer-opt">\n                    {{ \'complete\' | translate }}\n                    <span class="btn-layer-hover-line"></span>\n                </span>\n            </a>\n        </div>\n    </div>\n    <div class="data-screen-content">\n        <div class="screen-main">\n            <div class="screen-wrap">\n                <div class="screen-btn-bar clearfix">\n                    <div class="toolbar-left bdp-icon-hover-light">\n                        <span class="display-inline-block">{{ \'dash.advDash.addEle\' | translate }}</span>\n                        <span class="display-inline-block seperate-line ml8"></span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addChart" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-screen-chart cursor-pointer" ng-click="addItem()"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addTitle" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-attr cursor-pointer" ng-click="dash.addTextComponent(\'C105\')"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addText" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-text cursor-pointer" ng-click="dash.addTextComponent(\'C101\')"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addImage" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-img cursor-pointer" ng-click="dash.addImageComponent()"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addVideo" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-video cursor-pointer" ng-click="dash.addVideoComponent()"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.addBorder" tooltip-placement="bottom">\n                            <i class="bdp-icon ico-add-border cursor-pointer" ng-click="dash.addBorderComponent()"></i>\n                        </span>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.guideLine\' | translate }}</span>\n                        <label class="cursor-pointer ml8">\n                            <input type="checkbox" ng-click="showDataScreenGrid = !showDataScreenGrid" ng-model="showDataScreenGrid"><span class="ml4">{{ \'dash.advDash.show\' | translate }}</span>\n                        </label>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.layer\' | translate }}</span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.top" tooltip-placement="bottom" ng-click="dash.setZIndex(\'top\')">\n                            <i class="bdp-icon ico-layer-rise cursor-pointer J_set_zindex"></i>\n                        </span>\n                        <span class="bdp-icon-wrap bdp-icon-bgcol cursor-pointer ml8" bdp-tooltip="pageContent.bottom" tooltip-placement="bottom" ng-click="dash.setZIndex(\'bottom\')">\n                            <i class="bdp-icon ico-layer-fall cursor-pointer J_set_zindex"></i>\n                        </span>\n                        <span class="display-inline-block seperate-line ml16"></span>\n                        <span class="display-inline-block ml16 toolbar-title">{{ \'dash.advDash.scale\' | translate }}</span>\n                        <label class="display-inline-block ml16">\n                            <select ng-model="dash.scaleDashbord.selectedData" ng-change="dash.scaleDashbord.modifyScale();">\n                                <option value="1">{{ \'dash.advDash.actualSize\' | translate }}</option>\n                                <option value="2">{{ \'dash.advDash.selfAdaption\' | translate }}</option>\n                            </select>\n                        </label>\n                    </div>\n                </div>\n                <div class="screen-dashboard-wrap screen-dashboard-edit-wrap">\n                    <div class="screen-dashboard">\n                        <div class="dash-edit-content-view">\n                            <div ng-include="\'./static/js/dashboard/tpl/data_screen_main.html\'"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="side-panel J_side_panel">\n            <div datascreen-page-ele save-func="dash.saveChartStyle(chart)" ng-if="dash.editChartMetaVisible.pageEle"></div>\n            <div chart-style-text save-func="saveDashboard()" ng-if="dash.editChartMetaVisible.text"></div>\n            <div chart-style-extend save-func="dash.saveChartStyle(chart)" ng-if="dash.editChartMetaVisible.style"></div>\n            <div chart-screen-numerical ng-if="dash.editChartMetaVisible.numerical"></div>\n            <div chart-screen-video ng-if="dash.editChartMetaVisible.video"></div>\n            <div chart-screen-img ng-if="dash.editChartMetaVisible.img"></div>\n            <div datascreen-page-wrap ng-show="dash.editChartMetaVisible.pageWrap"></div>\n        </div>\n    </div>\n</div>\n'),
        e.put("/static/js/dashboard/tpl/data_screen_main.html", '<div class="dash-wrapper J-dash-wrapper" ng-class="{\n    \'dash-one-block\':!dashLayoutInfo.show_block,\n    \'edit-mode\':dashEditMode,\n    \'readonly-mode\': !dashEditMode,\n    \'dash-fixed-width\':dashLayoutInfo.fixed_width,\n    \'hide-block-watermark\':!dashLayoutInfo.show_block && global.watterMark,\n    \'dash-mode-free\':dashLayoutInfo.layout_style == 2,\n    \'has-global-filter\': global.globalDashFilter.length > 0\n    }" ng-style="dashLayoutInfo.dashWrapperStyle">\n\n    <div class="folder-empty" ng-if="noDashes">\n        <i class="bdp-icon ico-new-dashboard ico-no-opacity"></i>\n        <p class="font-text-tip" translate="dash.emptyDatascreen" class="mt8"></p>\n    </div>\n    <div gridster="gridsterOpts" class="J_data_screen_hook" ng-style="dashLayoutInfo.gridsterStyle">\n            <ul id="J_gridster" ng-if="dashLayoutInfo.layout_style == 2">\n                <li gridster-item="item" ng-repeat="item in dashStandardItems" style="left: {{item.left}}px; top:{{item.top}}px;width:{{item.width}}px;height:{{item.height}}px;z-index: {{item.zIndex || maxZIndex}};background-color:{{(item.bgColor || \'rgba(0, 1, 0, 0)\') + \' !important\'}}; {{ item.borderType == \'CUSTOM\' ? (\'border: \' + item.customBorder.width + \'px \' + item.customBorder.style + \' \' + item.customBorder.color) : \'\'}}" ng-hide="chartdel[\'chart\'+current_item.meta.ct_id]" id="{{item.children[0].meta.ct_id}}" data-chart-type="{{item.children[0].meta.type}}" data-chart-id="{{item.children[0].meta.ct_id}}" data-is-special-chart="{{item.children[0].meta.is_special_chart}}" ng-mouseleave="mouseleaveItem()" ng-class="{\n                        \'selected\':dashLayoutInfo.ct_id === item.children[0].meta.ct_id && !!dashEditMode,\n                        \'border-left\':item.children[0].meta.dash_setting.border_left,\n                        \'border-right\':item.children[0].meta.dash_setting.border_right,\n                        \'border-top\':item.children[0].meta.dash_setting.border_top,\n                        \'border-bottom\':item.children[0].meta.dash_setting.border_bottom,\n                        \'no-title\': item.children[0].meta.type === \'C310\' || !item.children[0].meta.dash_setting.show_title,\n                        \'no-axis\': !item.children[0].meta.dash_setting.show_axis,\n                        \'no-legend\': !item.children[0].meta.dash_setting.show_legend,\n                        \'component-text\': item.children[0].meta.ct_id.indexOf(\'text_\') > -1 || item.children[0].meta.type == \'C105\',\n                        \'no-edit-mode\': !dashEditMode,\n                        \'top-index-layer\': item.isTopIndex,\n                        \'resize-disable\': lockItemPosMap && lockItemPosMap[item.children[0].meta.ct_id]\n                    }">\n                    <div class="data-screen-item-box gridbox-border-{{item.borderType}}" ng-show="item.borderType && item.borderType != \'CUSTOM\'">\n                        <div class="data-screen-item-top">\n                            <div class="data-screen-item-left"></div>\n                            <div class="data-screen-item-center"></div>\n                            <div class="data-screen-item-right"></div>\n                        </div>\n                        <div class="data-screen-item-middle">\n                            <div class="data-screen-item-left"></div>\n                            <div class="data-screen-item-center"></div>\n                            <div class="data-screen-item-right"></div>\n                        </div>\n                        <div class="data-screen-item-bottom">\n                            <div class="data-screen-item-left"></div>\n                            <div class="data-screen-item-center"></div>\n                            <div class="data-screen-item-right"></div>\n                        </div>\n                    </div>\n                    <div ng-repeat="child in item.children" ng-class="{\'chart-box\': [\'C102\',\'C104\'].indexOf(child.meta.type) < 0, \'gridster-no-drag\': lockItemPosMap && lockItemPosMap[child.meta.ct_id] }" class="auto-size J_chart_box" ng-click="dash.editChartMeta(child, item);dash.handleKeyBoardMoveEvent(child, item)">\n                        <!-- 文本组件已不需要，先保留 -->\n                        <div ng-if="child.meta.ct_id.indexOf(\'text_\') > -1 || child.meta.type == \'C105\'" ng-class="{\'ta-edit-mode-on\':dashEditMode && textComponentEditMode[child.meta.ct_id]}">\n                            <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                                <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item);$event.stopPropagation();" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item)">\n                                    <i class="bdp-icon ico-more cursor-pointer"></i>\n                                    <ul ng-show="more_show" class="dropdown-wrap">\n                                        <li class="dropdown-item" translate="edit" ng-click="dash.editTextFromMore(child,item)"></li>\n                                        <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id)"></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div ng-if="dashEditMode" text-angular ng-model="child.meta.html" ng-style="child.meta.style" ng-blur="dash.saveTextComponent(child)" name="{{child.meta.ct_id}}" ta-toolbar="[[]]" ta-unsafe-sanitizer="true"></div>\n                            <div ng-if="!dashEditMode" text-angular class="item-text-chart" ng-style="child.meta.style" ng-model="child.meta.html" ta-disabled="true" ta-unsafe-sanitizer="true"></div>\n                            <div ng-show="dashEditMode && !textComponentEditMode[child.meta.ct_id]" class="base-loading-layer" ng-click="dash.editChartMeta(child, item)"></div>\n                        </div>\n\n                        <div ng-if="child.meta.type && child.meta.type.indexOf(\'C102\') > -1" class="auto-size screen-item-image">\n                            <div ng-if="item.url" class="auto-size" style="background:url({{item.url}}) no-repeat center; background-size: contain"></div>\n                            <div ng-if="!item.url" class="auto-size screen-item-placeholder-image"></div>\n                            <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                                <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item)" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item)">\n                                    <i class="bdp-icon ico-more"></i>\n                                    <ul ng-show="more_show" class="dropdown-wrap">\n                                        <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id);$event.stopPropagation();"></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div ng-if="child.meta.type && child.meta.type.indexOf(\'C103\') > -1" class="auto-size screen-item-image" ng-class="{\'screen-item-video\': dashLayoutInfo.ct_id === item.children[0].meta.ct_id}">\n                            <div ng-if="!item.src" class="auto-size screen-item-placeholder-video"></div>\n                            <video class="auto-size ng-hide" ng-if="item.autoplay  && item.loop && item.src" ng-show="item.autoplay  && item.loop" preload="auto" muted="muted" controls="controls" autoplay="autoplay" loop="loop" ng-src="{{item.src | trustUrl}}">\n                            </video>\n                            <video class="auto-size ng-hide" ng-if="item.autoplay  && !item.loop && item.src" ng-show="item.autoplay  && !item.loop" preload="auto" muted="muted" controls="controls" autoplay="autoplay" ng-src="{{item.src | trustUrl}}">\n                            </video>\n                            <video class="auto-size ng-hide" ng-if="!item.autoplay  && item.loop && item.src" ng-show="!item.autoplay  && item.loop" preload="auto" muted="muted" controls="controls" loop="loop" ng-src="{{item.src | trustUrl}}">\n                            </video>\n                            <video class="auto-size ng-hide" ng-if="!item.autoplay  && !item.loop && item.src" ng-show="!item.autoplay  && !item.loop" preload="auto" muted="muted" controls="controls" ng-src="{{item.src | trustUrl}}">\n                            </video>\n                            \n                            <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                                <div class="chart-operate-more bdp-icon-wrap" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item)" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item)">\n                                    <i class="bdp-icon ico-more"></i>\n                                    <ul ng-show="more_show" class="dropdown-wrap">\n                                        <li class="dropdown-item" translate="dash.copyEle" ng-click="dash.copyComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="dash.moveEle" ng-click="dash.moveComponent(child,item)"></li>\n                                        <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id);$event.stopPropagation();"></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div ng-if="child.meta.type && child.meta.type.indexOf(\'C104\') > -1" class="auto-size">\n                            <div class="chart-operate" ng-if="!proj_share && dashProperty == 0 && dashEditMode">\n                                <div class="chart-operate-more bdp-icon-wrap" ng-if="dashEditMode" ng-click="more_show = !more_show;dash.setOperatorIndex(more_show,false,item)" ng-mouseleave="more_show = false;dash.setOperatorIndex(more_show,false,item)">\n                                    <i class="bdp-icon ico-more"></i>\n                                    <ul ng-show="more_show" class="dropdown-wrap">\n                                        <li class="dropdown-item" translate="remove" ng-click="dash.delComponent(child.meta.ct_id);$event.stopPropagation();"></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div ng-show="dashEditMode && !textComponentEditMode[child.meta.ct_id]" class="base-loading-layer" ng-click="dash.editChartMeta(child, item)"></div>\n                        </div>\n\n                        <!-- 注意ngIf增加了一个子作用域，所以$parent要增加一层 -->\n                        <div ng-if="child.meta.type && [\'C101\', \'C102\',\'C103\',\'C104\',\'C105\'].indexOf(child.meta.type) < 0">\n                            <div class="item-chart-title">\n                                <div class="item-chart-title-bd nowrap">\n                                    <div class="display-inline-block drill-tip" ng-if="child.meta.level_fields.length > 1">\n                                        <i class="bdp-icon ico-drill"></i>\n                                        <div class="dropdown-wrap drill-tip-bd">\n                                            <span ng-repeat="drill_field in child.meta.level_fields">\n                                                <i class="bdp-icon ico-slicesnav-arrow" ng-show="!$first"></i>\n                                                {{drill_field.nick_name || drill_field.name}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <i class="bdp-icon ico-linked" ng-if="child.meta.chart_link.linked_chart_type == \'2\'"></i>\n                                    <i class="bdp-icon ico-chart-jump" ng-if="child.meta.chart_jump.can_jump == \'1\'"></i>\n                                    <span class="no-margin">{{child.meta.name}}</span>\n                                    <div class="loading-wrap">\n                                        <div class="loader-inner ball-spin-fade-loader">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n                                    <span class="filter-item" ng-repeat="it in child.meta.filter_list_inner" ng-if="it.range.length && !it.adv_type">\n                                        <em ng-if="it.data_type === \'date\' && !it.granularity" ng-hide="AllMap.indexOf( (it.range | format_date:child.meta.adv_date_list ) ) >= 0">\n                                            {{it.range | format_date:child.meta.adv_date_list}}\n                                            <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                        </em>\n                                        <em ng-if="it.data_type === \'date\' && it.granularity">{{it.range | inner_range_date_format:it}}\n                                            <span ng-if="it.granularity == \'week\'">({{it.range[0] | weekFormat:it.range[0]}})</span>\n                                        </em>\n                                        <em ng-if="it.data_type !== \'date\' && !it.inner_adv_type && it.range_type != 0">{{it.range | dash_sub_date:it}}</em>\n                                        <em ng-if="it.data_type !== \'date\' && ( (it.inner_adv_type && it.rangeNumber != 1) || it.range_type == 0 )">\n                                            <span ng-if="!it.nick_name">{{it.name}}</span>\n                                            <span ng-if="!!it.nick_name">{{it.nick_name}}</span>\n                                            {{\'custom\' | translate}}\n                                        </em>\n                                        <em ng-if="it.data_type !== \'date\' && it.inner_adv_type && it.rangeNumber == 1 && it.range_type != 0 ">\n                                            {{it.rangeFirstField | dash_sub_date:it}}\n                                        </em>\n                                    </span>\n                                    <span class="filter-item" ng-repeat="it in child.meta.diff_filter">\n                                        <em>{{it}}</em>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class="item-chart gridster-no-drag" ng-class="{\'noscroll\':selected_type === \'C200\' || selected_type === \'C400\'}" id="{{child.dom_id}}" size-x="{{item.sizeX}}" size-y="{{item.sizeY}}">\n                                <div class="drill-crumbs-wrap"></div>\n                                <div bdp-chart="draw_chart_url[child.dom_id].options" display-mode="{{item.sizeX + \'*\' + item.sizeY}}" data-updatetime="{{child.meta.update_time}}" data-index="$parent.$parent.$index" data-domid="child.dom_id" data-lazy-loaded="draw_chart_url[child.dom_id].lazyload" class="chart" ng-class="{\'chart-table\':selected_type === \'C200\',\n                                        \'chart-canvas-table\': selected_type === \'C200\',\n                                        \'chart-map\':selected_type === \'C271\' || selected_type === \'C272\',\n                                        \'chart-funnel overflow-hidden\':selected_type === \'C330\',\n                                        \'show-datalabels\': child.meta.dash_setting.show_datalabels,\n                                        \'hide-total\':!child.meta.dash_setting.show_total}" data-ctid="{{draw_chart_url[child.dom_id].options.ct_id}}"></div>\n                                <div class="loading-wrap" ng-if="item.children[0].meta.type === \'C310\'">\n                                    <div class="loader-inner ball-spin-fade-loader">\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                        <div></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div chart-operate data-ct-id="{{child.meta.ct_id}}" class="gridster-no-drag" data-origin="data_screen_edit"></div>\n                        </div>\n                    </div>\n                    \n                </li>\n            </ul>\n        <div ng-show="showDataScreenGrid" class="data-screen-grid"></div>\n    </div>\n    \n</div>'),
        e.put("/static/js/dashboard/tpl/gis_edit.html", '<div class="gis-edit-view">\n    <div class="view-header text-center">\n        <a class="back-btn" ng-click="back()">\n            <i class="bdp-icon ico-back"></i>\n            <!-- <span translate="done"></span> -->\n        </a>\n        <div class="view-header-seperate-line"></div>\n        <h2 class="text-left view-header-left-name ng-cloak">{{\'chart.edit\' | translate}}</h2>\n    </div>\n\n    <div class="content-wrap">\n        <div class="gis-layers chart-data-info">\n            <div class="worksheets block">\n                <p class="hd">\n                    {{\'chart.worksheet\'|translate}}\n                    <i class="bdp-icon ico-plus1 fr" ng-click="showAddTableDialog()"></i>\n                </p>\n                <ul>\n                    <li ng-repeat="tb in viewData.tbList" data-drag="true" data-jqyoui-options="{helper: \'clone\', appendTo: \'body\'}" class="worksheet-item" jqyoui-draggable="{placeholder: \'keep\', onStart: \'dragTbFunc(tb)\'}">\n                        <div class="fr icon-list">\n                            <i class="cursor-pointer bdp-icon ico-edit" ng-class="{\'guide-tb-edit\': $index == 0}" ng-click="showSetCoordDialog(tb)"></i>\n                            <i class="cursor-pointer bdp-icon ico-trash fr" ng-show="viewData.tbList.length > 1" ng-click="deleteTb(tb.tb_id, $index)"></i>\n                        </div>\n                        <p class="nowrap tb-name" ng-bind="tb.name"></p>\n                    </li>\n                </ul>\n            </div>\n            <hr class="split">\n            <div class="layers block" data-drop="true" data-jqyoui-options="{accept: \'.gis-layers .worksheets li\', hoverClass: \'ui-droppable-hover\'}" jqyoui-droppable="{onDrop: \'onDrop()\'}">\n                <p class="hd">{{\'chart.layer\'|translate}}</p>\n                <ul ui-sortable="sortLayers" ng-model="chart_ops.meta.layers">\n                    <li class="nowrap" ng-repeat="layer in chart_ops.meta.layers" ng-class="{active: $index === currentLayerIndex}">\n                        <i class="bdp-icon ico-order fl"></i>\n                        <div class="fr icon-list">\n                            <i class="cursor-pointer bdp-icon ico-visible" ng-class="{\'ico-visible-grey\': layer.invisible}" ng-click="toggleVisible(layer)" ng-show="layer.invisible" title="{{\'chart.showLayer\'|translate}}"></i>\n                            <i class="cursor-pointer bdp-icon ico-visible" ng-class="{\'ico-visible-grey\': layer.invisible}" ng-click="toggleVisible(layer)" ng-hide="layer.invisible" title="{{\'chart.hideLayer\'|translate}}"></i>\n                            <i class="cursor-pointer bdp-icon ico-more" ng-click="toggleMoreAction($event)"></i>\n                            <div class="more-dropdown hidden">\n                                <div class="action" ng-click="editMode=true;">{{\'rename\' | translate}}</div>\n                                <div class="action" ng-click="copyLayer($index);">{{\'chart.copyLayer\' | translate}}</div>\n                                <div class="action" ng-click="deleteLayer($index);">{{\'remove\'|translate}}</div>\n                            </div>\n                        </div>\n                        <p class="nowrap layer-name" ng-show="!editMode" ng-click="setCurrentLayer($index)">{{layer.layer_name}}</p>\n                        <div class="layer-name" ng-show="editMode">\n                            <input type="text" class="input-text-block" focus-me="editMode" ng-model="layer.layer_name" ng-blur="editMode=renameLayer(layer);" ng-keyup="onRenameLayerKeyUp($event)">\n                        </div>\n                    </li>\n                </ul>\n                <div class="droppable-hint" ng-if="!(chart_ops.meta.layers && chart_ops.meta.layers.length)">{{\'chart.addLayerTopHint\'|translate}}<br>{{\'chart.addLayerBottomHint\' | translate}}</div>\n            </div>\n            <hr class="split">\n            <div class="fields block pr">\n                <!-- <p class="hd">字段</p> -->\n                <div class="hd hd-field-wrap">\n                    <p class="hd-field-tip" translate="chart.field"></p>\n                    <div class="query-box auto no-margin">\n                        <input type="text" class="query-text" ng-input-text ng-model="query">\n                    </div>\n                    <div class="add" ng-click="newFieldTypeSelect = !newFieldTypeSelect" click-outside="newFieldTypeSelect = false" outside-active="newFieldTypeSelect">\n                        <a class="cursor-pointer bdp-icon-wrap" title="{{\'chart.addField\' | translate}}">\n                            <i class="bdp-icon ico-plus1"></i>\n                        </a>\n                        <ul class="field-type-select dropdown-wrap" ng-show="newFieldTypeSelect">\n                            <li class="dropdown-item" ng-click="createFieldFormula()" translate="chart.addFormulaField"></li>\n                            <li class="dropdown-item" ng-click="createFieldGroup()" translate="chart.addGroupField"></li>\n                            <li class="dropdown-item" ng-click="createFieldByML()" translate="使用机器模型" ng-if="permision.newTraining && !wsId"></li>\n                        </ul>\n                    </div>\n                </div>\n                <ul class="field-list gis-field-list">\n                    <li ng-repeat="field in field_list | query_fields:query" ng-class="{\'handler-more\': field.handler_more_show} " ng-mouseenter="field.justshowme = true" ng-mouseleave="field.justshowme = false">\n\n                        <div ng-click="show_edit = !show_edit" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{placeholder:\'keep\',onStart:\'dragFieldFunc(field)\',onStop:\'stopDragField()\'}" class="title nowrap {{field.data_type}}-title cursor-pointer" ng-class="{\'field-drag-title\': !chartMainMask}">\n                            <i ng-if="field.data_type===\'date\'" class="bdp-icon ico-triangle-right" ng-class="{\'ico-triangle-down\':show_edit}"></i>\n                            <i class="bdp-icon ico-type-{{field.ico_type}}" ng-class="{\'ico-type-{{field.ico_type}}-orange\':field.formula, \'-ml\': field.made_by_ml && field.formula}"></i>\n                        <span class="data-tag" field-set-tooltip="field" tooltip-placement="top-left" ng-if="tbType != \'public\'" ng-class="{\'border-bottom-5182E4\': (field.original_name != field.name || field.remark)}" ng-bind="field.name"></span>\n\n                        <span class="data-tag" ng-if="tbType == \'public\'" ng-bind="field.name"></span>\n\n\n\n                        <span class="field-handler hover-show display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.param.type == \'group\'" drop-down-flag="field.handler_more_show">                            \n                              <div class="bdp-icon-wrap" title="{{\'more\' | translate}}" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">     \n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\n                                    <li class="dropdown-item" ng-click="modifyField(field)">{{\'edit\' | translate}}</li>\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)">{{\'remove\' | translate}}</li>\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')">{{\'sort\' | translate}}</li>\n                                </ul>\n                            </div>                          \n                        </span>                        \n                        <span class="field-handler hover-show display-block" ng-if="field.formula != \'\' && field.editable && field.data_type == \'string\' && field.param.type !== \'group\'" drop-down-flag="field.handler_more_show">                            \n                              <div class="bdp-icon-wrap" title="{{\'more\' | translate}}" ng-click="field.handler_more_show = !field.handler_more_show;handlerMorePos($event)" chart-drop-down drop-down-flag="field.handler_more_show" click-outside="field.handler_more_show = false" outside-active="field.handler_more_show">     \n                                <i class="bdp-icon ico-more" ng-show="field.justshowme || field.handler_more_show"></i>\n                                <ul class="field-editable-handler-more dropdown-wrap" ng-show="field.handler_more_show">\n                                    <li class="dropdown-item" ng-click="modifyField(field)">{{\'edit\' | translate}}</li>\n                                    <li class="dropdown-item" ng-click="delNewField(field.name,field.fid)">{{\'remove\' | translate}}</li>\n                                    <li class="dropdown-item" ng-click="showEnumOrder(field.fid, false, \'source\')">{{\'sort\' | translate}}</li>\n                                </ul>\n                            </div>                          \n                        </span>  \n\n                        <span ng-if="field.formula != \'\' && field.editable && field.data_type != \'string\' " class="field-handler hover-show">\n                            <span class="bdp-icon-wrap" ng-click="modifyField(field)" ng-hide="field.made_by_ml" title="{{\'edit\' | translate}}">\n                                <i class="bdp-icon ico-edit"></i>\n                            </span>\n                            <span class="bdp-icon-wrap" ng-click="delNewField(field.name,field.fid)" title="{{\'remove\' | translate}}">\n                                <i class="bdp-icon ico-trash"></i>\n                            </span>\n                        </span>\n                        \n                        </div>\n                         <ul ng-if="field.data_type == \'date\'" ng-show="show_edit" class="date-field ml20">\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'year\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="year"></span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'quarter\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="quarter"></span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'month\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="month">月</span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'week\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="week"></span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'day\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="day">日</span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'hour\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="hour">时</span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'minute\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="minute">分</span>\n                            </p>\n                            </li>\n                            <li class="cursor-pointer">\n                            <p class="field-drag-title" data-drag="true" data-jqyoui-options="{revert: \'invalid\', helper: \'clone\',appendTo:\'body\'}" jqyoui-draggable="{index:{{$index}},placeholder:\'keep\',onStart:\'dragSubTbFunc(field,\\\'second\\\')\',onStop:\'stopDragField()\'}">\n                                <i class="bdp-icon ico-type-date"></i>\n                                <span translate="second">秒</span>\n                            </p>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class="gis-main">\n            <div class="chart-args">\n                <div class="row x-axis">\n                    <span class="fl axis-head">{{\'chart.dimension\'|translate}}</span>\n                    <div class="drag-target">\n                        <div class="drag-target-inner" data-drop="true" data-jqyoui-options="{accept:\'.field-list .field-drag-title\'}" jqyoui-droppable="{onDrop: \'dropFieldTo(\\\'x\\\')\'}">\n                            <ul class="drag-target-list drag-target-list-dimension" id="dragX" ui-sortable="sortAxisField" ng-model="viewData.currentLayer.x">\n                                <li ng-repeat="it in viewData.currentLayer.x" class="drag-item" ng-mouseleave="it.showDropdown = false">\n                                    <div class="data-tag remove-icon-pr">\n                                        <span class="tag ui-select">\n                                            <span class="name" ng-click="it.showDropdown=true" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\n                                                <span class="nowrap">{{it.nick_name || it.name}}</span>\n                                            </span>\n                                            <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeField(\'x\', it);"></i>\n                                        </span>\n                                    </div>\n                                    <div class="field-tip dropdown-wrap" ng-if="it.nick_name">\n                                        <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\n                                    </div>\n                                    <!--end data-tag-->\n                                </li>\n                            </ul>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row y-axis">\n                    <span class="fl axis-head">{{\'chart.value\'|translate}}</span>\n                    <div class="drag-target">\n                        <div class="drag-target-inner" data-drop="true" data-jqyoui-options="{accept:\'.field-list .field-drag-title\'}" jqyoui-droppable="{onDrop: \'dropFieldTo(\\\'y\\\')\'}">\n                            <ul class="drag-target-list drag-target-list-dimension" id="dragY" ui-sortable="sortAxisField" ng-model="viewData.currentLayer.y">\n                                <li ng-repeat="it in viewData.currentLayer.y track by $index" class="drag-item" ng-mouseleave="it.show_formula = false" outside-active="it.show_formula">\n\n                                    <div class="data-tag remove-icon-pr">\n                                        <span class="tag ui-select">\n                                            <span ng-click="showFormula(it)" class="name" ng-mouseover="showFieldTip($event,it)" ng-mouseleave="hideFieldTip($event,it)">\n                                                <i class="bdp-icon ico-triangle-down1 ico-always-highlight fl"></i>\n                                                <i class="fl bdp-icon ico-filter-white" ng-if="it.post_filter && it.post_filter.enabled != 0"></i>\n                                                <span class="nowrap nick-name" ng-bind="it.nick_name" ng-if="it.nick_name != undefined && it.nick_name != \'\'"></span>\n                                                <span class="nowrap" title="" ng-bind="it.name" ng-if="!it.nick_name"></span>\n                                                <i ng-if="it.aggregator != undefined && !it.nick_name" class="inline fl aggr-name nowrap" title="">{{setAdvanceAggregatorName(it)}}</i>\n                                            </span>\n                                            <i class="bdp-icon ico-delete-small remove-it-icon" ng-click="removeField(\'y\', it);"></i>\n                                            <div class="data-formula" ng-show="it.show_formula" field-formula="{data_type:it.data_type}"></div>\n                                        </span>\n                                    </div>\n                                    <div class="field-tip dropdown-wrap" ng-if="(it.hasOwnProperty(\'nick_name\') && it.nick_name !==\'\')">\n                                        <em class="arrow arrow-up"></em>\n                                        <span>{{it.name}}{{setAdvanceAggregatorName(it)}}</span>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="chart-left-side">\n                <div chart-filter></div>\n\n                <div class="scatter-bubble-layer" ng-controller="bubbleTabCtrl" ng-show="viewData.currentLayer.type != \'heatmap\'">\n                    <hr class="split" ng-if="[\'bubble\', \'d_trajectory\'].indexOf(viewData.currentLayer.type) > -1 || (viewData.currentLayer.type == \'graph\' && viewData.currentLayer.y.length > 0)">\n                    <div class="tab-hd clearfix" ng-if="[\'bubble\', \'d_trajectory\'].indexOf(viewData.currentLayer.type) > -1 || (viewData.currentLayer.type == \'graph\' && viewData.currentLayer.y.length > 0)">\n                        <a class="tab-hd-item" ng-click="tab.index = 0" ng-class="{active : tab.index == 0}" translate="color"></a>\n                        <a class="tab-hd-item" ng-click="tab.index = 1" ng-class="{active : tab.index == 1}" translate="size"></a>\n                    </div>\n                    <div class="tab-bd">\n                        <div class="tab-scatter-color" gis-color-setting ng-show="tab.index == 0"></div>\n                        <div class="tab-scatter-bubble" gis-bubble-size ng-show="tab.index == 1" ng-if="[\'bubble\', \'d_trajectory\'].indexOf(viewData.currentLayer.type) > -1 || (viewData.currentLayer.type == \'graph\' && viewData.currentLayer.y.length > 0)"></div>\n                    </div>\n                </div>\n            </div>\n\n            <div id="chartBox">\n            <div bdp-chart="draw_chart_url.options" display-mode="edit" data-options="draw_chart_url.options" data-lazy-loaded="draw_chart_url.lazyload" class="chart"></div>\n            </div>\n            <div class="chart-main-mask" ng-if="chartMainMask"></div>\n        </div>\n\n\n        <div class="gis-settings chart-right">\n            <div class="block chart-title">\n                <div class="hd" translate="chart.name"></div>\n                <div class="bd">\n                    <input type="text" ng-model="chart_ops.name" class="input-text-block chart-ops-inp" ng-keydown="ifEnterDown($event)" ng-blur="saveAfterCheckDirty({not_need_redraw:true,only_refresh_data:false,closeDialog:false})" placeholder="{{\'chart.untitledChart\'|translate}}">\n                </div>\n            </div>\n            <div class="block chart-type">\n                <div class="hd" translate="chart.type"></div>\n                <div class="bd">\n                    <ul>\n                        <li ng-repeat="type in gisTypes" ng-click="setGisType(type)" title="{{gisTypeNames[type]}}" }>\n                            <a ng-class="{active: type === viewData.currentLayer.type, \'guide-newtype-trajectory\': type == \'trajectory\' }">\n                                <i class="chart-type-icon ico-gis-{{type}}"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class="block symbol-type" ng-if="viewData.currentLayer.type === \'bubble\'">\n                <p class="hd">{{\'chart.symbol\' | translate}}</p>\n                <ul>\n                    <li ng-repeat="symbol in gisBubbleSymbol" ng-click="setGisSymbolType(symbol)">\n                        <a ng-class="{active: viewData.currentLayer.bubble_symbol === symbol}">\n                            <i class="chart-type-icon ico-symbol-{{symbol}}"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <div class="block heatmap-radius" ng-if="viewData.currentLayer.type === \'heatmap\'">\n                <p class="hd">{{\'chart.thermalRadius\'|translate}}</p>\n                <div>\n                    <input type="number" placeholder="{{\'chart.thermalRadius\'|translate}}" ng-model="viewData.currentLayer.heatmap_setting.radius" ng-blur="checkRadius()" ng-keyup="onRadiusKeyUp($event)">\n                    <select ng-model="viewData.currentLayer.heatmap_setting.unit" ng-change="onUnitChange()" ng-options="unit.value as unit.name for unit in heatMapUnit">\n                    </select>\n                </div>\n            </div>\n       \n            <div class="block symbol-type" ng-if="viewData.currentLayer.type === \'graph\'">\n                <p class="hd">{{\'chart.graph\' | translate}}</p>\n                <ul>\n                    <li ng-repeat="type in gisGraphTypes" ng-click="setGisGraphType(type)">\n                        <a ng-class="{active: viewData.currentLayer.graph_type === type}">\n                            <i class="icomoon icomoon-{{type}}"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <div class="block trajectory-field" ng-if="[\'trajectory\', \'d_trajectory\'].indexOf(viewData.currentLayer.type) >= 0">\n                <div class="bd">\n                    <div class="row">\n                        <label>{{\'chart.trajectoryField\' | translate}}</label>\n                        <select ng-model="viewData.currentLayer.trajectory[0]" ng-options="field.name for field in field_list | filter:{ data_type : \'!date\' } track by field.fid" ng-change="changeTrajectory()" style="width:80%"></select>\n                    </div>\n                    <div class="row">\n                        <label>{{\'chart.sequenceField\' | translate}}</label>\n                        <select ng-model="viewData.currentLayer.sequence[0]" ng-options="field.name for field in field_list | filter:{ data_type : \'date\' } track by field.fid " ng-change="changeSequence()" style="width:80%"></select>\n                    </div>\n                </div>\n            </div>\n\n            <div class="block time-animation">\n                <div class="hd">\n                        <label>\n                            <input type="checkbox" ng-if="viewData.currentLayer.type !== \'d_trajectory\'" ng-model="viewData.currentLayer.timeline.enabled" ng-change="enableTimeline()"> \n                          {{\'chart.timeAnimation\'| translate}}\n                        </label>\n                </div>\n                <div class="bd" ng-if="viewData.currentLayer.timeline.enabled">\n                    <div class="row" ng-if="viewData.currentLayer.type !== \'d_trajectory\'">\n                        <label>{{\'chart.timelineField\' | translate}}</label>\n                        <select ng-model="viewData.currentLayer.timeline.field" ng-options="field.name for field in field_list | filter:{ data_type : \'date\' } track by field.fid" ng-change="viewData.currentLayer.timeline.field.granularity=\'day\'; saveChartImmediate()" style="max-width:100%"></select>\n                    </div>\n                    <div class="row" ng-if="viewData.currentLayer.timeline.field">\n                        <label>{{\'chart.timelineGranularity\' | translate}}</label>\n                        <select ng-model="viewData.currentLayer.timeline.field.granularity" ng-options="g|granularity for g in timeGranularity" ng-change="saveChart()"></select>\n                    </div>\n                    <div class="row" ng-if="viewData.currentLayer.timeline.field && viewData.currentLayer.type !== \'d_trajectory\'">\n                        <label translate="chart.timelineInterval"></label>\n                        <input type="number" class="w60" ng-if="viewData.currentLayer.timeline.field" ng-model="viewData.currentLayer.timeline.interval" ng-blur="checkTimelineInterval()" ng-keyup="onTimelineIntervalKeyUp($event)">\n                        <label>{{ timeGranularityLabelMap[viewData.currentLayer.timeline.field.granularity] }}</label>\n                    </div>\n                    <div class="row">\n                        <label translate="chart.timeAnimationSpeed"></label>\n                        <select ng-model="viewData.currentLayer.timeline.speed" ng-options="speed.val as speed.name|translate for speed in timeAnimationSpeeds" ng-change="saveChart({only_redraw: true})" style="max-width:100%"></select>\n                        <label class="ml24" ng-if="viewData.currentLayer.timeline.speed == 9" fps>FPS</label>\n                        <input type="number" ng-if="viewData.currentLayer.timeline.speed == 9" ng-model="viewData.currentLayer.timeline.fps" ng-blur="checkTimelineFps()" ng-keyup="onTimelineFpsKeyUp($event)">\n                    </div>\n                    <div class="row">\n                        <label>\n                          <input type="checkbox" ng-model="viewData.currentLayer.timeline.loop" ng-change="saveChart({only_redraw: true})"> {{\'chart.timeAnimationLoop\'| translate}}\n                      </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div gis-edit-guide veil-ele="guide-tb-edit" step-num="gisEditGuide" ng-if="showGisEditGuide && gisEditGuide == 0"></div>\n<div gis-edit-guide veil-ele="guide-newtype-trajectory" step-num="gisEditGuide" ng-if="showGisEditGuide && gisEditGuide == 1 && !(viewData.currentLayer && viewData.currentLayer.type.indexOf(\'trajectory\') >= 0)"></div>\n<div gis-edit-guide veil-ele="time-animation" step-num="gisEditGuide" ng-if="showGisEditGuide && gisEditGuide == 2 && !(viewData.currentLayer && viewData.currentLayer.timeline)"></div>\n\n'), e.put("/static/js/dashboard/tpl/markPointTooltip.html", '<div class="mark-point-wrap">\n    <div ng-repeat="item in markPoints" class="hchart-mark-point" style="left:{{item.pos.left}}px;top:{{item.pos.top}}px">\n        <i class="bdp-icon ico-comment" ng-click="setTooltipPos($event, item)" ng-show="!item.show"></i>\n        <div class="popover mark-point-tooltip" ng-class="{\'top\': item.popover.pos === \'top\',\'bottom\': item.popover.pos === \'bottom\',}" ng-show="item.show" ng-style="item.posStyle">\n            <i class="bdp-icon ico-cancel close" title="{{\'close\'|translate}}" ng-click="item.show=false"></i>\n            <div class="popover-inner">\n                <div class="popover-content" ng-style="item.widthStyle">\n                    <div class="tooltip-hd text-left" ng-if="mode==\'edit\'">\n                        {{\'chart.markPoint\' | translate}}\n                    </div>\n                    <div class="tooltip-bd text-left" ng-bind="item.pointModel.comment"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'), e.put("/static/js/dashboard/tpl/project_view.html", '<div nav-workspace class="nav-workspace"></div>\n<div project-list bindonce ng-class="{\'role-user\':role==\'user\',\n        \'has-workspace-list\': workspaceList && workspaceList[\'dash\'].length > 0 && view != \'data_screen\',\n        \'empty-project-wrap\': noFolders}" class="dash-sidebar J_dash_sidebar"></div>\n<div class="dash-edit-content J_dash_edit_content" ng-class="{\'shopex-dash-edit-content\': (enterprise_type == 5 || enterprise_type == 6) && noFolders}">\n    <div ui-view class="dash-edit-content-view pr">\n        <div class="project-empty" ng-if="noFolders && !(enterprise_type == 5 || enterprise_type == 6) && !isThirdIframe">\n            <i class="bdp-icon ico-new-folder ico-no-opacity"></i>\n            <p class="font-text-tip" translate="dash.emptyProject" class="mt16"></p>\n        </div>\n\n        <div class="shopex-empty-dash-wrap" ng-if="(enterprise_type == 5 || enterprise_type == 6) && noFolders">\n            <div class="shopex-empty-dash-title">欢迎使用生意罗盘</div>\n            <div class="shopex-empty-dash-desc">\n                生意罗盘是专业的数据分析产品，为您定制专业的数据可视化服务，帮助您实现数据运营，用数据指导决策等。它能够整合淘宝、京东等多平台数据，为您提供最便捷的今日资讯，根据当前资讯，您可以有针对性的查看商品分析、客户分析和运营管理分析，从而为决策提供最有效的数据支撑。\n            </div>\n            <div class="shopex-empty-dash-btn-wrap text-center">\n                <button class="bdp-btn bdp-btn-ok" ng-click="click_show_view(\'database\')">立即使用</button>\n            </div>\n            <div class="shopex-empty-dash-img-wrap text-center">\n                <img class="shopex-empty-dash-img" ng-src="/static/images/shopex.png">\n            </div>\n        </div>\n\n        <div class="project-empty" ng-if="isThirdIframe">\n            <img ng-src="/static/images/rongyi_empty_folder.png" ng-if="isThirdIframe">\n            <p class="mt16 text-left">\n                当前账户尚未分配浏览数据权限，<br>请联系容易网客服： 400-040-8989\n            </p>\n        </div>\n    </div>\n</div>\n'),
        e.put("/static/js/dashboard/tpl/visual-analysis-guide.html", '<div class="visual-analysis-wrap animated fadeIn">\n    <div class="visual-analysis J-va-guide">\n        <span class="bdp-icon-wrap close" ng-click="guideKnown()"><i class="bdp-icon ico-close-white"></i></span>\n        <div class="head J-va-head">\n            <p class="main-title"><strong>全新可视化分析功能上线</strong></p>\n            <p class="second-title J-va-s-title">在数据中抽丝剥茧，快速发现核心问题</p>\n        </div>\n        <div class="content J-va-content">\n            <div class="tab-hd">\n                <span class="tab-item" ng-class="{active: activeTab == 1}" ng-click="setActiveGuide(1)">快速筛选</span>\n                <span class="tab-item" ng-class="{active: activeTab == 2}" ng-click="setActiveGuide(2)">自由下钻</span>\n                <span class="tab-item" ng-class="{active: activeTab == 3}" ng-click="setActiveGuide(3)">数据详情</span>\n                <span class="tab-item" ng-class="{active: activeTab == 4}" ng-click="setActiveGuide(4)">单点查看</span>\n            </div>\n            <div class="tab-bd">\n                <div class="tab-content">\n                    <img ng-src="/static/images/va-guide/va-guide-0{{activeTab}}.gif" alt="">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'), e.put("/static/js/dashboard/tpl/dialogTemplates/fullscreen.html", '<div class="chart-fullscreen-wrap J-chart-fullscreen-wrap-export display-device-{{fullDisplayDevice}} display-theme-{{fullDisplayTheme === 1 ? \'dark\' : \'light\'}}" bindonce>\n    <div class="view-header fullscreen-view-header">\n        <div class="view-header-seperate-line" ng-show="fullscreen.ableLeftNav"></div>\n        <h3 class="nowrap fs-title" ng-class="{\'full-width\': !fullscreen.ableLeftNav}">{{fullscreen.name}}</h3>\n\n        <div class="btn-layer">\n            <a class="full-display-setting" ng-click="show_display_theme = !show_display_theme" click-outside="show_display_theme = false" outside-active="show_display_theme">\n                <span class="setting-label" bo-text="\'dash.displayTheme\' | translate"></span>\n                <span class="btn-layer-opt">\n                    <span ng-if="fullDisplayTheme === 1" bo-text="\'dash.darkTheme\' | translate"></span>\n                    <span ng-if="fullDisplayTheme != 1" bo-text="\'dash.lightTheme\' | translate"></span>\n                    <span class="btn-layer-hover-line"></span>\n                </span>\n                <i class="bdp-icon ico-triangle-down"></i>\n                <ul class="dropdown-wrap" ng-show="show_display_theme">\n                    <li class="dropdown-item" ng-click="setFullDisplayTheme(1)" bo-text="\'dash.darkTheme\' | translate"></li>\n                    <li class="dropdown-item" ng-click="setFullDisplayTheme(2)" bo-text="\'dash.lightTheme\' | translate"></li>\n                </ul>\n            </a>\n            <a class="full-display-setting" ng-click="show_display_devices = !show_display_devices" click-outside="show_display_devices = false" outside-active="show_display_devices">\n                <span class="setting-label" bo-text="\'dash.displayDevice\' | translate"></span>\n                <span class="btn-layer-opt">\n                    <i class="bdp-icon ico-device ico-device-{{fullDisplayDevice}}"></i>\n                    <span class="btn-layer-hover-line"></span>\n                </span>\n                <i class="bdp-icon ico-triangle-down"></i>\n                <ul class="dropdown-wrap" ng-show="show_display_devices">\n                    <li class="dropdown-item" ng-click="setFullDisplayDevice(\'pc\')">   \n                       <i bo-title="\'dash.pcDevice\' | translate" class="bdp-icon ico-device-pc"></i>\n                    </li>\n                    <li class="dropdown-item" ng-click="setFullDisplayDevice(\'projector\')">   \n                       <i bo-title="\'dash.projectorDevice\' | translate" class="bdp-icon ico-device-projector"></i>\n                    </li>\n                    <li class="dropdown-item" ng-click="setFullDisplayDevice(\'tv\')">\n                       <i bo-title="\'dash.tvDevice\' | translate" class="bdp-icon ico-device-tv"></i>\n                    </li>\n                </ul>\n            </a>\n            <a class="fs-close cursor-pointer" ng-click="closeThisDialog();resetChartData();">\n                <i class="bdp-icon ico-exit-fullscreen"></i>\n                <span bo-text="\'exitFullscreen\' | translate"></span>\n            </a>\n        </div>\n    </div>\n    <div class="fullscreen-view-body J-fullscreen-export-wrap">\n        <div class="drill-crumbs-wrap"></div>\n        <!-- 隐藏的全屏粒度 start -->\n        <div class="clearfix J_filterWrap_hidden hidden-container" ng-class="{\'right\': show_chart_description}" ng-show="!autoPlaying">\n            <div dash-filter style="height:0" chart-options="fullscreen.info.options" adv-date-list="fullscreen.info.filter_opts.meta.adv_date_list" opts="fullscreen.info.filter_opts" fullscreen="true" class="clearfix J_filter_hidden">\n            </div>\n            <div class="dash-filter pr J_dateGranularity_hidden" style="height:0" ng-show="fullscreen.info.filter_opts.meta.isGranularity === 1 && fullscreen.info.filter_opts.meta.fullscreen_granularity">\n                <i class="bdp-icon-wrap ico-calendar-white"></i>\n                <div class="filter-i-w">\n                    <ul class="filter-i select-granularity">\n                        <li class="drag-item axias-title" ng-repeat="it in fullscreen.info.date_fields" ng-show="it.data_type === \'date\'" ng-class="{\'granularity-selected\': show_formula }" ng-click="show_formula = !show_formula" click-outside="show_formula = false" outside-active="show_formula">\n                            <div class="data-tag">\n                                <div class="xaxis ui-select">\n                                    <span class="name">\n                                        <span class="nowrap" ng-bind="it.nick_name || it.name"></span>\n                                <i class="mr4 inline fl nowrap granularity" ng-if="it.data_type === \'date\'">({{it.granularity|granularity}})</i>\n\n                                <i class="bdp-icon ico-triangle-down" ng-if="it.data_type === \'date\'"></i>\n                                </span>\n                                <div class="filter-i-list axias-granularity" ng-if="it.data_type === \'date\'" ng-show="show_formula">\n                                    <div date-granularity tb-id="fullscreen.info.filter_opts.meta.tb_id" field="it" axis="\'compare_axis\'" set-granularity="fullScreenGranularity"></div>\n                                </div>\n                                </div>\n                            </div>\n                            <!-- end data-tag -->\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <!-- 隐藏的全屏粒度 end -->\n\n        <div class="dash-filter-wrap clearfix J_filterWrap" ng-class="{\'right\': show_chart_description}" ng-show="!autoPlaying">\n            <div dash-filter chart-options="fullscreen.info.options" adv-date-list="fullscreen.info.filter_opts.meta.adv_date_list" opts="fullscreen.info.filter_opts" fullscreen="true" class="clearfix J_filter">\n            </div>\n\n            <div class="dash-filter pr date-guanularity-filter J_dateGranularity" ng-show="fullscreen.info.filter_opts.meta.isGranularity === 1 && fullscreen.info.filter_opts.meta.fullscreen_granularity">\n                <i class="bdp-icon-wrap ico-calendar-white"></i>\n                <div class="filter-i-w">\n                    <ul class="filter-i select-granularity">\n                        <li class="drag-item axias-title" ng-repeat="it in fullscreen.info.date_fields" ng-show="it.data_type === \'date\'" ng-class="{\'granularity-selected\': show_formula }" ng-click="show_formula = !show_formula" click-outside="show_formula = false" outside-active="show_formula">\n                            <div class="data-tag">\n                                <div class="xaxis ui-select">\n                                    <span class="name">\n                                        <span class="nowrap" ng-bind="it.nick_name || it.name"></span>\n                                <i class="mr4 inline fl nowrap granularity" ng-if="it.data_type === \'date\'">({{it.granularity|granularity}})</i>\n\n                                <i class="bdp-icon ico-triangle-down" ng-if="it.data_type === \'date\'"></i>\n                                </span>\n                                <div class="filter-i-list axias-granularity" ng-if="it.data_type === \'date\'" ng-show="show_formula">\n                                    <div date-granularity tb-id="fullscreen.info.filter_opts.meta.tb_id" field="it" axis="\'compare_axis\'" set-granularity="fullScreenGranularity"></div>\n                                </div>\n                                </div>\n                            </div>\n                            <!-- end data-tag -->\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <advance-sort chart-options="fullscreen.info.options" chart-meta="fullscreen.info.filter_opts.meta" drill-level="drill_level" bdp-chart-obj="$bdpChart" chart-mode="fullscreen"></advance-sort>\n            \n        </div>\n\n        <div class="fs-chart-main">\n            <div bdp-chart="fullscreen.queue_show.options" data-lazy-loaded="fullscreen.queue_show.lazyload" display-mode="fullscreen" class="chart fullscreen-chart fs-queue-show J_chart J_chart_box J-export-img-elem-chart" data-autoplay="autoPlaying" data-index="fullscreen.queue_show.index" ng-class="{\'right\': show_chart_description,\'chart-custom\': selected_type === \'C500\',\'chart-funnel overflow-hidden\':fullscreen.queue_show.chart_type === \'C330\', \'show-datalabels\': show_data_label, \'chart-table\':selected_type === \'C200\' || fullscreen.queue_show.chart_type === \'C200\', \'chart-canvas-table\':selected_type === \'C200\' || fullscreen.queue_show.chart_type === \'C200\'}">\n            </div>\n            <div bdp-chart="fullscreen.queue_next.options" data-lazy-loaded="fullscreen.queue_next.lazyload" display-mode="fullscreen" class="chart fullscreen-chart fs-queue-next J_chart J_chart_box" data-autoplay="autoPlaying" data-index="fullscreen.queue_next.index" ng-class="{\'right\': show_chart_description,\'chart-custom\': selected_type === \'C500\',\'chart-funnel overflow-hidden\':fullscreen.queue_next.chart_type === \'C330\', \'show-datalabels\': show_data_label, \'chart-table\':selected_type === \'C200\' || fullscreen.queue_next.chart_type === \'C200\', \'chart-canvas-table\':selected_type === \'C200\' || fullscreen.queue_next.chart_type === \'C200\'}">\n            </div>\n        </div>\n        <div class="nav-handler-icon cursor-pointer" ng-class="{\'invisible\':autoPlaying}" ng-click="slideNav($event,\'show\')" ng-show="fullscreen.ableLeftNav">\n            <i class="bdp-icon ico-list-bold"></i>\n        </div>\n        <div class="nav-handler" ng-class="{\'invisible\':autoPlaying}" ng-mouseover="slideNav($event,\'show\')" ng-show="fullscreen.ableLeftNav"></div>\n        <div class="nav" ng-class="{\'invisible\':autoPlaying}" ng-mouseleave="slideNav($event,\'hide\')" ng-show="fullscreen.ableLeftNav">\n            <ul class="chart-type">\n                <li ng-repeat="chart in fullscreen.charts" ng-class="{\'active\':fullscreen.index === $index}" ng-click="slide($index - fullscreen.index,{\'auto\':false})" ng-hide="chart.children[0].meta.type === \'C101\'">\n                    <i class="{{chart.children[0].meta.type}}"></i>\n                    <span class="content-table">\n                            <span title="{{chart.children[0].meta.name}}">\n                                {{chart.children[0].meta.name | limitTo:14}}\n                            </span>\n                    </span>\n                </li>\n            </ul>\n        </div>\n        <div class="control-pane">\n            <div class="more-action J-more-action" ng-class="{\'invisible\':autoPlaying}">\n                <div class="action-opt-wrap J-action-opt-wrap">\n                    <ul class="nowrap J-action-optlist">\n                        <li ng-if="role && !fullscreen.info.filter_opts.meta.split_compare && [\'C200\', \'C310\', \'C500\'].indexOf(fullscreen.queue_show.filter_opts.meta.drillChartType) < 0" export-img data-mode="fullscreen" data-filename="{{fullscreen.name}}">\n                            <a><i class="bdp-icon ico-img"></i></a><span class="text" bo-text="\'dash.exportImg\'| translate"></span>\n                        </li>\n                        <li ng-if="permision.allowExporting && global.exportDataSetting.is_export == 1 && fullscreen.queue_show.filter_opts.meta.drillChartType !== \n                        \'C500\'" export-excel data-mode="fullscreen">\n                            <a><i class="bdp-icon ico-export-excel"></i></a><span class="text" bo-text="\'dash.exportExcel\'| translate"></span>\n                        </li>\n                        <li ng-class="{\'active\': show_data_label}" ng-if="[\'C200\', \'C261\', \'C310\', \'C300\', \'C340\', \'C400\', \'C500\'].indexOf(fullscreen.queue_show.filter_opts.meta.drillChartType) < 0" ng-click="toggleDataLabel()">\n                            <a><i class="bdp-icon" ng-class="{true: \'ico-bookmark-active\', false: \'ico-bookmark\'}[show_data_label]"></i></a><span class="text" bo-text="\'fs.showDataLabel\'| translate"></span>\n                        </li>\n                        <li ng-class="{\'active\': show_chart_description}" ng-click="toggleChartDescription()">\n                            <a><i class="bdp-icon" ng-class="{true: \'ico-text-bubble-active\', false: \'ico-text-bubble\'}[show_chart_description]"></i></a><span class="text" bo-text="\'fs.showDescription\'| translate"></span>\n                        </li>\n                    </ul>\n                </div>\n                \n                <div class="more J-fullscreen-more nowrap" ng-mouseenter="showMore($event)">\n                    <a style="display: none" ng-click="revertSelection()" class="bdp-icon-wrap revert-selection J-revert-selection" bo-title="\'chart.reverSelection\' | translate">\n                        <i class="bdp-icon ico-revert-selection"></i>\n                    </a>\n                    <i class="bdp-icon ico-bookmark-active ico-always-highlight" ng-if="show_data_label && [\'C200\', \'C261\', \'C280\', \'C310\', \'C300\', \'C340\', \'C400\', \'C500\'].indexOf(fullscreen.queue_show.filter_opts.meta.drillChartType) < 0"></i>\n                    <i class="bdp-icon ico-text-bubble-active ico-always-highlight" ng-if="show_chart_description"></i>\n                    <i class="bdp-icon ico-more-horiz"></i>\n                </div>\n            </div>\n            <div class="auto-slide fullscreen-nav" ng-show="!!fullscreen.ableSlide">\n                <ul>\n                    <li>\n                        <a class="prev bdp-icon-wrap" ng-click="slide(-1,{\'auto\':false})" ng-class="{\'disable\':autoPlaying}">\n                            <i class="bdp-icon ico-prev"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a ng-if="!autoPlaying" class="audio-ctrl bdp-icon-wrap" ng-click="autoPlay(true)">\n                            <i class="bdp-icon ico-play"></i>\n                        </a>\n                        <a ng-if="autoPlaying" class="audio-ctrl bdp-icon-wrap" ng-click="autoPlay(false)">\n                            <i class="bdp-icon ico-pause"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a class="next bdp-icon-wrap" ng-click="slide(1,{\'auto\':false})" ng-class="{\'disable\':autoPlaying}">\n                            <i class="bdp-icon ico-next"></i>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class="fs-chart-description" ng-class="{open: show_chart_description}">\n            <div class="block">\n                <p class="hd" bo-text="\'chart.dataUpdate\'|translate"></p>\n                <p class="bd">{{fullscreen.info.filter_opts.meta.tb_update_time | date:\'yyyy-MM-dd HH:mm:ss\'}}</p>\n            </div>\n            <div class="block mt24" ng-if="fullscreen.info.filter_opts.meta.description">\n                <p class="hd" bo-text="\'chart.description\'|translate"></p>\n                <p class="bd">{{fullscreen.info.filter_opts.meta.description}}</p>\n            </div>\n            <div class="block mt24" ng-repeat="y in fullscreen.info.filter_opts.meta.allMetricFields" ng-if="y.description">\n                <p class="hd">{{y.nick_name || y.name}}</p>\n                <p class="bd">{{y.description}}</p>\n            </div>\n            <div class="block mt24" ng-repeat="x in fullscreen.info.filter_opts.meta.x" ng-if="x.description">\n                <p class="hd">{{x.nick_name || x.name}}</p>\n                <p class="bd">{{x.description}}</p>\n            </div>\n        </div>\n    </div>\n\n</div>')
    }]);

angular
    .module("BC.services", [])
    .service("pendingRequests", [function () {
        var e = [];
        this.get = function () {
            return e
        },
            this.add = function (t) {
                e.push(t)
            },
            this.remove = function (t) {
                e = e.filter(function (e) {
                    return e.url !== t
                })
            },
            this.cancelAll = function () {
                angular.forEach(e, function (e) {
                    e.canceller.resolve()
                }), e.length = 0
            },
            this.cancelOne = function (t) {
                if (t && e)
                    for (var a = 0, i = e.length; a < i; a++)
                        if (e[a].url == t) {
                            e[a].canceller.resolve();
                            break
                        }
            }
    }])
    .config(["$httpProvider", function (e) {
        e.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded;charset=utf-8",
            e.defaults.headers.common.Accept = "application/json";
        var t = function (e) {
            var a, i, n, r, o, s, l, d = "";
            for (a in e)
                if ((i = e[a]) instanceof Array)
                    for (l = 0; l < i.length; ++l) o = i[l], n = a + "[" + l + "]", s = {}, s[n] = o, d += t(s) + "&";
                else if (i instanceof Object)
                    for (r in i) o = i[r], n = a + "[" + r + "]", s = {}, s[n] = o, d += t(s) + "&";
                else void 0 !== i && null !== i && (d += encodeURIComponent(a) + "=" + encodeURIComponent(i) + "&");
            return d.length ? d.substr(0, d.length - 1) : d
        };
        e.defaults.transformRequest = function (e) {
            if (angular.isObject(e) && String(e)) {
                var a = {};
                return
                angular.copy(e, a),
                    t(a)
            }
            return e
        }
    }])
    .factory("chartType", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.forEach(function (t) {
                    t.name = e[t.type]
                })
            })
        }
        var i = [
            "C210",
            "C211",
            "C212",
            "C220",
            "C230",
            "C240",
            "C241",
            "C242",
            "C200",
            "C250",
            "C261",
            "C271",
            "C272",
            "C280",
            "C290",
            "C300",
            "C310",
            "C320",
            "C330",
            "C340",
            "C350",
            "C351",
            "C352",
            "C360",
            "C370"];
        a(), e.$on("$translateChangeSuccess", a);
        var n = [{
            cate: "C20",
            type: "C200",
            name: "表格",
            status: !1
        }, {
            cate: "C31",
            type: "C310",
            name: "指标卡",
            status: !1
        }, {
            cate: "C26",
            type: "C261",
            name: "计量图",
            status: !1
        }, {
            cate: "C22",
            type: "C220",
            name: "折线图",
            status: !1
        }, {
            cate: "C21",
            type: "C210",
            name: "簇状柱形图",
            status: !1
        }, {
            cate: "C21",
            type: "C211",
            name: "堆积柱形图",
            status: !1
        }, {
            cate: "C21",
            type: "C212",
            name: "百分比堆积柱形图",
            status: !1
        }, {
            cate: "C32",
            type: "C320",
            name: "瀑布图",
            status: !1
        }, {
            cate: "C24",
            type: "C240",
            name: "条形图",
            status: !1
        }, {
            cate: "C24",
            type: "C241",
            name: "堆积条形图",
            status: !1
        }, {
            cate: "C24",
            type: "C242",
            name: "百分比堆积条形图",
            status: !1
        }, {
            cate: "C24",
            type: "C243",
            name: "对比条形图",
            status: !1
        }, {
            cate: "C35",
            type: "C350",
            name: "面积图",
            status: !1
        }, {
            cate: "C35",
            type: "C351",
            name: "堆积面积图",
            status: !1
        }, {
            cate: "C35",
            type: "C352",
            name: "百分比堆积面积图",
            status: !1
        }, {
            cate: "C28",
            type: "C280",
            name: "散点图",
            status: !1
        }, {
            cate: "C23",
            type: "C230",
            name: "普通饼图",
            status: !1
        }, {
            cate: "C36",
            type: "C360",
            name: "旭日图",
            status: !1
        }, {
            cate: "C37",
            type: "C370",
            name: "树图",
            status: !1
        }, {
            cate: "C33",
            type: "C330",
            name: "漏斗图",
            status: !1
        }, {
            cate: "C27",
            type: "C271",
            name: "地图（面积）",
            status: !1
        }, {
            cate: "C27",
            type: "C272",
            name: "地图（气泡）",
            status: !1
        }, {
            cate: "C25",
            type: "C250",
            name: "双轴",
            status: !1
        }, {
            cate: "C340",
            type: "C340",
            name: "词云",
            status: !1
        }, {
            cate: "C30",
            type: "C300",
            name: "桑基图",
            status: !1
        }, {
            cate: "C29",
            type: "C290",
            name: "雷达图",
            status: !1
        }];
        return n
    }])
    .factory("chartTypeTip", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i)
                .then(function (e) {
                    r.forEach(function (t) {
                        t.name = e[t.type]
                    })
                }),
                t(n)
                    .then(function (e) {
                        r.forEach(function (t) {
                            0 == t.combination.length ? (t.showDimension = e[t.dimension], t.showMetric = e[t.metric])
                                : (t.showCombination[0] = e[t.combination[0]], t.showCombination[1] = e[t.combination[1]])
                        })
                    })
        }

        var i = [
                "C210",
                "C211",
                "C212",
                "C220",
                "C230",
                "C240",
                "C241",
                "C242",
                "C243",
                "C200",
                "C250",
                "C261",
                "C271",
                "C272",
                "C280",
                "C290",
                "C300",
                "C310",
                "C320",
                "C330",
                "C340",
                "C350",
                "C351",
                "C352",
                "C360",
                "C370"],
            n = [
                "only0",
                "onlyOne",
                "onlyTwo",
                "onlyMore",
                "OneOrTwo",
                "0orOne",
                "0orMore",
                "OneorMore",
                "TwoorMore",
                "NoMoreThanTwo",
                "0DMoreV",
                "OneDOneV",
                "OneOrTwoDOneV",
                "OneDMoreV",
                "moreCMoreV",
                "0andMoreC3andMoreV",
                "OneDTwoV",
                "OneDOneCOneV"];
        a(),
            e.$on("$translateChangeSuccess", a);
        var r = [{
            type: "C200",
            name: "表格",
            dimension: "0orMore",
            metric: "0orMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C310",
            name: "指标卡",
            dimension: "only0",
            metric: "OneOrTwo",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C261",
            name: "计量图",
            dimension: "only0",
            metric: "onlyOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C220",
            name: "折线图",
            dimension: "OneOrTwo",
            metric: "OneorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C210",
            name: "簇状柱形图",
            dimension: "NoMoreThanTwo",
            metric: "OneorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C211",
            name: "堆积柱形图",
            dimension: "OneOrTwo",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C212",
            name: "百分比堆积柱形图",
            dimension: "OneOrTwo",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C320",
            name: "瀑布图",
            dimension: "",
            metric: "",
            combination: ["OneOrTwoDOneV", "0DMoreV"],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C240",
            name: "条形图",
            dimension: "NoMoreThanTwo",
            metric: "OneorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C241",
            name: "堆积条形图",
            dimension: "OneOrTwo",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C242",
            name: "百分比堆积条形图",
            dimension: "OneOrTwo",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C243",
            name: "对比条形图",
            dimension: "",
            metric: "",
            combination: ["OneDTwoV", "OneDOneCOneV"],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C300",
            name: "桑基图",
            dimension: "onlyTwo",
            metric: "onlyOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C230",
            name: "普通饼图",
            dimension: "",
            metric: "",
            combination: ["OneDOneV", "0DMoreV"],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C271",
            name: "地图（面积）",
            dimension: "onlyOne",
            metric: "onlyOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C272",
            name: "地图（气泡）",
            dimension: "onlyOne",
            metric: "onlyOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C290",
            name: "雷达图",
            dimension: "",
            metric: "",
            combination: ["OneDMoreV", "0andMoreC3andMoreV"],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C250",
            name: "双轴",
            dimension: "NoMoreThanTwo",
            metric: "onlyMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C280",
            name: "散点图",
            dimension: "0orMore",
            metric: "onlyTwo",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C330",
            name: "漏斗图",
            dimension: "",
            metric: "",
            combination: ["OneDOneV", "0DMoreV"],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C340",
            name: "词云",
            dimension: "onlyOne",
            metric: "only0",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C350",
            name: "面积图",
            dimension: "0orOne",
            metric: "OneorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C351",
            name: "堆积面积图",
            dimension: "onlyOne",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C352",
            name: "百分比堆积面积图",
            dimension: "onlyOne",
            metric: "TwoorMore",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !0
        }, {
            type: "C360",
            name: "旭日图",
            dimension: "TwoorMore",
            metric: "onlyOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }, {
            type: "C370",
            name: "树图",
            dimension: "OneorMore",
            metric: "0orOne",
            combination: [],
            showDimension: "",
            showMetric: "",
            showCombination: [],
            needComparison: !1
        }];
        return r
    }])
    .factory("operatorHelpLink", ["$rootScope", "$translate", function (e, t) {
        var a = "";
        return function (e) {
            switch (e) {
                case "globalFilter":
                    a = "https://help.bdp.cn/index.php?title=%E5%85%A8%E5%B1%80%E7%AD%9B%E9%80%89%E5%99%A8";
                    break;
                case "tableFormatting":
                    a = "https://help.bdp.cn/index.php?title=%E9%A2%9C%E8%89%B2%E4%B8%8E%E6%9D%A1%E4%BB%B6%E6%A0%BC%E5%BC%8F#.E8.A1.A8.E6.A0.BC";
                    break;
                case "plotLine":
                    a = "https://help.bdp.cn/index.php?title=%E9%A2%84%E8%AD%A6%E4%B8%8E%E8%BE%85%E5%8A%A9%E7%BA%BF#.E8.BE.85.E5.8A.A9.E7.BA.BF";
                    break;
                case "chartWarn":
                    a = "https://help.bdp.cn/index.php?title=%E9%A2%84%E8%AD%A6%E4%B8%8E%E8%BE%85%E5%8A%A9%E7%BA%BF#.E9.A2.84.E8.AD.A6";
                    break;
                case "dateYoy":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E7.BB.B4.E5.BA.A6.E4.B8.BA.E9.9D.9E.E6.97.A5.E6.9C.9F.E5.AD.97.E6.AE.B5";
                    break;
                case "customYoy":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E7.BB.B4.E5.BA.A6.E4.B8.BA.E6.97.A5.E6.9C.9F.E5.AD.97.E6.AE.B5";
                    break;
                case "advanceDateFilter":
                    a = "https://help.bdp.cn/index.php?title=%E7%AD%9B%E9%80%89%E5%99%A8#.E6.97.A5.E6.9C.9F.E5.AD.97.E6.AE.B5";
                    break;
                case "innerFilter":
                    a = "https://help.bdp.cn/index.php?title=%E7%AD%9B%E9%80%89%E5%99%A8#.E5.9B.BE.E5.86.85.E7.AD.9B.E9.80.89.E5.99.A8";
                    break;
                case "colorSettingByNum":
                    a = "https://help.bdp.cn/index.php?title=%E9%A2%9C%E8%89%B2%E4%B8%8E%E6%9D%A1%E4%BB%B6%E6%A0%BC%E5%BC%8F#.E6.B8.90.E5.8F.98.E9.A2.9C.E8.89.B2";
                    break;
                case "colorSettingByField":
                    a = "https://help.bdp.cn/index.php?title=%E9%A2%9C%E8%89%B2%E4%B8%8E%E6%9D%A1%E4%BB%B6%E6%A0%BC%E5%BC%8F#.E6.9E.9A.E4.B8.BE.E9.A2.9C.E8.89.B2";
                    break;
                case "resultFilter":
                    a = "https://help.bdp.cn/index.php?title=%E7%AD%9B%E9%80%89%E5%99%A8#.E7.BB.93.E6.9E.9C.E7.AD.9B.E9.80.89.E5.99.A8";
                    break;
                case "chartChain":
                    a = "https://help.bdp.cn/index.php?title=%E5%9B%BE%E8%A1%A8%E8%81%94%E5%8A%A8";
                    break;
                case "chartMoveCalc":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E7.A7.BB.E5.8A.A8.E8.AE.A1.E7.AE.97";
                    break;
                case "chartRepetition":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E9.87.8D.E5.A4.8D.E7.8E.87";
                    break;
                case "chartRetention":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E7.95.99.E5.AD.98.E7.8E.87";
                    break;
                case "chartRunning":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E7.B4.AF.E8.AE.A1.E8.AE.A1.E7.AE.97";
                    break;
                case "chartActivity":
                    a = "https://help.bdp.cn/index.php?title=%E9%AB%98%E7%BA%A7%E8%AE%A1%E7%AE%97#.E6.B4.BB.E8.B7.83.E7.8E.87";
                    break;
                case "csv":
                    a = "https://help.bdp.cn/index.php?title=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0#.E4.B8.8A.E4.BC.A0CSV.E6.96.87.E4.BB.B6";
                    break;
                case "fileUpload":
                    a = "https://help.bdp.cn/index.php?title=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0#.E4.B8.8A.E4.BC.A0Excel.E6.96.87.E4.BB.B6";
                    break;
                case "fileAppend":
                    a = "https://help.bdp.cn/index.php?title=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0#.E8.BF.BD.E5.8A.A0.E6.95.B0.E6.8D.AE";
                    break;
                case "fileReplace":
                    a = "https://help.bdp.cn/index.php?title=%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0#.E6.9B.BF.E6.8D.A2.E6.95.B0.E6.8D.AE";
                    break;
                default:
                    a = ""
            }
            a && window.open(a)
        }
    }])
    .factory("formula", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.forEach(function (t) {
                    t.list ? (t.name = e.more, t.list.forEach(function (t) {
                        t.list ? (t.name = e.PERCENTILE, t.list.forEach(function (t) {
                            t.name = e[t.type]
                        })) : t.name = e[t.type]
                    })) : t.name = e[t.type]
                })
            })
        }
        var i = ["SUM", "AVERAGE", "AVG", "MIN", "MAX", "COUNT", "COUNT_DISTINCT", "more", "MED", "PERCENTILE", "PERCENT_5", "PERCENT_10", "PERCENT_25", "PERCENT_50", "PERCENT_75", "PERCENT_90", "PERCENT_95"],
            n = [{
                name: "求和",
                type: "SUM",
                show: "number"
            }, {
                name: "平均值",
                type: "AVERAGE",
                show: "number"
            }, {
                name: "计数",
                type: "COUNT",
                show: "all"
            }, {
                name: "去重计数",
                type: "COUNT_DISTINCT",
                show: "all"
            }, {
                name: "更多计数方式",
                type: "more",
                show: "number",
                list: [{
                    name: "最大值",
                    type: "MAX",
                    show: "number"
                }, {
                    name: "最小值",
                    type: "MIN",
                    show: "number"
                }, {
                    name: "中位数",
                    type: "MED",
                    show: "number"
                }, {
                    name: "百分位",
                    type: "PERCENTILE",
                    show: "number",
                    list: [{
                        name: "5",
                        type: "PERCENT_5",
                        show: "number",
                        percent: .05
                    }, {
                        name: "10",
                        type: "PERCENT_10",
                        show: "number",
                        percent: .1
                    }, {
                        name: "25",
                        type: "PERCENT_25",
                        show: "number",
                        percent: .25
                    }, {
                        name: "50",
                        type: "PERCENT_50",
                        show: "number",
                        percent: .5
                    }, {
                        name: "75",
                        type: "PERCENT_75",
                        show: "number",
                        percent: .75
                    }, {
                        name: "90",
                        type: "PERCENT_90",
                        show: "number",
                        percent: .9
                    }, {
                        name: "95",
                        type: "PERCENT_95",
                        show: "number",
                        percent: .95
                    }]
                }]
            }];
        return a(),
            e.$on("$translateChangeSuccess", a),
            n
    }])
    .factory("formulaFunc", function () {
        return [{
            name: "求和",
            type: "SUM",
            show: "number"
        }, {
            name: "平均值",
            type: "AVG",
            show: "number"
        }, {
            name: "最大值",
            type: "MAX",
            show: "number"
        }, {
            name: "最小值",
            type: "MIN",
            show: "number"
        }, {
            name: "计数",
            type: "COUNT",
            show: "all"
        }, {
            name: "去重计数",
            type: "COUNT(DISTINCT())",
            show: "all"
        }]
    })
    .factory("verifyTbName", ["$rootScope", "errHint", "$translate", function (e, t, a) {
        var i = "",
            n = ["join.worksheetname", "tbNameInvalid"];
        return function () {
            a(n).then(function (e) {
                i = e["join.worksheetname"] + e.tbNameInvalid
            })
        }(),
            function (e) {
                return !0
            }
    }])
    .factory("dateTimeByHalfHour", ["$rootScope", function (e) {
        return [{
            value: "00:00:00",
            label: "00:00"
        }, {
            value: "01:00:00",
            label: "01:00"
        }, {
            value: "02:00:00",
            label: "02:00"
        }, {
            value: "03:00:00",
            label: "03:00"
        }, {
            value: "04:00:00",
            label: "04:00"
        }, {
            value: "05:00:00",
            label: "05:00"
        }, {
            value: "06:00:00",
            label: "06:00"
        }, {
            value: "07:00:00",
            label: "07:00"
        }, {
            value: "08:00:00",
            label: "08:00"
        }, {
            value: "09:00:00",
            label: "09:00"
        }, {
            value: "10:00:00",
            label: "10:00"
        }, {
            value: "11:00:00",
            label: "11:00"
        }, {
            value: "12:00:00",
            label: "12:00"
        }, {
            value: "13:00:00",
            label: "13:00"
        }, {
            value: "14:00:00",
            label: "14:00"
        }, {
            value: "15:00:00",
            label: "15:00"
        }, {
            value: "16:00:00",
            label: "16:00"
        }, {
            value: "17:00:00",
            label: "17:00"
        }, {
            value: "18:00:00",
            label: "18:00"
        }, {
            value: "19:00:00",
            label: "19:00"
        }, {
            value: "20:00:00",
            label: "20:00"
        }, {
            value: "21:00:00",
            label: "21:00"
        }, {
            value: "22:00:00",
            label: "22:00"
        }, {
            value: "23:00:00",
            label: "23:00"
        }]
    }])
    .factory("capacityHint", ["ngDialog", "$rootScope", function (e, t) {
        return function () {
            e.closeAll(), t.maxSize = t.personalInfo.capacity_info.capacity, e.open({
                template: "/static/partials/dialogTemplates/capacityHint.html",
                className: "ngdialog-theme-default ngDialog-width-330",
                scope: t
            })
        }
    }])
    .factory("errHint", ["$rootScope", "$timeout", "$location", "$translate", function (e, t, a, i) {
        var n = 0,
            r = null,
            o = !1;
        return function (a, s) {
            var l, d = "/login.html",
                c = e.language;
            s = s || {}, window.isThirdIframe || (window.isThirdIframe = e.isThirdIframe = !1);
            var p = !1;
            if ("number" != typeof a && isNaN(Number(a))) l = a;
            else {
                switch (1 * a) {
                    case 1:
                        $.cookie("token", ""), $.cookie("token_invalid", 1, {
                            path: "/"
                        }), o || (o = !0, d = bdp.bdpLogin.checkPartnerLogin(), location.href = d);
                        break;
                    case 2:
                        l = i.instant("error.API");
                        break;
                    case 3:
                        return 0 == n && (l = i.instant("error.noExistOrAccess"), alert(l), n += 1), void(window.location.href = "/");
                    case 4:
                        l = i.instant("error.unManager");
                        break;
                    case 10:
                        l = i.instant("error.serverFail");
                        break;
                    case 11:
                        l = i.instant("error.paramError");
                        break;
                    case 12:
                        l = i.instant("error.internetOutRange"), setTimeout(function () {
                            d = bdp.bdpLogin.checkPartnerLogin(), location.href = d
                        }, 1e3);
                        break;
                    case 13:
                        0 == n && (l = i.instant("error.haveLogin"), alert(l), n += 1), $.cookie("token", ""), $.cookie("token_invalid", 1, {
                            path: "/"
                        }), d = bdp.bdpLogin.checkPartnerLogin(), location.href = d;
                        break;
                    case 14:
                        0 == n && (alert(s.warn_msg), n += 1), d = bdp.bdpLogin.checkPartnerLogin(), location.href = d;
                        break;
                    case 15:
                        0 == n && (l = i.instant("error.noPermission"), alert(l), n += 1), d = bdp.bdpLogin.checkPartnerLogin(), location.href = d;
                        break;
                    case 18:
                        l = i.instant("error.noBind"), l = "";
                        break;
                    case 19:
                        l = i.instant("error.confirmed"), d = bdp.bdpLogin.checkPartnerLogin(), location.href = d, l = "";
                        break;
                    case 20:
                        l = "", $.cookie("password_changed", 1, {
                            path: "/"
                        }), d = bdp.bdpLogin.checkPartnerLogin(), window.location.href = d;
                        break;
                    case 21:
                        l = i.instant("error.noChartOrnoAccess");
                        break;
                    case 22:
                        l = i.instant("error.dashMetaTooLarge");
                        break;
                    case 102:
                        l = i.instant("error.datasourceNotExist");
                        break;
                    case 103:
                        l = i.instant("error.noDelete");
                        break;
                    case 104:
                        l = i.instant("ds.connectFail");
                        break;
                    case 126:
                        l = i.instant("error.apiTimesLimit");
                        break;
                    case 106:
                        l = i.instant("error.saveSuccessAndSync");
                        break;
                    case 108:
                        l = i.instant("error.fieldRepeat");
                        break;
                    case 109:
                        l = i.instant("error.apiUsernameExist");
                        break;
                    case 110:
                        l = i.instant("error.dsRepeat");
                        break;
                    case 111:
                        l = i.instant("error.captchaSendError");
                        break;
                    case 112:
                        l = i.instant("error.captchaError");
                        break;
                    case 113:
                        l = i.instant("error.captchaOutOfLimit");
                        break;
                    case 114:
                        l = i.instant("error.kstRepeat");
                        break;
                    case 115:
                        l = i.instant("error.kstError");
                        break;
                    case 116:
                        l = i.instant("error.jinyiweiConnFail");
                        break;
                    case 117:
                        l = i.instant("error.loginInfoErrorOrUserLock");
                        break;
                    case 118:
                        l = i.instant("error.dsConfigError");
                        break;
                    case 119:
                        l = i.instant("error.loginFrequently");
                        break;
                    case 120:
                        l = i.instant("error.phoneVerifyFail");
                        break;
                    case 121:
                        l = i.instant("error.serviceException");
                        break;
                    case 122:
                        l = i.instant("error.accountFail");
                        break;
                    case 124:
                        l = i.instant("error.passworkWrong");
                        break;
                    case 125:
                        l = i.instant("error.usernameWrong");
                        break;
                    case 128:
                        l = i.instant("ds.baiduTaskExist");
                        break;
                    case 129:
                        l = i.instant("error.tokenWrong");
                        break;
                    case 201:
                        l = i.instant("wb.isUpdatingThen");
                        break;
                    case 1001:
                        l = i.instant("error.userForbidden");
                        break;
                    case 1002:
                        l = i.instant("error.password");
                        break;
                    case 1004:
                        l = i.instant("error.noAuthorizationInfo");
                        break;
                    case 1009:
                        l = i.instant("error.noUser");
                        break;
                    case 1012:
                        l = i.instant("error.limitNumber");
                        break;
                    case 1014:
                        l = "", $.cookie("password_reset", 1, {
                            path: "/"
                        }), d = bdp.bdpLogin.checkPartnerLogin(), window.location.href = d;
                        break;
                    case 1015:
                        l = i.instant("error.accountActived");
                        break;
                    case 1016:
                        l = i.instant("error.accoutLimit");
                        break;
                    case 1018:
                        l = i.instant("error.codeError");
                        break;
                    case 1023:
                        l = i.instant("error.mobileExisted");
                        break;
                    case 3003:
                        l = i.instant("error.noId");
                        break;
                    case 3005:
                        l = i.instant("error.needCtId");
                        break;
                    case 3008:
                        l = i.instant("error.needId");
                        break;
                    case 3009:
                        l = i.instant("error.missId");
                        break;
                    case 3011:
                        l = i.instant("error.fidId");
                        break;
                    case 3204:
                        l = i.instant("error.dashboardOccupied");
                        break;
                    case 3209:
                        l = i.instant("sql.sqlScriptNotBeNull");
                        break;
                    case 3210:
                        l = i.instant("error.dashboardNotbelong");
                        break;
                    case 3211:
                        l = i.instant("error.noChart");
                        break;
                    case 3212:
                        l = i.instant("error.noFolder");
                        break;
                    case 3216:
                        l = i.instant("error.infoErrorInTable");
                        break;
                    case 3219:
                        l = i.instant("error.tplNotExist");
                        break;
                    case 3220:
                        l = i.instant("error.noDashboard");
                        break;
                    case 3221:
                        l = i.instant("error.noBelong");
                        break;
                    case 3222:
                        l = i.instant("error.chartsNumMismatch");
                        break;
                    case 3223:
                        l = i.instant("error.noSelect");
                        break;
                    case 3224:
                        l = i.instant("error.noLinkage");
                        break;
                    case 3231:
                        l = i.instant("error.needConfigList");
                        break;
                    case 3232:
                        l = i.instant("error.infoErrorInTable");
                        break;
                    case 7001:
                        l = i.instant("error.needFormula");
                        break;
                    case 7024:
                        l = i.instant("error.stringAbove");
                        break;
                    case 7200:
                        l = i.instant("error.errorFormula");
                        break;
                    case 7300:
                        l = i.instant("error.unknow");
                        break;
                    case 7400:
                        l = i.instant("error.fieldNull");
                        break;
                    case 7500:
                        l = i.instant("error.fieldRepeat");
                        break;
                    case 7590:
                        l = i.instant("error.fieldUsing");
                        break;
                    case 7601:
                        l = i.instant("error.dataNameRepeat");
                        break;
                    case 7700:
                        l = i.instant("error.errorFormula");
                        break;
                    case 8003:
                        l = i.instant("error.accoutRepeat");
                        break;
                    case 9003:
                        l = i.instant("error.info");
                        break;
                    case 10004:
                        l = i.instant("error.datasourceSyncing");
                        break;
                    case 10005:
                        l = i.instant("error.dsAmountOutOfLimit");
                        break;
                    case 10006:
                        l = s.warn_msg;
                        break;
                    case 10007:
                        l = i.instant("error.noDelete");
                        break;
                    case 10100:
                        l = i.instant("error.noDianJingAccess");
                        break;
                    case 10115:
                        l = i.instant("error.startDateError");
                        break;
                    case 10116:
                        l = i.instant("error.endDateError");
                        break;
                    case 10117:
                        l = i.instant("ds.baiduTaskDomainExit");
                        break;
                    case 10118:
                        l = i.instant("ds.baiduTaskDomainNotExit");
                        break;
                    case 10119:
                        l = i.instant("ds.baiduTaskCompanyError");
                        break;
                    case 10120:
                        l = i.instant("ds.baiduTaskDomainError");
                        break;
                    case 10121:
                    case 10122:
                    case 10123:
                        l = s.warn_msg;
                        break;
                    case 10124:
                        l = i.instant("ds.baiduTaskWeekError");
                        break;
                    case 10625:
                    case 10626:
                        l = i.instant("error.changeFileEncode");
                        break;
                    case 12002:
                        l = i.instant("error.groupRepeat");
                        break;
                    case 12008:
                        l = i.instant("error.contactManager");
                        break;
                    case 12010:
                        l = i.instant("error.noActivateCode");
                        break;
                    case 12011:
                        l = i.instant("error.errorActivateCode");
                        break;
                    case 12111:
                        l = s.warn_msg, setTimeout(function () {
                            $.cookie("token", ""), $.cookie("token_invalid", 1, {
                                path: "/"
                            }), d = bdp.bdpLogin.checkPartnerLogin(), location.href = d
                        }, 1e3);
                        break;
                    case 13001:
                        l = i.instant("error.noSelectId");
                        break;
                    case 13004:
                        l = i.instant("error.selectRepeat");
                        break;
                    case 16004:
                        l = i.instant("error.noPermissionToPreview");
                        break;
                    case 16005:
                        l = i.instant("error.replacingExcelFailed");
                        break;
                    case 16006:
                        l = i.instant("error.exceptionInExcel");
                        break;
                    case 16007:
                        l = i.instant("error.excelNotExist");
                        break;
                    case 16008:
                        l = i.instant("error.excelIsUpdating");
                        break;
                    case 16009:
                        l = i.instant("error.deletingExcelFailed");
                        break;
                    case 16010:
                        l = i.instant("error.excelCanNotBeEmpty");
                        break;
                    case 16011:
                        l = i.instant("error.appendingExcelFailed");
                        break;
                    case 16012:
                        l = i.instant("error.fieldsInExcelMismatch");
                        break;
                    case 16013:
                        l = i.instant("error.sameFieldsWhileAppending");
                        break;
                    case 16014:
                        l = i.instant("error.fieldsNotInTable");
                        break;
                    case 16015:
                        l = i.instant("error.sheetNotExist");
                        break;
                    case 16016:
                        l = i.instant("error.sheetCanNotBeIgnored");
                        break;
                    case 16017:
                        l = i.instant("error.uploadingExcelFailed");
                        break;
                    case 16018:
                    case 16019:
                        l = i.instant("error.fieldsInExcelMismatch");
                        break;
                    case 16025:
                        l = i.instant("error.csvEncodeNotSupport");
                        break;
                    case 16026:
                        l = i.instant("error.changeFileEncode");
                        break;
                    case 19001:
                        l = i.instant("error.selectRely");
                        break;
                    case 19002:
                        l = i.instant("wb.noWorksheets");
                        break;
                    case 19005:
                        l = "聚类字段名称不能为空";
                        break;
                    case 21007:
                        l = i.instant("error.dbCannotBeDeleted");
                        break;
                    case 22001:
                        l = i.instant("error.aggregationsRepeat");
                        break;
                    case 22002:
                        l = i.instant("error.aggregationsNull");
                        break;
                    case 23023:
                        l = i.instant("error.accoutExisted");
                        break;
                    case 23002:
                        l = i.instant("error.captchaError");
                        break;
                    case 23003:
                        l = i.instant("error.personalAccountNotExist");
                        break;
                    case 23008:
                        l = i.instant("error.nicknameExisted");
                        break;
                    case 23009:
                        l = i.instant("error.emailError");
                        break;
                    case 23010:
                        l = i.instant("error.captchaCounts");
                        break;
                    case 23013:
                        l = i.instant("error.formatError");
                        break;
                    case 23014:
                        l = i.instant("error.oneHourLater");
                        break;
                    case 23016:
                        l = i.instant("error.twentyFourHourLater");
                        break;
                    case 23019:
                        l = i.instant("error.emailExisted");
                        break;
                    case 23020:
                        l = i.instant("error.phoneExisted");
                        break;
                    case 23023:
                        l = i.instant("error.personalUserExisted");
                        break;
                    case 23030:
                        l = i.instant("error.sensitiveWord");
                        break;
                    case 24006:
                        l = i.instant("error.accoutAccessLimit");
                        break;
                    case 24007:
                        l = i.instant("error.chartUnremove");
                        break;
                    case 24008:
                        l = i.instant("error.userLimit");
                        break;
                    case 24009:
                        l = i.instant("error.haveDeleted");
                        break;
                    case 24010:
                        l = i.instant("error.haveRule");
                        break;
                    case 24011:
                        l = i.instant("error.haveChart");
                        break;
                    case 24012:
                        l = i.instant("error.removeAccess");
                        break;
                    case 25001:
                        l = i.instant("error.folderExisted");
                        break;
                    case 25004:
                        l = i.instant("wb.cannotMoveToSubFolder");
                        break;
                    case 25005:
                        l = i.instant("wb.cannotMoveTwoLevelsToSubFolder");
                        break;
                    case 26003:
                        l = i.instant("error.nameExisted");
                        break;
                    case 26007:
                        l = i.instant("error.exceedTasks");
                        break;
                    case 26008:
                        l = "分享表暂不支持聚类模型";
                        break;
                    case 29e3:
                        l = s.warn_msg;
                        break;
                    case 3e4:
                        l = i.instant("error.tableDoesNotExist");
                        break;
                    case 30001:
                        l = i.instant("error.tableIsBeingUsed");
                        break;
                    case 30003:
                        l = s.warn_msg;
                        break;
                    case 30004:
                        l = i.instant("error.tableMustBeBasetable");
                        break;
                    case 30005:
                        l = "[" + s.warn_msg + "] " + i.instant("wb.transform.realtimeTableCantJoin");
                        break;
                    case 30007:
                        l = i.instant("error.fieldsInExcelMismatch");
                        break;
                    case 30009:
                        l = i.instant("error.sameTitleExistInExcel");
                        break;
                    case 31e3:
                        l = i.instant("error.existRely");
                        break;
                    case 31005:
                    case 31006:
                        l = s.warn_msg;
                        break;
                    case 31007:
                        l = i.instant("error.viewGeneratorRuleNotExist");
                        break;
                    case 31008:
                        l = i.instant("error.canNotModifyThisViewType");
                        break;
                    case 31009:
                        l = i.instant("error.viewGeneratorTypeNotExist");
                        break;
                    case 32001:
                        l = i.instant("error.openDsTokenError");
                        break;
                    case 32002:
                        l = i.instant("error.ipNotInWhiteList");
                        break;
                    case 40001:
                        l = i.instant("error.noPermissionToDelete");
                        break;
                    case 40002:
                        var u = "";
                        l = i.instant("error.fieldRepeat") + u;
                        break;
                    case 40005:
                        l = s.warn_msg;
                        break;
                    case 40007:
                        l = i.instant("error.dataTooLong");
                        break;
                    case 40008:
                        l = i.instant("error.changeToAggregatorFunc");
                        break;
                    case 40009:
                        l = i.instant("error.titleHasInvalidCharacter");
                        break;
                    case 40010:
                        l = i.instant("error.contentHasInvalidCharacter");
                        break;
                    case 40011:
                        l = i.instant("error.functionNeedBrackets");
                        break;
                    case 40012:
                        l = i.instant("error.mapCanNotBeEmpty");
                        break;
                    case 41001:
                        l = i.instant("error.LdapTokenIsError");
                        break;
                    case 41002:
                        l = i.instant("error.LdapTokenIsDestroyed");
                        break;
                    case 41003:
                        l = i.instant("error.LdapUserNotExist");
                        break;
                    case 70001:
                        l = i.instant("ds.auxiliaryFieldHasExist");
                        break;
                    case 70002:
                        l = i.instant("error.fieldNameUsing");
                        break;
                    case 81001:
                        var u = "";
                        s.warn_msg && (u = "：" + s.warn_msg), l = i.instant("error.illegalFilter") + u;
                        break;
                    case 81002:
                        var u = "";
                        s.warn_msg && (u = "：" + s.warn_msg), l = i.instant("error.illegalSortField") + u;
                        break;
                    case 9e4:
                        l = i.instant("error.partitionExceed");
                        break;
                    case 90001:
                        l = i.instant("error.partitionNotEnough");
                        break;
                    case 90002:
                        l = i.instant("error.intermediateTableNoPartition");
                        break;
                    case 90003:
                        l = i.instant("error.unionTableNoPartition");
                        break;
                    case 90006:
                        l = i.instant("error.childTbBeingCreated");
                        break;
                    case 90100:
                        s.result && s.result.map && (l = s.result.map(function (e) {
                            return e.name
                        }).join()), l = i.instant("chartTemplate.tplUnusable") + "[" + l + "]";
                        break;
                    case 90007:
                        l = i.instant("error.tableTypeNotSupportOpt");
                        break;
                    case 90008:
                        l = i.instant("error.updateModeNotChanged");
                        break;
                    case 90009:
                        l = i.instant("error.canNotChangeToRealTimeUpdateMode");
                        break;
                    case 90010:
                        l = i.instant("error.canNotSetPartitionField");
                        break;
                    case 90011:
                        l = i.instant("error.canNotMergeThisTable");
                        break;
                    case 90012:
                        l = i.instant("error.updatedSoFrequentlyPleaseWait");
                        break;
                    case 100001:
                        l = i.instant("error.failedGetOperatorInfo");
                        break;
                    case 100002:
                        l = i.instant("error.authorizationExpired");
                        break;
                    case 100003:
                        l = i.instant("error.authorizationRecordNotExist");
                        break;
                    case 100004:
                        l = i.instant("error.failedAddOperator");
                        break;
                    case 100005:
                        l = i.instant("error.failedCreateAuthorization");
                        break;
                    case 100006:
                        l = i.instant("error.failedUpdateLdapToken");
                        break;
                    case 100007:
                        l = i.instant("error.failedCreateLdapToken");
                        break;
                    case 100008:
                        l = i.instant("error.failedDeleteLdapToken");
                        break;
                    case 110001:
                        l = i.instant("error.mobileOSorVersionRequired");
                        break;
                    case 110002:
                        l = i.instant("error.unknownMobileOS");
                        break;
                    case 110003:
                        l = i.instant("error.mobileVersionFormatError");
                        break;
                    case 120001:
                        l = i.instant("error.srcDashIdRequiredWhenMovingChart");
                        break;
                    case 120002:
                        l = i.instant("error.targetDashIdRequiredWhenMovingChart");
                        break;
                    case 120003:
                        l = i.instant("error.dashFolderIdRequiredWhenMovingChart");
                        break;
                    case 120004:
                        l = i.instant("error.forbiddenMovingChart");
                        break;
                    case 120005:
                        l = i.instant("error.movedChartExist");
                        break;
                    default:
                        l = s && s.warn_msg ? s.warn_msg : "en" == c ? "Something Wrong~" : "出错啦", p = !0
                }
            }
            return s.dialog ? e.global.dialog_hint = l : 1 == Number(l) && 20 == Number(l) && 1014 == Number(l) || (e.global.hint = l), s.always_show || (r && (t.cancel(r.$$timeoutId), r = null), r = t(function () {
                e.global.dialog_hint = "", e.global.hint = ""
            }, s.delay_time || 5e3)), p
        }
    }])
    .factory("tbList", ["$rootScope", "$http", "errHint", function (e, t, a) {
        return function () {
            t.get("/api/tb/list", {
                params: {
                    access_token: $.cookie("token")
                }
            }).success(function (t) {
                if (0 == t.status) t.result ? e.tbList = t.result.self : e.tbList = [];
                else {
                    var i = parseInt(t.status);
                    a(i)
                }
            })
        }
    }])
    .factory("formatFieldPercentile", ["formulaKeyMap", function (e) {
        return function (e) {
            if (!e) return e;
            if ("PERCENT" != e.aggregator) return e.percent = "", e;
            var t = new RegExp("^(\\d|[1-9]\\d|100)$");
            if ("中位数" == e.aggregator_name || "Median" == e.aggregator_name) e.aggregator = "MED", e.percent = "0.5";
            else if (t.test(parseInt(e.aggregator_name))) {
                var a = parseInt(e.aggregator_name);
                e.aggregator = "PERCENT_" + a, e.percent = String(a / 100)
            }
            return e
        }
    }])
    .factory("setAdvanceAggregatorName", ["formulaKeyMap", function (e) {
        function t(e) {
            var t = bdpChart.language || "zh",
                a = "";
            if (e.hasOwnProperty("yoyQoqType")) {
                var i = e.yoyQoqType;
                e.hasOwnProperty("YoY") && "rate" == i && function (e) {
                    switch (e) {
                        case "year":
                            a = "zh" == t ? "去年同比率" : "Compare to last year(rate)";
                            break;
                        case "quarter":
                            a = "zh" == t ? "上季同比率" : "Compare to last quarter(rate)";
                            break;
                        case "month":
                            a = "zh" == t ? "上月同比率" : "Compare to last month(rate)";
                            break;
                        case "week":
                            a = "zh" == t ? "上周同比率" : "Compare to last week(rate)";
                            break;
                        case "day":
                            a = "zh" == t ? "上日同比率" : "Compare to last day(rate)"
                    }
                }(e.YoY), e.hasOwnProperty("YoY") && "value" == i && function (e) {
                    switch (e) {
                        case "year":
                            a = "zh" == t ? "去年同比值" : "Compare to last year(value)";
                            break;
                        case "quarter":
                            a = "zh" == t ? "上季同比值" : "Compare to last quarter(value)";
                            break;
                        case "month":
                            a = "zh" == t ? "上月同比值" : "Compare to last month(value)";
                            break;
                        case "week":
                            a = "zh" == t ? "上周同比值" : "Compare to last week(value)";
                            break;
                        case "day":
                            a = "zh" == t ? "上日同比值" : "Compare to last day(value)"
                    }
                }(e.YoY), e.hasOwnProperty("QoQ") && function (e) {
                    switch (e) {
                        case "rate":
                            a = "zh" == t ? "环比增长率" : "Day on Day(rate)";
                            break;
                        case "value":
                            a = "zh" == t ? "环比增长值" : "Day on Day(value)"
                    }
                }(i)
            }
            if (e.hasOwnProperty("yoyQoqSetting")) {
                var n = e.yoyQoqSetting;
                "qoq" == n.type ? function (e) {
                    switch (e) {
                        case "year":
                            a = "zh" == t ? "按年环比增长" : "Year on Year";
                            break;
                        case "quarter":
                            a = "zh" == t ? "按季环比增长" : "Quarter on Quarter";
                            break;
                        case "month":
                            a = "zh" == t ? "按月环比增长" : "Month on Month";
                            break;
                        case "week":
                            a = "zh" == t ? "按周环比增长" : "Week on Week";
                            break;
                        case "day":
                            a = "zh" == t ? "按日环比增长" : "Day on Day"
                    }
                }(n.date_field_type) : "filter" == n.type ? function (e) {
                    if (1 == e.aggregator || 2 == e.aggregator) {
                        if (0 == e.compare_method) "filter_yoy_month" == e.filter_type ? a = "zh" == t ? "同比上月增长值" : "Compare to last month year on year increase value" : "filter_yoy_year" == e.filter_type ? a = "zh" == t ? "同比去年增长值" : "Compare to last year year on year increase value" : "filter_yoy_week" == e.filter_type && (a = "zh" == t ? "同比上周增长值" : "Compare to last week year on year increase value");
                        else if (1 == e.compare_method) a = "zh" == t ? "环比增长值" : "Month on month increase value";
                        else if (2 == e.compare_method)
                            if ("zh" == t) {
                                switch (a = "对比" + (0 == e.relative_type ? "前移" : "后移") + e.relative_value, e.date_field_type) {
                                    case "year":
                                        a += "年";
                                        break;
                                    case "quarter":
                                        a += "季";
                                        break;
                                    case "month":
                                        a += "月";
                                        break;
                                    case "week":
                                        a += "周";
                                        break;
                                    case "day":
                                        a += "天"
                                }
                                a += "增长值"
                            } else a = "Compare to " + (0 == e.relative_type ? "Move forward " : "Backward shift ") + e.relative_value + " " + e.date_field_type;
                        else 3 == e.compare_method && (a = "zh" == t ? "对比自定义日期增长值" : "Compare custom date increase value");
                        2 == e.aggregator && (a = a.replace(/值/g, "率").replace(/value/gi, "rate"))
                    } else if (3 == e.aggregator)
                        if (0 == e.compare_method) "filter_yoy_month" == e.filter_type ? a = "zh" == t ? "上月同期值" : "Last month same period value" : "filter_yoy_year" == e.filter_type ? a = "zh" == t ? "去年同期值" : "Last year same period value" : "filter_yoy_week" == e.filter_type && (a = "zh" == t ? "上周同期值" : "Last week same period value");
                        else if (1 == e.compare_method) a = "zh" == t ? "环比对比日期值" : "Month on month compare date value";
                        else if (2 == e.compare_method)
                            if ("zh" == t) {
                                switch (a = (0 == e.relative_type ? "前移 " : "后移 ") + e.relative_value, e.date_field_type) {
                                    case "year":
                                        a += "年";
                                        break;
                                    case "quarter":
                                        a += "季";
                                        break;
                                    case "month":
                                        a += "月";
                                        break;
                                    case "week":
                                        a += "周";
                                        break;
                                    case "day":
                                        a += "天"
                                }
                                a += "值"
                            } else a = (0 == e.relative_type ? "Move forward" : "Backward shift") + e.relative_value + e.date_field_type;
                        else 3 == e.compare_method && (a = "zh" == t ? "自定义日期值" : "Custom date value")
                }(n) : function (e) {
                    switch (e) {
                        case "yoy_week":
                            a = "zh" == t ? "上周同比" : "Compare to last week";
                            break;
                        case "yoy_month":
                            a = "zh" == t ? "上月同比" : "Compare to last month";
                            break;
                        case "yoy_quarter":
                            a = "zh" == t ? "上季同比" : "Compare to last quarter";
                            break;
                        case "yoy_year":
                            a = "zh" == t ? "去年同比" : "Compare to last year";
                            break;
                        case "custom":
                        case "nodate_custom":
                            a = "zh" == t ? "自定义对比" : "Custom Comparison"
                    }
                }(n.type)
            }
            return a
        }

        function a(e) {
            var t = bdpChart.language || "zh",
                a = "1",
                i = "";
            if (e.hasOwnProperty("advance_aggregator")) {
                var n = e.advance_aggregator.type;
                "percentage" == n ? (i = "zh" == t ? "百分比" : "Percentage", a = "1") : "retention" == n ? (i = "zh" == t ? "留存率" : "Retention", a = "0") : "activity" == n ? (i = "zh" == t ? "活跃率" : "Active Rate", a = "0") : "repetition" == n ? (i = "zh" == t ? "重复率" : "Repetition", a = "0") : "running" == n ? (i = "zh" == t ? "累计计算" : "Cumulative Calculation", a = "1") : "moving" == n && (i = "zh" == t ? "移动计算" : "Moving Calculation", a = "1")
            }
            var r = [];
            return r.push(a), r.push(i), r
        }
        return function (i, n) {
            var r = bdpChart.language || "zh",
                o = "",
                s = "",
                l = "",
                d = [];
            if (i.hasOwnProperty("aggregator")) {
                if (o = e[i.aggregator], Number(i.aggregator_name) <= 100 && Number(i.aggregator_name) > 0)
                    if ("zh" == r) o = "百分位" + parseInt(i.aggregator_name);
                    else {
                        var c = "";
                        c = parseInt(i.aggregator_name) % 10 == 1 && 11 != parseInt(i.aggregator_name) ? "st percentile" : parseInt(i.aggregator_name) % 10 == 2 && 12 != parseInt(i.aggregator_name) ? "nd percentile" : parseInt(i.aggregator_name) % 10 == 3 && 13 != parseInt(i.aggregator_name) ? "rd percentile" : "th percentile", o = parseInt(i.aggregator_name) + c
                    }
                1 == i.is_build_aggregated && (o = "")
            }
            i.hasOwnProperty("advance_aggregator") && (d = a(i), s = d[1], "0" == d[0] && (o = ""));
            var p = t(i);
            return p && (s = p), n ? l = s : o ? (l += "(" + o, s && (l += " - " + s), l += ")") : s && (l += "(", l += s, l += ")"), l
        }
    }])
    .factory("getFunctionList", ["$rootScope", "commonService", function (e, t) {
        var a = {
            base: [],
            all: []
        };
        t.getFunctionList().then(function (t) {
            if (0 == t.status) {
                var i = t.result.classification,
                    n = {};
                angular.forEach(i, function (e, t) {
                    n[t] = [], angular.forEach(i[t], function (e, a) {
                        n[t].push({
                            usage: e.usage,
                            description: e.desc,
                            example: e.demo,
                            type: e.name
                        })
                    })
                }), a.base = n[2].concat(n[3]).concat(n[4]).concat(n[5]).concat(n[6]), e.global.funcList = a
            }
        })
    }])
    .service("commonHttp", ["$http", "$rootScope", "errHint", "pendingRequests", "$q", function (e, t, a, i, n) {
        function r(e, a) {
            return o = {}, o._t = (new Date).getTime(), t.wsId && (o.ws_id = t.wsId), angular.extend(o, e), s.errHint = !0, a ? angular.extend(s, a) : a = {}, o
        }
        var o = {},
            s = {
                errHint: !0
            },
            l = function (e) {
                if (e = e.data, "0" == e.status) return e;
                if (s.errHint) {
                    var t = parseInt(e.status),
                        i = null;
                    e.errstr && (i = {
                        warn_msg: e.errstr,
                        result: e.result
                    }), a(t || e.errstr, i)
                }
                return e
            },
            d = ["/api/warn/amount"];
        return {
            get: function (t, a, s) {
                var c = n.defer();
                o = r(a, s), $.inArray(t, d) < 0 && i.add({
                    url: t,
                    canceller: c
                });
                var p = e.get(t, {
                    params: o,
                    timeout: c.promise
                }).then(l);
                return p.finally(function () {
                    i.remove(t)
                }), p.success = function (e) {
                    p.then(e)
                }, p.error = function (e) {
                    p.then(null, e)
                }, p
            },
            post: function (t, a, i) {
                o = r(a, i);
                var s = n.when(e.post(t, o), l);
                return s.success = function (e) {
                    s.then(e)
                }, s.error = function (e) {
                    s.then(null, e)
                }, s
            }
        }
    }])
    .factory("webSocket", [function () {
        function e() {
            return !n && s > 0
        }
        var t = {},
            a = null,
            i = null,
            n = !1,
            r = location.protocol,
            o = "https:" == r ? 30 : 0,
            s = o,
            l = 0,
            d = 0;
        if (!SockJS) throw "Please add socketjs to your app.";
        return t.connect = function (i, c) {
            c = c || {};
            var p = ["opened", "received", "closed"],
                u = $.cookie("token");
            return /^http(s)?:\/\//.test(i) || (i = r + "//" + location.host + i), a = new SockJS(i + "?token=" + u), a.onopen = function () {
                c.onOpen && c.onOpen({
                    status: p[0]
                })
            }, a.onmessage = function (e) {
                var t = "string" == typeof e.data ? $.parseJSON(e.data) : e.data;
                if (0 == t.state && (n = !0, s < 30 && window._BDP_TIME_LOGGER && BDPLogger.log("feStatistics", {
                        category: "websocket",
                        action: "reconnect",
                        opt_label: "onsuccess",
                        opt_value: 1
                    }), s = o, l > 0 && BDPLogger.log("feStatistics", {
                        category: "websocket",
                        action: "reconnectSuc",
                        opt_label: l,
                        opt_value: 1
                    }), l++), 0 == t.state) {
                    if (!c.onMessage) throw "Please give the func of onMessage.";
                    c.onMessage({
                        status: p[1],
                        data: t
                    })
                }
            }, a.onclose = function (r) {
                new Date;
                n = !1, d != l && (d = l, BDPLogger.log("feStatistics", {
                    category: "websocket",
                    action: "reconnectSucClose",
                    opt_label: l,
                    opt_value: 1
                })), window._BDP_TIME_LOGGER && (BDPLogger.log("feStatistics", {
                    category: "websocket",
                    action: "connect",
                    opt_label: "onerror",
                    opt_value: 1
                }), 0 == s && (BDPLogger.log("feStatistics", {
                    category: "websocket",
                    action: "reconnect",
                    opt_label: "onfail",
                    opt_value: 1
                }), BDPLogger.log("webSocket30FailMsg", {
                    token: u
                }), 0 == l && BDPLogger.log("feStatistics", {
                    category: "websocket",
                    action: "reconnectFirst",
                    opt_label: "onfail",
                    opt_value: 1
                }))), e() && t.reConnect(i, c), c.onClose && (c.onClose({
                    status: p[2]
                }), a = null)
            }, t
        }, t.reConnect = function (e, a) {
            t.disconnect(), i = setTimeout(function () {
                t.connect(e, a), s--
            }, 2e3)
        }, t.disconnect = function () {
            null != a && (a.close(), a = null), clearTimeout(i), n = !1
        }, t.send = function (e) {
            a && a.send(e)
        }, t.socket = a, t
    }])
    .factory("autoRefreshChart", ["$timeout", function (e) {
        var t = {};
        return t.visibilityChartOptions = [], t.refresh = function (e) {
            var a = ["data-ctid", "data-scrolling", "data-drill-status"],
                i = e.drawChartUrl,
                n = e.type || "dashboard",
                r = e.scope,
                o = e.ret,
                s = "string" == typeof o.data ? $.parseJSON(o.data) : o.data,
                l = (o.status, o._t),
                d = null;
            if (!r) throw "Please give param scope.";
            if (!r.dashEditMode && !r.autoPlaying && i && (d = s.ct_id || [], d.length)) {
                for (var c in r.draw_chart_url) {
                    var p = r.draw_chart_url[c].options.ct_id;
                    if ($.inArray(p, d) > -1) {
                        var u = $("[" + a[0] + "=" + p + "]"),
                            h = u.attr(a[1]),
                            f = u.attr(a[2]),
                            g = h && "true" == h,
                            m = f && "true" == f;
                        if (g || m) continue;
                        if (u.attr("data-from-websocket", "1"), window.BDP_visibilityChangeFlag && (u.attr("data-page-active", window.BDP_visibilityChangePageActive), !window.BDP_visibilityChangePageActive)) {
                            "dashboard" == n ? t.visibilityChartOptions.push(i[c].options) : t.visibilityChartOptions.push(i.options);
                            continue
                        }
                        "dashboard" == n ? i[c].options._t = l : i.options._t = l, r.draw_chart_url[c].options.read_cache = !1
                    }
                }
                r.$$phase || r.$digest()
            }
        }, t.refreshWaitChart = function () {
            var a = ["data-ctid", "data-scrolling", "data-drill-status"];
            t.visibilityChartOptions.length > 0 && e(function () {
                for (var e = new Date, i = 0, n = t.visibilityChartOptions.length; i < n; i++) {
                    $("[" + a[0] + "=" + t.visibilityChartOptions[i].ct_id + "]").attr("data-from-websocket", 2), t.visibilityChartOptions[i] && (t.visibilityChartOptions[i]._t = e)
                }
                t.visibilityChartOptions = []
            }, 0)
        }, t
    }])
    .factory("modelAlgoList", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.forEach(function (t) {
                    t.name = e["model." + t.transName]
                })
            })
        }
        var i = ["model.modelAlgo1", "model.modelAlgo2"],
            n = [{
                name: "多元线性回归",
                type: 1,
                transName: "modelAlgo1"
            }, {
                name: "聚类",
                type: 2,
                transName: "modelAlgo2"
            }];
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("dashChartLink", ["$rootScope", "commonHttp", "errHint", "ngDialog", function (e, t, a, i) {
        function n(n) {
            return {
                checkSupport: function (e) {
                    var t = 0,
                        a = [];
                    return n.dashStandardItems.forEach(function (e) {
                        var i = e.children[0].meta.type;
                        i && ["C101", "C102", "C103", "C104", "C105"].indexOf(i) > -1 || a.push(e), t = a.length > 1
                    }), !("C261 C290 C300 C310 C320 C330 C340 C400 C360 C370 C500".indexOf(e.type) > -1 || !t || e.chart_jump && "1" == e.chart_jump.can_jump || e && e.level_fields && e.level_fields.length > 1)
                },
                chart_table_map: {},
                table_chart_map: {},
                allChecked: !1,
                get_table_list: function (a, i) {
                    t.post("/api/chart_link/info", {
                        ct_id: a
                    }).then(function (t) {
                        "0" == t.status ? i(t.result) : e.pageLoading = !1
                    })
                },
                init_chart_table_map: function () {
                    var e;
                    angular.forEach(n.dashStandardItems, function (t, a) {
                        e = t.children[0].meta, n.chartChain.chart_table_map[e.ct_id] = e.tb_id
                    })
                },
                open: function (t) {
                    if (!n.chartChain.checkSupport(t)) return !1;
                    e.pageLoading = !0, n.chartChain.init_chart_table_map();
                    var a = function (a) {
                        e.pageLoading = !1;
                        var r = a,
                            o = [],
                            s = {},
                            l = [],
                            d = null,
                            c = function (e) {
                                var t = {
                                    linkCtIdList: [],
                                    linkTbIdList: []
                                };
                                if (!$.isArray(e)) return t;
                                for (var a = 0, i = e.length; a < i; a++) t.linkCtIdList.push(e[a].link_ct_id), t.linkTbIdList.push(e[a].link_tb_id);
                                return t
                            }(r.link_info),
                            p = c.linkCtIdList || {},
                            u = c.linkTbIdList || {};
                        angular.forEach(n.dashStandardItems, function (e, a) {
                            s = e.children[0].meta, s.type && s.ct_id !== t.ct_id && ["C101", "C102", "C103", "C104", "C105"].indexOf(s.type) < 0 && o.push({
                                name: s.name,
                                ct_id: s.ct_id,
                                tb_id: s.tb_id,
                                unsupported: ["C400", "C500"].indexOf(s.type) > -1,
                                selected: $.inArray(s.ct_id, p) > -1,
                                isMainChart: s.chart_link && 2 == s.chart_link.linked_chart_type
                            })
                        }), angular.forEach(r.tb_list, function (e, a) {
                            l.push({
                                show: $.inArray(e.tb_id, u) > -1,
                                name: e.name,
                                fields: e.fields,
                                tb_id: e.tb_id,
                                selected: []
                            }), t.tb_id == e.tb_id && (d = {
                                name: e.name,
                                fields: e.fields,
                                tb_id: e.tb_id,
                                selected: $.inArray(e.tb_id, u) > -1
                            })
                        });
                        for (var h = null, f = !1, g = 0; g < t.x.length; g++) {
                            var m = t.x[g],
                                _ = m.fid,
                                v = !1,
                                b = [];
                            angular.forEach(l, function (e, t) {
                                var a, i = e.tb_id;
                                angular.forEach(r.link_info, function (t) {
                                    t.link_tb_id == i && (e.ct_id = t.link_ct_id, angular.forEach(t.field_map, function (e, t) {
                                        e.field == _ && g == e.index && (a = e.link_field, v = !0)
                                    }))
                                }), b.push({
                                    tbId: i,
                                    linkFieldId: a,
                                    curTable: e,
                                    index: g,
                                    fid: _
                                })
                            }), t.x[g].selectedTable = b, v ? (m.selected = !0, null === h && (h = g), f = !0) : m.selected = !1
                        }
                        f ? t.x[h] && (t.x[h].isCur = !0) : (t.x[0].isCur = !0, t.x[0].selected = !0), angular.forEach(t.x, function (e, t) {
                            1 == e.isCur && t > h && (e.isCur = !1)
                        }), $.inArray(t.type, ["C210", "C211", "C212", "C220", "C240", "C241", "C242"]) > -1 && 2 == t.x.length ? t.chartLinkType = "doubleDms" : "C200" == t.type ? t.chartLinkType = "manyDms" : t.chartLinkType = "oneDms", n.chartChain.changeCheckedAll(o), i.open({
                            template: "/static/partials/chart-chain.html",
                            className: "ngdialog-theme-default str-filter-model chart-chain-modal",
                            data: {
                                main_chart: t,
                                charts: o,
                                main_table: d,
                                tables: l
                            },
                            scope: n
                        })
                    };
                    n.chartChain.get_table_list(t.ct_id, a)
                },
                update_status: function (e, t) {
                    var a = t.charts,
                        i = t.tables,
                        r = n.chartChain.chart_table_map[e.ct_id],
                        o = function (e) {
                            for (var t = 0; t < i.length; t++)
                                if (r === i[t].tb_id) return i[t].show = e, !1
                        };
                    if (n.chartChain.changeCheckedAll(t.charts), e.selected) o(!0);
                    else
                        for (var s = 0; s < a.length; s++)
                            if (o(!1), r === a[s].tb_id && a[s].selected) return o(!0), !1
                },
                changeCheckedAll: function (e) {
                    var t = 0,
                        a = 0;
                    angular.forEach(e, function (e) {
                        e.unsupported || t++, e.selected && a++
                    }), n.chartChain.allChecked = t == a
                },
                checkAllCharts: function (e, t) {
                    n.chartChain.allChecked = e, angular.forEach(t.charts, function (a) {
                        a.unsupported || (a.selected = e, n.chartChain.update_status(a, t))
                    })
                },
                selectDms: function (e, t, a) {
                    angular.forEach(t.x, function (e, t) {
                        e.isCur = t == a
                    })
                },
                save: function (r) {
                    var o = !0,
                        s = [],
                        l = [],
                        d = "manyDms" == r.main_chart.chartLinkType,
                        c = "doubleDms" == r.main_chart.chartLinkType;
                    angular.forEach(r.charts, function (e, t) {
                        e.selected && s.push(e.ct_id)
                    }), 0 === s.length && (a(n.tips["chart.chainChart"]), o = !1), $.each(r.main_chart.x, function (e, t) {
                        var i = t.fid;
                        if (t.selected && (main_chart = !0), $.each(r.charts, function (s, p) {
                                if (p.selected) {
                                    var u, h, f, g = p.tb_id,
                                        m = p.ct_id,
                                        _ = !1;
                                    return angular.forEach(t.selectedTable, function (e) {
                                        e.tbId && e.curTable.tb_id == g ? u = e.linkFieldId : g == r.main_table.tb_id && (u = i)
                                    }), !u && g == r.main_chart.tb_id && (c || !c && t.selected) && (u = i), u && (u = u.split("_")[0], h = {
                                        field: i,
                                        index: e,
                                        link_field: u
                                    }), $.each(l, function (e, t) {
                                        if (t.link_ct_id == m) return _ = !0, f = e, !1
                                    }), !u || d && !t.selected || (_ ? l[f].field_map.push(h) : l.push({
                                        link_ct_id: m,
                                        link_tb_id: g,
                                        field_map: [h]
                                    })), !u && t.selected || "doubleDms" == r.main_chart.chartLinkType && !u ? (o = !1, void a(n.tips["chart.chainField"])) : void 0
                                }
                            }), "oneDms" == r.main_chart.chartLinkType) return !1
                    }), o && t.post("/api/chart_link/commit", {
                        ct_id: r.main_chart.ct_id,
                        link_info: angular.toJson(l)
                    }).then(function (t) {
                        a(n.tips.saveSuccess), n.getDashboardInfo(n.dashSelected), i.closeAll(), e.mainChartIdContainer = [], e.mainChartContainer = []
                    })
                },
                del: function (r, o) {
                    r.stopPropagation(), t.post("/api/chart_link/delete", {
                        ct_id: o
                    }).then(function (t) {
                        a(n.tips.delChartLinkSuccess);
                        var r = $.inArray(o, e.mainChartIdContainer);
                        angular.forEach(e.mainChartContainer, function (t, a) {
                            t.ctId == o && e.mainChartContainer.splice(a, 1)
                        }), e.mainChartIdContainer.splice(r, 1), n.getDashboardInfo(n.dashSelected), i.closeAll()
                    })
                }
            }
        }
        return n
    }])
    .factory("orgTreeHandleService", ["$timeout", function (e) {
        function t() {
            g = "", b = [], y = [], w = [], C = [], x = {}, v = {}, m = 0, _ = 0
        }

        function a(e) {
            k[e.group_id] = {
                usable: e.usable,
                group_level: e.group_level
            }
        }

        function i(e) {
            var t = 0;
            t = 0 == e.group_level ? 16 : f * e.group_level + 16, e.calcStyle = {
                "padding-left": t + "px"
            }, e.group_list = e.group_list ? e.group_list : [], _ = e.nodeCollapse && _ == e.group_level && e.group_list.length ? ++_ : _, m = Math.max(m, e.group_level)
        }

        function n(e, t) {
            v[g].push({
                self_id: e.group_id,
                self_name: e.group_name,
                parent_id: t ? t.group_id : "",
                parent_name: t ? t.group_name : ""
            })
        }

        function r(e) {
            if (e) {
                b.push(e), n(e), a(e);
                for (var t = null; 0 !== b.length;) t = b.shift(), angular.forEach(t.group_list, function (e) {
                    b.push(e), n(e, t), a(t)
                })
            }
        }

        function o(e) {
            if (e) {
                b.push(e);
                for (var t = null; 0 !== b.length;) t = b.shift(), i(t), angular.forEach(t.group_list, function (e) {
                    b.push(e)
                })
            }
        }

        function s(e, t) {
            e && (y.push(e), w.push(e.group_id), C.push(e.group_name), e.items && 0 != e.items.length || t && t(), x[e.group_id] = {
                id: angular.copy(w),
                name: angular.copy(C)
            }, angular.forEach(e.group_list, function (e) {
                s(e, t)
            }), y.pop(), w.pop(), C.pop())
        }

        function l() {
            return {
                flatLevelTreeMap: v,
                allNodePathQueue: x,
                nodeConfigMap: k
            }
        }

        function d(t, a, i) {
            if (_ = 0, angular.forEach(t, function (e) {
                    g = e.group_id, o(e)
                }), i) {
                var n = a,
                    r = _ - 1 < 0 ? 0 : _ - 1;
                e(function () {
                    var e = i + f * r;
                    n.width(Math.max(i, e))
                }, 10)
            }
        }

        function c(e) {
            t(), angular.forEach(e, function (e) {
                g = e.group_id, v[e.group_id] = [], r(e), s(e)
            })
        }

        function p(e) {
            var t = {},
                a = l().flatLevelTreeMap,
                i = !1;
            for (var n in a) {
                var r = a[n];
                if (!i)
                    for (var o = 0, s = r.length; o < s; o++)
                        if (r[o].self_id == e) {
                            t = r[o], i = !0;
                            break
                        }
            }
            return t
        }

        function u(e, t, a) {
            function i(t) {
                r.indexOf(t.group_id) >= 0 && (t.nodeCollapse = !0), t.group_id == e && (t.nodeCollapse = !1, t.checked = a && a[t.group_id] ? a[t.group_id] : t.checked), angular.forEach(t.group_list, function (e) {
                    i(e)
                })
            }
            var n = l().allNodePathQueue,
                r = n[e] && n[e].id || [];
            angular.forEach(t, function (e) {
                i(e)
            })
        }

        function h() {
            t()
        }
        var f = 24,
            g = "",
            m = 0,
            _ = 0,
            v = {},
            b = [],
            y = [],
            w = [],
            C = [],
            x = {},
            k = {};
        return {
            formatTreeConstructor: c,
            getOrgTreeLevelInfo: l,
            calcTreeNodeStyle: d,
            findNodeInfoById: p,
            setNodeCollapseStatus: u,
            clearTreeData: h
        }
    }])
    .factory("dashChartJump", ["$rootScope", "ngDialog", "commonService", "multipleProService", "errHint", "$state", "multipleProService", function (e, t, a, i, n, r, i) {
        function o(o) {
            var s = {
                checkSupport: function (e) {
                    return !("C261 C290 C300 C310 C320 C330 C340 C400 C360 C370 C500".indexOf(e.type) > -1 && 0 == e.ct_type || e && e.level_fields && e.level_fields.length > 1 || e && e.chart_link && 1 * e.chart_link.linked_chart_type == 2)
                },
                getData: function (t, i) {
                    var n = r.params.dashId,
                        o = {
                            ct_id: t,
                            dsh_id: n
                        };
                    [0, 2].indexOf(e.dashCategory) >= 0 && (o.categories = angular.toJson([0, 2])), a.ds.getJumpInfo(o).then(function (t) {
                        "0" == t.status ? i(t.result) : e.pageLoading = !1
                    })
                },
                getChartFields: function (e) {
                    var t = ["C210", "C211", "C212", "C220", "C240", "C241", "C242"],
                        a = null;
                    if ("C200" === e.type) {
                        a = e.x.slice(0);
                        for (var i = 0, n = a.length; i < n; i++) {
                            var r = a[i];
                            r.name = r.nick_name || r.name, r.fIndex = i
                        }
                        return {
                            fields: a,
                            type: "arr"
                        }
                    }
                    return a = $.inArray(e.type, t) > -1 && 2 == e.x.length ? e.x[1] : e.x[0], a.name = a.nick_name || a.name, {
                        fields: a,
                        type: "str"
                    }
                },
                getInitFieldId: function (e, t) {
                    var a = "arr" == t.type ? t.fields[0] : t.fields;
                    return e.fid || a.fid
                },
                getInitFieldObj: function (e, t) {
                    var a = t.fields;
                    if ("arr" == t.type) {
                        for (var i = null, n = 0, r = a.length; n < r; n++) {
                            var o = a[n];
                            if (o.fid == e.fid && "f_index" in e && e.f_index == o.fIndex) {
                                i = o;
                                break
                            }
                        }
                        return i || a[0] || {}
                    }
                    return a
                },
                getInitMode: function (e) {
                    return e.is_blank ? 1 : 0
                },
                getInitDash: function (e, t) {
                    for (var a, i = 0, n = t.length; i < n; i++) {
                        var r = t[i];
                        if ("dashboard" === r.attribute && r.dsh_id == e) {
                            a = r;
                            break
                        }
                    }
                    return a = a || t[0] || {}, a.df_list = a.df_list || [], a
                },
                getInitFilter: function (e, t) {
                    for (var a, i = 0, n = t.length; i < n; i++) {
                        var r = t[i];
                        if (r.df_id == e) {
                            a = r;
                            break
                        }
                    }
                    return a = a || t[0] || {}
                },
                jumpController: ["$scope", "$timeout", function (e, t) {
                    function a(e, t) {
                        e && e.stopPropagation(), t.nodeCollapse = !t.nodeCollapse
                    }

                    function i(t) {
                        if (r.selectProjObj && r.selectProjObj.proj_id !== t.proj_id && (e.dashChartJumpData.currentDashName = ""), e.dashChartJumpData.currentProjectName = t.name, e.dashChartJumpData.showProjectList = !1, t) {
                            r.selectProjObj = angular.copy(t), r.selectDashObj = null;
                            var a = r.selectProjObj.subs || [],
                                i = [];
                            a.map(function (t, a) {
                                "dashboard" === t.attribute && t.dsh_id !== e.selected.dsh_id && i.push(t)
                            }), r.selectProjObj.subs = i, $.isEmptyObject(r.initDash) ? i && i.length > 0 && (e.changeDash(i[0]), r.selectFilterObj = r.selectDashObj.df_list ? r.selectDashObj.df_list[0] : {}) : e.changeDash(r.initDash)
                        }
                        e.$$phase || e.$digest()
                    }

                    function n(t) {
                        e.dashChartJumpData.currentDashName = t.name, e.dashChartJumpData.showDashList = !1, r.selectDashObj = t, r.selectDashObj.df_list = t.df_list || [], r.selectFilterObj = t.df_list[0]
                    }
                    var r = e.ngDialogData;
                    e.dashChartJumpData = {
                        showProjectList: !1,
                        showDashList: !1,
                        currentDashName: "",
                        currentProjectName: ""
                    }, e.changeProj = i, e.changeDash = n, e.nodeCollapseHandle = a,
                        function () {
                            r.initProj ? e.changeProj(r.initProj) : e.changeProj(r.infoList[0])
                        }()
                }],
                showDia: function (e) {
                    if (s.checkSupport(e)) {
                        var a = e.ct_id,
                            n = s.getChartFields(e),
                            r = function (e) {
                                var r = e.select_info || {};
                                i.initDeep(e.info_list, 0);
                                var l = e.info_list,
                                    d = i.getProjObjById(r.proj_id, l),
                                    c = d ? s.getInitDash(r.dsh_id, d.subs || []) : {},
                                    p = s.getInitFilter(r.df_id, c.df_list || []),
                                    u = s.getInitMode(r),
                                    h = s.getInitFieldObj(r, n);
                                t.open({
                                    template: "/static/partials/chart-jump-dash.html",
                                    className: "ngdialog-theme-default chart-jump-model",
                                    data: {
                                        openMode: u,
                                        infoList: l,
                                        initField: h,
                                        jumpFields: n,
                                        initProj: d,
                                        initDash: c,
                                        initFilter: p,
                                        ctId: a
                                    },
                                    scope: o,
                                    controller: s.jumpController
                                })
                            };
                        s.getData(a, r)
                    }
                },
                save: function (e) {
                    if (e.selectFilterObj && e.selectFilterObj.df_id) {
                        e.selectFieldObj = e.selectFieldObj || e.initField;
                        var i = {
                            ct_id: e.ctId,
                            fid: e.selectFieldObj.fid,
                            f_index: e.selectFieldObj.fIndex,
                            proj_id: e.selectProjObj.proj_id,
                            dsh_id: e.selectDashObj.dsh_id,
                            df_id: e.selectFilterObj.df_id,
                            is_blank: 1 * e.openMode
                        };
                        if (! function (e, t) {
                                var a;
                                return a = "date" == e ? 2 : 1, t == a && 1 == t
                            }(e.selectFieldObj.data_type, e.selectFilterObj.type)) return void n(o.tips["dash.dashCartJump.errSameTip"]);
                        a.ds.saveJumpInfo(i).then(function (e) {
                            "0" == e.status ? (o.getDashboardInfo(o.dashSelected), t.closeAll()) : n(e.errstr)
                        })
                    }
                },
                del: function (e, i) {
                    e.stopPropagation(), a.ds.delJumpInfo({
                        ct_id: i
                    }).then(function (e) {
                        "0" == e.status && n(o.tips["dash.dashCartJump.successDelTip"]), o.getDashboardInfo(o.dashSelected), t.closeAll()
                    })
                }
            };
            return s
        }
        return o
    }])
    .factory("chartJumpFuns", ["commonService", "multipleProService", "$location", "$state", "ngDialog", function (e, t, a, i, n) {
        var r = {
            gotoDashboard: function (e, t, i, o) {
                var s = e.is_blank,
                    l = (e.jumpInfo, e.dsh_id),
                    d = (e.df_id, r.getDashUrl(e, t, i, o));
                if (0 == s) {
                    return a.path().indexOf("/dash_fullscreen/") > -1 ? void a.url(d) : (n.closeAll(), void $("body").trigger("changeDashboard", {
                        dshId: l,
                        projInfo: t,
                        url: d
                    }))
                }
                window.open(d, "_blank")
            },
            getPointData: function (e, t) {
                var a = ["C271", "C272"],
                    i = t.info.chart_type,
                    n = t.data.x,
                    r = [];
                return "C200" === i ? e : ($.inArray(i, a) > -1 ? r.push(e.name) : angular.forEach(n, function (t) {
                    r.push(t.data[e.index])
                }), r[r.length - 1])
            },
            getDashUrl: function (e, t, n, o) {
                for (var s, l = e.proj_id, d = e.dsh_id, c = e.df_id, p = e.is_blank, u = p ? "/#" : "", h = a.path(), f = h.indexOf("/dash_edit") > -1 || h.indexOf("/dash_fullscreen") > -1, g = (h.indexOf("dash_tpl"), t.subs.length - 1); g >= 0; g--) {
                    var m = t.subs[g];
                    if ("dashboard" == m.attribute && m.dsh_id === d) {
                        s = m;
                        break
                    }
                }
                var _ = s && 2 == s.category,
                    v = u;
                s && 0 == s.category && (f = !0), v += f || _ ? "/dash_edit" : "/dash_tpl";
                var b, y = t.rule_id,
                    w = r.getPointData(n, o),
                    C = _ ? "/mode/adv" : "",
                    x = "?df_id=" + c + "&range=" + w;
                return b = y ? v + "/" + l + "/" + d + "/" + y : i.params.wsId ? v + "_ws/" + i.params.wsId + "/" + l + "/" + d : v + "/" + l + "/" + d, b = b + C + x
            },
            check: function (a, n, o) {
                var s = n.optional.chart_jump_info,
                    l = n.ct_id,
                    d = s.dsh_id,
                    c = i.params.dashId,
                    p = t.getProjObjById(s.proj_id, o);
                e.ds.checkJumpInfo({
                    ct_id: l,
                    tgt_dsh_id: d,
                    dsh_id: c
                }).then(function (e) {
                    "0" == e.status && (1 == e.result.can_jump ? r.gotoDashboard(s, p, a, n) : errHint("没有筛选器"))
                })
            }
        };
        return r
    }])
    .factory("projectTreeCache", ["$timeout", function (e) {
        return {
            treeCache: null,
            setTreeCache: function (e) {
                this.treeCache = angular.copy(e)
            },
            getTreeCache: function (e) {
                return this.treeCache
            }
        }
    }])
    .service("formulaService", ["$translate", "ngDialog", "commonService", "$timeout", "$q", function (e, t, a, i, n) {
        this.isTooLong = function (e) {
            return a.field.getAggregatorLen(e).then(function (e) {
                var t = !1;
                return 0 == e.status ? e.result.formula_length > 1e3 && (t = !0) : t = "error", t
            })
        }, this.confirmModify = function (a, i) {
            if (isObjectEmpty(i)) var n = e.instant("chart.calcFieldTooLongConfirm");
            else var n = e.instant("chart.groupFieldTooLongConfirm");
            t.openConfirm({
                templateUrl: "/static/partials/dialogTemplates/confirm-dialog.html",
                className: "ngdialog-theme-default ngdialog-width-340",
                data: {
                    message: n,
                    okClick: a
                }
            })
        }, this.alertSuccess = function (e) {
            var a = t.open({
                    template: "/static/partials/dialogTemplates/alert_success.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    data: {
                        message: e
                    },
                    preCloseCallback: function () {
                        i.cancel(n)
                    }
                }),
                n = i(function () {
                    t.close(a.id)
                }, 3e3)
        }
    }]);
function () {
    angular.module("BC.services")
        .service("multipleProService", ["commonService", "$q", function (e, t) {
            function a(e, t) {
                var a = {
                    projList: [],
                    dashList: []
                };
                return angular.forEach(e.subs, function (e) {
                    "project" != e.attribute || !t && e.hidden || a.projList.push(e), "dashboard" != e.attribute || !t && e.hidden || a.dashList.push(e)
                }), a
            }

            function i(e, t) {
                for (var a = t.length - 1; a >= 0; a--) {
                    var n = t[a];
                    if ("project" === n.attribute && n.proj_id === e) return n;
                    if (n.subs && n.subs.length > 0) {
                        var r = i(e, n.subs);
                        if (r) return n.openType = !0, r
                    }
                }
                return null
            }

            function n(e, t, a) {
                for (var i = {
                    mostDeep: t,
                    showDashLen: 0,
                    showProjLen: 0
                }, r = 0, o = 0, s = 0; s < e.length; s++) {
                    var l, d = e[s];
                    d.deep = t, d.styleVal = {
                        "padding-left": 36 * d.deep + "px"
                    }, d.openType = !1, d.parentId = a, d.subs && d.subs.length > 0 && (l = n(d.subs, t + 1, d.proj_id), i.mostDeep = l.mostDeep > i.mostDeep ? l.mostDeep : i.mostDeep, d.showDashLen = l.showDashLen, d.showProjLen = l.showProjLen), "project" == d.attribute && (d.hidden && (i.showProjLen += 1), r += 1), "dashboard" == d.attribute && (d.hidden && (i.showDashLen += 1), o += 1)
                }
                return i.showProjLen = r - i.showProjLen, i.showDashLen = o - i.showDashLen, i
            }

            function r(e, t) {
                e.forEach(function (e, a, i) {
                    t && (e.parent = t), ("project" == e.attribute || e.subs) && e.subs && e.subs.length > 0 && r(e.subs, e)
                })
            }

            function o(e) {
                function t(e) {
                    delete e.parent, e.subs && e.subs.map(function (e) {
                        t(e)
                    })
                }
                e.map(function (e) {
                    t(e)
                })
            }

            function s(e, t) {
                var a = e.subs;
                e.dsh_id ? t.push(e.dsh_id) : a && angular.forEach(a, function (e) {
                    s(e, t)
                })
            }

            function l(e, t) {
                function a(e, t) {
                    var i = {};
                    return "project" == e.attribute ? ("projLen" == t && n.push(1), angular.forEach(e.subs, function (e) {
                        i.depth = a(e, t)
                    })) : "depth" == t && (i.depth = e.deep), i
                }
                var i;
                if ("depth" == t) i = a(e).depth - e.deep + 1;
                else if ("projLen" == t) {
                    var n = [];
                    angular.forEach(e, function (e) {
                        a(e, t)
                    }), i = n.length
                }
                return i
            }

            function d(e, t) {
                t[e.proj_id + e.type] = 0, e.parent && d(e.parent, t)
            }

            function c(e, t) {
                var a = e.proj_id;
                if (a && t.push(a), !e.parent) return t;
                c(e.parent, t)
            }

            function p(e, t, a, i) {
                e.proj_id == t && a && a.splice(i, 1);
                var n = e.subs;
                n && n.forEach(function (e, a, i) {
                    p(e, t, i, a)
                })
            }

            function u(e, t) {
                var a;
                if (e) {
                    for (var i = 0; i < t.length; i++) {
                        if (t[i].proj_id == e || t[i].dsh_id == e) {
                            a = t[i];
                            break
                        }
                        if (t[i].subs && (a = u(e, t[i].subs))) return a
                    }
                    return a
                }
            }
            this.delPar = o, this.initDeep = n, this.findItem = u, this.findParId = c, this.deleteItem = p, this.makeParent = r, this.pushChooseDsh = s, this.openCurFolder = d, this.getSubsByType = a, this.getProjObjById = i, this.getRecursiveParam = l
        }])
        .filter("dashParentsPath", [function (e) {
            return function (e, t) {
                if (!angular.isArray(e)) throw new Error("list must be array.");
                for (var a = 0, i = e.length; a < i; a++) {
                    for (var n = e[a].parents, r = [], o = 0, s = n.length; o < s; o++) r.push(n[o].name);
                    e[a].proj_id && e[a].dsh_id && r.push(e[a].proj_name),
                    e[a].dsh_id && e[a].ct_id && r.push(e[a].dsh_name),
                        e[a].path = r.join(" / ")
                }
                return e
            }
        }])
}();
angular.module("filter", [])
    .filter("null_date", ["$rootScope", "$translate", function (e, t) {
        function a() {
            return t(["all", "chart.notLimit"]).then(function (e) {
                i = e["chart.notLimit"]
            })
        }
        var i = "不限";
        return a(), e.$on("$translateChangeSuccess", a),
            function (e) {
                return e || i
            }
    }])
    .filter("format_date", ["$rootScope", "$translate", function (e, t) {
        function a() {
            return t(["all", "chart.notLimit"]).then(function (e) {
                i = e.all, n = e["chart.notLimit"]
            })
        }
        var i = "全部时间",
            n = "不限";
        a(), e.$on("$translateChangeSuccess", a);
        var r = /^opt_[0-9a-zA-Z]{32}$/;
        return function (e, t, a) {
            if (1 == e.length && !r.test(e[0])) return e[0];
            if (!e) return a || i;
            var o = e.length,
                s = "test";
            switch (o) {
                case 0:
                    s = a || i;
                    break;
                case 1:
                    s = r.test(e[0]) ? function () {
                        var n = "";
                        return angular.forEach(t, function (t, a) {
                            t.opt_id === e[0] && (n = t.name)
                        }), n = n || (a || i)
                    }() : e[0];
                    break;
                case 2:
                    s = (e[0] ? e[0] : n) + "~" + (e[1] ? e[1] : n);
                    break;
                default:
                    s = a || i
            }
            return s
        }
    }])
    .filter("inner_range_date_format", function () {
        return function (e, t) {
            var a = t.granularity,
                i = t.granularity_name || "",
                n = t.month_start_day || 0;
            return e.length ? e.map(function (e) {
                return bdpChart.helper.checkGranularity(a, e, i, n)
            }).join(",") : e
        }
    })
    .filter("granularity", ["granularityMap", function (e) {
        return function (t) {
            var a = t;
            return t && (a = "chart.by" + t.charAt(0).toUpperCase() + t.substring(1)), e[a] || e["chart.byDay"]
        }
    }])
    .filter("dataShowType", ["dataShowTypeMap", function (e) {
        return function (t) {
            var a = t;
            return t && (a = "chart.by" + t.charAt(0).toUpperCase() + t.substring(1)), e[a] || e["chart.byText"]
        }
    }])
    .filter("empty", function () {
        return function (e) {
            return "NULL" == e && (e = ""), e
        }
    })
    .filter("query_inner", function () {
        return function (e, t, a) {
            if (!e || !t) return e;
            var i = [];
            if ("string" == typeof e[0]) angular.forEach(e, function (e) {
                e.toLowerCase().indexOf(t.toLowerCase()) > -1 && i.push(e)
            });
            else {
                var n;
                angular.forEach(e, function (e) {
                    n = bdpChart.helper.checkGranularity(a, e), n.toLowerCase().indexOf(t.toLowerCase()) > -1 && i.push(e)
                })
            }
            return i
        }
    })
    .filter("query_fields", function () {
        return function (e, t, a) {
            if (!t) return e;
            a = a || "fuzzy";
            var i = [];
            return angular.forEach(e, function (e) {
                "number" != typeof e.name && "number" != typeof e.original_name || (e.name = e.name.toString(), e.original_name = e.original_name.toString()), e.original_name ? (e.original_name.toLowerCase().indexOf(t.toLowerCase()) > -1 || e.name.toLowerCase().indexOf(t.toLowerCase()) > -1) && i.push(e) : "fuzzy" == a && e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 ? i.push(e) : "exactly" == a && e.name.toLowerCase() == t.toLowerCase() && i.push(e)
            }), i
        }
    })
    .filter("queryFieldsAsTitle", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                "number" == typeof e.name && (e.title = e.title.toString()), e.title.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("query_tables", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                "number" == typeof e.name && (e.name = e.name.toString()), (e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 || e.label && e.label.toLowerCase().indexOf(t.toLowerCase()) > -1) && a.push(e)
            }), a
        }
    })
    .filter("categoryFilter", ["$rootScope", function (e) {
        return function (t, a) {
            if (!a) return t;
            for (var i = [], n = e.language, r = 0, o = t.length; r < o; r++) t[r].db_name[n].toLowerCase().indexOf(a.toLowerCase()) == -1 && t[r].category_name[n].toLowerCase().indexOf(a.toLowerCase()) == -1 || i.push(t[r]);
            return i
        }
    }])
    .filter("nameFilter", function () {
        return function (e, t) {
            if (!t) return e;
            for (var a = [], i = 0; i < e.length; i++) e[i].original_name ? e[i].name.toLowerCase().indexOf(t) == -1 && e[i].original_name.toLowerCase().indexOf(t) == -1 || a.push(e[i]) : e[i].name.toLowerCase().indexOf(t) != -1 && a.push(e[i]);
            return a
        }
    })
    .filter("titleFilter", function () {
        return function (e, t) {
            if (!t) return e;
            for (var a = [], i = 0; i < e.length; i++) e[i].title.toLowerCase().indexOf(t) != -1 && a.push(e[i]);
            return a
        }
    })
    .filter("query_models", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                "number" == typeof e.name && (e.name = e.name.toString()), e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("query_fields_nick_name", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                "number" != typeof e.nick_name && "number" != typeof e.name || (e.nick_name = e.nick_name.toString(), e.name = e.name.toString()), (e.nick_name.toLowerCase().indexOf(t.toLowerCase()) > -1 || e.name.toLowerCase().indexOf(t.toLowerCase()) > -1) && a.push(e)
            }), a
        }
    })
    .filter("query_baiduSearch", function () {
        return function (e, t) {
            var a = [];
            return t ? "暂未设置" === t ? (angular.forEach(e, function (e, t) {
                "" === e.companyName && a.push(e)
            }), a) : (angular.forEach(e, function (e, i) {
                "number" == typeof e.companyName && (e.companyName = e.companyName.toString()), (e.companyName.toLowerCase().indexOf(t.toLowerCase()) > -1 || 0 == i) && a.push(e)
            }), a) : e
        }
    })
    .filter("cutLength", function () {
        return function (e, t) {
            if (!t) return e;
            var a = e;
            return e.length > t && (a = e.slice(0, t) + "……"), a
        }
    })
    .filter("query_updateRecord_fileLlist", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                (e.excel_name + "-" + e.sheet_name).toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("queryByTagorDstype", ["$rootScope", function (e) {
        return function (t, a) {
            function i(e) {
                return e.tag && e.tag.toLowerCase().indexOf(a.toLowerCase()) > -1
            }

            function n(t) {
                var i = t.ds_type_name[e.language];
                return i && i.toLowerCase().indexOf(a.toLowerCase()) > -1
            }
            if (!a) return t;
            var r = [];
            return angular.forEach(t, function (e) {
                (i(e) || n(e)) && r.push(e)
            }), r
        }
    }])
    .filter("query_ds_names_or_tags", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [],
                i = [];
            angular.forEach(e, function (e) {
                e.hasOwnProperty("tag") && null != e.tag && e.tag.toLowerCase().indexOf(t.toLowerCase()) > -1 ? a.push(e) : e.hasOwnProperty("ds_name") && null != e.ds_name && e.ds_name.toLowerCase().indexOf(t.toLowerCase()) > -1 && i.push(e)
            });
            return a.concat(i)
        }
    })
    .filter("query_user", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                (e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 || e.username && e.username.toLowerCase().indexOf(t.toLowerCase()) > -1) && a.push(e)
            }), a
        }
    })
    .filter("query_group", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                e.group_name.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("query_parse_param", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [],
                i = [];
            return angular.forEach(e, function (e) {
                i = [], angular.forEach(e.keys, function (e) {
                    e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 && i.push(e)
                }), i.length > 0 && a.push({
                    original_field_id: e.original_field_id,
                    original_field_name: e.original_field_name,
                    keys: i
                })
            }), a
        }
    })
    .filter("filter_compare", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(["warn.higher", "warn.lower"]).then(function (e) {
                i = e["warn.higher"], n = e["warn.lower"]
            })
        }
        var i = "高于",
            n = "低于";
        return a(), e.$on("$translateChangeSuccess", a),
            function (e) {
                return 1 == e ? i : n
            }
    }])
    .filter("warnSwitch", ["$translate", function (e) {
        var t = "开启预警",
            a = "关闭预警";
        return e(["warn.open", "warn.close"]).then(function (e) {
            t = e["warn.open"], a = e["warn.close"]
        }),
            function (e) {
                return 1 == e ? a : t
            }
    }])
    .filter("sub_date", function () {
        return function (e, t) {
            var a = t.data_type,
                i = t.config ? t.config.granularity : t.granularity,
                n = t.name;
            return void 0 === e || "" === e || 0 == e.length ? n : "string" == a ? "object" != typeof e ? e : e.join("，") : "date" == a ? "object" != typeof e ? bdpChart.helper.checkGranularity(i, e) : e.map(function (e) {
                return bdpChart.helper.checkGranularity(i, e)
            }).join("，") : (i = t.fid.split("_")[1], bdpChart.helper.subDateFormat(i, e))
        }
    })
    .filter("dash_sub_date", ["$rootScope", "$translate", function (e, t) {
        var a = "全部";
        return t("all").then(function (e) {
            a = e
        }), e.$on("$translateChangeSuccess", function () {
            t("all").then(function (e) {
                a = e
            })
        }),
            function (e, t) {
                var i = t.data_type,
                    n = t.granularity;
                return void 0 === e || "" === e || 0 == e.length ? a : "string" == i ? "object" != typeof e ? e : e.join("，") : "date" == i ? "object" != typeof e ? bdpChart.helper.checkGranularity(n, e) : e.map(function (e) {
                    return bdpChart.helper.checkGranularity(n, e)
                }).join("，") : (n = t.fid.split("_")[1], "object" != typeof e ? bdpChart.helper.subDateFormat(n, e) : e.map(function (e) {
                    return bdpChart.helper.subDateFormat(n, e)
                }).join(","))
            }
    }])
    .filter("plot_line_calc", ["formulaKeyMap", function (e) {
        return function (t) {
            return e[t]
        }
    }])
    .filter("date_gran_to_name", ["dateNameMap", function (e) {
        return function (t) {
            return e[t] || e.day
        }
    }])
    .filter("tb_type_hint", function () {
        return function (e, t) {
            if ("access_tb" == t) return "分配";
            var a;
            switch (e) {
                case "excel":
                    a = "Excel";
                    break;
                case "join":
                    a = "多表合并";
                    break;
                case "aggr":
                    a = "数据聚合";
                    break;
                case "ds":
                    a = "数据库表";
                    break;
                case "public":
                    a = "公共数据表";
                    break;
                default:
                    a = "工作表"
            }
            return a
        }
    })
    .filter("userStatus", ["$translate", "$rootScope", function (e, t) {
        function a() {
            e(["user.base_info.unactive", "user.base_info.pwd"]).then(function (e) {
                i = e["user.base_info.unactive"], n = e["user.base_info.pwd"]
            })
        }
        var i = "未激活",
            n = "已重置密码";
        return a(), t.$on("$translateChangeSuccess", a),
            function (e) {
                return 1 == e ? i : n
            }
    }])
    .filter("fieldType", function () {
        return function (e) {
            switch (e = Number(e)) {
                case 0:
                case 1:
                    return "数值";
                case 2:
                    return "字符串";
                case 3:
                    return "日期"
            }
        }
    })
    .filter("granularityName", ["granularityMap", function (e) {
        return function (t) {
            var a = t;
            return t && (a = "chart.by" + t.charAt(0).toUpperCase() + t.substring(1)), e[a] || e.normal
        }
    }])
    .filter("buildAggregator", function () {
        return function (e) {
            return e ? e.filter(function (e) {
                return 1 !== e.is_build_aggregated
            }) : []
        }
    })
    .filter("db_type", ["$rootScope", "databaseType", function (e, t) {
        return function (e) {
            for (var a = "", i = 0; i < t.length; i++)
                if (t[i].dbType == e) {
                    a = t[i].typeName;
                    break
                }
            return a
        }
    }])
    .filter("weekFormat", function () {
        return function (e) {
            "number" != typeof e && (e = new Date(e).getTime());
            return Highcharts.dateFormat("%b/%e", e) + "~" + Highcharts.dateFormat("%b/%e", e + 5184e5)
        }
    })
    .filter("dateFormat", function () {
        return function (e) {
            return Highcharts.dateFormat("%Y-%m-%d", new Date(e))
        }
    })
    .filter("workTbName", function () {
        return function (e) {
            return e || "请选择工作表"
        }
    })
    .filter("workFieldName", function () {
        return function (e) {
            return e || "请选择字段"
        }
    })
    .filter("filterOperator", ["filterOperatorMap", function (e) {
        return function (t) {
            return "" === t ? "" : e[t] || e[0]
        }
    }])
    .filter("conditionType", function () {
        return function (e) {
            return 0 == e ? "全部" : "任一"
        }
    })
    .filter("timestamp2LocaleDate", [function () {
        return function (e, t) {
            return bdpChart.helper.checkGranularity(t, e)
        }
    }])
    .filter("t2Date", [function () {
        return function (e, t) {
            var a = t.granularity,
                i = t.granularity_name || "",
                n = t.month_start_day || 0;
            return "week" === a && (n = t.week_start_day_of_week), bdpChart.helper.checkGranularity(a, e, i, n)
        }
    }])
    .filter("yoyTypeTranslate", ["$rootScope", "dateNameMap", function (e, t) {
        return function (a, i) {
            var n, r;
            return "zh" == e.language ? (n = "环比增长", r = "value" == i ? "值" : "率") : (n = t[a] + " on " + t[a], r = i ? "(" + i + ")" : ""), i ? n + r : n
        }
    }])
    .filter("thisCaptain", function () {
        return function (e) {
            return e.substring(0, 4) + e.charAt(4).toUpperCase() + e.substring(5)
        }
    })
    .filter("i18nMonth", ["$rootScope", function (e) {
        var t = e.language,
            a = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        return function (e) {
            return "zh" === t ? e + "月" : "en" === t ? a[e - 1] : void 0
        }
    }])
    .filter("i18nWeek", ["$rootScope", function (e) {
        var t = e.language,
            a = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            i = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];
        return function (e) {
            return "zh" === t ? i[e - 1] : "en" === t ? a[e - 1] : void 0
        }
    }])
    .filter("i18nDay", ["$rootScope", function (e) {
        var t = e.language;
        return function (e) {
            if ("zh" === t) return e + "日";
            if ("en" === t) switch (e) {
                case 1:
                    return e + "st";
                case 2:
                    return e + "nd";
                case 3:
                    return e + "rd";
                default:
                    return e + "th"
            }
        }
    }])
    .filter("timestamp2DayInWeek", ["$rootScope", function (e) {
        var t = e.language,
            a = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            i = ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"];
        return function (e) {
            var n = new Date(e),
                r = n.getDay();
            return r = 0 === r ? 7 : r, "zh" === t ? i[r - 1] : "en" === t ? a[r - 1] : void 0
        }
    }])
    .filter("query_union_table", function () {
        return function (e, t) {
            var a = [];
            return t ? (angular.forEach(e, function (e) {
                e.hasOwnProperty("tag") && e.tag.toLowerCase().indexOf(t.toLowerCase()) > -1 ? a.push(e) : e.hasOwnProperty("name") && e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a) : e
        }
    })
    .filter("timestampToHoursFormat", ["$translate", function (e) {
        return function (t) {
            t /= 1e3;
            var a = Math.floor(t / 3600),
                i = Math.floor((t - 3600 * a) / 60),
                n = Math.floor(t - 3600 * a - 60 * i);
            return a + e.instant("author.hour") + i + e.instant("author.minute") + n + e.instant("author.second")
        }
    }])
    .filter("fieldFilter", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                "number" == typeof e.name && (e.name = e.name.toString()), e.name.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("dbLogSheetStatus", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                e.status != t && "all" != t || a.push(e)
            }), a
        }
    })
    .filter("dbLogSheetQuery", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                e.title.toLowerCase().indexOf(t.toLowerCase()) > -1 && a.push(e)
            }), a
        }
    })
    .filter("dbLogTaskStatus", function () {
        return function (e, t) {
            if (!t) return e;
            var a = [];
            return angular.forEach(e, function (e) {
                e.status != t && "all" != t || a.push(e)
            }), a
        }
    })
    .filter("htmlFilter", ["$sce", function (e) {
        return function (t) {
            return e.trustAsHtml(t)
        }
    }])
    .filter("dateFormat", ["$translate", function (e) {
        return function (t, a) {
            t = t.replace(/-/g, "/"), a = a.replace(/-/g, "/");
            var i = new Date(t).getTime(),
                n = function () {
                    var e = Highcharts.dateFormat("%Y/%m/%d", new Date);
                    return new Date(e).getTime()
                }(),
                r = new Date(a).getTime(),
                o = parseInt((n - i) / 1e3 / 60 / 60);
            if (!(i < n)) {
                var s = parseInt((r - i) / 1e3 / 60 / 60);
                if (s >= 1) return s + e.instant("hourAgo");
                var l = parseInt((r - i) / 1e3 / 60);
                return l > 5 ? l + e.instant("minuteAgo") : e.instant("just")
            }
            return o > 48 ? t.replace(/(.{4})\/(.{2})\/(.{2})(.*)$/, function (t, a, i, n) {
                return a + e.instant("upyear") + i + e.instant("upmonth") + n + e.instant("upday")
            }) : o < 48 && o >= 24 ? e.instant("beforeYesterday") : o < 24 ? e.instant("yesterday") : void 0
        }
    }])
    .filter("getFieldsByDataType", function () {
        return function (e, t) {
            var a = [];
            return angular.forEach(e, function (e, i) {
                e.data_type == t && a.push(e)
            }), a
        }
    })
    .filter("trustUrl", ["$sce", function (e) {
        return function (t) {
            return e.trustAsResourceUrl(t)
        }
    }])
    .filter("toSce", ["$sce", function (e) {
        return function (t) {
            return e.trustAsHtml(t)
        }
    }])
    .filter("handleRowSummary", function () {
        return function (e) {
            var t = bdpChart.language || "zh",
                a = "zh" == t ? "行总计" : "Row Summary";
            return $.inArray(e.originName, ["行总计", "Row Summary"]) > -1 ? a : e.name
        }
    });
function () {
    angular
        .module("BC.services")
        .service("commonService", ["$http", "errHint", "commonHttp", function (e, t, a) {
            var i, n, r, o = function (e) {
                if (e = e.data || e, "0" == e.status) return e.result;
                var a = null;
                return e.errstr && (a = {
                    warn_msg: e.errstr
                }), t(Number(e.status), a), null
            };
            i = {
                modify: function (e) {
                    return a.post("/api/global_config/modify", {
                        data: e
                    }).then(o)
                },
                themeModify: function (e) {
                    return a.post("/api/user/modify_theme", {
                        theme_id: e
                    })
                }
            },
                n = {
                    create: function (e, t, i) {
                        return a.post("/api/project/create", {
                            name: e,
                            parent_id: t || "",
                            category: i
                        })
                    },
                    getTree: function (e) {
                        return a.get("/api/project/tree", e).then(o)
                    },
                    modify: function (e, t) {
                        return a.get("/api/project/modify", {
                            proj_id: e,
                            data: {
                                name: t
                            }
                        })
                    },
                    del: function (e) {
                        return a.post("/api/project/delete", {
                            proj_id: e
                        })
                    },
                    move: function (e) {
                        return a.post("/api/project/move", {
                            sort: angular.toJson(e.sort),
                            parent_id: e.parent_id,
                            proj_id: e.proj_id,
                            type: e.type,
                            category: e.category
                        })
                    }
                },
                r = {
                    getList: function (e) {
                        return a.get("/api/dashboard/list", e).then(o)
                    },
                    getInfo: function (e) {
                        var t = {};
                        return e = angular.extend(t, e), a.get("/api/dashboard/info", e)
                    },
                    create: function (e) {
                        return a.post("/api/dashboard/create", {
                            name: e.name,
                            proj_id: e.proj_id,
                            label: e.label || "",
                            comment: e.comment || "",
                            meta: angular.toJson({
                                show_block: !0
                            }),
                            category: e.category,
                            resolution: e.resolution
                        })
                    },
                    modify: function (e) {
                        return e.access_token = $.cookie("token"), a.post("/api/dashboard/modify", e)
                    },
                    del: function (e) {
                        return a.post("/api/dashboard/delete", {
                            dsh_id: e
                        })
                    },
                    move: function (e) {
                        return a.post("/api/dashboard/move", {
                            sort: angular.toJson(e.sort),
                            dsh_id: e.dsh_id,
                            parent_id: e.parent_id,
                            type: e.type,
                            rule_id: e.rule_id,
                            category: e.category
                        })
                    },
                    hide: function (e) {
                        return a.post("/api/dashboard/hide", e)
                    }
                },
                chart = {
                    getInfo: function (e) {
                        var t = {};
                        return "string" == typeof e ? t.ct_id = e : t = angular.extend(e, t), a.post("/api/chart/info", t)
                    },
                    getData: function (t) {
                        return e.post("/api/chart/data", {
                            ct_id: t
                        })
                    },
                    create: function (e) {
                        var t = {
                                dsh_id: e.dsh_id,
                                category: e.category
                            },
                            i = {
                                normal: 0,
                                gis: 1,
                                text: 2,
                                view: 7,
                                custom: 8
                            },
                            n = i[e.type];
                        return t.ct_type = n || 0, e.ct_type && (t.ct_type = e.ct_type), t.name = e.name, "view" == e.type ? (t.parent_id = e.parent_id, t.tb_id = e.tb_id, "number" == typeof e.ct_type && (t.ct_type = e.ct_type)) : "custom" == e.type || "gis" == e.type ? t.tb_ids = angular.toJson(e.tb_id) : t.tb_id = e.tb_id, e.dsh_meta && (t.dsh_meta = angular.toJson(e.dsh_meta)), a.post("/api/chart/create", t)
                    },
                    copy: function (e) {
                        return a.get("/api/chart/copy", e)
                    },
                    del: function (e) {
                        return e.dsh_meta && (e.dsh_meta = angular.toJson(e.dsh_meta)), a.post("/api/chart/delete", e)
                    },
                    modify: function (e) {
                        return a.post("/api/chart/modify", e)
                    },
                    getDbInfo: function (e) {
                        return a.get("/api/chart/database_info", {
                            ct_id: e
                        })
                    },
                    modifyTb: function (e, t) {
                        return a.get("/api/chart/modify_tb", {
                            ct_id: e,
                            tb_id: t
                        })
                    },
                    getRelationList: function (e) {
                        return a.get("/api/chart/rela_list", {
                            tb_id: e
                        }).then(o)
                    },
                    search: function (e) {
                        return a.post("/api/chart/search", e).then(o)
                    },
                    getSizeGroups: function (e, t, i, n, r) {
                        return r = r ? angular.toJson(r) : void 0, a.post("/api/chart/size_groups", {
                            ct_id: e,
                            bubble_setting: angular.toJson(t),
                            drill_level: i,
                            drill_field: n,
                            drill_value: r
                        }).then(o)
                    },
                    getGisSizeGroups: function (e, t, i) {
                        return a.post("/api/chart/size_groups", {
                            ct_id: e,
                            bubble_setting: angular.toJson(t),
                            layer_level: i
                        }).then(o)
                    },
                    addRelaTb: function (e, t) {
                        return a.post("/api/chart/add_rela_tb", {
                            ct_id: e,
                            tb_id: t
                        })
                    },
                    delRelaTb: function (e, t) {
                        return a.post("/api/chart/del_rela_tb", {
                            ct_id: e,
                            tb_id: t
                        })
                    },
                    exportExcelType: function (e) {
                        return a.post("/api/export/get_file_type", e)
                    },
                    exportLargeExcel: function (e) {
                        return a.post("/api/export/large_file", e)
                    },
                    wholeRelaChain: function (e) {
                        return a.post("/api/chart/whole_rela_chain", {
                            tb_id: e.tb_id
                        })
                    },
                    tableUnion: function (e) {
                        return a.post("/api/chart/table_union", e)
                    },
                    cmpDateRange: function (e) {
                        return a.post("/api/chart/filter_cmp_date_range", e)
                    }
                };
            var s = {
                    getField: function (e) {
                        var t = {
                            dstb_id: e
                        };
                        return a.get("/api/dstb/info", t).then(o)
                    },
                    del: function (e) {
                        var t = {
                            dstb_id: e
                        };
                        return a.get("/api/dstb/delete", t)
                    },
                    getList: function () {
                        return a.get("/api/dstb/list").then(o)
                    },
                    modify: function (e, t) {
                        var i = {
                            dstb_id: e,
                            data: t
                        };
                        return a.get("/api/dstb/modify", i).then(o)
                    },
                    getUpdateRecord: function (e) {
                        return a.get("/api/excel/list?time=" + (new Date).getTime(), e).then(o)
                    },
                    deleteFile: function (e, t) {
                        var i = {
                            dstb_id: e,
                            filetbname: t
                        };
                        return a.get("/api/dstb/delete_file", i).then(o)
                    },
                    excelCreate: function (e) {
                        return a.post("/api/excel/create", e, {
                            errHint: !1
                        })
                    },
                    excelAppend: function (e) {
                        return a.post("/api/excel/append", e, {
                            errHint: !1
                        })
                    },
                    excelReplace: function (e) {
                        return a.post("/api/excel/replace", e, {
                            errHint: !1
                        })
                    },
                    excelHistoryReplace: function (e) {
                        return a.post("/api/excel/replace_one", e, {
                            errHint: !1
                        })
                    },
                    excelDelete: function (e) {
                        return a.get("/api/excel/delete", e)
                    },
                    startTask: function (t, a) {
                        return e.post("/api/dstb/start", {
                            job_id: t,
                            sheet_name: angular.toJson(a)
                        })
                    },
                    excelCheck: function (e) {
                        return a.post("/api/excel/check", e, {
                            errHint: !1
                        })
                    },
                    excelModify: function (e) {
                        return a.post("/api/excel/modify", e, {
                            errHint: !1
                        })
                    },
                    subOwnWbList: function (e) {
                        return a.post("/api/folder/sub_own_list", e)
                    },
                    extractTb: function (e) {
                        return a.post("/api/tb/extract", e)
                    },
                    shareTbInfo: function (e) {
                        return a.post("/api/tb/share_info", e)
                    },
                    uploadPreview: function (e, t) {
                        return a.post("/api/excel/preview", e, {
                            errHint: t
                        })
                    },
                    uploadParser: function (e) {
                        return a.post("/api/excel/parser", e)
                    },
                    getSchema: function (e) {
                        return a.post("/api/tb/schema", {
                            tb_id: e
                        })
                    },
                    checkFieldDependency: function (e) {
                        return a.post("/api/tb/check_field_dependency", e)
                    },
                    adjustTable: function (e) {
                        return a.post("/api/", e)
                    },
                    previewAdjustTable: function (e) {
                        return a.post("/api/excel/replace_preview", e)
                    },
                    excelRepeatCheck: function (e) {
                        return a.post("/api/excel/title_check", e)
                    }
                },
                l = {
                    modify: function (e) {
                        return a.post("/api/tb/modify", {
                            data: e
                        })
                    },
                    modifyFieldStatus: function (e, t) {
                        return a.post("/api/tb/field_selected/modify", {
                            tb_id: e,
                            field_ids: t
                        })
                    },
                    getStatusData: function (e) {
                        return a.post("/api/tb/field_selected/query", {
                            tb_id: e
                        })
                    },
                    getList: function () {
                        return a.get("/api/tb/list").then(o)
                    },
                    copy: function (e) {
                        return a.post("/api/data_union/union_copy", e)
                    },
                    getInfo: function (e) {
                        return a.get("/api/tb/info", {
                            tb_id: e
                        })
                    },
                    getMultiInfo: function (e) {
                        return a.get("/api/tb/multi_info", e)
                    },
                    preview: function (e) {
                        return a.post("/api/tb/preview", e).then(o)
                    },
                    del: function (e) {
                        return a.post("/api/tb/delete", {
                            tb_id: e
                        })
                    },
                    delTableWithChart: function (e, t, i) {
                        return a.post("/api/tb/delete", {
                            tb_id: e,
                            session_id: t,
                            verify_code: i
                        })
                    },
                    getJoinInfo: function (e) {
                        return a.get("/api/tb/join_info", {
                            tb_id: e
                        }).then(o)
                    },
                    getJoinErrorReport: function (e) {
                        return a.post("/api/wb/profile", e)
                    },
                    getJoinProfileReport: function (e) {
                        return a.post("/api/wb/profile_report", {
                            tb_id: e
                        })
                    },
                    getModelStruct: function (e) {
                        return a.get("/api/tb/model_struct", {
                            tb_id: e
                        })
                    },
                    getStatus: function (e, t) {
                        return a.get("/api/tb/status", {
                            tb_id: e,
                            view_status_read: t
                        })
                    },
                    getStorageAccount: function () {
                        return a.get("/api/tb/stat").then(o)
                    },
                    modifyTag: function (e) {
                        return a.post("/api/tb/modify_tag", {
                            data: JSON.stringify(e)
                        })
                    },
                    getTbsField: function (e) {
                        return a.post("/api/dstb/infos", e)
                    },
                    partitionSet: function (e) {
                        return a.post("/api/tb/partition/set", {
                            tb_id: e.tb_id,
                            base_field: e.base_field,
                            param: e.param
                        })
                    },
                    partitionDel: function (e) {
                        return a.post("/api/tb/partition/remove", {
                            tb_id: e.tb_id
                        })
                    },
                    wholeJoinChain: function (e) {
                        return a.post("/api/tb/whole_join_chain", {
                            tb_id: e.tb_id
                        })
                    },
                    sqlTrans: function (e) {
                        return a.post("/api/tb/sql_trans", e)
                    },
                    sqlScript: function (e) {
                        return a.post("/api/sql_script/check", e)
                    },
                    sqlFormat: function (e) {
                        return a.post("/api/sql_script/format", e)
                    },
                    tableFieldFilter: function (e) {
                        return a.post("/api/field/filter", e)
                    },
                    batchMove: function (e) {
                        return a.post("/api/folder/change_batch", e)
                    },
                    batchDeleteTables: function (e) {
                        return a.post("/api/tb/delete_batch", e)
                    },
                    checkTablesRely: function (e) {
                        return a.post("/api/tb/list_check_rely", e)
                    },
                    gisTransfer: function (e) {
                        return a.post("/api/gis/transfer", e)
                    },
                    gisModify: function (e) {
                        return a.post("/api/gis/modify", e)
                    },
                    updateModeCheck: function (e) {
                        return a.post("/api/tb/update_mode/check", e)
                    },
                    updateModeModify: function (e) {
                        return a.post("/api/tb/update_mode/modify", e)
                    },
                    getPartitionNum: function (e) {
                        return a.post("/api/tb/partition/num", e)
                    },
                    triggerFullUpdate: function (e) {
                        return a.post("/api/tb/update", e)
                    },
                    replaceCheck: function (e) {
                        return a.post("/api/wb/replace_check", e)
                    },
                    getTplExcel: function (e) {
                        return a.get("/api/personal/tpl_excel", e)
                    },
                    tplExport: function (e) {
                        return a.get("/api/personal/export", e)
                    },
                    modelCheck: function (e) {
                        return a.get("/api/data_aggr/model_check", e)
                    },
                    viewExec: function (e) {
                        return a.get("/api/view/exec", e)
                    },
                    uploadRenameFields: function (e) {
                        return a.post("/api/field/upload_templete", e)
                    },
                    exportSmallTbFile: function (e) {
                        return a.post("/api/tb/export_tb", e)
                    },
                    exportTbFile: function (e) {
                        return a.post("/api/export/tb_file", e)
                    },
                    parseCode: function (e) {
                        return a.post("/api/general/create", e)
                    },
                    getFieldParseCode: function (e) {
                        return a.get("/api/general/info", e)
                    },
                    joinTbPreview: function (e) {
                        return a.post("/api/wb/preview", e)
                    },
                    joinTbCreate: function (e) {
                        return a.post("/api/wb/create", e)
                    },
                    joinTbInfo: function (e) {
                        return a.post("/api/dstb/info", e)
                    },
                    joinTbCheckPreview: function (e) {
                        return a.post("/api/wb/modify_preview", e)
                    },
                    joinTbModify: function (e) {
                        return a.post("/api/wb/modify", e)
                    }
                },
                d = {
                    getList: function (e) {
                        return a.get("/api/tb/info", {
                            tb_id: e
                        })
                    },
                    getEditableSchema: function (e) {
                        return a.get("/api/tb/editable_schema", {
                            tb_id: e
                        })
                    },
                    create: function (e) {
                        return a.post("/api/field/create", e)
                    },
                    modify: function (e) {
                        return a.post("/api/field/modify", e)
                    },
                    del: function (e, t) {
                        return a.post("/api/field/delete", {
                            tb_id: t,
                            fid: e
                        })
                    },
                    getRange: function (e, t, i) {
                        return a.post("/api/field/range", {
                            fid: t,
                            ct_id: i,
                            tb_id: e
                        })
                    },
                    getFilteredRange: function (e, t, i, n) {
                        return void 0 === n ? a.post("/api/enum_color/field_range", {
                            ct_id: e,
                            tb_id: t,
                            field: angular.toJson(i)
                        }) : a.post("/api/enum_color/gis_field_range", {
                            ct_id: e,
                            tb_id: t,
                            field: angular.toJson(i),
                            layer_level: n
                        })
                    },
                    url_preview: function (e, t) {
                        return a.post("/api/field/url_preview", {
                            tb_id: e,
                            field_ids: angular.toJson(t)
                        }).then(o)
                    },
                    extract_preview: function (e, t) {
                        return a.post("/api/field/extract_preview", {
                            tb_id: e,
                            fields: angular.toJson(t)
                        }).then(o)
                    },
                    extract_url: function (e, t) {
                        return a.post("/api/field/extract_url", {
                            tb_id: e,
                            fields: angular.toJson(t)
                        }).then(o)
                    },
                    merge: function (e, t) {
                        return a.post("/api/field/merge", {
                            tb_id: e,
                            info: angular.toJson(t)
                        }).then(o)
                    },
                    getAggregatorLen: function (e) {
                        return a.post("/api/field/get_length", e)
                    }
                },
                c = {
                    allList: function (e) {
                        var t = {};
                        return t = angular.extend(e, t), a.get("/api/share/all_list", t)
                    },
                    getList: function (e) {
                        var t = {};
                        return t = angular.extend(e, t), a.get("/api/share/list", t)
                    },
                    share: function (e) {
                        var t = {};
                        return t = angular.extend(e, t), a.post("/api/share/commit", t)
                    },
                    modify: function (e) {
                        return a.post("/api/share/modify", e)
                    }
                },
                p = {
                    getConnStatus: function (e) {
                        return a.post("/api/ds/conn", e)
                    },
                    connNopwd: function (e) {
                        return a.post("/api/ds/nopawd", e)
                    },
                    createApi: function (e) {
                        return a.post("/api/ds/create", e)
                    },
                    getNameAndTag: function () {
                        return a.get("/api/ds/list").then(o)
                    },
                    getList: function (e) {
                        return a.get("/api/ds/list").then(o)
                    },
                    getListForDataSource: function (e) {
                        return a.get("/api/ds/nslist", e)
                    },
                    getTree: function () {
                        return a.get("/api/ds/tree").then(o)
                    },
                    info: function (e) {
                        return a.get("/api/ds/info", e)
                    },
                    modify: function (e) {
                        return e = e || {}, a.post("/api/ds/modify", e)
                    },
                    startSyncTask: function (e, t, i) {
                        return a.get("/api/ds/sync", {
                            ds_id: e,
                            new_table: t,
                            db_type: i
                        })
                    },
                    startBaiduSyncCost: function (e) {
                        return a.get("/api/rtapi/single_cost", {
                            ds_id: e
                        })
                    },
                    del: function (e) {
                        return a.post("/api/ds/delete", {
                            ds_id: e
                        })
                    },
                    getInitInfo: function () {
                        return a.get("/api/ds/all")
                    },
                    getResultForSearch: function (e, t) {
                        return a.get("api/ds/search", {
                            stype: t,
                            content: e
                        })
                    },
                    getTables: function (t) {
                        return e.get("/api/ds/mdstb", {
                            params: {
                                ds_id: t
                            }
                        })
                    },
                    getJsjTables: function (t) {
                        return e.post("/api/ds/cdstb", t)
                    },
                    modifytb: function (t, a, i) {
                        return e.get("/api/ds/modifytb", {
                            params: {
                                ds_id: t,
                                name: a,
                                check_tables: angular.toJson(i)
                            }
                        })
                    },
                    openDataList: function () {
                        return a.get("/api/ds/publiclist")
                    },
                    create: function (e) {
                        return a.post("/api/ds/create", e)
                    },
                    conn: function (e) {
                        return a.post("/api/ds/conn", e)
                    },
                    tbList: function () {
                        return a.get("/api/ds/tblist")
                    },
                    username_verify: function (e) {
                        return a.post("/api/ds/verify", e)
                    },
                    jyw_klist: function () {
                        return a.post("/api/jyw/klist")
                    },
                    set_sync: function (e) {
                        return a.post("/api/ds/sync", e)
                    },
                    mobile_default_bind: function (e) {
                        return a.post("/api/sms/defaultbind", e)
                    },
                    mobile_unbind_all: function (e) {
                        return a.post("/api/sms/unbindall", e)
                    },
                    warn_mobile_list: function (e) {
                        return a.post("/api/sms/list")
                    },
                    warn_mobile_del: function (e) {
                        return a.post("/api/sms/delete", {
                            phone: e.phone
                        })
                    },
                    warn_mobile_vcode: function (e) {
                        return a.post("/api/sms/vcode", {
                            phone: e.phone,
                            new_phone: e.new_phone
                        })
                    },
                    warn_mobile_verify: function (e) {
                        return a.post("/api/sms/verify", {
                            phone: e.phone,
                            new_phone: e.new_phone,
                            vcode: e.vcode
                        })
                    },
                    ds_amount: function () {
                        return a.get("/api/ds/stat")
                    },
                    kstList: function (e) {
                        return a.post("/api/kst/list", e)
                    },
                    kstConn: function (e) {
                        return a.post("/api/kst/conn", e)
                    },
                    kstCreate: function (e) {
                        return a.post("/api/kst/create", e)
                    },
                    kstInfo: function (e) {
                        return a.post("/api/kst/info", e)
                    },
                    kstModify: function (e) {
                        return a.post("/api/kst/modify", e)
                    },
                    baiduRegion: function () {
                        return a.get("/api/rtapi/city")
                    },
                    baiduIndex: function () {
                        return a.get("/api/inapi/city")
                    },
                    baiduIndexCheckKeyWords: function (e) {
                        return a.post("/api/inapi/check", e)
                    },
                    modifyDbBaiduSearchTask: function (e) {
                        return a.post("/api/rtapi/control", e)
                    },
                    modifyDbBaiduIndexTask: function (e) {
                        return a.post("/api/inapi/control", e)
                    },
                    baiduSearchConfig: function (e) {
                        return a.post("/api/rtapi/config", e)
                    },
                    baiduIndexConfig: function (e) {
                        return a.post("/api/inapi/config", e)
                    },
                    modifyDbBaiduSearch: function (e) {
                        return a.post("/api/rtapi/modify", e)
                    },
                    modifyDbBaiduIndex: function (e) {
                        return a.post("/api/inapi/modify", e)
                    },
                    createDbBaiduSearch: function (e) {
                        return a.post("/api/ds/create", e)
                    },
                    createDbBaiduSearchTask: function (e) {
                        return a.post("/api/rtapi/create", e)
                    },
                    createDbBaiduIndexTask: function (e) {
                        return a.post("/api/inapi/create", e)
                    },
                    deleteDbBaiduSearchTask: function (e) {
                        return a.post("/api/rtapi/delete", e)
                    },
                    deleteDbBaiduIndexTask: function (e) {
                        return a.post("/api/inapi/delete", e)
                    },
                    getDbBaiduSearchTaskList: function (e) {
                        return a.post("/api/rtapi/rtlist", e)
                    },
                    getDbBaiduIndexTaskList: function (e) {
                        return a.post("/api/inapi/inlist", e)
                    },
                    startBaiduTaskSyncCost: function (e) {
                        return a.get("/api/rtapi/single_cost", e)
                    },
                    startBaiduIndexTaskSyncCost: function (e) {
                        return a.get("/api/inapi/single_cost", e)
                    },
                    startBaiduSyncTask: function (e) {
                        return a.post("/api/rtapi/sync", e)
                    },
                    startBaiduIndexSyncTask: function (e) {
                        return a.post("/api/inapi/sync", e)
                    },
                    baiduCompanySetting: function (e) {
                        return a.post("/api/rtapi/field_info", e)
                    },
                    modifyCompanySetting: function (e) {
                        return a.post("/api/rtapi/field_modify", e)
                    },
                    wechatDs: {
                        createWechatIndex: function (e) {
                            return a.post("/api/ds/create", e)
                        },
                        deleteWechatTask: function (e) {
                            return a.post("/api/wechat/delete", e)
                        },
                        getTaskList: function (e) {
                            return a.post("/api/wechat/inlist", e)
                        },
                        modifyWechatTask: function (e) {
                            return a.post("/api/wechat/modify", e)
                        },
                        createWechatTask: function (e) {
                            return a.post("/api/wechat/create", e)
                        },
                        wechatIndexConfig: function (e) {
                            return a.post("/api/wechat/config", e)
                        },
                        wechatTaskSwitchControl: function (e) {
                            return a.post("/api/wechat/control", e)
                        }
                    },
                    toutiaoDs: {
                        createToutiaoIndex: function (e) {
                            return a.post("/api/ds/create", e)
                        },
                        deleteToutiaoTask: function (e) {
                            return a.post("/api/toutiao/delete", e)
                        },
                        getTaskList: function (e) {
                            return a.post("/api/toutiao/inlist", e)
                        },
                        modifyToutiaoTask: function (e) {
                            return a.post("/api/toutiao/modify", e)
                        },
                        createToutiaoTask: function (e) {
                            return a.post("/api/toutiao/create", e)
                        },
                        toutiaoIndexConfig: function (e) {
                            return a.post("/api/toutiao/config", e)
                        },
                        toutiaoTaskSwitchControl: function (e) {
                            return a.post("/api/toutiao/control", e)
                        }
                    },
                    indexDs: {
                        getUrl: function (e, t) {
                            var a;
                            switch (e + "_" + t) {
                                case "70_create":
                                    a = "/api/web/create";
                                    break;
                                case "70_inlist":
                                    a = "/api/web/inlist";
                                    break;
                                case "70_control":
                                    a = "/api/web/control";
                                    break;
                                case "70_delete":
                                    a = "/api/web/delete";
                                    break;
                                case "70_config":
                                    a = "/api/web/config";
                                    break;
                                case "70_modify":
                                    a = "/api/web/modify"
                            }
                            return a
                        },
                        getTaskList: function (e) {
                            return a.post("/api/index/inlist", e)
                        },
                        createTask: function (e) {
                            return a.post("/api/index/create", e)
                        },
                        switchTask: function (e) {
                            return a.post("/api/index/control", e)
                        },
                        deleteTask: function (e) {
                            return a.post("/api/index/delete", e)
                        },
                        getTaskInfo: function (e) {
                            return a.post("/api/index/config", e)
                        },
                        modifyTask: function (e) {
                            return a.post("/api/index/modify", e)
                        },
                        checkKeyWords: function (e) {
                            return a.post("/api/index/check", e)
                        },
                        areaList: function (e) {
                            return a.get("/api/index/city", e)
                        }
                    },
                    weiboDs: {
                        deleteTask: function (e) {
                            return a.post("/api/toutiao/delete", e)
                        },
                        getTaskList: function (e) {
                            return a.post("/api/web/inlist", e)
                        },
                        modifyTask: function (e) {
                            return a.post("/api/toutiao/modify", e)
                        },
                        createToutiaoTask: function (e) {
                            return a.post("/api/toutiao/create", e)
                        },
                        toutiaoIndexConfig: function (e) {
                            return a.post("/api/toutiao/config", e)
                        },
                        toutiaoTaskSwitchControl: function (e) {
                            return a.post("/api/toutiao/control", e)
                        }
                    },
                    dbTypeInfo: function (e) {
                        return a.get("/api/ds/category", e)
                    },
                    getCTableList: function (e) {
                        return a.post("/api/ds/cdstb", e)
                    },
                    getTbInfo: function (e) {
                        return a.post("/api/ds/tbinfo", e)
                    },
                    getDsSheet: function (e) {
                        return a.post("/api/ds/sheet", e)
                    },
                    getDsTask: function (e) {
                        return a.post("/api/ds/task", e)
                    },
                    delete: function (e) {
                        return a.post("/api/ds/delete", e)
                    },
                    getGaReports: function (e) {
                        return a.get("/api/ga/dreports", e)
                    },
                    getGaInfo: function (e) {
                        return a.post("/api/ga/info", e)
                    },
                    previewGa: function (e) {
                        return a.post("/api/ga/preview", e)
                    },
                    getBdpDeployCodeToken: function (e) {
                        return a.post("/api/journal/token", e)
                    },
                    pwdBatchPreview: function (e) {
                        return a.post("/api/ds_batch/preview", e)
                    },
                    pwdBatchModify: function (e) {
                        return a.post("/api/ds_batch/modify", e)
                    },
                    saveUserSync: function (e) {
                        return a.post("/api/ds/usersync", e)
                    },
                    getJumpInfo: function (e) {
                        return a.get("/api/chart/jump_info", e)
                    },
                    saveJumpInfo: function (e) {
                        return a.post("/api/chart/jump_save", e)
                    },
                    delJumpInfo: function (e) {
                        return a.post("/api/chart/jump_delete", e)
                    },
                    checkJumpInfo: function (e) {
                        return a.get("/api/chart/jump_check", e)
                    },
                    getCodeImg: function (e) {
                        return a.get("/api/ds/specialsync", e)
                    }
                },
                u = {
                    field_list: function (e) {
                        return a.post("/api/ds_field/field_list", e)
                    },
                    field_del: function (e) {
                        return a.post("/api/ds_field/field_del", e)
                    },
                    field_modify: function (e) {
                        return a.post("/api/ds_field/field_modify", e)
                    }
                },
                h = {
                    del: function (e) {
                        return a.post("/api/adv_date/del", {
                            opt_id: e
                        })
                    },
                    global_del: function (e, t) {
                        return a.post("/api/adv_date/del", {
                            opt_id: e,
                            df_id: t
                        })
                    },
                    modify: function (e, t, i) {
                        return a.post("/api/adv_date/modify", {
                            ct_id: e,
                            opt_id: t,
                            data: i
                        })
                    },
                    global_modify: function (e, t, i, n) {
                        return a.post("/api/adv_date/modify", {
                            dsh_id: e,
                            opt_id: t,
                            df_id: i,
                            data: n
                        })
                    },
                    list: function (e) {
                        return a.post("/api/adv_date/list", {
                            ct_id: e
                        })
                    },
                    info: function (e) {
                        return a.post("/api/adv_date/info", {
                            opt_id: e
                        })
                    },
                    order: function (e, t) {
                        return a.post("/api/adv_date/order", {
                            ct_id: e,
                            options: t
                        })
                    }
                },
                f = {
                    add: function (e) {
                        return a.post("/api/warn/add", {
                            ct_id: e.ct_id,
                            rule_id: e.rule_id,
                            data: angular.toJson(e.data)
                        })
                    },
                    modify: function (e) {
                        return a.get("/api/warn/modify", {
                            ct_id: e.ct_id,
                            rule_id: e.rule_id,
                            data: e.data,
                            warn_id: e.warn_id
                        })
                    },
                    del: function (e) {
                        return a.get("/api/warn/delete", {
                            ct_id: e.ct_id,
                            rule_id: e.rule_id,
                            warn_id: e.warn_id
                        })
                    },
                    warnSwitch: function (e) {
                        return a.get("/api/warn/switch", {
                            ct_id: e.ct_id,
                            rule_id: e.rule_id,
                            open_warn_ids: e.open_warn_ids,
                            off_warn_ids: e.off_warn_ids
                        })
                    }
                },
                g = {
                    modify: function (e) {
                        return a.post("/api/model/modify", e)
                    },
                    preview: function (e) {
                        return a.post("/api/model/train_set_preview", e)
                    },
                    result: function (e) {
                        return a.post("/api/model/result", e)
                    },
                    list: function (e) {
                        return a.post("/api/model/list", e)
                    },
                    info: function (e) {
                        return a.post("/api/model/info", e)
                    },
                    del: function (e) {
                        return a.post("/api/model/delete", e)
                    },
                    saveClusterRs: function (e) {
                        return a.post("/api/model/result_commit", e)
                    }
                },
                m = {
                    getList: function () {
                        return a.post("/api/folder/list").then(o)
                    },
                    del: function (e, t) {
                        return a.get("/api/folder/delete", {
                            folder_id: e,
                            mode: t
                        })
                    },
                    modify: function (e) {
                        return a.post("/api/folder/modify", e)
                    },
                    create: function (e) {
                        return a.post("/api/folder/create", e)
                    },
                    change: function (e) {
                        return a.post("/api/folder/change", {
                            tb_id: e.tb_id,
                            to_folder: e.to_folder,
                            to_seq: e.to_seq,
                            tb_index: e.tb_index
                        })
                    },
                    change_batch: function (e) {
                        return a.post("/api/folder/change_batch", {
                            change_folders: e
                        })
                    },
                    modify_folder_rel: function (e) {
                        return a.post("/api/folder/modify_folder_rel", {
                            tb_id: e.tb_id,
                            folder_rels: e.tb_status
                        })
                    },
                    modify_seq: function (e) {
                        return a.post("/api/folder/modify_seq", {
                            seq_no: e.seq_no,
                            folder_id: e.folder_id
                        })
                    },
                    modify_parent: function (e) {
                        return a.post("/api/folder/modify_parent", {
                            seq_no: e.seq_no,
                            folder_id: e.folder_id,
                            parent_id: e.parent_id
                        })
                    },
                    getStructure: function () {
                        return a.post("/api/folder/get_tree")
                    },
                    getStructureWithParam: function (e) {
                        return a.post("/api/folder/get_tree_with_tblist", e)
                    },
                    getWorktable: function (e) {
                        return a.get("/api/folder/list_only_tb", e)
                    },
                    getTableSiblings: function (e) {
                        return a.get("/api/folder/get_current_tb", e)
                    },
                    getTableFolderInfo: function (e) {
                        return a.post("/api/folder/info", e)
                    },
                    searchFolderAndTable: function (e) {
                        return a.get("/api/folder/search", e)
                    },
                    filterFolderAndTable: function (e) {
                        return a.get("/api/folder/filter", e)
                    }
                },
                _ = {
                    create: function (e) {
                        return a.get("/api/field_comment/create", e)
                    },
                    modify: function (e) {
                        return a.get("/api/field_comment/modify", {
                            ct_id: e.ct_id,
                            fc_id: e.fc_id,
                            comment: e.comment
                        })
                    },
                    del: function (e, t) {
                        return a.get("/api/field_comment/delete", {
                            ct_id: e,
                            fc_id: t
                        })
                    }
                },
                v = {
                    list: function (e) {
                        return a.post("/api/dsh_filter/list", {
                            dsh_id: e.dash_id,
                            rule_id: e.rule_id
                        })
                    },
                    modify: function (e) {
                        return a.post("/api/dsh_filter/commit", {
                            dsh_id: e.dash_id,
                            data: e.dash_filter_list
                        })
                    },
                    item: function (e) {
                        return a.post("/api/dsh_filter/item", {
                            dsh_id: e.dash_id,
                            sdo_id: e.sdo_id,
                            rule_id: e.rule_id,
                            is_tpl: e.is_tpl
                        })
                    },
                    range: function (e) {
                        return a.post("/api/dsh_filter/range", {
                            dsh_id: e.dash_id,
                            df_id: e.df_id,
                            rule_id: e.rule_id,
                            selected_tables: e.selected_tables,
                            granularity: e.granularity,
                            parent_range: e.range
                        })
                    }
                },
                b = {
                    userList: function (e) {
                        return a.post("/api/sub/list", e)
                    },
                    modifyPersonal: function (e) {
                        return a.post("/api/user/modify_personal", e)
                    },
                    modifyInfo: function (e) {
                        return a.post("/api/user/modify_info", e)
                    },
                    groupList: function (e) {
                        return a.post("/api/group/list", e)
                    },
                    modify: function (e) {
                        return a.post("/api/sub/modify", e)
                    },
                    setFrozen: function (e) {
                        return a.post("/api/user/set_frozen", e)
                    },
                    exportFileList: function (e) {
                        return a.post("/api/export/file_list", e)
                    },
                    exportDelTask: function (e) {
                        return a.post("/api/export/delete", e)
                    },
                    hideNotification: function () {
                        return a.post("/api/export/hide_notification")
                    },
                    logout: function (e) {
                        return a.post("/api/user/logout", e)
                    },
                    modifyPassword: function (e) {
                        return a.post("/api/user/modify_pwd", e)
                    },
                    getUserInfo: function () {
                        return a.post("/api/user/info")
                    },
                    unreadNewFeatures: function () {
                        return a.post("/api/log/unread")
                    },
                    readNewFeatures: function () {
                        return a.get("/api/log/read")
                    },
                    getMobileCode: function (e) {
                        return a.post("/api/user/gen_captcha", e)
                    }
                },
                y = {
                    getOrderInfo: function (e) {
                        return a.get("/api/enum_order/info", {
                            _t: (new Date).getTime(),
                            tb_id: e.tb_id,
                            fid: e.fid,
                            ct_id: e.ct_id || ""
                        }).then(o)
                    },
                    updateOrder: function (e) {
                        return a.post("/api/enum_order/update", e)
                    },
                    getFilteredOrderInfo: function (e) {
                        return a.get("/api/enum_order/filter_info", {
                            _t: (new Date).getTime(),
                            tb_id: e.tb_id,
                            fid: e.fid,
                            ct_id: e.ct_id || "",
                            index: e.index || 0,
                            drill_level: e.drill_level || 0,
                            axis: e.axis || ""
                        }).then(o)
                    }
                },
                w = {
                    preview: function (e) {
                        return a.post("/api/sql_script/preview", {
                            info: angular.toJson(e)
                        }, {
                            errHint: !1
                        })
                    },
                    create: function (e, t, i, n) {
                        return a.post("/api/sql_script/create", {
                            folder_id: i,
                            info: angular.toJson({
                                table_name: e,
                                info: t,
                                can_incr: n.switch_status,
                                master_tb_id: n.master_tb_id,
                                partition_field_id: n.partition_field_id
                            })
                        })
                    },
                    modifyPreview: function (e, t, i, n, r) {
                        return a.post("/api/sql_script/modify_preview", {
                            tb_id: i,
                            tb_name: e,
                            info: t,
                            folder_id: n,
                            can_incr: r.switch_status,
                            master_tb_id: r.master_tb_id,
                            partition_field_id: r.partition_field_id
                        })
                    },
                    modify: function (e, t, i, n, r) {
                        return a.post("/api/sql_script/modify", {
                            tb_id: i,
                            info: angular.toJson({
                                table_name: e,
                                info: t,
                                can_incr: r.switch_status,
                                master_tb_id: r.master_tb_id,
                                partition_field_id: r.partition_field_id
                            })
                        })
                    },
                    checkIncrease: function (e) {
                        return a.post("/api/sql_script/check_tb_increment", e)
                    }
                },
                C = {
                    ruleTbInfo: function (e) {
                        return a.post("/api/tb/rule_tb_info", e)
                    },
                    getFieldRule: function (e) {
                        return a.post("/api/rule/search_filter", e)
                    },
                    saveBatchRule: function (e) {
                        return a.post("/api/rule/create_filter_batch", e)
                    },
                    chartList: function (e) {
                        return a.post("/api/chart/list", e)
                    },
                    tplCommit: function (e) {
                        return a.post("/api/template/commit", e)
                    }
                },
                x = {
                    tbListPreview: function (e) {
                        return a.post("/api/workspace/tb_list_preview", e)
                    },
                    create: function (e) {
                        return a.post("/api/workspace/create", e)
                    },
                    delete: function (e) {
                        return a.post("/api/workspace/delete", e)
                    },
                    modify: function (e) {
                        return a.post("/api/workspace/modify", e)
                    },
                    info: function (e) {
                        return a.post("/api/workspace/info", e)
                    },
                    list: function () {
                        return a.post("/api/workspace/list")
                    },
                    modifyDashList: function (e) {
                        return a.post("/api/workspace/modify_dash_list", e)
                    },
                    modifyTableList: function (e) {
                        return a.post("/api/workspace/modify_tb_list", e)
                    },
                    modifyGroupList: function (e) {
                        return a.post("/api/workspace/modify_group_list", e)
                    },
                    modifyAuthority: function (e) {
                        return a.post("/api/workspace/modify_authority_info", e)
                    },
                    userList: function (e) {
                        return a.post("/api/workspace/user_list", e)
                    },
                    workspaceLog: function (e) {
                        return a.post("/api/workspace/ws_log", e)
                    }
                },
                k = {
                    list: function (e) {
                        return a.post("/api/sem/list", {
                            ds_id: e.ds_id,
                            ds_type: e.ds_type
                        })
                    },
                    merge: function (e) {
                        return a.post("/api/sem/merge", {
                            link_list: e.link_list
                        })
                    },
                    tbrefer: function (e) {
                        return a.post("/api/sem/tbrefer", {
                            ds_id: e.ds_id,
                            tmp_ds_id: e.tmp_ds_id
                        })
                    }
                },
                D = {
                    guideSet: function (e) {
                        return a.post("/api/user/guide_set", e)
                    },
                    getDashDemo: function () {
                        return a.post("/api/personal/demo")
                    }
                },
                S = {
                    getListByType: function (e) {
                        return a.post("/api/message/list", e)
                    },
                    setNoticeReaded: function (e) {
                        return a.post("/api/message/read", e)
                    },
                    getNoticeType: function () {
                        return a.post("/api/message/purpose")
                    }
                },
                T = {
                    info: function (e) {
                        return a.post("/api/auth/info", e)
                    },
                    create: function (e) {
                        return a.post("/api/auth/create", e)
                    },
                    modify: function (e) {
                        return a.post("/api/auth/modify", e)
                    },
                    stop: function (e) {
                        return a.post("/api/auth/stop", e)
                    },
                    oplog: function (e) {
                        return a.post("/api/auth/oplog", e)
                    }
                },
                I = {
                    userInfo: function (e) {
                        return a.post("/api/sub/info", e)
                    },
                    userList: function (e) {
                        return a.post("/api/sub/list", e)
                    },
                    userCreate: function (e) {
                        return a.post("/api/sub/create", e)
                    },
                    userModify: function (e) {
                        return a.post("/api/sub/modify", e)
                    },
                    userDelete: function (e) {
                        return a.post("/api/sub/delete", e)
                    },
                    userDelTbCheck: function (e) {
                        return a.post("/api/sub/del_tb_check", e)
                    },
                    setFrozen: function (e) {
                        return a.post("/api/user/set_frozen", e)
                    },
                    resetPwd: function (e) {
                        return a.get("/api/user/reset_pwd", e)
                    },
                    sentNotice: function (e) {
                        return a.post("/api/sub/send_notice", e)
                    },
                    accountLimit: function (e) {
                        return a.get("/api/account/limit", e)
                    },
                    groupList: function (e) {
                        return a.get("/api/group/list", e)
                    },
                    groupOrder: function (e) {
                        return a.post("/api/group/order", e)
                    },
                    groupInfo: function (e) {
                        return a.post("/api/group/info", e)
                    },
                    groupCreate: function (e) {
                        return a.post("/api/group/create", e)
                    },
                    removeAdminCheck: function (e) {
                        return a.post("/api/group/check_remove_admin", e)
                    },
                    groupModify: function (e) {
                        return a.post("/api/group/modify", e)
                    },
                    groupDelete: function (e) {
                        return a.post("/api/group/delete", e)
                    },
                    groupDelTbCheck: function (e) {
                        return a.post("/api/group/del_tb_check", e)
                    },
                    securityInfo: function (e) {
                        return a.post("/api/security/info", e)
                    },
                    securityCreate: function (e) {
                        return a.post("/api/security/create", e)
                    },
                    securityDelete: function (e) {
                        return a.post("/api/security/delete", e)
                    },
                    securityList: function (e) {
                        return a.get("/api/security/list", e)
                    },
                    securityPreCheck: function (e) {
                        return a.post("/api/security/pre_check", e)
                    },
                    securityModify: function (e) {
                        return a.post("/api/security/modify", e)
                    },
                    tbShareFieldCheck: function (e) {
                        return a.post("/api/share/cancel_fields_check", e)
                    },
                    tbShareFilterCheck: function (e) {
                        return a.post("/api/share/check", e)
                    },
                    getGroupCustomFields: function (e) {
                        return a.post("/api/group/list_fields", e)
                    },
                    updateGroupCustomFields: function (e) {
                        return a.post("/api/group/update_fields", e)
                    },
                    groupMutiOpt: function (e) {
                        return a.post("/api/group/muti_opt", e)
                    }
                },
                L = {
                    info: function (e) {
                        return a.post("/api/chart_tpl/info", {
                            tpl_id: e
                        })
                    },
                    createChart: function (e) {
                        var t = {
                            dsh_id: e.dsh_id,
                            tb_id: e.tb_id,
                            tpl_id: e.tpl_id,
                            used_origin_fids_map: angular.toJson(e.used_origin_fids_map),
                            dsh_meta: angular.toJson(e.dsh_meta),
                            category: e.category
                        };
                        return a.post("/api/chart_tpl_apply/create", t)
                    },
                    create: function (e) {
                        var t = {
                            proj_id: e.proj_id,
                            ct_id: e.ct_id,
                            name: e.name,
                            type: e.type,
                            explain: e.explain
                        };
                        return angular.isArray(e.fid_explain) ? t.fid_explain = angular.toJson(e.fid_explain) : t.fid_explain = e.fid_explain, a.post("/api/chart_tpl/create", t)
                    },
                    delete: function (e) {
                        return a.post("/api/chart_tpl/delete", {
                            tpl_id: e
                        })
                    },
                    modify: function (e) {
                        var t = {
                            tpl_id: e.tpl_id,
                            proj_id: e.proj_id,
                            ct_id: e.ct_id,
                            name: e.name,
                            type: e.type,
                            explain: e.explain
                        };
                        return angular.isArray(e.fid_explain) ? t.fid_explain = angular.toJson(e.fid_explain) : t.fid_explain = e.fid_explain, a.post("/api/chart_tpl/modify", t)
                    },
                    applyList: function (e) {
                        var t = {
                            type: e.type
                        };
                        return a.post("/api/chart_tpl_apply/list", t)
                    },
                    typeList: function (e) {
                        return a.post("/api/chart_tpl/type_list", e)
                    }
                },
                A = {
                    getTree: function (e) {
                        return a.post("/api/chart_tpl_proj/tree", e)
                    },
                    create: function (e) {
                        return a.post("/api/chart_tpl_proj/create", {
                            name: e
                        })
                    },
                    modify: function (e, t) {
                        return a.post("/api/chart_tpl_proj/modify", {
                            proj_id: e,
                            name: t
                        })
                    },
                    del: function (e) {
                        return a.post("/api/chart_tpl_proj/delete", {
                            proj_id: e
                        })
                    },
                    order: function (e, t, i) {
                        return a.post("/api/chart_template/order", {
                            proj_id: e,
                            type: t || 0,
                            sort: angular.toJson(i)
                        })
                    },
                    move: function (e, t, i, n) {
                        return a.post("/api/chart_template/move", {
                            dsh_id: n,
                            proj_id: e,
                            type: t,
                            sort: angular.toJson(i)
                        })
                    }
                },
                E = {
                    info: function (e) {
                        return a.get("/api/chart_tpl_rule/info", {
                            rule_id: e
                        })
                    },
                    industryList: function (e) {
                        return a.get("/api/industry/list", e)
                    },
                    domainList: function (e) {
                        return a.get("/api/domain/list", e)
                    },
                    domainSearch: function (e) {
                        return a.get("/api/domain/search", e)
                    },
                    create: function (e) {
                        return a.post("/api/chart_tpl_rule/create", e)
                    },
                    list: function (e) {
                        return a.post("/api/chart_tpl_rule/list", e)
                    },
                    delete: function (e) {
                        return a.post("/api/chart_tpl_rule/delete", {
                            rule_id: e
                        })
                    },
                    modify: function (e) {
                        return a.post("/api/chart_tpl_rule/modify", e)
                    },
                    issued: function (e) {
                        var t = {
                            rule_id: e.rule_id,
                            issued_status: e.issued_status
                        };
                        return a.post("/api/chart_tpl_rule/issued", t)
                    }
                },
                F = {
                    personalVipInfo: function () {
                        return a.post("/api/pay/personal_vip_info")
                    },
                    personalOrderHistory: function () {
                        return a.get("/api/pay/order_history")
                    },
                    getMemberRightData: function () {
                        return a.get("/pmresources/personal-config/member.json")
                    },
                    personalInvoice: function (e) {
                        return a.post("/api/receipt/create", e)
                    },
                    personalInvoiceHistory: function () {
                        return a.get("/api/receipt/list")
                    }
                },
                M = {
                    preview: function (e) {
                        return a.post("/api/view/preview", e)
                    },
                    create: function (e) {
                        return a.post("/api/view/create", e)
                    },
                    modify: function (e) {
                        return a.post("/api/view/modify", e)
                    },
                    info: function (e) {
                        return a.post("/api/view/info", e)
                    }
                };
            return {
                global_config: i,
                project: n,
                dashboard: r,
                chart: chart,
                db: s,
                tb: l,
                field: d,
                fieldComment: _,
                ds: p,
                ds_field: u,
                share: c,
                adv_date: h,
                warn: f,
                model: g,
                folder: m,
                enumField: y,
                tpl: C,
                sql_script: w,
                dash_global_filter: v,
                workspace: x,
                user: b,
                sem: k,
                guide: D,
                authority: T,
                account: I,
                chart_tpl: L,
                chart_tpl_project: A,
                chartTplRule: E,
                pay: F,
                notice: S,
                view: M,
                getJobStatus: function (e) {
                    return a.post("/api/job/status", {
                        job_id: e
                    })
                },
                getTaskStatus: function (e) {
                    return a.get("/api/task/status", {
                        task_id: e
                    }, {
                        errHint: !1
                    })
                },
                getFunctionList: function () {
                    return a.get("/api/function/list")
                }
            }
        }])
        .service("baService", ["$http", "errHint", "commonHttp", function (e, t, a) {
            return {
                list: function (e) {
                    return a.post("/api/sta/list", e)
                },
                addDomain: function (e) {
                    return a.post("/api/sta/add", e)
                },
                delDomain: function (e) {
                    return a.post("/api/sta/del", e)
                },
                updateConfig: function (e) {
                    return a.post("/api/sta/update", e)
                },
                checkDeploy: function (e) {
                    return a.post("/api/sta/ref", e)
                },
                getToken: function (e) {
                    return a.post("/api/sta/token", e)
                }
            }
        }])
}();
function () {
    angular.module("BC.services")
        .constant("guideLocalConstant", {
            worktableExportGuide: 1
        })
        .constant("guideApiConstant", {
            customChartEditGuide: 0,
            newChartGuide: 1,
            newCustomChartGuide: 1,
            revertSelectionGuide: {
                fullscreen: 0,
                dashboard: 0,
                edit: 0
            },
            yoyGuide: 1,
            copyDashTplGuide: 1,
            noviceCloseGuide: 1,
            vaSettingGuide: 1,
            vipIsFree: 1,
            tableCopyGuide: 1,
            timePredicted: 1,
            __width_change_guide__: 1,
            __wordwrap_guide__: 1,
            __cell_layer_guide__: 1,
            addChartGuide: 1,
            copyChartGuide: 1
        })
        .service("guideService", ["commonService", "$rootScope", "guideApiConstant", "guideLocalConstant", "$translate", "$filter", "$jsTipTranslate", function (e, t, a, i, n, r, o) {
            var s = "en" == $.cookie("locale");
            t.guideApi = a, t.guideLocal = $.extend({}, i, angular.fromJson(localStorage.getItem("BDP_guide_local") || {}));
            var l = t.guideApi,
                d = e.guide.guideSet,
                c = function (e, a) {
                    t.guideLocal[e] = a, localStorage.setItem("BDP_guide_local", angular.toJson(t.guideLocal))
                },
                p = function (e) {
                    return function () {
                        return e
                    }
                };
            this.setGuideApi = function (e, t, a) {
                l[e] = t;
                var i = {
                    new_guide: angular.toJson(l)
                };
                d(i).then(function () {
                    a && a()
                })
            }, this.getGuideVal = function (e) {
                return e ? l[e] : l
            }, window.setGuideApi = this.setGuideApi, window.getGuideVal = this.getGuideVal, this.copyDashTplGuide = {
                callback: function () {
                    setGuideApi("copyDashTplGuide", 0)
                }
            }, this.newChartGuide = {
                tipsText: function () {
                    return n.instant("guideComparisonBar")
                },
                callback: function () {
                    setGuideApi("newChartGuide", 0)
                },
                options: {
                    btnText: p("iKnow"),
                    custom: !1,
                    deviation: {
                        vertical: 0,
                        horizontal: -2
                    },
                    direction: "bottom",
                    tipsDeviation: {
                        vertical: 0,
                        horizontal: -80
                    },
                    isfixed: !0,
                    scrollParnet: ".chart-right"
                }
            }, this.yoyGuide = {
                tipsText: function () {
                    return n.instant("guideYoY")
                },
                callback: function () {
                    setGuideApi("yoyGuide", 0)
                },
                options: {
                    btnText: p("iKnow"),
                    custom: !1,
                    deviation: {
                        vertical: 30,
                        horizontal: 2
                    },
                    direction: "right",
                    tipsDeviation: {
                        vertical: 56,
                        horizontal: 0
                    }
                }
            }, this.noviceCloseGuide = {
                tipsText: "引导视频在此，您可以点击查看哦~",
                callback: function () {
                    setGuideApi("noviceCloseGuide", 0)
                },
                options: {
                    direction: "bottom"
                }
            }, this.worktableExportGuide = {
                tipsText: function () {
                    return 3 == t.enterprise_type ? "工作表支持导出啦，你可以点此按钮进行导出操作。金钻会员支持导出500,000条数据，银钻会员支持导出100,000条数据。" : n.instant("wb.exportWorksheet.guideTip0")
                },
                callback: function () {
                    c("worktableExportGuide", 0)
                },
                options: {
                    btnText: p("iKnow"),
                    custom: !1,
                    deviation: {
                        vertical: 0,
                        horizontal: 0
                    },
                    direction: "bottom",
                    tipsDeviation: {
                        vertical: 0,
                        horizontal: 0
                    }
                }
            }, this.newCustomChartGuide = {
                tipsText: s ? '<div class="guide-new-custom-chart"><p class="guide-tip-title">New custom chart</p><p>support chart and table design, and rich visualization.</p></div>' : '<div class="guide-new-custom-chart"><p class="guide-tip-title">新增自定义图表</p><p>自定义图表开放了图表编辑能力，支持自主设计图表及表格拼接，丰富数据展现形式。</p></div>',
                callback: function () {
                    setGuideApi("newCustomChartGuide", 0)
                },
                options: {
                    btnText: p("iKnow"),
                    custom: !1,
                    deviation: {
                        vertical: 1
                    },
                    direction: "right",
                    tipsDeviation: {
                        vertical: 0,
                        horizontal: 10
                    },
                    isfixed: !1
                }
            }, this.customChartEditGuide = [{
                Veil: {
                    eleClass: [],
                    options: {
                        mask: !1,
                        deviation: {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? "Two views, data view processing data output data set <br/>which based on a sheet, chart view making the chart." : "操作分为两个视图，数据视图处理数据、图表视图制作图表；<br/>数据视图输出数据集，每个数据集为基于一张工作表的处理结果。",
                    callback: function () {
                        setGuideApi("customChartEditGuide", 1)
                    },
                    options: {
                        btnText: p("goOn"),
                        showIndex: !0,
                        custom: !1,
                        position: {},
                        tipsDeviation: 80
                    }
                }
            }, {
                tipsText: s ? "Drag a field from the left field list to here." : "从左侧字段列表拖拽一个字段到这里",
                options: {
                    btnText: "",
                    custom: !1,
                    deviation: {
                        vertical: -4,
                        horizontal: 80
                    },
                    direction: "right",
                    tipsDeviation: {
                        vertical: -4,
                        horizontal: 8
                    },
                    isfixed: !0
                }
            }, {
                tipsText: s ? "Drag a field from the left field list to here." : "从左侧字段列表拖拽一个字段到这里",
                options: {
                    btnText: "",
                    custom: !1,
                    deviation: {
                        vertical: -4,
                        horizontal: 80
                    },
                    direction: "right",
                    tipsDeviation: {
                        vertical: -4,
                        horizontal: 8
                    },
                    isfixed: !0
                }
            }, {
                Veil: {
                    eleClass: [],
                    options: {
                        mask: !1,
                        deviation: {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? "Click to switch to chart view to make a chart." : "点击切换至图表视图，制作图表",
                    options: {
                        btnText: " ",
                        showIndex: !0,
                        custom: !1,
                        position: {},
                        tipsDeviation: 20
                    }
                }
            }, {
                Veil: {
                    eleClass: [],
                    options: {
                        mask: !0,
                        deviation: {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? 'Support two modes, Vega（descriptive graphics grammar）, Javascript code (including spell table), <br/>click "Go on" to use demo.' : "图表支持两种模式，描述性图形语法Vega、Javascript代码（含拼表），<br/>点击”继续“使用演示demo",
                    callback: function () {
                        $(window).trigger("customChartEditGuide", [4])
                    },
                    options: {
                        btnText: p("goOn"),
                        showIndex: !0,
                        custom: !1,
                        position: {},
                        tipsDeviation: 20
                    }
                }
            }, {
                Veil: {
                    eleClass: [],
                    options: {
                        mask: !1,
                        deviation: {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? 'Click "Run" to view the chart in the right area.' : "点击”运行“，在右侧预览区查看图表编辑效果",
                    options: {
                        btnText: " ",
                        direction: "top",
                        showIndex: !0,
                        custom: !1,
                        position: {},
                        tipsDeviation: 6
                    }
                }
            }, {
                Veil: {
                    eleClass: [],
                    options: {
                        mask: !1,
                        deviation: {
                            top: 0,
                            right: 0,
                            bottom: 0,
                            left: 0
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? 'click "Save" to store the result, <br/>the chart contents need to be saved <br/>and then return to the dashboard.' : "编辑完成后点击“保存”存储图表结果，<br/>图表视图内容需要保存后生效，<br/>之后点击返回，回到仪表盘",
                    options: {
                        btnText: " ",
                        direction: "top",
                        showIndex: !0,
                        custom: !1,
                        position: {},
                        tipsDeviation: 6
                    }
                }
            }], this.vipIsFree = {
                tipsText: "您可以免费享受价值23元的7天银钻会员哦~",
                callback: function () {
                    setGuideApi("vipIsFree", 0)
                },
                options: {}
            }, this.timePredicted = {
                Veil: {
                    eleClass: [],
                    options: {
                        deviation: {
                            top: -4,
                            right: -1,
                            bottom: 4,
                            left: -4
                        }
                    }
                },
                tooltips: {
                    tipsText: s ? "Now you can try to forecast this data." : "现在您可以尝试对此数据进行预测",
                    callback: function () {
                        setGuideApi("timePredicted", 0)
                    },
                    options: {
                        btnText: p("iKnow")
                    }
                }
            }, this.addChartGuide = {
                tipsText: p("dash.addChartGuideTip"),
                callback: function () {
                    setGuideApi("addChartGuide", 0)
                },
                options: {
                    deviation: {
                        vertical: -20,
                        horizontal: 55
                    }
                }
            }, this.copyChartGuide = {
                tipsText: p("dash.copyChartGuideTip"),
                callback: function () {
                    setGuideApi("copyChartGuide", 0)
                },
                options: {
                    deviation: {
                        vertical: 1,
                        horizontal: -140
                    },
                    tipsDeviation: {
                        vertical: 1,
                        horizontal: 90
                    }
                }
            }
        }])
}();

angular.module("BC.services")
    .factory("$jsTipTranslate", ["$rootScope", "$translate", function (e, t) {
        return function (a, i) {
            function n() {
                //$translate
                t(a).then(function (e) {
                    angular.forEach(e, function (e, t) {
                        i.tips[t] = e
                    })
                })
            }
            i.tips = i.tips || {};
            var r = e.$on("$translateChangeSuccess", n);
            i.$on("$destroy", function () {
                r()
            }), n()
        }
    }]);
angular.module("BC.services")
    .value("operatorTranslateIds", [
        "equal",
        "notEqual",
        "greatThan",
        "lessThan",
        "GTE",
        "LTE",
        "contain",
        "notContain",
        "isEmpty",
        "isNotEmpty",
        "selectDateRange",
        "isIn",
        "isNotIn"])
    .factory("filterOperatorMap", ["$rootScope", "$translate", "operatorTranslateIds", function (e, t, a) {
        function i() {
            n.length = 0, t(a).then(function (e) {
                a.forEach(function (t) {
                    n.push(e[t])
                })
            })
        }
        var n = [];
        return i(),
            e.$on("$translateChangeSuccess", i),
            n
    }])
    .factory("filterOperatorMapWithType", ["$rootScope", "$translate", "operatorTranslateIds", function (e, t, a) {
        function i() {
            t(a).then(function (e) {
                s.string = [], s.number = [], s.date = [], n.forEach(function (t) {
                    var i = a[t];
                    s.string.push({
                        value: t,
                        name: e[i]
                    })
                }), r.forEach(function (t) {
                    var i = a[t];
                    s.number.push({
                        value: t,
                        name: e[i]
                    })
                }), o.forEach(function (t) {
                    var i = a[t];
                    s.date.push({
                        value: t,
                        name: e[i]
                    })
                })
            })
        }
        var n = [0, 1, 6, 7, 8, 9],
            r = [0, 1, 2, 3, 4, 5, 8, 9],
            o = [0, 1, 2, 3, 4, 5, 8, 9, 10],
            s = {};
        return i(), e.$on("$translateChangeSuccess", i), s
    }])
    .factory("filterOperatorMapWithTypeSpecial", ["$rootScope", "$translate", "operatorTranslateIds", function (e, t, a) {
        function i() {
            t(a).then(function (e) {
                s.string = [], s.number = [], s.date = [], n.forEach(function (t) {
                    var i = a[t];
                    s.string.push({
                        value: t,
                        name: e[i]
                    })
                }), r.forEach(function (t) {
                    var i = a[t];
                    s.number.push({
                        value: t,
                        name: e[i]
                    })
                }), o.forEach(function (t) {
                    var i = a[t];
                    s.date.push({
                        value: t,
                        name: e[i]
                    })
                })
            })
        }
        var n = [0, 1, 6, 7, 8, 9, 11, 12],
            r = [0, 1, 2, 3, 4, 5, 8, 9, 11, 12],
            o = [0, 1, 2, 3, 4, 5, 8, 9, 10],
            s = {};
        return i(), e.$on("$translateChangeSuccess", i), s
    }])
    .factory("dsStatusMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                o.statusMap.length = 0, o.updateStatusMap.length = 0, n.forEach(function (t) {
                    o.statusMap.push(e[t])
                }), r.forEach(function (t) {
                    o.updateStatusMap.push(e[t])
                })
            })
        }
        var i = ["ds.status.normal", "ds.status.disconnect", "ds.status.updating", "ds.updateStatus.fail", "ds.updateStatus.updating"],
            n = [i[0], i[0], i[1], i[2]],
            r = [i[0], i[0], i[3], i[4]],
            o = {
                statusMap: [],
                updateStatusMap: []
            };
        return a(), e.$on("$translateChangeSuccess", a), o
    }])
    .factory("conditionType", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                i.length = 0, i.push({
                    value: 0,
                    text: e[n[0]]
                }), i.push({
                    value: 1,
                    text: e[n[1]]
                })
            })
        }
        var i = [],
            n = ["tableFilter.andType", "tableFilter.orType"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("dataTypeList", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n)
                .then(function (e) {
                    i.length = 0, n.forEach(function (t) {
                        i.push({
                            value: t,
                            text: e[t]
                        })
                    })
                })
        }
        var i = [],
            n = ["string", "number", "date"];
        return a(),
            e.$on("$translateChangeSuccess", a),
            i
    }])
    .factory("dataTypeMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                n.forEach(function (t) {
                    i[t] = e[t]
                })
            })
        }
        var i = {},
            n = ["string", "number", "date"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("alphaOrderType", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                i.length = 0, n.forEach(function (t) {
                    i.push({
                        value: t,
                        text: e[t]
                    })
                })
            })
        }
        var i = [],
            n = ["ascending", "descending"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("chartLineType", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                i.length = 0,
                    i.push({
                        type: "constant",
                        name: e[n[0]]
                    }),
                    i.push({
                        type: "calculate",
                        name: e[n[1]]
                    })
            })
        }
        var i = [],
            n = ["chart.constantValue", "chart.calculateValue"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("$getCustomFormula", ["$rootScope", "$translate", function (e, t) {
        function a(a) {
            function i() {
                t(a).then(function (e) {
                    n.length = 0, a.forEach(function (t) {
                        n.push({
                            type: t,
                            name: e[t]
                        })
                    })
                })
            }
            var n = [];
            return i(), e.$on("$translateChangeSuccess", i), n
        }
        return a
    }])
    .factory("formulaKeyMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                n.forEach(function (t) {
                    i[t] = e[t]
                })
            })
        }
        var i = {},
            n = ["TOTAL", "SUM", "AVERAGE", "AVG", "MIN", "MAX", "COUNT", "COUNT_DISTINCT", "YoY", "QoQ", "MED", "PERCENT_5", "PERCENT_10", "PERCENT_25", "PERCENT_50", "PERCENT_75", "PERCENT_90", "PERCENT_95", "LAST"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("dateNameMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                n.forEach(function (t) {
                    i[t] = e[t]
                })
            })
        }
        var i = {},
            n = ["day", "week", "month", "quarter", "year", "hour", "minute", "second"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("dataShowTypeMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                n.forEach(function (t) {
                    i[t] = e[t]
                })
            })
        }
        var i = {},
            n = ["chart.byText", "chart.byImg"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("granularityMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(n).then(function (e) {
                n.forEach(function (t) {
                    i[t] = e[t]
                })
            })
        }
        var i = {},
            n = ["chart.byDay", "chart.byWeek", "chart.byMonth", "chart.byQuarter", "chart.byYear", "chart.byHour", "chart.byMinute", "chart.bySecond", "normal"];
        return a(), e.$on("$translateChangeSuccess", a), i
    }])
    .factory("AdvfilterOperatorMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.length = 0, i.forEach(function (t, a) {
                    n.push({
                        value: r[a],
                        name: e[t]
                    })
                })
            })
        }
        var i = ["equal", "notEqual", "contain", "notContain", "beginWith", "endWith"],
            n = [],
            r = {
                0: 0,
                1: 1,
                2: 6,
                3: 7,
                4: 10,
                5: 11
            };
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("AdvfilterOperatorNumberMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.length = 0, i.forEach(function (t, a) {
                    n.push({
                        value: r[a],
                        name: e[t]
                    })
                })
            })
        }
        var i = ["equal", "notEqual", "greatThan", "lessThan", "GTE", "LTE", "between"],
            n = [],
            r = {
                0: 0,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
                6: 12
            };
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("AdvfilterOperatorList", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                i.forEach(function (t, a) {
                    n[r[a]] = e[t]
                })
            })
        }
        var i = ["equal", "notEqual", "greatThan", "lessThan", "GTE", "LTE", "contain", "notContain", "beginWith", "endWith", "between"],
            n = {},
            r = {
                0: 0,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
                6: 6,
                7: 7,
                8: 10,
                9: 11,
                10: 12
            };
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("warnOperatorMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                i.forEach(function (t, a) {
                    n[r[a]] = e[t]
                })
            })
        }
        var i = ["equal", "notEqual", "greatThan", "GTE", "lessThan", "LTE", "between"],
            n = {},
            r = {
                0: 3,
                1: 4,
                2: 1,
                3: 6,
                4: 2,
                5: 5,
                6: 7
            };
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("numberInnerFilterMap", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.length = 0, i.forEach(function (t, a) {
                    n.push({
                        value: r[a],
                        text: e[t]
                    })
                })
            })
        }
        var i = ["all", "equal", "notEqual", "greatThan", "GTE", "lessThan", "LTE", "between"],
            n = [],
            r = {
                0: -1,
                1: 0,
                2: 1,
                3: 2,
                4: 4,
                5: 3,
                6: 5,
                7: 12
            };
        return a(), e.$on("$translateChangeSuccess", a), n
    }])
    .factory("conditionTypeVal", ["$rootScope", "$translate", "$jsTipTranslate", function (e, t, a) {
        return a(["template.all", "template.any"], e),
            function (t) {
                return 0 == t ? e.tips["template.all"] : e.tips["template.any"]
            }
    }])
    .factory("dbTypeMap", ["$rootScope", function (e) {
        return {
            1: "MySQL",
            2: "Oracle",
            3: "MSSQL",
            4: "OpenDS",
            5: "Baidu Sem",
            7: "Sogou Sem",
            8: "en" == e.language ? "4D Pocket" : "四次元空间袋",
            10: "Umeng",
            11: "360 Sem",
            12: "Shenma Sem",
            13: "Shopex",
            15: "53KF",
            16: "快商通",
            18: "en" == e.language ? "Baidu ads ranking" : "百度推广实况",
            19: "JinYiWei",
            21: "百度网盟",
            22: "SEM数据管理系统",
            23: "Live800"
        }
    }])
    .factory("databaseConfigInfo", ["$rootScope", "$translate", function (e, t) {
        return {
            18: {
                type: "baiduSearch"
            },
            26: {
                type: "bdpStatistics"
            },
            59: {
                type: "bdpStatistics"
            },
            53: {
                type: "index",
                personalKeywordsNum: 10,
                enterpriseKeywordsNum: 10,
                regions: 1,
                device: 1,
                startDate: 1
            },
            66: {
                type: "api",
                autoSync: !1,
                manualSyncType: 1,
                field: !0,
                connectInfo: [{
                    key: "username",
                    title: t.instant("ds.username"),
                    require: !0
                }, {
                    key: "password",
                    title: t.instant("ds.password"),
                    require: !0
                }]
            },
            67: {
                type: "index",
                personalKeywordsNum: 10,
                enterpriseKeywordsNum: 10,
                checkKeyWords: 0
            },
            68: {
                type: "index",
                personalKeywordsNum: 10,
                enterpriseKeywordsNum: 10,
                regions: 1
            },
            70: {
                type: "index",
                personalKeywordsNum: 10,
                enterpriseKeywordsNum: 10
            },
            74: {
                autoSync: !0,
                autoSyncSetTime: !1,
                field: !0,
                connectInfo: [{
                    key: "username",
                    title: "APPID",
                    require: !0
                }, {
                    key: "password",
                    title: "AppSecret",
                    require: !0
                }]
            },
            75: {
                autoSync: !0,
                autoSyncSetTime: !0,
                connectInfo: [{
                    key: "username",
                    title: "API_KEY",
                    require: !0
                }, {
                    key: "password",
                    title: "SECRET",
                    require: !0
                }],
                field: !1
            },
            76: {
                autoSync: !0,
                autoSyncSetTime: !1,
                connectInfo: [{
                    key: "company_id",
                    title: t.instant("ds.connect.company_id"),
                    require: !0,
                    type: "text",
                    modify: 0
                }, {
                    key: "client_id",
                    title: t.instant("ds.connect.client_id"),
                    require: !0,
                    type: "text",
                    modify: 1
                }, {
                    key: "client_secret",
                    title: t.instant("ds.connect.client_secret"),
                    require: !0,
                    type: "text",
                    modify: 1
                }, {
                    key: "sign_key",
                    title: t.instant("ds.connect.sign_key"),
                    require: !0,
                    type: "text",
                    modify: 1
                }, {
                    key: "phone",
                    title: t.instant("ds.connect.phone"),
                    require: !0,
                    type: "text",
                    modify: 1
                }],
                field: !0
            },
            80: {
                autoSync: !0,
                autoSyncSetTime: !0,
                setStartDate: !1,
                connectInfo: [{
                    key: "username",
                    title: t.instant("ds.connect.apiKey"),
                    require: !0,
                    type: "text",
                    modify: 0
                }, {
                    key: "password",
                    title: t.instant("ds.connect.apiSecret"),
                    require: !0,
                    type: "text",
                    modify: 1
                }],
                field: !1
            },
            81: {
                autoSync: !0,
                autoSyncSetTime: !1,
                setStartDate: !0,
                connectInfo: [{
                    key: "username",
                    title: t.instant("ds.connect.apiId"),
                    require: !0,
                    type: "text",
                    modify: 0
                }, {
                    key: "password",
                    title: t.instant("ds.connect.api_key"),
                    require: !0,
                    type: "text",
                    modify: 1
                }],
                field: !0
            }
        }
    }])
    .factory("databaseType", ["$rootScope", "$translate", function (e, t) {
        function a() {
            t(i).then(function (e) {
                n.forEach(function (t) {
                    t.typeName = t.translateName ? e[t.translateName] : t.typeName
                })
            })
        }
        var i = ["dsType.4dPocket", "dsType.baiduAdsRank", "dsType.baiduSem", "dsType.360Sem", "dsType.sougouSem", "dsType.shenmaSem", "dsType.baiduUnion", "dsType.youdaoSpread", "dsType.toutiaoAds", "dsType.baiduAnalytics", "dsType.cnzz", "dsType.umeng", "dsType.baiduBridge", "dsType.tq", "dsType.53kf", "dsType.live800", "dsType.chengxintong", "dsType.jinyiwei", "dsType.kuaishangtong", "dsType.shangwutong", "dsType.weiboSpread", "dsType.tencentSpread", "dsType.sougouUnion", "ba.bdpAnalysis", "dsType.jinshuju", "dsType.tencentgdt", "dsType.EC", "dsType.sougouSmall", "dsType.youkuDSP", "dsType.md", "dsType.CM", "dsType.sinaFuyi"];
        e.$on("$translateChangeSuccess", a);
        var n = [{
            dbType: 1,
            typeName: "MySQL",
            dbLabel: "ds",
            category: "ds"
        }, {
            dbType: 2,
            typeName: "Oracle",
            dbLabel: "ds",
            category: "ds"
        }, {
            dbType: 3,
            typeName: "MSSQL",
            dbLabel: "ds",
            category: "ds"
        }, {
            dbType: 4,
            typeName: "OpenDS",
            dbLabel: "opends",
            category: "opends"
        }, {
            dbType: 8,
            typeName: t.instant("dsType.4dPocket"),
            dbLabel: "public",
            category: "public",
            translateName: "dsType.4dPocket"
        }, {
            dbType: 13,
            typeName: "Shopex",
            dbLabel: "shopex"
        }, {
            dbType: 18,
            typeName: t.instant("dsType.baiduAdsRank"),
            dbLabel: "baiduAds",
            translateName: "dsType.baiduAdsRank"
        }, {
            dbType: 22,
            typeName: "SEM数据管理系统",
            dbLabel: "sem",
            category: "sem"
        }, {
            dbType: 5,
            typeName: t.instant("dsType.baiduSem"),
            dbLabel: "api",
            category: "api_0",
            translateName: "dsType.baiduSem"
        }, {
            dbType: 11,
            typeName: t.instant("dsType.360Sem"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.360Sem"
        }, {
            dbType: 7,
            typeName: t.instant("dsType.sougouSem"),
            dbLabel: "api",
            category: "api_0",
            translateName: "dsType.sougouSem"
        }, {
            dbType: 39,
            typeName: t.instant("dsType.sougouSmall"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.sougouSmallTip",
            translateName: "dsType.sougouSmall"
        }, {
            dbType: 12,
            typeName: t.instant("dsType.shenmaSem"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.ShenmaTip",
            translateName: "dsType.shenmaSem"
        }, {
            dbType: 21,
            typeName: t.instant("dsType.baiduUnion"),
            dbLabel: "api",
            category: "api_0",
            tip: "ds.WMTip",
            translateName: "dsType.baiduUnion"
        }, {
            dbType: 30,
            typeName: t.instant("dsType.sougouUnion"),
            dbLabel: "api",
            category: "api_0",
            tip: "",
            translateName: "dsType.sougouUnion"
        }, {
            dbType: 27,
            typeName: t.instant("dsType.youdaoSpread"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.youdaoSpread"
        }, {
            dbType: 31,
            typeName: t.instant("dsType.weiboSpread"),
            dbLabel: "api",
            category: "api_1",
            tip: "",
            translateName: "dsType.weiboSpread"
        }, {
            dbType: 29,
            typeName: t.instant("dsType.tencentSpread"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.tencentSpreadTip",
            syncTip: !0,
            translateName: "dsType.tencentSpread"
        }, {
            dbType: 36,
            typeName: t.instant("dsType.tencentgdt"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.tencentgdtTip",
            translateName: "dsType.tencentgdt"
        }, {
            dbType: 33,
            typeName: t.instant("dsType.sinaFuyi"),
            dbLabel: "api",
            category: "api_1",
            tip: "",
            translateName: "dsType.sinaFuyi"
        }, {
            dbType: 25,
            typeName: t.instant("dsType.toutiaoAds"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.toutiaoAds"
        }, {
            dbType: 37,
            typeName: t.instant("dsType.youkuDSP"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.youkuDSP"
        }, {
            dbType: 9,
            typeName: t.instant("dsType.baiduAnalytics"),
            dbLabel: "api",
            category: "api_5",
            tip: "ds.baiduStatisticsTip",
            syncTip: !0,
            translateName: "dsType.baiduAnalytics"
        }, {
            dbType: 24,
            typeName: t.instant("dsType.cnzz"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.cnzzTip",
            syncTip: !0,
            translateName: "dsType.cnzz"
        }, {
            dbType: 10,
            typeName: t.instant("dsType.umeng"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.umengTip",
            translateName: "dsType.umeng"
        }, {
            dbType: 17,
            typeName: t.instant("dsType.baiduBridge"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.baiduBridgeTip",
            translateName: "dsType.baiduBridge"
        }, {
            dbType: 20,
            typeName: t.instant("dsType.tq"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.TQTip",
            translateName: "dsType.tq"
        }, {
            dbType: 15,
            typeName: t.instant("dsType.53kf"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.53kf"
        }, {
            dbType: 23,
            typeName: t.instant("dsType.live800"),
            dbLabel: "api",
            category: "api_0",
            tip: "ds.live800Tip",
            syncTip: !0,
            translateName: "dsType.live800"
        }, {
            dbType: 32,
            typeName: t.instant("dsType.shangwutong"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.shangwutongTip",
            translateName: "dsType.shangwutong"
        }, {
            dbType: 28,
            typeName: t.instant("dsType.chengxintong"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.chengxintong"
        }, {
            dbType: 19,
            typeName: t.instant("dsType.jinyiwei"),
            dbLabel: "api",
            category: "api_3",
            translateName: "dsType.jinyiwei"
        }, {
            dbType: 16,
            typeName: t.instant("dsType.kuaishangtong"),
            dbLabel: "api",
            category: "api_2",
            translateName: "dsType.kuaishangtong"
        }, {
            dbType: 34,
            typeName: t.instant("dsType.jinshuju"),
            dbLabel: "api",
            category: "api_1",
            translateName: "dsType.jinshuju"
        }, {
            dbType: 35,
            typeName: t.instant("dsType.EC"),
            dbLabel: "api",
            category: "api_0",
            tip: "ds.ECTip",
            translateName: "dsType.EC"
        }, {
            dbType: 38,
            typeName: t.instant("dsType.md"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.mdTip",
            syncTip: !0,
            translateName: "dsType.md"
        }, {
            dbType: 41,
            typeName: t.instant("dsType.CM"),
            dbLabel: "api",
            category: "api_1",
            tip: "ds.CMTip",
            translateName: "dsType.CM"
        }, {
            dbType: 26,
            typeName: t.instant("ba.bdpAnalysis"),
            dbLabel: "ba",
            category: "",
            translateName: "ba.bdpAnalysis"
        }];
        return n
    }])
    .factory("databaseSyncTime", [function () {
        return {
            hourOptions: ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"],
            minuteOptions: ["00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55"]
        }
    }])
    .factory("dateTimesMap", [function () {
        return [{
            name: "00",
            value: "00"
        }, {
            name: "01",
            value: "01"
        }, {
            name: "02",
            value: "02"
        }, {
            name: "03",
            value: "03"
        }, {
            name: "04",
            value: "04"
        }, {
            name: "05",
            value: "05"
        }, {
            name: "06",
            value: "06"
        }, {
            name: "07",
            value: "07"
        }, {
            name: "08",
            value: "08"
        }, {
            name: "09",
            value: "09"
        }, {
            name: "10",
            value: "10"
        }, {
            name: "11",
            value: "11"
        }, {
            name: "12",
            value: "12"
        }, {
            name: "13",
            value: "13"
        }, {
            name: "14",
            value: "14"
        }, {
            name: "15",
            value: "15"
        }, {
            name: "16",
            value: "16"
        }, {
            name: "17",
            value: "17"
        }, {
            name: "18",
            value: "18"
        }, {
            name: "19",
            value: "19"
        }, {
            name: "20",
            value: "20"
        }, {
            name: "21",
            value: "21"
        }, {
            name: "22",
            value: "22"
        }, {
            name: "23",
            value: "23"
        }, {
            name: "24",
            value: "24"
        }]
    }])
    .factory("databaseParamTip", [function () {
        return {
            1: {
                connect: [{
                    key: "host",
                    name: "服务器",
                    desc: "数据库的公网访问地址，如IP、域名等。"
                }, {
                    key: "port",
                    name: "端口",
                    desc: "数据库的公网访问端口号。"
                }, {
                    key: "username",
                    name: "用户名",
                    desc: "数据库的公网访问用户名"
                }, {
                    key: "password",
                    name: "密码",
                    desc: "数据库的公网访问密码"
                }, {
                    key: "database",
                    name: "数据库",
                    desc: "目标数据库名称"
                }]
            }
        }
    }]);
function () {
    angular.module("BC.services")
        .service("styleService", [function () {
            function e(e) {
                var t = document.createElement("link");
                return t.setAttribute("rel", "stylesheet"),
                    t.setAttribute("type", "text/css"),
                    t.setAttribute("href", e), t
            }

            function t(t, i) {
                for (var n = document.getElementsByTagName("link"), r = !0, o = n.length - 1; o >= 0; o--)
                    if (n[o] && null != n[o].getAttribute("href") && n[o].getAttribute("href") === t) {
                        var s = e(i);
                        n[o].parentNode.replaceChild(s, n[o]), r = !1
                    }
                r && a(i)
            }

            function a(t) {
                var a = e(t);
                console.log(t, a), void 0 !== a && document.getElementsByTagName("head")[0].appendChild(a)
            }

            function i(e) {
                for (var t = document.getElementsByTagName("link"), a = t.length - 1; a >= 0; a--) t[a] && null != t[a].getAttribute("href") && t[a].getAttribute("href") === e && t[a].parentNode.removeChild(t[a])
            }
            return {
                createCssFile: e,
                replaceCssFile: t,
                addCssFile: a,
                deleteCssFile: i
            }
        }])
}();
function () {
    angular.module("BC.controllers.project", [])
        .controller("ProjectController", [
            "$scope", "$rootScope", "multipleProService", "commonService", "$location", "ngDialog",
            "errHint", "$state", "$timeout", "$jsTipTranslate", "screenOfficialSize", "projectTreeCache", "guideService", function (e, t, a, i, n, r, o, s, l, d, c, p, u) {
                function h(t, i, n) {
                    function r(e, t) {
                        for (var a = 0, o = e.length; a < o; a++) {
                            var s = e[a];
                            if (!(s.proj_id != t || i && s.rule_id != i || n && s.share_user_id != n)) return s;
                            if (s.subs) {
                                var l = angular.copy(s.subs);
                                delete l.parent;
                                var d = r(l, t);
                                if (void 0 !== d) return d
                            }
                        }
                    }
                    return a.makeParent(e.all_project_list), r(e.all_project_list, t)
                }

                function f(i) {
                    if (e.noDashes = !0, t.proj_share = i.is_share, i && i.subs.length > 0) e.selected.dsh_id = e.selected.dsh_id || i.dash_id || function (e) {
                            var t = "",
                                a = function (e) {
                                    for (var i = 0, n = e.length; i < n; i++) {
                                        var r = e[i];
                                        if ("dashboard" === r.attribute) {
                                            t = r.dsh_id;
                                            break
                                        }
                                        r.subs && r.subs.length && a(r.subs)
                                    }
                                };
                            return a(e.subs || []), t
                        }(i), e.projFolding && a.openCurFolder(i, e.projFolding), e.tapDashboard({
                        dsh_id: e.selected.dsh_id,
                        parent: i
                    });
                    else {
                        e.selected.proj_id = i.proj_id, e.selected.rule_id = t.global.rule_id = i.rule_id || "", e.selected.dsh_id = void 0, e.selected.dsh_id_type = void 0, e.projFolding && a.openCurFolder(i, e.projFolding);
                        var r = "/dash_edit/";
                        t.wsId && (r = "/dash_edit_ws/" + t.wsId + "/"), (S || 1 == i.category) && (r = "/data_screen/"), t.hasInitDashboard = !0, n.path(r + i.proj_id + "/")
                    }
                }

                function g() {
                    function t(e, n) {
                        e.forEach(function (e, r, o) {
                            var s = "project" == e.attribute,
                                l = e.proj_id,
                                d = l + e.type;
                            n && (e.parent = n, e.type = n.type, e.only_display = n.only_display), s && (void 0 === i[d] ? a[d] = 1 : a[d] = 1 & i[d], e.subs && e.subs.length > 0 && t(e.subs, e))
                        })
                    }
                    var a = {},
                        i = localStorage.getItem("project_folding");
                    try {
                        i = angular.fromJson(i) || {}
                    } catch (e) {
                        i = {}
                    }
                    t(e.all_project_list), e.projFolding = a, m($.extend({}, i, a))
                }

                function m(e) {
                    e = e || {};
                    var t = localStorage.getItem("project_folding");
                    try {
                        t = angular.fromJson(t) || {}
                    } catch (e) {
                        t = {}
                    }
                    var a = $.extend({}, t, e);
                    localStorage.setItem("project_folding", angular.toJson(a))
                }

                function _(t) {
                    var a = !1,
                        i = !1;
                    return angular.forEach(e.hasSpecialTypeProj.share, function (e) {
                        e.dsh_id == t && (a = e.is_hidden, i = !0)
                    }), i || angular.forEach(e.hasSpecialTypeProj.rule, function (e) {
                        e.dsh_id == t && (a = e.is_hidden, i = !0)
                    }), a
                }

                function v(t, a, i, n, r) {
                    var o = 0,
                        s = e.all_project_list,
                        l = (s.length, 0),
                        d = function (e, a) {
                            for (var i = 0; i < e.length; i++) {
                                var n = e[i];
                                if ("project" === n.attribute) {
                                    if (n.proj_id === t) {
                                        o = null === a ? i : a;
                                        break
                                    }
                                    n.subs && n.subs.length > 0 && d(n.subs, null !== a ? a : i)
                                }
                            }
                        };
                    d(s, null), $(".own-project-list > .project-item").each(function (e, t) {
                        e < o && (l += $(t).height())
                    }), l += 0, 1 == r && (l = 0), scrollToTargetPos($(".project-list"), l)
                }

                function b() {
                    if (t.securityStrategy && t.securityStrategy.needMobileBind) return !1;
                    var n = {};
                    D && (n.is_tpl = 1);
                    var r = [];
                    return r = S ? [1] : [0, 2], n.categories = angular.toJson(r), i.project.getTree(n).then(function (i) {
                        if (i) {
                            a.initDeep(i.proj, 0), e.project_list = [], e.project_dsh_label_list = [], e.all_project_list = i.proj;
                            var n = i.proj;
                            e.noFolders = 0 == n.length, e.hasSpecialTypeProj = {
                                rule: [],
                                share: [],
                                hasHidden: !1
                            };
                            var r = w.getItem(x),
                                s = "" == r ? {} : JSON.parse(w.getItem(x)) || {},
                                l = !1,
                                d = !1,
                                c = null,
                                p = 0,
                                u = function (t, a) {
                                    var i = 0;
                                    angular.forEach(t.subs || [], function (n) {
                                        "project" === n.attribute ? (0 == n.type && 1 != n.property || (n.is_share = !0), u(n, n.type)) : 1 == a ? (n.share_name = t.share_name, e.hasSpecialTypeProj.share.push({
                                            dsh_id: n.dsh_id,
                                            proj_id: t.proj_id,
                                            is_hidden: n.hidden || n.is_hidden
                                        })) : 2 == a && (n.rule_user = t.rule_user, e.hasSpecialTypeProj.rule.push({
                                            dsh_id: n.dsh_id,
                                            proj_id: t.proj_id,
                                            is_hidden: n.hidden || n.is_hidden
                                        })), i = n.hidden ? ++i : i, e.hasSpecialTypeProj.hasHidden = i > 0 || e.hasSpecialTypeProj.hasHidden
                                    }), t.hidden = 0 == (t.subs || []).length || i == (t.subs || []).length && i > 0 ? 1 : 0
                                },
                                m = function (e) {
                                    for (var t = 0, a = e.length; t < a; t++) {
                                        var i = e[t];
                                        if ("project" === i.attribute) {
                                            if (i.proj_id == s.proj_id) {
                                                l = !0;
                                                break
                                            }
                                            i.subs && i.subs.length && m(i.subs)
                                        }
                                    }
                                };
                            m(n), angular.forEach(n, function (t, a) {
                                0 != t.type || 1 == t.property ? (t.is_share = !0, u(t, t.type), p = t.hidden ? ++p : p) : (e.project_list.push(t), t.hidden = 0);
                                var i = function (a, n) {
                                    angular.forEach(a, function (a) {
                                        if ("dashboard" !== a.attribute) return void i(a.subs || [], a);
                                        a.label && e.project_dsh_label_list.indexOf(a.label) < 0 && e.project_dsh_label_list.push(a.label), n.hidden || a.hidden || c || (c = angular.copy(t), c.dash_id = a.dsh_id), 1 == l && a.dsh_id == s.dash_id && (n.dash_id = a.dsh_id, d = n, d.dash_hidden = a.hidden)
                                    })
                                };
                                i(t.subs, t)
                            });
                            var b = !0;
                            if (e.hasSpecialTypeProj.hasHidden && (e.selected.proj_id ? _(e.selected.dsh_id) && o(e.tips["dash.curDashIsHidden"]) : d && !d.dash_hidden ? (e.selected.proj_id = d.proj_id, e.selected.dsh_id = d.dash_id, e.selected.rule_id = d.rule_id) : c ? (e.selected.proj_id = c.proj_id, e.selected.dsh_id = c.dash_id, e.selected.rule_id = c.rule_id) : b = !1), g(), b) {
                                var y;
                                y = e.selected.proj_id ? h(e.selected.proj_id, e.selected.rule_id) : d || n[0], y ? f(y) : t.hasInitDashboard = !0, setTimeout(function () {
                                    v(e.selected.proj_id, e.selected.rule_id, "", e.selected.dsh_id, 0)
                                }, 10)
                            }
                            t.projectLoaded = !0, t.show_bdp_header = !0
                        }
                    })
                }

                function y(a) {
                    if (t.guideApi.copyDashTplGuide) {
                        var n = {
                            copySuccess: !1,
                            isNewUser: t.noviceGuide
                        };
                        i.guide.getDashDemo().then(function (t) {
                            0 == t.status ? (n.copySuccess = !0, e.$$phase || e.$digest(), u.copyDashTplGuide.callback(), a()) : r.close(o)
                        });
                        var o = r.open({
                            template: "/static/js/personal/novice-guide/copy-dash-tpl.html",
                            className: "ngdialog-theme-default ngDialog-width-640",
                            scope: e,
                            data: n,
                            showClose: !1,
                            disableAnimation: !0
                        })
                    }
                }
                var w = window.localStorage,
                    C = $.cookie("user_id"),
                    x = "__localstorage_key_project" + C + (s.params.wsId || "");
                e.showEmptyDash = !1, e.showEmptyFolder = !1, e.glboal = {}, e.glboal.isCreatingDashboard = !1, e.hasSpecialTypeProj = {
                    rule: [],
                    share: [],
                    hasHidden: !1
                }, e.selected = {
                    proj_id: s.params.projId,
                    dsh_id: s.params.dashId,
                    rule_id: s.params.ruleId,
                    ws_id: s.params.wsId
                }, e.root = {};
                var k = n.path(),
                    D = (k.indexOf("dash_edit"), k.indexOf("dash_tpl") > -1),
                    S = k.indexOf("data_screen") > -1;
                bdp.bdpPageStatus.isUnderAdvDash();
                S && (t.view = "data_screen");
                window.isThirdIframe = t.isThirdIframe = k.indexOf("third_iframe") > -1, t.isThirdIframeMobile = {
                    type: void 0
                }, t.isThirdIframe && ($("head").append('<meta name="viewport" content="width=device-width, initial-scale=1.0">'), l(function () {
                    bdpChart.helper.isMobile() && ($("head").append('<link rel="stylesheet" type="text/css" href="https://s1.bdp.cn/static/css/mobile-mode_9c8df15.css"/>'), $("body").addClass("mobile-mode"), e.isThirdIframeMobile.type = !0)
                }, 0, !1)), 
                e.showCreateDashDialog = function (t, a) {
                    var i = n.path(),
                        s = i.indexOf("data_screen") > -1;
                    bdp.bdpPageStatus.isUnderAdvDash();
                    e.project_list && 0 != e.project_list.length ? r.open({
                        templateUrl: s ? "/static/partials/dialogTemplates/create_data_screen.html" : "/static/partials/dialogTemplates/create-dashboard.html",
                        scope: e,
                        className: "ngdialog-theme-default ngdialog-small ngdialog-create-dashboard",
                        controller: "createDashboardController"
                    }) : o(e.tips["dash.emptyProject"])
                }, 
                e.hitLabelList = {
                    show: !1,
                    list: []
                }, 
                e.hitExistDashTags = function (t) {
                    e.hitLabelList.list = [], e.hitLabelList.show = !0, t ? angular.forEach(e.project_dsh_label_list, function (t) {
                        t.toLowerCase().indexOf(tag.toLowerCase()) >= 0 && e.hitLabelList.list.push(t)
                    }) : e.hitLabelList.list = angular.copy(e.project_dsh_label_list)
                }, 
                e.openParentDialog = function () {
                    e.showParentGroupList = !e.showParentGroupList
                }, 
                e.showCreateProjDialog = function () {
                    r.open({
                        templateUrl: "/static/partials/dialogTemplates/create-project.html",
                        scope: e,
                        className: "ngdialog-theme-default ngdialog-small",
                        controller: "createProjectController"
                    })
                }, 
                e.tapNodeName = function (t, a, i) {
                    "project" == i.attribute ? e.tapProject(t, a, i, "tab") : "dashboard" == i.attribute && e.tapDashboard(i, !0)
                }, 
                e.tapDashboard = function (a, i, r) {
                    var o, l = a.dsh_id,
                        d = n.path(),
                        c = d.indexOf("dash_edit") > -1,
                        p = d.indexOf("dash_tpl") > -1,
                        u = d.indexOf("data_screen") > -1,
                        h = bdp.bdpPageStatus.isUnderAdvDash();
                    (a.parent && a.parent.subs || []).forEach(function (e, t) {
                        "dashboard" == e.attribute && e.dsh_id == l && (o = e)
                    });
                    var f = o && 2 == o.category,
                        g = "dash_edit";
                    if (!(c || p || isThirdIframe || u || h)) return !1;
                    g = e.glboal.isCreatingDashboard && f ? "adv_dash_edit" : c ? "dash_edit" : "dash_tpl";
                    var m = a.parent,
                        _ = e.selected.proj_id = m.proj_id;
                    if (e.selected.rule_id = m.rule_id, t.proj_share = m.is_share, t.proj_rule = !!m.rule_id, t.dashCategory = f ? 2 : 0, t.global.rule_id = m.rule_id || "", e.selected.dsh_id = l, e.selected.dsh_id_type = l + m.type, e.noDashes = 0 == m.subs.length, r) return void n.url(r);
                    e.glboal.isCreatingDashboard && f && (localStorage.setItem("mc_location_path", "/dash_edit/" + _ + "/" + l + "/mode/adv"), w.setItem(x, JSON.stringify({
                        proj_id: _,
                        dash_id: l
                    })), e.glboal.isCreatingDashboard = !1);
                    var v = !i && s.params.df_id ? "?df_id=" + s.params.df_id + "&range=" + s.params.range : "",
                        b = f ? "/mode/adv" : "";
                    isThirdIframe ? n.path("/third_iframe/" + _ + "/" + l + v) : u ? e.glboal.isCreatingDashboard ? (n.path("/data_screen_edit/" + _ + "/" + l), e.glboal.isCreatingDashboard = !1) : n.path("/data_screen/" + _ + "/" + l) : m.rule_id ? n.url("/" + g + "/" + _ + "/" + l + "/" + m.rule_id + b + v) : s.params.wsId ? n.url("/" + g + "_ws/" + s.params.wsId + "/" + _ + "/" + l + b + v) : n.url("/" + g + "/" + _ + "/" + l + b + v), "dash_edit" == g && w.setItem(x, JSON.stringify({
                        proj_id: _,
                        dash_id: l
                    }))
                }, 
                e.tapAllProject = function (t, a) {
                    function i(t, a, n) {
                        angular.forEach(t, function (t, n) {
                            var n = t.proj_id + t.type;
                            e.projFolding[n] = a, m(e.projFolding), "project" == t.attribute && i(t.subs, a)
                        })
                    }
                    i(t, a, !0), l(function () {
                        v(e.selected.proj_id, e.selected.rule_id, "", e.selected.dsh_id, a)
                    }, 100)
                }, 
                e.setHideDash = function (t) {
                    if (!e.hasSpecialTypeProj.rule.length && !e.hasSpecialTypeProj.share.length) return void o(e.tips["dash.noDashToHide"]);
                    var a = {
                        projectList: t
                    };
                    r.open({
                        templateUrl: "/static/partials/dialogTemplates/set-dash-hide.html",
                        scope: e,
                        className: "ngdialog-theme-default ngDialog-width-360 ngdialog-set-hide-dash",
                        data: a,
                        controller: ["$scope", "commonService", "$jsTipTranslate", function (e, t, a) {
                            e.hideDashDialog = {
                                isSaveing: !1,
                                projList: [],
                                queryDash: "",
                                dashProjMap: {},
                                hiddenDashMap: {},
                                hiddenCount: 0,
                                getOptTip: function (t) {
                                    return t.is_hidden ? e.tips["dash.showDashTip"] : e.tips["dash.hideDashTip"]
                                },
                                clickOnItem: function (e, t, a) {
                                    "project" == t.attribute ? this.changeOpenStatus(e, t) : "dashboard" == t.attribute && this.changeDashHideStatus(e, t, a)
                                },
                                clickOnBtn: function (e, t, a) {
                                    "project" == t.attribute ? this.changeProjHideStatus(e, t) : "dashboard" == t.attribute && this.changeDashHideStatus(e, t, a)
                                },
                                changeOpenStatus: function (e, t) {
                                    t.is_open = !t.is_open
                                },
                                changeProjHideStatus: function (t, a) {
                                    t && t.stopPropagation();
                                    var i = function (t, a) {
                                        var n = "project" == t.attribute,
                                            r = n ? t.proj_id : t.dsh_id;
                                        if (t.is_hidden = a, t.dash_hidden_num = t.is_hidden ? (t.subs || []).length : 0, n) t.subs && t.subs.length > 0 && t.subs.forEach(function (e) {
                                            i(e, t.is_hidden)
                                        });
                                        else {
                                            var o = 1 == t.parent.type ? r + "_share" : r + "_rule";
                                            e.hideDashDialog.dashProjMap[o].dash_hidden = t.is_hidden
                                        }
                                    };
                                    i(a, !a.is_hidden), this.checkParentHideStatus(a)
                                },
                                checkParentHideStatus: function (e) {
                                    var t = 0;
                                    (e.subs || []).map(function (e) {
                                        t = e.is_hidden ? ++t : t
                                    }), e.dash_hidden_num = t, e.is_hidden = t == e.subs.length, e.parentId && this.checkParentHideStatus(e.parent)
                                },
                                changeDashHideStatus: function (t, a, i) {
                                    a.is_hidden = !a.is_hidden;
                                    var n = 1 == i.type ? a.dsh_id + "_share" : a.dsh_id + "_rule";
                                    e.hideDashDialog.dashProjMap[n].dash_hidden = a.is_hidden, this.checkParentHideStatus(i), t && t.stopPropagation()
                                },
                                changeSearchResultParentStatus: function (e) {
                                    e.parentId && (e.parent.is_display = !0, e.parent.is_open = !0, e.parent.parentId && this.changeSearchResultParentStatus(e.parent))
                                },
                                searchResultStatus: function (t) {
                                    var a = e.hideDashDialog.queryDash.toLowerCase();
                                    angular.forEach(t, function (t) {
                                        var i = "project" === t.attribute,
                                            n = t.name.toLowerCase();
                                        t.is_display = !1, i ? n.indexOf(a) >= 0 ? (t.is_display = !0, t.is_open = !0, (t.subs || []).map(function (e) {
                                            e.is_display = !0
                                        }), getItemFlag = !0, e.hideDashDialog.noResult = !1, e.hideDashDialog.changeSearchResultParentStatus(t)) : t.subs && t.subs.length > 0 && e.hideDashDialog.searchResultStatus(t.subs) : n.indexOf(a) >= 0 ? (t.is_display = !0, getItemFlag = !0, e.hideDashDialog.noResult = !1, e.hideDashDialog.changeSearchResultParentStatus(t)) : t.is_display = !1
                                    })
                                },
                                resetFolderState: function (e) {
                                    var t = this;
                                    angular.forEach(e, function (e) {
                                        e.is_display = !0, e.subs && e.subs.length > 0 && t.resetFolderState(e.subs)
                                    })
                                },
                                keyUpSearch: function (t) {
                                    if (!e.hideDashDialog.queryDash) return this.resetFolderState(e.hideDashDialog.projList), void(e.hideDashDialog.noResult = !1);
                                    this.searchResultStatus(e.hideDashDialog.projList)
                                },
                                saveHideSetting: function () {
                                    if (e.hideDashDialog.isSaveing) return !1;
                                    var a = [],
                                        i = [];
                                    angular.forEach(e.hideDashDialog.dashProjMap, function (e, t) {
                                        e.dash_hidden && ("share" == e.type && a.push(e.dash_id), "rule" == e.type && i.push(e.dash_id))
                                    }), e.hideDashDialog.isSaveing = !0;
                                    var n = {
                                        share: a,
                                        rule: i
                                    };
                                    n = {
                                        dsh_ids: angular.toJson(n)
                                    }, t.dashboard.hide(n).then(function (t) {
                                        e.hideDashDialog.isSaveing = !1, "0" == t.status ? (e.getTree(), r.closeAll()) : o(+t.status, {
                                            warn_msg: t.errstr
                                        })
                                    })
                                }
                            }, e.initDialogData = function () {
                                var t = [],
                                    a = angular.copy(e.ngDialogData.projectList),
                                    i = "",
                                    n = function (t) {
                                        angular.forEach(t, function (t) {
                                            if (0 != t.type) {
                                                var a = "project" == t.attribute,
                                                    r = a ? t.proj_id : t.dsh_id;
                                                t.is_display = !0, t.is_hidden = t.hidden, delete t.hidden, a ? (t.is_open = !1, t.hidden_num = 0, (t.subs || []).map(function (e) {
                                                    t.dash_hidden_num = e.hidden || e.is_hidden ? ++t.hidden_num : t.hidden_num
                                                }), t.subs && t.subs.length > 0 && n(t.subs)) : (i = 1 == t.parent.type ? r + "_share" : r + "_rule", e.hideDashDialog.dashProjMap[i] = {
                                                    attribute: t.attribute,
                                                    proj_id: t.proj_id,
                                                    dash_id: t.dsh_id,
                                                    dash_hidden: t.is_hidden,
                                                    dash_name: t.name,
                                                    type: 1 == t.parent.type ? "share" : "rule"
                                                })
                                            }
                                        })
                                    };
                                n(a), angular.forEach(a, function (e) {
                                    0 != e.type && t.push(e)
                                }), e.hideDashDialog.projList = t
                            }, e.initDialogData(), a(["saveSuccess", "dash.showDashTip", "dash.hideDashTip"], e)
                        }]
                    }), window.bdpa && bdpa.track("open_hid_dash")
                }, 
                e.tapProject = function (t, a, i, n) {
                    var r = i.proj_id + i.type;
                    n && (e.projFolding[r] ^= 1, m(e.projFolding));
                    var o = angular.element(t.currentTarget),
                        s = "J-folder-icon bdp-icon fl";
                    0 != i.type || i.property ? i.property || 2 == i.type ? e.projFolding[i.proj_id + i.type] ? s += " ico-folder-rule" : s += " ico-folder-rule-open" : 1 == i.type && (e.projFolding[i.proj_id + i.type] ? s += " ico-folder-shared" : s += " ico-folder-shared-open") : e.projFolding[i.proj_id + i.type] ? s += " ico-folder1" : s += " ico-folder2-open", a ? o.attr("class", s) : o.siblings(".J-folder-icon").attr("class", s)
                }, 
                e.getProjectById = h, e.setDashboard = f, e.getTree = b, 
                b(), 
                e.saveFoldingState = m, 
                $("body").on("changeDashboard", function (t, a) {
                    e.tapDashboard({
                        dsh_id: a.dshId,
                        parent: a.projInfo
                    }, !1, a.url)
                });
                var T = e.$watch("enterprise_type", function (e) {
                    e && 3 == e && (y(b), T())
                });
                d([
                    "dash.emptyProject", 
                    "dash.projectNameRequired", 
                    "dash.duplicateProjectName", 
                    "dash.dashNameLessThan100", 
                    "dash.noDashToHide", 
                    "dash.dashNameRequired", 
                    "dash.duplicateDashName", 
                    "dash.dashboardLabelLimit", 
                    "dash.dashboardCommentLimit", 
                    "dash.chooseProj", 
                    "dash.curDashIsHidden", 
                    "dash.folderNumberExceeded", 
                    "dash.rootFolder"], e)
            }])
        .controller("createDashboardController", ["$scope", "errHint", "multipleProService", "commonService", "$location", "screenOfficialSize", function (e, t, a, i, n, r) {
            function o(a, i) {
                if (8 != a.keyCode) return i && i.length >= 20 ? (t(e.tips["dash.dashboardLabelLimit"]), !1) : void 0
            }

            function s(a, i) {
                if (8 != a.keyCode) return i && i.length >= 100 ? (t(e.tips["dash.dashboardCommentLimit"]), !1) : void 0
            }

            function l(t, a) {
                var n = {};
                n.proj_id = t.proj_id, n.own_only = 0, (h || 1 == t.category || 1 == a) && (categoryList = [1], n.categories = angular.toJson(categoryList)), (f || 2 == t.category || 2 == a) && (categoryList = [0, 2], n.categories = angular.toJson(categoryList)), i.dashboard.getList(n).then(function (a) {
                    t.subs = a, d(t), e.setDashboard(t)
                })
            }

            function d(e) {
                var t = e.subs || [],
                    a = e.deep + 1;
                t && angular.forEach(t, function (t) {
                    t.parent = e, t.parentId = e.proj_id, t.parent_id = e.proj_id, t.type = e.type, t.deep = a, "project" == t.attribute && d(t)
                })
            }

            function c(t, a) {
                e.selectFolder = t, e.createDashData.showDropdown = !1, "dashboard" == a && (e.createDashData.selectedName = e.selectFolder ? e.selectFolder.name : "")
            }

            function p(a, n, r) {
                if (a.name.length > 100) return void t(e.tips["dash.dashNameLessThan100"]);
                if ("" === a.name) return void t(e.tips["dash.dashNameRequired"]);
                for (var o = n.subs || [], s = 0, d = o.length; s < d; s++)
                    if ("dashboard" === o[s].attribute && o[s].name == a.name) return void t(e.tips["dash.duplicateDashName"]);
                var c = {
                    category: a.category || 0,
                    name: a.name,
                    proj_id: n.proj_id,
                    meta: a.meta,
                    label: a.label,
                    comment: a.comment
                };
                if (g) {
                    if (c.category = g, c.resolution = {
                            type: a.screenSizeObj.type
                        }, 1 == a.screenSizeObj.type) c.resolution.width = a.screenSizeResolution.width, c.resolution.height = a.screenSizeResolution.height;
                    else if (2 == a.screenSizeObj.type) {
                        if (!a.screenSizeObj.width || !a.screenSizeObj.height) return void t("自定义宽、高必须填写");
                        c.resolution.width = a.screenSizeObj.width, c.resolution.height = a.screenSizeObj.height
                    }
                    c.resolution = angular.toJson(c.resolution)
                }
                bdp.bdpPageStatus.isUnderDataScreen() || 2 != c.category || (c.screenSizeObj = {
                    type: 2,
                    width: 996,
                    height: "auto"
                }, c.resolution = {
                    type: 2,
                    width: 996,
                    "min-height": 900
                }, c.resolution = angular.toJson(c.resolution)), i.dashboard.create(c).success(function (a) {
                    "0" == a.status ? (e.selected.proj_id = n.proj_id, e.selected.dsh_id = a.result.dsh_id, e.glboal.isCreatingDashboard = !0, l(n, c.category), r()) : t(a.errstr)
                })
            }
            var u = n.path(),
                h = u.indexOf("data_screen") > -1,
                f = bdp.bdpPageStatus.isUnderAdvDash(),
                g = h ? 1 : null;
            e.createDashData = {
                showDropdown: !1,
                selectedName: "",
                selectFolder: null,
                type: "create"
            }, e.newDash = {
                name: "",
                label: "",
                comment: "",
                category: 0,
                screenSizeList: r,
                screenSizeResolution: r[0].value,
                screenSizeObj: {
                    type: 1,
                    width: "",
                    height: ""
                }
            }, e.editDashData && (e.saveEdit = e.editDashData.saveEdit, e.selected.proj_id = e.editDashData.proj_id, e.createDashData.type = "edit", e.newDash.name = e.editDashData.name, e.newDash.label = e.editDashData.label, e.newDash.comment = e.editDashData.comment, e.newDash.dsh_id = e.editDashData.dsh_id, e.newDash.extra_data = e.editDashData.extra_data);
            var m = e.project_list;
            e.labelLimit = o, e.commentLimit = s, e.treeSelectParent = c, e.createDashboard = p,
                function () {
                    e.selected.proj_id && (e.createDashData.selectFolder = a.findItem(e.selected.proj_id, m), c(e.createDashData.selectFolder, "dashboard"))
                }()
        }])
        .controller("createProjectController", ["$scope", "errHint", "multipleProService", "commonService", "$location", function (e, t, a, i, n) {
            function r(t, a) {
                e.createFolderData.selectFolder = t, e.createFolderData.showDropdown = !1, "project" == a && (e.createFolderData.selectedProjectName = e.createFolderData.selectFolder ? e.createFolderData.selectFolder.name : e.tips["dash.rootFolder"])
            }

            function o(r, o, s) {
                if (void 0 == r) return void t(e.tips["dash.projectNameRequired"]);
                if ("" === r) return void t(e.tips["dash.projectNameRequired"]);
                for (var l = n.path(), d = l.indexOf("data_screen") > -1 ? 1 : null, c = o ? o.subs : e.project_list, p = o && o.proj_id || "", u = 0, h = c.length; u < h; u++)
                    if ("project" === c[u].attribute && c[u].name == r) return void t(e.tips["dash.duplicateProjectName"]);
                if (a.getRecursiveParam(e.project_list, "projLen") > 200) return void t(e.tips["dash.folderNumberExceeded"]);
                i.project.create(r, p, d).success(function (a) {
                    "0" == a.status ? (e.selected.proj_id = a.result.proj_id, e.selected.dsh_id = "", e.selected.rule_id = "", s(), e.getTree()) : t(a.errstr)
                })
            }
            e.createFolderData = {
                showDropdown: !1,
                selectFolder: null,
                selectedProjectName: e.tips["dash.rootFolder"]
            };
            var s = e.project_list;
            e.treeSelectParent = r, e.createProject = o,
                function () {
                    e.selected.proj_id && (e.createFolderData.selectFolder = a.findItem(e.selected.proj_id, s), r(e.createFolderData.selectFolder, "project"))
                }()
        }])
}();
function () {
    function e(e, t, a, i, n, r, o, s, l, d, c, p, u, h, f, g, m, v) {
        function b(t, i) {
            function n(e) {
                return $.isEmptyObject(e) || "C400" === e.chart_type && $.isEmptyObject(e.layers) || e.level && !e.level[0].chart_type
            }
            1 == i.meta.property || i.meta.ct_id.indexOf("text_") > -1 || a.chart.getInfo({
                ct_id: i.meta.ct_id,
                ws_id: e.wsId
            }).success(function (r) {
                "0" == r.status ? n(r.result.meta) && (e.chartdel["chart" + i.meta.ct_id] = !0, e.dashStandardItems.splice(t, 1), a.chart.del({
                    ct_id: i.meta.ct_id,
                    ws_id: e.wsId,
                    dsh_meta: {
                        charts: A(e.dashStandardItems, !0)
                    }
                }).success(function (t) {
                    0 == t.status || d(e.tips["dash.delChartFail"])
                })) : d(Number(r.status))
            })
        }

        function y(i) {
            e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.global.globalDashFilter = [], a.dash_global_filter.item({
                dash_id: i,
                rule_id: t.global.rule_id || ""
            }).then(function (t) {
                if ("0" == t.status) {
                    if (e.selected.dsh_id !== i) return;
                    e.global.originalGlobalFilter = angular.copy(t.result);
                    var a = bdp.utils.handleGlobalFilterLevel(t.result),
                        n = s.df_id,
                        r = s.range;
                    if (angular.forEach(a, function (e) {
                            if (n == e.df_id ? w(r, e) : C(e), "date" == e.data_type && "" == e.config.granularity) {
                                var t = e.config.range || "";
                                if (t) {
                                    var a = !1;
                                    angular.forEach(e.adv_date_list, function (e) {
                                        e.opt_id == t && (a = !0)
                                    }), a || (e.config.range = "", e.config.default_select = !1, e.range = [])
                                }
                            }
                        }), e.global.globalDashFilter = a, e.global.globalDashFilter.length ? $(".gridster").removeClass("gridster-nofilters") : $(".gridster").addClass("gridster-nofilters"), e.hitMemoryGlobalFilter || e.hitJumpGlobalFilter) var o = e.$watch("global.dashboardLoaded", function (t, a) {
                        t === !0 && (a === !0 && void 0 === e.draw_chart_url || (e.$broadcast("useMemoryGlobalFilter", !0), o()))
                    })
                } else d(Number(t.status))
            })
        }

        function w(t, a) {
            if (e.global.globalDashFilterItems = e.global.globalDashFilterItems || {}, "date" == a.data_type && "" == a.config.granularity)
                for (var i = 0, n = a.adv_date_list.length; i < n; i++) {
                    var r = a.adv_date_list[i];
                    r.name == t ? a.range[0] = r.opt_id : a.range[0] = t
                } else a.range[0] = t;
            e.global.globalDashFilterItems[a.df_id] = {
                granularity: a.config.granularity || "",
                df_id: a.df_id,
                range: a.range,
                data_type: a.data_type,
                rela_charts: a.rela_ct_ids,
                range_type: 1
            }, e.hitJumpGlobalFilter = !0
        }

        function C(a) {
            var i = angular.fromJson(window.localStorage.getItem("global_filter_memory")) || [],
                n = !1,
                r = t.wsId || "";
            angular.forEach(i, function (t) {
                t.ws_id == r && a.data_type == t.data_type && a.name == t.name && a.config && a.config.hasOwnProperty("granularity") && a.config.granularity == t.granularity && ("date" == a.data_type && "" == a.config.granularity ? angular.forEach(a.adv_date_list, function (e) {
                    e.opt_id == t.range[0] && (a.range = t.range, n = !0)
                }) : (a.range = t.range, a.range_type = t.range_type), e.hitMemoryGlobalFilter = !0, e.hitGlobalFilterId.push(a.df_id))
            })
        }

        function x() {
            var a = t.global.dshWatermarkImg;
            if (a) {
                var i = $(".gridster"),
                    n = 1 == t.usedThemeId ? "water-mark-white" : "water-mark-dark";
                if (e.isFullscreenMode && (n = 1 === e.fullDisplayTheme ? "water-mark-white" : "water-mark-dark"), e.dashLayoutInfo.show_block) bdp.utils.browser().ie ? i.addClass(n) : $(".dash-water-mark").remove();
                else if ("url(" + a + ")", bdp.utils.browser().ie) i.addClass(n);
                else if (0 == $(".dash-water-mark").length) {
                    var r = document.createElement("div");
                    r.className = "water-mark dash-water-mark " + n, i.append(r)
                } else $(".dash-water-mark").removeClass("water-mark-white").removeClass("water-mark-white").addClass(n)
            }
        }

        function k(e) {
            return localforage.getItem("CACHE_DASH_ID").then(function (t) {
                t != e.dsh_id && localforage.setItem("CACHE_DASH_ID", e.dsh_id)
            }), localforage.getItem("CACHE_DASH_DATA")
        }

        function D(a, n) {
            t.dashLoading = !1;
            var o = n.result;
            if (!isObjectEmpty(o)) {
                t.dashCategory = o.category,
                    t.dashProperty = o.property, e.outer_share_info = o.outer_share_info, e.gis_flag = o.gis_flag, e.isTpl = o.is_template || 0, e.dashTbId = e.isTpl && o && o.tb_ids ? o.tb_ids[0] : "", e.dashLayoutInfo.show_block = !defined(o.meta.show_block) || o.meta.show_block, e.dashLayoutInfo.fixed_width = !!defined(o.meta.fixed_width) && o.meta.fixed_width, e.dashLayoutInfo.layout_style = defined(o.meta.layout_style) ? o.meta.layout_style : 1, e.dashLayoutInfo.dashCategory = o.category || 0, 0 != e.dashLayoutInfo.dashCategory || 2 != e.dashLayoutInfo.layout_style || 3 == e.enterprise_type || bdp.bdpPageStatus.isUnderAdvDash() || bdp.bdpPageStatus.isUnderDataScreen() || (e.dashLayoutInfo.layout_style = 1), (t.proj_share || t.global.rule_id) && (t.dashEditMode = !1), T(e.dashLayoutInfo.show_block, e.dashLayoutInfo.layout_style), e.dashTitle = o.name, e.dashLabel = o.label || "", e.dashComment = o.comment || "", e.property = o.property;
                var s = o.meta.charts || [];
                if (e.dashStandardItems = s || [], e.dashStandardItems.sort(function (e, t) {
                        return e.row == t.row ? e.col - t.col : e.row < t.row ? -1 : 1
                    }), e.isFullscreenMode) {
                    var l = ($(".main"), $(".dash-wrapper")),
                        d = l.height(),
                        c = d / 9;
                    e.dashPages = [], e.gridsterOpts.rowHeight = c, e.gridsterOpts.draggable.enabled = !1, e.gridsterOpts.resizable.enabled = !1;
                    var p = [],
                        u = 0,
                        h = 0;
                    e.dashStandardItems.forEach(function (t, a) {
                        var i = t.children[0].meta,
                            n = i.tb_update_time;
                        i.tb_update_time = 1e3 * n, t.sizeY = Math.min(t.sizeY, 9), t.row += h, t.row %= 9, t.index = a;
                        var r = !0;
                        if (t.row + t.sizeY > 9) r = !1;
                        else
                            for (var o = 0; o < p.length; o++) {
                                var s = p[o];
                                if (!(s.col >= t.col + t.sizeX || s.row >= t.row + t.sizeY || t.col >= s.col + s.sizeX || t.row >= s.row + s.sizeY)) {
                                    r = !1;
                                    break
                                }
                            }
                        r ? p.push(t) : (h += 9 - t.row, e.dashPages.push(p), p = [], u++, t.row = 0, p.push(t))
                    }), p.length > 0 && e.dashPages.push(p)
                }
                e.dashInit.load = !1, e.draw_chart_url = {};
                var f, g;
                e.chartdel = {};
                for (var m = 0; m < e.dashStandardItems.length; m++) e.dashStandardItems[m].children[0].meta.filter_list = [];
                if (t.creatingChart) return t.creatingChart = !1, S(e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type), delete t.creatingChartInfo, e.saveDashboard().then(function () {
                    r.path().indexOf(e.currDash.dashSelected) >= 0 && e.getDashboardInfo(e.currDash.dashSelected)
                }), !1;
                t.isGlobalCustom = {};
                var _;
                _ = e.isFullscreenMode ? 1 === e.fullDisplayTheme ? "dark" : "default" : 1 === t.usedThemeId ? "dark" : "default", window.dashChartsUpdateMap = {};
                for (var v = 0; v < s.length; v++) {
                    f = s[v];
                    for (var y = 0; y < f.children.length; y++)
                        if (g = f.children[y], g.meta.filter_list = [], g.meta.type) {
                            window.dashChartsUpdateMap[g.meta.ct_id] = g.meta.tb_update_time + g.meta.update_time;
                            t.isGlobalCustom[g.meta.ct_id] = !1, e.global.rule_id && "&rule_id=" + e.global.rule_id, e.draw_chart_url[g.dom_id] = {
                                options: {
                                    theme: _,
                                    device: e.isFullscreenMode ? e.fullDisplayDevice : "pc",
                                    ws_id: t.wsId,
                                    dsh_id: a,
                                    ct_id: g.meta.ct_id,
                                    tb_id: g.meta.tb_id,
                                    rule_id: t.global.rule_id,
                                    read_cache: !0,
                                    optional: {
                                        linked_chart_type: g.meta.chart_link.linked_chart_type,
                                        link_info: g.meta.chart_link.link_info,
                                        chart_jump_info: g.meta.chart_jump
                                    }
                                },
                                lazyload: !0
                            }
                        } else !e.global.rule_id && b(v, g)
                }
                if (e.global.dashboardLoaded = !0, !t.hasInitDashboard && E && window._BDP_TIME_LOGGER && (BDPLogger.time("feStatistics", {
                        category: "performance",
                        action: "loading",
                        opt_label: "first_screen"
                    }), t.hasInitDashboard = !0), e.isFullscreenMode && !e.$$phase && e.$digest(), x(), 2 == e.dashLayoutInfo.layout_style) {
                    var w = $(".dash-wrapper")[0].scrollHeight;
                    $(".gridster").height(w)
                }
                k(o).then(function (a) {
                    window.dashChartsCache && !window.dashChartsCache[o.dsh_id] ? (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = null) : (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = a || null);
                    for (var n = 0; n < s.length; n++) {
                        f = s[n].children;
                        for (var r = 0; r < f.length; r++) {
                            g = f[r];
                            var l = e.draw_chart_url[g.dom_id];
                            void 0 !== l && (l.lazyload = n > 2)
                        }
                    }
                    i(function () {
                        e.$$phase || e.$digest(), e.lazy = new bdpChart.LazyLoad(".gridster", ".gridster-item", {
                            diff: 50,
                            handleResize: !0,
                            onItemLoad: function (t) {
                                var a = $(t).find(".item-chart").attr("id");
                                e.draw_chart_url[a] && (e.draw_chart_url[a].lazyload = !1)
                            },
                            onItemsLoad: function () {
                                e.$$phase || e.$digest()
                            }
                        }), e.$on("$destroy", function () {
                            e.lazy.destroy()
                        });
                        var a = bdp.store.get("chart_editId");
                        e.search_ct_id ? setTimeout(function () {
                            e.scrollToChart(e.search_ct_id)
                        }, 10) : a && (setTimeout(function () {
                            e.$broadcast("scrollToChart", a)
                        }, 10), bdp.store.set("chart_editId", "")), setTimeout(function () {
                            t.wtbRelationSelectedItem && (e.scrollToChart(t.wtbRelationSelectedItem.ct_id), t.wtbRelationSelectedItem = null)
                        }, 0), setTimeout(function () {
                            t.warnListSelectedItem && (e.scrollToChart(t.warnListSelectedItem.ct_id), t.warnListSelectedItem = null)
                        }, 0)
                    })
                })
            }
        }

        function S(a) {
            var i, n = e.dashStandardItems,
                r = n[n.length - 1],
                o = 0,
                s = 0,
                l = n.length;
            switch (a) {
                case "C310":
                    r.sizeX = 3, r.sizeY = 2;
                    break;
                case "C230":
                case "C261":
                case "C290":
                    r.sizeX = 4, r.sizeY = 4;
                    break;
                case "C271":
                case "C272":
                case "C330":
                case "C340":
                case "C360":
                case "C370":
                    r.sizeX = 6, r.sizeY = 6;
                    break;
                case "C400":
                    r.sizeX = 12, r.sizeY = 7;
                    break;
                case "C350":
                case "C351":
                case "C352":
                    r.sizeX = 6, r.sizeY = 4
            }
            if (t.creatingChartInfo && t.creatingChartInfo.split_compare && (r.sizeX = 12, r.sizeY = 6), t.creatingChartPosition) {
                var d = t.creatingChartPosition.position,
                    c = t.creatingChartPosition.refItem;
                if (r.sizeX = c.sizeX, r.sizeY = c.sizeY, "top" === d || "left" === d || "right" === d)
                    for (var p = 0; p < l - 1; p++) i = n[p], i.row >= c.row && i.children[0].dom_id !== r.children[0].dom_id && (i.row += r.sizeY);
                else if ("bottom" === d)
                    for (var p = 0; p < l - 1; p++) i = n[p], i.row > c.row && (i.row += r.sizeY);
                switch (d) {
                    case "left":
                        c.col >= 2 ? r.sizeX = Math.min(c.col, c.sizeX) : r.sizeX = c.sizeX, c.col - r.sizeX < 0 ? (r.row = c.row + c.sizeY, r.col = 0) : (r.col = c.col - r.sizeX, r.row = c.row);
                        break;
                    case "top":
                        r.row = c.row, r.col = c.col;
                        break;
                    case "right":
                        c.col + c.sizeX <= 10 ? r.sizeX = Math.min(12 - c.col - c.sizeX, c.sizeX) : r.sizeX = c.sizeX, c.col + c.sizeX + r.sizeX > 12 ? (r.row = c.row + c.sizeY, r.col = 12 - r.sizeX) : (r.col = c.col + c.sizeX, r.row = c.row);
                        break;
                    case "bottom":
                        r.row = c.row + c.sizeY, r.col = c.col
                }
                t.creatingChartPosition = null
            } else {
                for (var p = 0; p < l - 1; p++) i = n[p], i.row + i.sizeY > o && (i.col + i.sizeX > 12 - r.sizeX ? (o = Math.max(o, i.row + i.sizeY), s = 0) : (o = Math.max(o, i.row), s = Math.max(s, i.col + i.sizeX)));
                r.row = o, r.col = s
            }
        }

        function T(a, n) {
            var r = bdpChart.helper.isMobile(),
                o = t.isThirdIframe;
            r && o && function () {
                t.mobileMode = !0;
                var e = null;
                $(".gridster").on("click", ".chart-box", function (t) {
                    var a = $(this).find(".item-chart").get(0);
                    if (a == e) return !1;
                    $(a).addClass("reactive").removeClass("noscroll"), e && $(e).removeClass("reactive"), e = a
                }), $(document).on("touchmove", ".item-chart.reactive", function (e) {
                    return $(this).find(".chart-table").length > 0
                }), $(document).on("scroll", function (t) {
                    e && ($(e).removeClass("reactive"), e = null)
                })
            }(), e.gridsterOpts = {
                layoutStyle: n,
                margins: a ? r && o ? [8, 0] : [8, 8] : [0, 0],
                outerMargin: !1,
                minColumns: 2,
                minRows: 2,
                maxRows: 1e3,
                columns: 12,
                isMobile: !(!r || !o),
                resizable: {
                    enabled: !t.proj_share && t.permision.dashOperate,
                    handles: "se",
                    start: function (t, a, i) {
                        e._draggingElemBox = {
                            width: a.width(),
                            height: a.height()
                        };
                        var n = $(".gridster").height();
                        $(".gridster").css("height", n + 100)
                    },
                    resize: function (t, a, i) {
                        var n = a.find(".chart").data("chart-data");
                        n && !n.isSplitChart() && (1 == e.dashLayoutInfo.layout_style && reflowChart(a), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id))
                    },
                    stop: function (t, a, n) {
                        i(function () {
                            var t = a.find(".chart").data("chart-data");
                            if (t) {
                                var i = e._draggingElemBox.width / e._draggingElemBox.height,
                                    n = a.width() / a.height(),
                                    r = i < 1 && n >= 1 || i >= 1 && n < 1,
                                    o = t.getChartType(),
                                    s = r || t.isSplitChart() || o === bdpChart.ChartType.Line && "dark" === t.theme || o === bdpChart.ChartType.TreeMap,
                                    l = t.info.navigator_setting && t.info.navigator_setting.enabled,
                                    d = bdpChart.ChartType,
                                    c = t.info.chart_type,
                                    p = l && [d.Line, d.Column, d.NStackColumn, d.PStackColumn, d.Sankey, d.Area, d.NStackArea, d.PStackArea, d.Biax].indexOf(c) > -1;
                                s = s || p, reflowChart(a, !0, s), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id)
                            }
                        }, 0), e.saveDashboard()
                    }
                },
                draggable: {
                    enabled: (!r || !o) && (!t.proj_share && t.permision.dashOperate),
                    handle: ".chart-box",
                    stop: function () {
                        e.lazy && e.lazy.fireLoad(), e.saveDashboard()
                    }
                }
            }
        }

        function I() {
            var t = e.dashLayoutInfo.show_block;
            e.gridsterOpts.margins = t ? [8, 8] : [0, 0]
        }

        function L(t) {
            var a = bdp.utils.createNewGridItem(e.dashStandardItems),
                i = {
                    sizeX: 6,
                    sizeY: 4,
                    row: a.row,
                    col: a.col,
                    children: [{
                        dom_id: "id" + a.domId,
                        meta: {
                            name: e.tips["chart.untitledChart"],
                            ct_id: "init_ctid"
                        }
                    }]
                };
            e.dashStandardItems || (e.dashStandardItems = []), e.dashStandardItems.push(i)
        }

        function A(e, t) {
            var a = angular.copy(e);
            return angular.forEach(a, function (e) {
                e.children[0].meta = {
                    ct_id: e.children[0].meta.ct_id,
                    dash_setting: e.children[0].meta.dash_setting,
                    html: e.children[0].meta.html || ""
                }, t || delete e.children[0].meta.dash_setting
            }), a
        }
        var E = !1;
        if (!t.hasInitDashboard && window._BDP_TIME_LOGGER) {
            E = !0;
            for (var F = t.historyTime, M = F.length - 1; M >= 0; M--) F[M].indexOf("dash_edit") < 0 && (E = !1);
            E && (BDPLogger.time("feStatistics", {
                category: "performance",
                action: "loading",
                opt_label: "first_init_dashboard"
            }), BDPLogger.log("feStatistics", {
                category: "performance",
                action: "loading",
                opt_label: "dashboard_dom_ready",
                opt_value: window._BDP_TIME_LOGGER.domReady
            }), BDPLogger.log("feStatistics", {
                category: "performance",
                action: "loading",
                opt_label: "dashboard_white_screen",
                opt_value: window._BDP_TIME_LOGGER.whiteScreen
            }), window._BDP_TIME_LOGGER.onloadPushFlag && window._BDP_TIME_LOGGER.onload > 0 && (BDPLogger.log("feStatistics", {
                category: "performance",
                action: "loading",
                opt_label: "dashboard_onload",
                opt_value: window._BDP_TIME_LOGGER.onload
            }), window._BDP_TIME_LOGGER.onloadPushFlag = !1))
        }
        if (3 == t.enterprise_type && 1 == $.cookie("show_capacity_overflow") && (o.open({
                templateUrl: "/static/partials/dialogTemplates/capacity_overflow.html",
                className: "ngdialog-theme-default ngDialog-width-320",
                data: {
                    vipLevel: t.memberData.vipLevel
                }
            }), $.cookie("show_capacity_overflow", "0")), e.$on("afterWindowResize", function () {
                e.getAllChartInstances().forEach(function (e) {
                    e.getChartType() === bdpChart.ChartType.Line && "dark" === e.theme && (e.destroy(), e.renderChart())
                })
            }), $(document).off("click.table").on("click.table", function (e) {
                $(document).trigger("clickTable", {
                    e: e
                })
            }), e.mouseleaveItem = function () {
                e.$broadcast("fire-mouseleave-item-event", !0)
            }, e.chartOptions = {}, t.mainChartContainer = t.mainChartContainer || [], t.mainChartIdContainer = t.mainChartIdContainer || [], t.mainChartColorContainer = t.mainChartColorContainer || {}, e.global.dashboardLoaded = !1, s.projId) {
            e.AllMap = ["全部", "全部时间", "All"], t.last_dash_path = r.path(), e.$on("jumpToSearch", function (t, a) {
                e.search_ct_id = a
            });
            if (e.$on("_websocketChartMessage_", function (t, a) {
                    1 == ("string" == typeof a.data ? $.parseJSON(a.data) : a.data).type && h.refresh({
                        drawChartUrl: e.draw_chart_url,
                        type: "dashboard",
                        evt: t,
                        scope: e,
                        ret: a
                    })
                }), e.$on("scrollToChart", function (t, a) {
                    setTimeout(function () {
                        e.scrollToChart(a)
                    }, 0)
                }), t.$editable = !0, e.currDash = {
                    activeProjId: s.projId,
                    dashSelected: s.dashId
                }, e.activeProjId = s.projId, e.dashSelected = s.dashId, t.dashEditMode = !1, e.wsId = t.wsId, t.view = "dashboard", t.show_bdp_header = !0, e.dashInit = {}, e.dashInit.load = !0, s.ruleId) e.global.rule_id = s.ruleId;
            else {
                var j = r.path();
                j.indexOf("ru_") >= 0 && (e.global.rule_id = j.substring(j.indexOf("ru_")))
            }
            e.selected = {
                proj_id: s.projId,
                dsh_id: s.dashId,
                rule_id: e.global.rule_id,
                ws_id: t.wsId
            }, e.scrollToChart = function (e, t) {
                t = t || $(".gridster-desktop");
                var a = t.closest(".dash-wrapper");
                t.find(".gridster-item").each(function (t, i) {
                    var n = $(i);
                    if (e == n.data("chart-id")) {
                        var r = a.height(),
                            o = n[0].offsetTop;
                        o + n.height() > r ? a.animate({
                            scrollTop: o - 15
                        }, function () {
                            n.addClass("highlight-chart")
                        }) : n.addClass("highlight-chart"), $(document).on("click.cancelHighlight", function () {
                            n.removeClass("highlight-chart"), $(this).off("click.cancelHighlight")
                        })
                    }
                })
            }, localStorage.setItem("mc_location_path", r.path());
            var j = r.path();
            j.indexOf("dash_fullscreen") > 0 ? (e.isFullscreenMode = !0, t.view = "dash-fullscreen", t.show_bdp_header = !0, e.$dashSlider = $("#dash-slider"), $(document).on("keyup.dash_fullscreen", function (t) {
                switch (t.keyCode) {
                    case 37:
                        e.$dashSlider.slick("slickPrev");
                        break;
                    case 39:
                        e.$dashSlider.slick("slickNext");
                        break;
                    case 27:
                        0 === $(".fullscreen-chart").length && e.exitFullScreen()
                }
            })) : (e.isFullscreenMode = !1, t.view = "dashboard", t.show_bdp_header = !0, $(document).off("keyup.dash_fullscreen")), e.getGlobalFilterItem = y, e.dashLayoutInfo = {}, e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.$on("useMemoryGlobalFilter", function (t, a) {
                if (a) {
                    var i = [];
                    angular.forEach(e.global.globalDashFilter, function (t, a) {
                        i.push({
                            df_id: t.df_id,
                            range: t.range,
                            data_type: t.data_type,
                            granularity: t.config.granularity || "",
                            range_type: t.range_type || "1"
                        }), e.hitGlobalFilterId.indexOf(t.df_id) > -1 && (e.global.globalDashFilterItems[t.df_id] = {
                            granularity: t.config.granularity || "",
                            df_id: t.df_id,
                            range: t.range,
                            data_type: t.data_type,
                            show_name: t.range,
                            real_name: t.range,
                            rela_charts: t.rela_ct_ids
                        })
                    }), angular.forEach(e.draw_chart_url, function (t, a) {
                        t.global_filter_value = [], angular.forEach(e.global.globalDashFilter, function (e, a) {
                            e.rela_ct_ids.indexOf(t.options.ct_id) > -1 && (t.options.optional.dsh_filter = i, delete t.options.optional.filter_list, t.options.read_cache = !1, t.options.optional._t = new Date)
                        })
                    })
                }
            }), e.dashboardAutoplay = !1;
            var O = null;
            e.toggleDashboardAutoplay = function () {
                e.dashboardAutoplay = !e.dashboardAutoplay;
                var t = e.dashboardAutoplay ? "Play" : "Pause";
                e.dashboardAutoplay && (clearTimeout(O), O = setTimeout(function () {
                    e.dashboardAutoplay && $("#dash-slider").slick("slickNext")
                }, 1e3)), $("#dash-slider").slick("slick" + t).off("beforeChange").on("beforeChange", function () {
                    $(document).trigger("dashboardAutoplay")
                })
            };
            var P = function () {
                    $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").addClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").addClass("cursor-none")
                },
                N = function () {
                    $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").removeClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").removeClass("cursor-none")
                };
            if (e.isFullscreenMode) {
                var B = setTimeout(P, 5e3);
                $(".dash-fullscreen-wrap").on("mousemove", function () {
                    null !== B && (window.clearTimeout(B), B = null, N(), setTimeout(function () {
                        B = setTimeout(P, 3e3)
                    }, 200))
                })
            }
            e.getDashboardInfo = function (i) {
                if (e.lazy && e.lazy.destroy(), i ? y(i) : e.global.globalDashFilter = [], t.dashLoading = !0, "" == i || void 0 === i) return t.dashLoading = !1, !1;
                var n = {};
                return n.dsh_id = i, t.global.rule_id && (n.rule_id = t.global.rule_id), a.dashboard.getInfo(n).then(function (e) {
                    if (0 == e.status) {
                        if (e.result && 2 == e.result.category && j.indexOf("/mode/adv") < 0) return t.dashLoading = !1, j += "/mode/adv", void r.path(j);
                        if (t.projectLoaded) D(i, e);
                        else var a = setInterval(function () {
                            t.projectLoaded && (D(i, e), clearInterval(a))
                        }, 200)
                    } else {
                        if (t.dashLoading = !1, 3 == e.status) return t.wsId ? r.path("/dash_edit_ws/" + t.wsId) : r.path("/dash_edit/"), void location.reload();
                        d(+e.status, {
                            warn_msg: e.errstr
                        })
                    }
                })
            }, 
            e.getDashboardInfo(e.currDash.dashSelected), e.$on("fire-refresh-dashboard", function () {
                "dashboard" == t.view && e.getDashboardInfo(e.currDash.dashSelected)
            }), 
            e.showThirdIframeDshList = function () {
                $(".dash-sidebar").addClass("show-list"), $(".dashboard-item").off("click.showThirdIframeDshList").on("click.showThirdIframeDshList", function (e) {
                    $(".dash-sidebar").removeClass("show-list")
                })
            }, 
            e.btn_layer = {}, 
            $("body").on("dashboard-scroll-start.dashOperate", function () {
                var a = e.btn_layer;
                a.show_more_btn = !1, a.show_presentation_mode = !1, a.showDownloadSheet = !1, a.outerShareFuncs = !1, t.permision.personal_help_video = !1, $(".J_dashboard_presentation").addClass("ng-hide"), $(".J_dashboard_more_btn").addClass("ng-hide"), $(".J_dashboard_share_layer").addClass("ng-hide"), $(".J-help-video").addClass("ng-hide")
            }), 
            e.$on("$destroy", function () {
                $("body").off("dashboard-scroll-start.dashOperate"), j.replace("/dash_edit/", "").replace("/dash_fullscreen/", "") != r.path().replace("/dash_edit/", "").replace("/dash_fullscreen/", "") && (t.mainChartContainer = [], t.mainChartIdContainer = [], t.mainChartColorContainer = {}), $(document).off("click.table"), $(document).off("clickTable"), e.getAllChartInstances().forEach(function (e) {
                    e.getChartType() === bdpChart.ChartType.Table && e.destroy()
                })
            }), 
            e.filterMergedTable = function (e) {
                return "excel" !== e.type && "aggr" !== e.type
            }, 
            e.addItem = function (a) {
                if (!e.loadingStatus || !e.loadingStatus.isAdding) {
                    e.loadingStatus = {
                        isAdding: !0,
                        loadingFolders: !0
                    };
                    var i = {
                        getClearSaveMeta: A,
                        addGridItem: L,
                        currDash: {
                            activeProjId: s.projId,
                            dashSelected: s.dashId
                        },
                        dashStandardItems: e.dashStandardItems
                    };
                    a || (t.creatingChartPosition = null);
                    o.open({
                        template: "/static/partials/dialogTemplates/chart-select-table.html",
                        className: "ngdialog-theme-default choose-table J-chart-select-table" + (t.permision.canUseCustomChart ? "" : " no-custom-chart"),
                        data: i,
                        scope: e,
                        controller: "chartAddCtrl"
                    });
                    BDPLogger.log("add_chart_db", {
                        category: "user_interact",
                        action: "click",
                        opt_label: JSON.stringify({
                            add_entrance: a && "position" === a.entrance ? "chart_to_position_select" : "chart_to_bottom"
                        })
                    })
                }
            }, 
            e.newChartFunc = {
                editState: function (t) {
                    this.showHandlers = t, this.$handlersLayer = angular.element("#J_bdpPosHandlers"), t ? (this.addShadow(), this.moveHandlersTo(null, e.dashStandardItems[0]), BDPLogger.log("add_chart_db", {
                        category: "user_interact",
                        action: "click",
                        opt_label: JSON.stringify({
                            add_entrance: "chart_to_position"
                        })
                    })) : (this.$handlersLayer.css("display", "none"), this.removeShadow())
                },
                addShadow: function () {
                    var e = document.getElementById("J_dashEditView").getBoundingClientRect(),
                        t = '<div class="bdp-pos-handlers-shadow-top" style="background:inherit;opacity:0.94;position:fixed;z-index:12222;top:0;left:0;right:0;height:' + (e.top + 10) + 'px;"></div>',
                        a = '<div class="bdp-pos-handlers-shadow-left" style="background:inherit;opacity:0.94;position:fixed;z-index:12222;top:' + (e.top - 10) + "px;left:0;bottom:0;width:" + (e.left + 12) + 'px;"></div>';
                    angular.element("body").append(t).append(a)
                },
                removeShadow: function () {
                    angular.element(".bdp-pos-handlers-shadow-left").remove(), angular.element(".bdp-pos-handlers-shadow-top").remove()
                },
                moveHandlersTo: function (t, a) {
                    this.selectedItem = a;
                    var i = a.children[0].meta.ct_id,
                        n = angular.element("#" + i),
                        r = n.width(),
                        o = n.height(),
                        s = n.position(),
                        l = {};
                    l = e.dashLayoutInfo.show_block ? {
                        width: r + 8,
                        height: o + 12,
                        left: s.left - 4,
                        top: s.top - 6
                    } : {
                        width: r,
                        height: o + 4,
                        left: s.left,
                        top: s.top - 2
                    }, 0 == a.row ? angular.element(".bdp-pos-handler-top").css("top", "17px") : angular.element(".bdp-pos-handler-top").css("top", "0"), this.$handlersLayer.css("display", "block").css(l);
                    var d = document.getElementById("J_bdpPosHandlers").getBoundingClientRect();
                    this.targetRect = {}, this.targetRect.bottom = Math.ceil(d.bottom), this.targetRect.top = Math.floor(d.top), this.targetRect.left = Math.floor(d.left), this.targetRect.right = Math.ceil(d.right), this.targetRect.width = d.width, this.targetRect.height = d.height, t && this.showDirectionArea(t)
                },
                hideAllHandler: function () {
                    angular.element(".bdp-pos-handler").css({
                        display: "none"
                    })
                },
                _throttledMouseMove: _.throttle(function (e) {
                    this.showDirectionArea(e)
                }, 30),
                _onMouseMove: function (e) {
                    this.showDirectionArea(event)
                },
                _onMouseOut: function (e) {
                    var t = this;
                    t.hideAllHandler(), t.oldDirection = null
                },
                showDirectionArea: function (e) {
                    var t = this;
                    t.direction = t.getDirection(t.targetRect, {
                        x: e.clientX,
                        y: e.clientY
                    }), t.direction && t.oldDirection != t.direction && t.direction && (angular.element(".bdp-pos-handler-" + t.direction).css({
                        display: "block"
                    }), angular.element(".bdp-pos-handler-" + ("top" == t.direction ? "bottom" : "top")).css({
                        display: "none"
                    })), t.oldDirection = t.direction, t.$handlersLayer.css("cursor", t.direction ? "pointer" : "default")
                },
                getDirection: function (e, t) {
                    var a = "",
                        i = {
                            x: .5 * (e.left + e.right),
                            y: .5 * (e.top + e.bottom)
                        };
                    return t.y <= i.y && t.y >= e.top ? a = "top" : t.y > i.y && t.y <= e.bottom && (a = "bottom"), a
                },
                create: function () {
                    this.direction && (t.creatingChartPosition = {
                        position: this.direction,
                        refItem: angular.copy(this.selectedItem)
                    }, this.editState(!1), e.addItem({
                        entrance: "position"
                    }))
                }
            }, e.saveDashboard = function () {
                if (!e.dashTitle) return void d(e.tips["dash.titleRequired"]);
                var t = {};
                e.dashLayoutInfo.ct_id && (t[e.dashLayoutInfo.ct_id] = e.dashLayoutInfo.dash_setting), 0 != e.dashLayoutInfo.dashCategory || 2 != e.dashLayoutInfo.layout_style || 3 == e.enterprise_type || bdp.bdpPageStatus.isUnderAdvDash() || bdp.bdpPageStatus.isUnderDataScreen() || (e.dashLayoutInfo.layout_style = "1");
                var i = {
                    ws_id: e.wsId,
                    dsh_id: e.currDash.dashSelected,
                    chart_data: angular.toJson(t),
                    data: angular.toJson({
                        name: e.dashTitle,
                        label: e.dashLabel,
                        comment: e.dashComment,
                        meta: {
                            layout_style: e.dashLayoutInfo.layout_style || 1,
                            show_block: e.dashLayoutInfo.show_block,
                            fixed_width: e.dashLayoutInfo.fixed_width || !1,
                            charts: A(e.dashStandardItems, !0)
                        }
                    })
                };
                return a.dashboard.modify(i).then(function (t) {
                    0 != +t.status ? (3204 == +t.status && d(e.tips["dash.titleDuplicate"]), d(Number(t.status))) : r.path().indexOf(e.currDash.dashSelected) >= 0 && y(e.currDash.dashSelected)
                })
            }, e.$watch(function () {
                return t.proj_share || !t.permision.dashOperate
            }, function (t) {
                e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !t, e.gridsterOpts.draggable.enabled = !t)
            }), e.$watch("dashProperty", function (t) {
                1 == t && e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !1, e.gridsterOpts.draggable.enabled = !1)
            }), e.goHelp = function (e) {
                c(e)
            }, e.chartChain = f(e), e.chartDashJump = m(e), e.getAllChartInstances = function () {
                var t = [];
                return e.dashStandardItems && e.dashStandardItems.length > 0 && e.dashStandardItems.forEach(function (e) {
                    var a = e.children[0].dom_id;
                    if (a) {
                        var i = $("#" + a).find(".chart").data("chart-data");
                        i && t.push(i)
                    }
                }), t
            }, e.enterFullScreen = function (e) {
                var a = r.path().replace("dash_edit", "dash_fullscreen");
                if (t.isThirdIframe && (a = r.path().replace("third_iframe", "dash_fullscreen")), r.path(a), e) {
                    var i = $("body")[0],
                        n = i.requestFullscreen || i.webkitRequestFullscreen || i.mozRequestFullScreen || i.msRequestFullscreen;
                    n && (n.apply(i), $(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange", function (e) {
                        if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement);
                        else {
                            if ($("body").find(".fullscreen-chart").length > 0);
                            else {
                                var a = r.path();
                                a.indexOf("dash_fullscreen") && (a = a.replace("dash_fullscreen", "dash_edit"), t.isThirdIframe && (a = a.replace("dash_fullscreen", "third_iframe")), r.path(a))
                            }
                            $(document).off("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange")
                        }
                    }), $("body").hasClass("fullscreen-status") || $("body").addClass("fullscreen-status"))
                }
            }, r.path().indexOf("/dash_fullscreen/") > -1 && (t.projectLoaded = !0), e.exitFullScreen = function () {
                t.projectLoaded = !1;
                var e = r.path().replace("dash_fullscreen", "dash_edit");
                t.isThirdIframe && (e = r.path().replace("dash_fullscreen", "third_iframe")), r.path(e);
                var a = document.exitFullscreen || document.webkitExitFullscreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen;
                a && a.apply(document)
            }, localStorage ? e.fullDisplayDevice = localStorage.getItem("fullDisplayDevice") || "pc" : e.fullDisplayDevice = $.cookie("fullDisplayDevice") || "pc", e.setFullDisplayDevice = function (a) {
                a !== e.fullDisplayDevice && (e.fullDisplayDevice = a, BDPLogger.log("feStatistics", {
                    category: "interaction",
                    action: "click",
                    opt_label: "setFullDisplayDevice",
                    opt_value: 1
                }), BDPLogger.log("feStatistics", {
                    category: "feature",
                    action: "fullDisplayDevice",
                    opt_label: a,
                    opt_value: 1
                }), localStorage ? localStorage.setItem("fullDisplayDevice", a) : $.cookie("fullDisplayDevice", a), e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                    var i = e.children[0].dom_id;
                    if (i) {
                        var n = $("#" + i).find(".chart").data("chart-data");
                        n && n.setDisplayDevice(a, t)
                    }
                }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, i) {
                    var n = $(i).data("chart-data");
                    n && n.setDisplayDevice(a, t)
                }))
            }, e.resetChartData = function () {
                $(".common-dot-guide").remove(), e.removeFullDisplayStyle(), e.resetInnerFilter(), e.resetAdvancedSort()
            }, e.removeFullDisplayStyle = function () {
                e.isFullscreenMode || "pc" === e.fullDisplayDevice && e.fullDisplayTheme === t.usedThemeId || e.dashStandardItems.forEach(function (e) {
                    var a = e.children[0].dom_id;
                    if (a) {
                        var i = $("#" + a).find(".chart").data("chart-data");
                        i && i.setDisplayStyle("pc", 1 == t.usedThemeId ? "dark" : "default", t)
                    }
                })
            }, e.resetAdvancedSort = function () {
                var a = t.fullScreenCacheData.advancedSortList;
                if (a && !$.isEmptyObject(a))
                    for (var i in a) e.dashStandardItems.forEach(function (e) {
                        e.children[0].meta.ct_id == i && (e.children[0].meta.advanced_sort = a[i])
                    })
            }, e.resetInnerFilter = function () {
                function a(e, t) {
                    if (e.uniq_id || t.uniq_id ? sameFilter = e.fid == t.fid && e.uniq_id == t.uniq_id : sameFilter = e.fid == t.fid, sameFilter)
                        for (var a in e) void 0 != t[a] && e[a] != t[a] && (e[a] = t[a])
                }
                var i = t.fullScreenCacheData.innerFilterList;
                if (i && !$.isEmptyObject(i))
                    for (var n in i) e.dashStandardItems.forEach(function (e) {
                        if (e.children[0].meta.ct_id == n) {
                            var t = e.children[0].meta.filter_list_inner;
                            t && t.length > 0 && (i[n] ? t.map(function (e) {
                                i[n].map(function (t) {
                                    a(e, t)
                                })
                            }) : t.map(function (e) {
                                e.range = []
                            }))
                        }
                    })
            }, localStorage ? e.fullDisplayTheme = +localStorage.getItem("fullDisplayTheme") || t.usedThemeId : e.fullDisplayTheme = +$.cookie("fullDisplayTheme") || t.usedThemeId, e.setFullDisplayTheme = function (a) {
                if (a !== e.fullDisplayTheme) {
                    e.fullDisplayTheme = a, BDPLogger.log("feStatistics", {
                        category: "interaction",
                        action: "click",
                        opt_label: "setFullDisplayTheme",
                        opt_value: 1
                    }), BDPLogger.log("feStatistics", {
                        category: "feature",
                        action: "fullDisplayTheme",
                        opt_label: a,
                        opt_value: 1
                    }), localStorage ? localStorage.setItem("fullDisplayTheme", a) : $.cookie("fullDisplayTheme", a);
                    var i = 1 === a ? "dark" : "default";
                    e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                        var a = e.children[0].dom_id;
                        if (a) {
                            var n = $("#" + a).find(".chart").data("chart-data");
                            n && n.setTheme(i, t)
                        }
                    }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, a) {
                        var n = $(a).data("chart-data");
                        n && n.setTheme(i, t)
                    })
                }
            }, e.setMobLayout = function (t) {
                e.global.showMobLayout = t
            }, e.sortMobCharts = {
                stop: function (t, a) {
                    e.saveDashboard()
                }
            }, e.makeDashEdit = function (a) {
                t.dashEditMode = a, a ? I() : (I(), e.saveDashboard(), e.dash.cancelEditState())
            }, e.dash = {
                editChartMeta: function (t) {
                    var a = t.meta.ct_id;
                    e.dashLayoutInfo.id = t.dom_id, e.dashLayoutInfo.ct_id = a, e.dashLayoutInfo.chart_type = t.meta.type, e.dashLayoutInfo.show_navigator = t.meta.show_navigator, e.dashLayoutInfo.dash_setting = t.meta.dash_setting || {
                            show_axis: !0,
                            show_datalabels: ["C230", "C271", "C272", "C330", "C360"].indexOf(t.meta.type) > -1,
                            show_legend: !0,
                            show_title: !0,
                            show_total: !0,
                            border_left: !1,
                            border_top: !1,
                            border_right: !1,
                            border_bottom: !1,
                            border_null: !0
                        }, e.dashLayoutInfo.hasTotal = t.meta.hasTotal, void 0 === e.dashLayoutInfo.dash_setting.show_navigator && e.dashLayoutInfo.show_navigator && (e.dashLayoutInfo.dash_setting.show_navigator = !0), $(document).off("click.edit_dashboard").on("click.edit_dashboard", function (t) {
                        var a = $(t.target);
                        a.parents(".gridster-item").length || a.parents(".dash-edit-wrapper").length || e.dash.cancelEditState()
                    })
                },
                cancelEditState: function () {
                    i(function () {
                        e.dashLayoutInfo.id = void 0, e.dashLayoutInfo.ct_id = "", e.dashLayoutInfo.chart_type = void 0
                    }, 0)
                },
                canSetLegend: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return t && ["C200", "C261", "C280", "C300", "C310", "C320", "C330", "C340", "C360", "C370", "C400", "C243", "C500"].indexOf(t) < 0
                },
                canSetAxis: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return t && ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C250", "C280", "C350", "C351", "C352"].indexOf(t) > -1
                },
                canSetDataLabels: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return ["C200", "C261", "C300", "C310", "C340", "C400", "C500"].indexOf(t) < 0
                },
                canSetTotal: function () {
                    var t = e.dashLayoutInfo.chart_type,
                        a = angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart .chart").data("chart-data");
                    return e.dashLayoutInfo.hasTotal && bdpChart.configurable.canEditChartSummary(t, a)
                },
                canSetTitle: function () {
                    return !!e.dashLayoutInfo.ct_id && e.dashLayoutInfo.ct_id.indexOf("text_") < 0
                },
                canSetNavigator: function () {
                    return e.dashLayoutInfo.show_navigator
                },
                modify: function (t) {
                    e.saveDashboard().then(function (a) {
                        if ("datalabels" === t) {
                            var i = angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart .chart").data("chart-data");
                            i && i.info && (i.info.show_datalabels = e.dashLayoutInfo.dash_setting.show_datalabels, i.renderChart())
                        } else "legend" === t || "axis" === t || "total" === t || "navigator" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0, !0) : "title" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0) : "show_block" !== t && "fixed_width" !== t || (I(), angular.element(".item-chart").each(function () {
                            reflowChart(angular.element(this), !0)
                        }));
                        x()
                    })
                },
                toggleBorder: function (t) {
                    var a = e.dashLayoutInfo.dash_setting;
                    a["border_" + t] = !a["border_" + t], "null" !== t ? a.border_null = !Boolean(a.border_left + a.border_bottom + a.border_right + a.border_top) : (a.border_top = !1, a.border_right = !1, a.border_bottom = !1, a.border_left = !1, a.border_null = !0);
                    for (var i = 0; i < e.dashStandardItems.length; i++) {
                        var n = e.dashStandardItems[i].children[0];
                        if (n.dom_id === e.dashLayoutInfo.id) {
                            n.meta.dash_setting = e.dashLayoutInfo.dash_setting;
                            break
                        }
                    }
                    e.saveDashboard().then(function (e) {})
                }
            },
                e.gotoTplSheet = function () {
                    $.cookie("ds_tb_id", e.dashTbId), r.path("/tpl_replace/" + e.currDash.activeProjId + "/" + e.currDash.dashSelected)
                },
                e.personalDashExcelExport = function () {
                    location.href = "/api/personal/export?dsh_id=" + e.currDash.dashSelected, o.open({
                        templateUrl: "/static/partials/dialogTemplates/dash_tpl_step.html",
                        scope: e,
                        showClose: !1,
                        className: "ngdialog-theme-default dash-tpl-step",
                        data: {
                            proj_id: e.currDash.activeProjId,
                            dsh_id: e.currDash.dashSelected
                        },
                        controller: ["$scope", function (e) {
                            e.goToTplDashborad = function () {
                                o.closeAll()
                            }, e.goToReplaceTpl = function () {
                                r.path("/tpl_replace/" + e.ngDialogData.proj_id + "/" + e.ngDialogData.dsh_id), o.closeAll()
                            }
                        }]
                    })
                }, u(["dash.delChartFail", "dash.plzSelectTable", "dash.selectTbTitle", "dash.emptyFolderList", "dash.titleRequired", "dash.titleDuplicate", "dash.delChartLinkSuccess", "chart.untitledChart", "saveSuccess", "chart.chainChart", "chart.chainField", "dash.dashCartJump.errSameTip", "dash.dashCartJump.successDelTip", "dash.dashCartJump.selectDashPrefix", "dash.dashCartJump.selectDashPrefix", "dash.dashCartJump.selectFolder", "dash.dashCartJump.selectDashboard", "dash.dashCartJump.selectFilter", "dash.dashCartJump.globalFilter", "dash.dashCartJump.openType", "dash.dashCartJump.thisWin", "dash.dashCartJump.newWin", "dash.dashCartJump.errEmptyTip"], e)
        }
    }
    angular
        .module("BC.controllers.dashboard", ["ngDragDrop", "gridster", "slick"])
        .controller("DashController", e),
        e.$inject = [
            "$scope", "$rootScope", "commonService", "$timeout",
            "$interval", "$location", "ngDialog", "$stateParams",
            "commonHttp", "errHint", "operatorHelpLink", "$http",
            "$jsTipTranslate", "autoRefreshChart", "dashChartLink",
            "$q", "dashChartJump", "guideService"]
}();
function () {
    function e(e, t, a, i, n, r, o, s, l, d, c, p, u, h, f, g, m, _, v, b, y) {
        function w(e) {
            return $.isEmptyObject(e) || "C400" === e.chart_type && $.isEmptyObject(e.layers) || e.level && !e.level[0].chart_type
        }

        function C(t, i) {
            1 == i.meta.property || i.meta.ct_id.indexOf("text_") > -1 || (e.dash.isDeletingItem = !0, a.chart.getInfo({
                ct_id: i.meta.ct_id,
                ws_id: e.wsId
            }).success(function (n) {
                "0" == n.status ? w(n.result.meta) ? (e.chartdel["chart" + i.meta.ct_id] = !0, e.dashStandardItems.splice(t, 1), a.chart.del({
                    ct_id: i.meta.ct_id,
                    ws_id: e.wsId,
                    dsh_meta: {
                        charts: N(e.dashStandardItems, !0)
                    }
                }).success(function (t) {
                    e.dash.isDeletingItem = !1, 0 == t.status || d(e.tips["dash.delChartFail"])
                })) : e.dash.isDeletingItem = !1 : (e.dash.isDeletingItem = !1, d(Number(n.status)))
            }))
        }

        function x(i) {
            e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], a.dash_global_filter.item({
                dash_id: i,
                rule_id: t.global.rule_id || ""
            }).then(function (t) {
                if ("0" == t.status) {
                    if (e.selected.dsh_id !== i) return;
                    t.result.length > 0 ? angular.element(".J-dash-edit-content-view").addClass("J-content-filter-view") : angular.element(".J-dash-edit-content-view").removeClass("J-content-filter-view"), e.global.globalDashFilter = [], e.global.originalGlobalFilter = angular.copy(t.result);
                    var a = bdp.utils.handleGlobalFilterLevel(t.result),
                        n = s.df_id,
                        r = s.range;
                    if (angular.forEach(a, function (e) {
                            if (n == e.df_id ? k(r, e) : D(e), "date" == e.data_type && "" == e.config.granularity) {
                                var t = e.config.range || "";
                                if (t) {
                                    var a = !1;
                                    angular.forEach(e.adv_date_list, function (e) {
                                        e.opt_id == t && (a = !0)
                                    }), a || (e.config.range = "", e.config.default_select = !1, e.range = [])
                                }
                            }
                        }), e.global.globalDashFilter = a, e.global.globalDashFilter.length ? $(".gridster").removeClass("gridster-nofilters") : $(".gridster").addClass("gridster-nofilters"), e.hitMemoryGlobalFilter || e.hitJumpGlobalFilter) var o = e.$watch("global.dashboardLoaded", function (t, a) {
                        t === !0 && (a === !0 && void 0 === e.draw_chart_url || (e.$broadcast("useMemoryGlobalFilter", !0), o()))
                    })
                } else d(Number(t.status))
            })
        }

        function k(t, a) {
            if ("date" == a.data_type && "" == a.config.granularity)
                for (var i = 0, n = a.adv_date_list.length; i < n; i++) {
                    var r = a.adv_date_list[i];
                    r.name == t ? a.range[0] = r.opt_id : a.range[0] = t
                } else a.range[0] = t;
            e.hitJumpGlobalFilter = !0
        }

        function D(a) {
            var i = angular.fromJson(window.localStorage.getItem("global_filter_memory")) || [],
                n = !1,
                r = t.wsId || "";
            angular.forEach(i, function (t) {
                t.ws_id == r && a.data_type == t.data_type && a.name == t.name && a.config && a.config.hasOwnProperty("granularity") && a.config.granularity == t.granularity && ("date" == a.data_type && "" == a.config.granularity ? angular.forEach(a.adv_date_list, function (e) {
                    e.opt_id == t.range[0] && (a.range = t.range, n = !0)
                }) : (a.range = t.range, a.range_type = t.range_type), e.hitMemoryGlobalFilter = !0, e.hitGlobalFilterId.push(a.df_id))
            })
        }

        function S() {
            var t = $(".dash-wrapper");
            t && t.length > 0 && (t.length > 0 && e.dashLayoutInfo.gridsterStyle ? e.dashLayoutInfo.gridsterStyle.height = t[0].scrollHeight : e.dashLayoutInfo.gridsterStyle = {
                height: t[0].scrollHeight
            })
        }

        function T(t) {
            I(), e.dash.scaleDashbord.selectedData = defined(t.meta.scale_flag) ? t.meta.scale_flag : 1, H && 1 != e.dash.scaleDashbord.selectedData && i(function () {
                e.dash.scaleDashbord.setScreenScale()
            }, 500)
        }

        function I(t) {
            e.dashLayoutInfo.dashMode = "adv", e.dashLayoutInfo.dashWrapperStyle = {}, 2 == e.dash.scaleDashbord.selectedData && H && (e.dashLayoutInfo.dashWrapperStyle = {
                overflow: "hidden"
            }), e.dashLayoutInfo.gridsterStyle = {
                width: e.resolution.width + "px",
                "min-width": e.resolution.width + "px",
                height: e.resolution["min-height"] + "px",
                "min-height": e.resolution["min-height"] + "px",
                transform: e.dash.scaleDashbord.selectedScaleVal,
                "transform-origin": "0 0",
                "background-color": e.pageWrapStyles.bgColor,
                "border-color": e.pageWrapStyles.lineColor,
                "border-style": e.pageWrapStyles.style,
                "border-width": e.pageWrapStyles.width,
                "background-size": e.pageWrapStyles["background-size"],
                "background-image": e.pageWrapStyles["background-image"],
                "background-repeat": e.pageWrapStyles["background-repeat"],
                "background-position": e.pageWrapStyles["background-position"]
            }, t ? (S(), bdp.bdpDash.setDashItemPadding(e.dashStandardItems, v, reflowChart, null)) : i(function () {
                S(), bdp.bdpDash.setDashItemPadding(e.dashStandardItems, v, reflowChart, null)
            }, 100)
        }

        function L(e) {
            e.itemStyle = {
                left: e.left + "px",
                top: e.top + "px",
                width: e.width + "px",
                height: e.height + "px",
                "z-index": e.zIndex,
                "background-color": (e.bgColor || "rgba(0, 1, 0, 0)") + " !important",
                border: "CUSTOM" == e.borderType ? e.customBorder.width + "px " + e.customBorder.style + " " + e.customBorder.color : ""
            }
        }

        function A(e) {
            return localforage.getItem("CACHE_DASH_ID").then(function (t) {
                t != e.dsh_id && localforage.setItem("CACHE_DASH_ID", e.dsh_id)
            }), localforage.getItem("CACHE_DASH_DATA")
        }

        function E(a, n) {
            t.dashLoading = !1;
            var o = n.result;
            if (!isObjectEmpty(o)) {
                e.resolution = o.resolution, t.dashProperty = H ? 0 : 1, t.dashCategory = o.category, e.outer_share_info = o.outer_share_info, e.gis_flag = o.gis_flag, e.isTpl = o.is_template || 0, e.dashTbId = e.isTpl && o && o.tb_ids ? o.tb_ids[0] : "", e.dashLayoutInfo.show_block = !defined(o.meta.show_block) || o.meta.show_block, e.dashLayoutInfo.fixed_width = !!defined(o.meta.fixed_width) && o.meta.fixed_width, e.dashLayoutInfo.layout_style = 2, o.meta.styles && !$.isEmptyObject(JSON.parse(o.meta.styles)) && (e.pageWrapStyles = JSON.parse(o.meta.styles)), e.$broadcast("screenDashboardInfo", {
                    pageWrapStyles: e.pageWrapStyles,
                    resolution: e.resolution
                }), (t.proj_share || t.global.rule_id) && (t.dashEditMode = !1), M(e.dashLayoutInfo.show_block, e.dashLayoutInfo.layout_style), e.dashTitle = o.name, e.dashLabel = o.label || "", e.dashComment = o.comment || "", e.property = o.property;
                var s = o.meta.charts || [];
                e.minZIndex = s.minZIndex || z, e.maxZIndex = s.maxZIndex || z, e.dash.calcCurIndex(s), e.dashStandardItems = s || [], e.dashStandardItems.sort(function (e, t) {
                    return e.row == t.row ? e.col - t.col : e.row < t.row ? -1 : 1
                }), e.dashInit.load = !1, e.draw_chart_url = {};
                var l, d;
                e.chartdel = {};
                for (var c = 0; c < e.dashStandardItems.length; c++) {
                    var p = e.dashStandardItems[c];
                    p.children[0].meta.filter_list = [], p.zIndex = p.zIndex || z, L(p)
                }
                if (t.creatingChart) return t.creatingChart = !1, F(e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type), delete t.creatingChartInfo, e.saveDashboard().then(function () {
                    r.path().indexOf(e.currDash.dashSelected) >= 0 && e.getDashboardInfo(e.currDash.dashSelected)
                }), !1;
                t.isGlobalCustom = {}, e.isFullscreenMode ? e.chartTheme = 1 === e.fullDisplayTheme ? "dark" : "default" : e.chartTheme = 1 === t.usedThemeId ? "dark" : "default", window.dashChartsUpdateMap = {};
                for (var u = 0; u < s.length; u++) {
                    l = s[u];
                    for (var h = 0; h < l.children.length; h++)
                        if (d = l.children[h], d.meta.filter_list = [], d.meta.type) {
                            window.dashChartsUpdateMap[d.meta.ct_id] = d.meta.tb_update_time + d.meta.update_time;
                            t.isGlobalCustom[d.meta.ct_id] = !1, e.global.rule_id && "&rule_id=" + e.global.rule_id, e.draw_chart_url[d.dom_id] = {
                                options: {
                                    theme: e.chartTheme,
                                    device: e.isFullscreenMode ? e.fullDisplayDevice : "pc",
                                    ws_id: t.wsId,
                                    dsh_id: a,
                                    ct_id: d.meta.ct_id,
                                    tb_id: d.meta.tb_id,
                                    rule_id: t.global.rule_id,
                                    read_cache: !0,
                                    optional: {
                                        linked_chart_type: d.meta.chart_link.linked_chart_type,
                                        link_info: d.meta.chart_link.link_info,
                                        chart_jump_info: d.meta.chart_jump
                                    }
                                },
                                lazyload: !0
                            }
                        } else !e.global.rule_id && C(u, d)
                }
                if (e.global.dashboardLoaded = !0, e.isGettingDashInfo = !1, e.isFullscreenMode && !e.$$phase && e.$digest(), 2 == e.dashLayoutInfo.layout_style && $(".dash-wrapper") && $(".dash-wrapper").length > 0) {
                    var f = $(".dash-wrapper")[0].scrollHeight;
                    $(".gridster").height(f)
                }
                A(o).then(function (a) {
                    window.dashChartsCache && !window.dashChartsCache[o.dsh_id] ? (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = null) : (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = a || null);
                    for (var n = 0; n < s.length; n++) {
                        l = s[n].children;
                        for (var r = 0; r < l.length; r++) {
                            d = l[r];
                            var c = e.draw_chart_url[d.dom_id];
                            void 0 !== c && (c.lazyload = n > 2)
                        }
                    }
                    i(function () {
                        if (e.$$phase || e.$digest(), e.lazy = new bdpChart.LazyLoad(".gridster", ".gridster-item", {
                                diff: 50,
                                handleResize: !0,
                                onItemLoad: function (t) {
                                    var a = $(t).find(".item-chart").attr("id");
                                    e.draw_chart_url[a] && (e.draw_chart_url[a].lazyload = !1)
                                },
                                onItemsLoad: function () {
                                    e.$$phase || e.$digest()
                                }
                            }), e.$on("$destroy", function () {
                                e.lazy.destroy()
                            }), 2 != e.dash.scaleDashbord.selectedData) {
                            var a = bdp.store.get("chart_editId");
                            e.search_ct_id ? setTimeout(function () {
                                e.scrollToChart(e.search_ct_id)
                            }, 10) : a && (setTimeout(function () {
                                e.$broadcast("scrollToChart", a)
                            }, 10), bdp.store.set("chart_editId", "")), setTimeout(function () {
                                t.wtbRelationSelectedItem && (e.scrollToChart(t.wtbRelationSelectedItem.ct_id), t.wtbRelationSelectedItem = null)
                            }, 0), setTimeout(function () {
                                t.warnListSelectedItem && (e.scrollToChart(t.warnListSelectedItem.ct_id), t.warnListSelectedItem = null)
                            }, 0)
                        }
                        i(function () {
                            S()
                        }, 100)
                    })
                }), T(o), H ? e.makeDashEdit(!0) : e.makeDashEdit(!1)
            }
        }

        function F(a) {
            var i = e.dashStandardItems,
                n = i[i.length - 1];
            switch (a) {
                case "C310":
                    n.sizeX = 3, n.sizeY = 2;
                    break;
                case "C230":
                case "C261":
                case "C290":
                    n.sizeX = 4, n.sizeY = 4;
                    break;
                case "C271":
                case "C272":
                case "C330":
                case "C340":
                case "C360":
                case "C370":
                    n.sizeX = 6, n.sizeY = 6;
                    break;
                case "C400":
                    n.sizeX = 12, n.sizeY = 7;
                    break;
                case "C350":
                case "C351":
                case "C352":
                    n.sizeX = 6, n.sizeY = 4
            }
            t.creatingChartInfo && t.creatingChartInfo.split_compare && (n.sizeX = 12, n.sizeY = 6);
            for (var r, o = i.length, s = 0, l = 0, d = 0; d < o - 1; d++) r = i[d], r.row + r.sizeY > s && (r.col + r.sizeX > 12 - n.sizeX ? (s = Math.max(s, r.row + r.sizeY), l = 0) : (s = Math.max(s, r.row), l = Math.max(l, r.col + r.sizeX)));
            n.row = s, n.col = l
        }

        function M(a, n) {
            var r = bdpChart.helper.isMobile(),
                o = t.isThirdIframe;
            r && o && function () {
                t.mobileMode = !0;
                var e = null;
                $(".gridster").on("click", ".J_chart_box", function (t) {
                    var a = $(this).find(".item-chart").get(0);
                    if (a == e) return !1;
                    $(a).addClass("reactive").removeClass("noscroll"), e && $(e).removeClass("reactive"), e = a
                }), $(document).on("touchmove", ".item-chart.reactive", function (e) {
                    return $(this).find(".chart-table").length > 0
                }), $(document).on("scroll", function (t) {
                    e && ($(e).removeClass("reactive"), e = null)
                })
            }(), e.gridsterOpts = {
                layoutStyle: n,
                margins: a ? r && o ? [8, 0] : [8, 8] : [0, 0],
                outerMargin: !1,
                minColumns: 1,
                minRows: 1,
                maxRows: 1e3,
                columns: 24,
                isMobile: !(!r || !o),
                resizable: {
                    enabled: !t.proj_share && t.permision.dashOperate && t.dashEditMode,
                    handles: "se",
                    start: function (t, a, i) {
                        e._draggingElemBox = {
                            width: a.width(),
                            height: a.height()
                        };
                        var n = a.attr("id"),
                            r = e.dashStandardItems.length;
                        if (e.dashLayoutInfo.ct_id != n)
                            for (var o = 0; o < r; o++)
                                if (e.dashStandardItems[o].children[0].meta.ct_id === n) {
                                    e.dash.editChartMeta(e.dashStandardItems[o].children[0], e.dashStandardItems[o]);
                                    break
                                }
                    },
                    resize: function (t, a, i) {
                        var n = a.find(".chart").data("chart-data"),
                            r = a.attr("data-chart-type");
                        ["C101", "C102", "C103", "C104", "C105"].indexOf(r) < 0 && (!n || n.isSplitChart()) || (1 == e.dashLayoutInfo.layout_style ? reflowChart(a) : 2 == e.dashLayoutInfo.layout_style && bdp.utils.throttle(function () {
                            reflowChart(a)
                        }, 17)(), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id))
                    },
                    stop: function (t, a, n) {
                        i(function () {
                            var t = a.find(".chart").data("chart-data");
                            if (t) {
                                var i = e._draggingElemBox.width / e._draggingElemBox.height,
                                    n = a.width() / a.height(),
                                    r = i < 1 && n >= 1 || i >= 1 && n < 1,
                                    o = t.getChartType(),
                                    s = r || t.isSplitChart() || o === bdpChart.ChartType.Line && "dark" === t.theme || o === bdpChart.ChartType.TreeMap;
                                reflowChart(a, !0, s), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id)
                            }
                        }, 0), I(), 1 == e.dashLayoutInfo.layout_style ? e.saveDashboard() : 2 == e.dashLayoutInfo.layout_style && (i(function () {
                            j(a)
                        }, 0), Y.save()), e.$emit("emitItemSizePos", "resizable")
                    }
                },
                draggable: {
                    enabled: !(t.dashEditMode && r && o || q || G) && (!t.proj_share && t.permision.dashOperate),
                    handle: ".J_chart_box",
                    stop: function (t, a, i) {
                        I("noDelay"), e.lazy && e.lazy.fireLoad(), 1 == e.dashLayoutInfo.layout_style ? e.saveDashboard() : 2 == e.dashLayoutInfo.layout_style && Y.save(), e.$emit("emitItemSizePos", "draggable")
                    }
                }
            }
        }

        function j(t) {
            var a = t.data("chart-type"),
                i = t.data("chart-id");
            ["C101", "C102", "C103", "C104", "C105", "C400", "C500"].indexOf(a) >= 0 && e.dashStandardItems.forEach(function (t, a) {
                t.children[0].meta.ct_id === i && e.$broadcast("editChartMeta", {
                    child: t.children[0],
                    item: t,
                    is_cancel: !1,
                    lock_status: e.lockItemPosMap,
                    need_reload: !1
                })
            })
        }

        function O() {
            var t = e.dashLayoutInfo.show_block;
            e.gridsterOpts.margins = t ? [8, 8] : [0, 0]
        }

        function P(t) {
            for (var a, i, n = $.inArray(t, ["C101", "C102", "C103", "C105"]) > -1, r = e.dashStandardItems || [], o = r.length, s = 0, l = 0, d = 0, c = 0; c < o; c++) {
                var p = r[c];
                p.row + p.sizeY > l && (p.col + p.sizeX > 6 ? (l = p.row + p.sizeY, d = 0) : (l = p.row, d = p.col + p.sizeX));
                for (var u = 0; u < p.children.length; u++) a = p.children[u], i = parseInt(a.dom_id.substr(2)), s = i > s ? i : s
            }
            s++;
            var h = {
                sizeX: 6,
                sizeY: 4,
                row: l,
                col: d,
                children: [{
                    dom_id: "id" + s,
                    meta: {
                        name: e.tips["chart.untitledChart"],
                        ct_id: "init_ctid",
                        is_special_chart: n
                    }
                }]
            };
            if ("C101" === t && (h.sizeX = 3, h.sizeY = 2, h.borderType = "CUSTOM", h.customBorder = {
                    color: "#99a1a7",
                    style: "solid",
                    width: 1
                }), "C104" === t && (h.borderType = "t1"), "C105" === t && (h.children[0].meta.style = {
                    "font-size": "14px",
                    "text-align": "center"
                }, h.borderType = "CUSTOM", h.customBorder = {
                    color: "#99a1a7",
                    style: "solid",
                    width: 1
                }, h.width = 188, h.height = 44), $.inArray(t, ["C101", "C102", "C103", "C104", "C105"]) > -1 && (h.zIndex = e.maxZIndex + 1), e.dashLayoutInfo && 2 == e.dashLayoutInfo.layout_style) {
                Y.setFreeLayout();
                var f = Y.getBlankPos();
                h.width = h.width || 480, h.height = h.height || 336, h.left = f.left, h.top = f.top
            }
            L(h), e.dashStandardItems || (e.dashStandardItems = []), e.dashStandardItems.push(h)
        }

        function N(e, t) {
            var a = angular.copy(e);
            return angular.forEach(a, function (e) {
                e.children[0].meta = {
                    ct_id: e.children[0].meta.ct_id,
                    dash_setting: e.children[0].meta.dash_setting,
                    html: e.children[0].meta.html || "",
                    style: e.children[0].meta.style || {}
                }, t || delete e.children[0].meta.dash_setting, e.children[0].meta.style && !$.isEmptyObject(e.children[0].meta.style) || delete e.children[0].meta.style
            }), a
        }

        function B(t, a) {
            var i = e.dashLayoutInfo.dash_setting;
            return i.style = {}, t.some(function (e) {
                var t = e.children[0].meta,
                    n = !1;
                if (a == t.ct_id && (i.style = t.style, i.drill_level = t.drill_level, n = !0), n) return n
            }), i
        }
        var z = 3e3,
            R = r.path(),
            q = R.indexOf("dash_edit") >= 0 && R.indexOf("mode/adv") >= 0 && R.indexOf("adv_dash_edit") < 0,
            H = R.indexOf("adv_dash_edit") >= 0 && R.indexOf("mode/adv") >= 0,
            G = R.indexOf("adv_dash_fullscreen") >= 0 && R.indexOf("mode/adv") >= 0;
        if (e.initData = function () {
                t.dashEditMode = !!H, t.advDashEditPage = !!H, t.show_bdp_header = !H && !G, t.mainChartContainer = [], t.mainChartIdContainer = [], t.mainChartColorContainer = {}, t.$editable = !0, t.last_dash_path = r.path(), t.view = "dashboard", e.isAdvDash = q, e.isAdvDashEdit = H, e.chartOptions = {}, e.global.dashboardLoaded = !1, e.AllMap = ["全部", "全部时间", "All"], e.selected = {
                    proj_id: s.projId,
                    dsh_id: s.dashId,
                    rule_id: e.global.rule_id,
                    ws_id: t.wsId
                },
                    e.currDash = {
                        activeProjId: s.projId,
                        dashSelected: s.dashId
                    },
                    e.currentSelectedItem = {},
                    e.activeProjId = s.projId,
                    e.dashSelected = s.dashId,
                    e.dashInit = {},
                    e.dashInit.load = !0,
                    e.dashLayoutInfo = {},
                    e.showDataScreenGrid = !!H,
                    e.lockItemPosMap = {},
                    e.hitMemoryGlobalFilter = !1,
                    e.hitGlobalFilterId = [],
                    e.pageWrapStyles = e.pageWrapStyles || {},
                    e.textComponentEditMode = {},
                    e.$curfullScreenDom = null, s.ruleId ? e.global.rule_id = s.ruleId : R.indexOf("ru_") >= 0 && (e.global.rule_id = R.substring(R.indexOf("ru_"))),
                    localStorage ? e.fullDisplayTheme = +localStorage.getItem("fullDisplayTheme") || t.usedThemeId : e.fullDisplayTheme = +$.cookie("fullDisplayTheme") || t.usedThemeId,
                    localStorage ? e.fullDisplayDevice = localStorage.getItem("fullDisplayDevice") || "pc" : e.fullDisplayDevice = $.cookie("fullDisplayDevice") || "pc",
                    e.isFullscreenMode = G,
                    localStorage.setItem("mc_location_path", r.path()), i(function () {
                    e.pageContent = {
                        addChart: y.instant("dash.advDash.addChart"),
                        addTitle: y.instant("dash.advDash.addTitle"),
                        addText: y.instant("dash.advDash.addText"),
                        addImage: y.instant("dash.advDash.addImage"),
                        addVideo: y.instant("dash.advDash.addVideo"),
                        top: y.instant("dash.advDash.top"),
                        bottom: y.instant("dash.advDash.bottom"),
                        globalFilter: y.instant("dash.advDash.globalFilter")
                    }
                }, 100)
            },
            !s.projId || !s.dashId) return !1;
        e.initData(), e.mouseleaveItem = function () {
            e.$broadcast("fire-mouseleave-item-event", !0)
        },
            e.$on("jumpToSearch", function (t, a) {
                e.search_ct_id = a
            }),
            e.$on("scrollToChart", function (t, a) {
                i(function () {
                    e.scrollToChart(a)
                }, 0)
            });
        e.$on("_websocketChartMessage_", function (t, a) {
            1 == ("string" == typeof a.data ? $.parseJSON(a.data) : a.data).type && h.refresh({
                drawChartUrl: e.draw_chart_url,
                type: "dashboard",
                evt: t,
                scope: e,
                ret: a
            })
        }),
            e.scrollToChart = function (e, t) {
                t = t || $(".gridster-desktop");
                var a = t.closest(".dash-wrapper");
                t.find(".gridster-item").each(function (t, i) {
                    var n = $(i);
                    if (e == n.data("chart-id")) {
                        var r = a.height(),
                            o = a.width(),
                            s = n[0].offsetTop,
                            l = n[0].offsetLeft,
                            d = scrollLeftFlag = !1;
                        s + n.height() > r && (d = !0, a.animate({
                            scrollTop: s - 15
                        }, function () {
                            n.addClass("highlight-chart")
                        })), l > o && (scrollLeftFlag = !0, a.animate({
                            scrollLeft: l
                        }, function () {
                            d || n.addClass("highlight-chart")
                        })), d || scrollLeftFlag || n.addClass("highlight-chart"), $(document).on("click.cancelHighlight", function () {
                            n.removeClass("highlight-chart"), $(this).off("click.cancelHighlight")
                        })
                    }
                })
            },
            localStorage.setItem("mc_location_path", r.path()),
            e.getGlobalFilterItem = x,
            e.$on("useMemoryGlobalFilter",
                function (t, a) {
                    if (a) {
                        var i = [];
                        angular.forEach(e.global.globalDashFilter, function (t, a) {
                            i.push({
                                df_id: t.df_id,
                                range: t.range,
                                data_type: t.data_type,
                                granularity: t.config.granularity || "",
                                range_type: t.range_type || "1"
                            }), e.hitGlobalFilterId.indexOf(t.df_id) > -1 && (e.global.globalDashFilterItems[t.df_id] = {
                                granularity: t.config.granularity || "",
                                df_id: t.df_id,
                                range: t.range,
                                data_type: t.data_type,
                                show_name: t.range,
                                real_name: t.range,
                                rela_charts: t.rela_ct_ids
                            })
                        }),
                            angular.forEach(e.draw_chart_url, function (t, a) {
                                t.global_filter_value = [], angular.forEach(e.global.globalDashFilter, function (e, a) {
                                    e.rela_ct_ids.indexOf(t.options.ct_id) > -1 && (t.options.optional.dsh_filter = i, delete t.options.optional.filter_list, t.options.read_cache = !1, t.options.optional._t = new Date)
                                })
                            })
                    }
                }),
            e.dashboardAutoplay = !1;
        var W = null;
        e.toggleDashboardAutoplay = function () {
            e.dashboardAutoplay = !e.dashboardAutoplay;
            var t = e.dashboardAutoplay ? "Play" : "Pause";
            e.dashboardAutoplay && (clearTimeout(W), W = setTimeout(function () {
                e.dashboardAutoplay && $("#dash-slider").slick("slickNext")
            }, 1e3)), $("#dash-slider").slick("slick" + t)
        };
        var J = function () {
                $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").addClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").addClass("cursor-none")
            },
            V = function () {
                $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").removeClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").removeClass("cursor-none")
            };
        if (e.isFullscreenMode) {
            var U = setTimeout(J, 5e3);
            $(".dash-fullscreen-wrap").on("mousemove", function () {
                null !== U && (window.clearTimeout(U), U = null, V(), setTimeout(function () {
                    U = setTimeout(J, 3e3)
                }, 200))
            })
        }
        e.getDashboardInfo = function (i) {
            if (e.lazy && e.lazy.destroy(), i ? x(i) : e.global.globalDashFilter = [], t.dashLoading = !0, "" == i || void 0 === i) return t.dashLoading = !1, !1;
            var n = {};
            return n.dsh_id = i, t.global.rule_id && (n.rule_id = t.global.rule_id), e.isGettingDashInfo = !0, a.dashboard.getInfo(n).then(function (a) {
                if (0 == a.status) {
                    if (a.result && 0 == a.result.category && R.indexOf("/mode/adv") >= 0) return t.dashLoading = !1, R = R.replace("/mode/adv", ""), void r.path(R);
                    if (!t.projectLoaded && q) var n = setInterval(function () {
                        t.projectLoaded && (E(i, a), clearInterval(n))
                    }, 200);
                    else E(i, a)
                } else {
                    if (t.dashLoading = !1, e.isGettingDashInfo = !1, 3 == a.status) return t.wsId ? r.path("/dash_edit_ws/" + t.wsId) : r.path("/dash_edit/"), void location.reload();
                    d(a.status)
                }
            })
        },
            e.getDashboardInfo(e.currDash.dashSelected),
            e.$on("fire-refresh-dashboard", function () {
                ("dashboard" == t.view || bdp.bdpPageStatus.isUnderAdvDash()) && e.getDashboardInfo(e.currDash.dashSelected)
            }),
            e.clearOuterShareInfo = function () {
                e.outer_share_info = {}
            },
            e.showThirdIframeDshList = function () {
                $(".dash-sidebar").addClass("show-list"), $(".dashboard-item").off("click.showThirdIframeDshList").on("click.showThirdIframeDshList", function (e) {
                    $(".dash-sidebar").removeClass("show-list")
                })
            },
            e.btn_layer = {},
            $("body").on("dashboard-scroll-start.dashOperate",
                function () {
                    var a = e.btn_layer;
                    a.show_more_btn = !1,
                        a.show_presentation_mode = !1,
                        a.showDownloadSheet = !1,
                        a.outerShareFuncs = !1,
                        t.permision.personal_help_video = !1,
                        $(".J_dashboard_presentation").addClass("ng-hide"),
                        $(".J_dashboard_more_btn").addClass("ng-hide"),
                        $(".J_dashboard_share_layer").addClass("ng-hide"),
                        $(".J-help-video").addClass("ng-hide")
                }),
            $(document).off("click.table").on("click.table", function (e) {
                $(document).trigger("clickTable", {
                    e: e
                })
            }),
            e.$on("$destroy", function () {
                $("body").off("dashboard-scroll-start.dashOperate"), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos"), $(document).off("fullscreenchange.advDash webkitfullscreenchange.advDash mozfullscreenchange.advDash msRequestFullscreen.advDash")
            }),
            e.filterMergedTable = function (e) {
                return "excel" !== e.type && "aggr" !== e.type
            },
            e.addItem = function () {
                if (!e.loadingStatus || !e.loadingStatus.isAdding) {
                    e.loadingStatus = {
                        isAdding: !0,
                        loadingFolders: !0
                    };
                    o.open({
                        template: "/static/partials/dialogTemplates/chart-select-table.html",
                        className: "ngdialog-theme-default choose-table J-chart-select-table" + (t.permision.canUseCustomChart ? "" : " no-custom-chart"),
                        data: {
                            getClearSaveMeta: N,
                            addGridItem: P,
                            currDash: {
                                activeProjId: s.projId,
                                dashSelected: s.dashId
                            },
                            dashStandardItems: e.dashStandardItems
                        },
                        scope: e,
                        controller: "chartAddCtrl"
                    })
                }
            },
            e.saveDashboard = function () {
                if (!e.dashTitle) return void d(e.tips["dash.titleRequired"]);
                var t = {};
                e.dashLayoutInfo.ct_id && (t[e.dashLayoutInfo.ct_id] = B(e.dashStandardItems, e.dashLayoutInfo.ct_id));
                var i = {
                    layout_style: e.dashLayoutInfo.layout_style || 1,
                    show_block: e.dashLayoutInfo.show_block,
                    fixed_width: e.dashLayoutInfo.fixed_width || !1,
                    charts: N(e.dashStandardItems, !0),
                    scale_flag: e.dash.scaleDashbord.selectedData
                };
                e.pageWrapStyles && (i.styles = JSON.stringify(e.pageWrapStyles));
                var n = {
                    ws_id: e.wsId,
                    dsh_id: e.currDash.dashSelected,
                    chart_data: angular.toJson(t),
                    data: angular.toJson({
                        name: e.dashTitle,
                        label: e.dashLabel,
                        comment: e.dashComment,
                        resolution: e.resolution,
                        meta: i
                    })
                };
                return a.dashboard.modify(n).then(function (t) {
                    0 != +t.status ? (3204 == +t.status && d(e.tips["dash.titleDuplicate"]), d(Number(t.status))) : r.path().indexOf(e.currDash.dashSelected) >= 0 && x(e.currDash.dashSelected)
                })
            },
            e.$watch(function () {
                    return t.proj_share || !t.permision.dashOperate
                },
                function (a) {
                    e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !a && t.dashEditMode, e.gridsterOpts.draggable.enabled = !a && t.dashEditMode)
                }),
            e.$watch("dashProperty", function (t) {
                1 == t && e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !1, e.gridsterOpts.draggable.enabled = !1)
            }),
            e.$on("datascreenPageEle", function (t, a) {
                var n = a.eleStyle || {},
                    r = a.opt || {},
                    o = null;
                e.dashStandardItems.some(function (t) {
                    var a = t.children[0],
                        s = a.meta;
                    return s.ct_id == e.dashLayoutInfo.ct_id && (o = s, i(function () {
                            r && r.isChart ? $.extend(!0, s.style, n) : $.extend(!0, t, n), s.drill_level = r.drill_level, r.save && (L(t), e.saveDashboard().then(function () {
                                I(), bdp.bdpDash.setDashItemPadding(e.dashStandardItems, v, reflowChart, {
                                    meta: o,
                                    style: n
                                })
                            }))
                        }), !0)
                })
            }),
            e.$on("datascreenPageWrap", function (t, a) {
                var n = a.pageStyle;
                i(function () {
                    e.pageWrapStyles = $.extend(e.pageWrapStyles, {
                        bgColor: n.bgColor + " !important",
                        lineColor: n.lineColor,
                        style: n.style,
                        width: n.width
                    }), "url(undefined)" == e.pageWrapStyles["background-image"] && (e.pageWrapStyles["background-image"] = "url()"), e.dash.scaleDashbord.setScreenScale(), I(), e.saveDashboard()
                })
            }),
            e.$on("datascreenResolution", function (t, a) {
                e.resolution = a.resolution, e.dash.scaleDashbord.modifyScale(), I()
            }),
            e.$on("datascreenEleLockPos", function (t, a) {
                a && e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == a.ct_id && (e.lockItemPosMap[a.ct_id] = a.lock)
                })
            }),
            e.$on("showPageImage", function (t, a) {
                var n = a.pageImageSrc;
                i(function () {
                    e.pageWrapStyles = $.extend(e.pageWrapStyles, {
                        "background-size": "cover",
                        "background-image": "url(" + n + ")",
                        "background-repeat": "no-repeat",
                        "background-position": "center"
                    }), n || (e.pageWrapStyles["background-image"] = "url()"), e.dash.scaleDashbord.setScreenScale(), e.saveDashboard()
                })
            }),
            e.$on("chartScreenImg", function (t, a) {
                var n = a.screenImg || {};
                e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == e.dashLayoutInfo.ct_id && i(function () {
                        t.url = n.url, e.saveDashboard()
                    })
                })
            }),
            e.$on("chartScreenVideo", function (t, a) {
                var n = a.screenVideo || {};
                e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == e.dashLayoutInfo.ct_id && i(function () {
                        t.src = n.src, t.autoplay = n.autoplay, t.loop = n.loop, e.saveDashboard()
                    })
                })
            }),
            e.$on("changeDashSetting", function (t, a) {
                if (e.dash.modify(a.type), "title" == a.type) {
                    var i = e.dashLayoutInfo.ct_id,
                        n = angular.element("#" + i).find(".chart-box"),
                        r = n.find(".item-chart"),
                        o = parseInt(r.css("top"));
                    e.dashLayoutInfo.dash_setting.show_title ? r.css({
                        top: o + 22
                    }) : r.css({
                        top: o - 22
                    })
                }
            }),
            e.$on("emitChartStyle", function (a, n) {
                if (n) {
                    var r = n.chart,
                        o = r.ct_id;
                    o != t.editChartId && o != e.dashLayoutInfo.ct_id || (delete t.editChartId, e.dashStandardItems.forEach(function (t, a) {
                        t.children[0].meta.ct_id === o && (e.dashLayoutInfo.id == t.children[0].dom_id ? n.needFresh && e.$broadcast("editChartMeta", {
                            child: t.children[0],
                            item: t,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            opts: n.opts || {},
                            need_reload: !0
                        }) : i(function () {
                            e.dash.editChartMeta(t.children[0], t)
                        }, 0))
                    }))
                }
            }),
            e.$on("emitItemSizePos", function (t, a) {
                if (a) {
                    var i = e.dashLayoutInfo.ct_id;
                    e.dashStandardItems.forEach(function (t, a) {
                        t.children[0].meta.ct_id === i && (e.dashLayoutInfo.chart_type && e.dash.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !0), e.$broadcast("editChartMeta", {
                            child: t.children[0],
                            item: t,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            need_reload: !1
                        }))
                    })
                }
            }),
            e.goHelp = function (e) {
                c(e)
            },
            e.chartChain = g(e),
            e.chartDashJump = m(e),
            e.getAllChartInstances = function () {
                var t = [];
                return e.dashStandardItems && e.dashStandardItems.length > 0 && e.dashStandardItems.forEach(function (e) {
                    var a = e.children[0].dom_id;
                    if (a) {
                        var i = $("#" + a).find(".chart").data("chart-data");
                        i && t.push(i)
                    }
                }), t
            },
            e.enterFullScreen = function () {
                var e = r.path().replace("dash_edit", "adv_dash_fullscreen");
                t.isThirdIframe && (e = r.path().replace("third_iframe", "adv_dash_fullscreen")),
                    r.path(e),
                r.path().indexOf("/adv_dash_fullscreen/") > -1 && (t.projectLoaded = !0)
            },
            e.exitFullScreen = function () {
                t.projectLoaded = !1;
                var e = r.path().replace("adv_dash_fullscreen", "dash_edit");
                t.isThirdIframe && (e = r.path().replace("adv_dash_fullscreen", "third_iframe")), r.path(e);
                var a = document.exitFullscreen || document.webkitExitFullscreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen;
                a && a.apply(document)
            },
            e.enterEditAdvDash = function () {
                var a = "";
                e.isAdvDash && (a = t.wsId ? r.path().replace("dash_edit_ws", "adv_dash_edit_ws") : r.path().replace("dash_edit", "adv_dash_edit")), r.path(a)
            },
            e.backAdvDash = function () {
                var a = "";
                e.isAdvDashEdit && (a = t.wsId ? r.path().replace("adv_dash_edit_ws", "dash_edit_ws") : r.path().replace("adv_dash_edit", "dash_edit")), r.path(a)
            },
            e.setFullDisplayTheme = function (a) {
                if (a !== e.fullDisplayTheme) {
                    e.fullDisplayTheme = a, BDPLogger.log("feStatistics", {
                        category: "interaction",
                        action: "click",
                        opt_label: "setFullDisplayTheme",
                        opt_value: 1
                    }), BDPLogger.log("feStatistics", {
                        category: "feature",
                        action: "fullDisplayTheme",
                        opt_label: a,
                        opt_value: 1
                    }), localStorage ? localStorage.setItem("fullDisplayTheme", a) : $.cookie("fullDisplayTheme", a);
                    var i = 1 === a ? "dark" : "default";
                    e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                        var a = e.children[0].dom_id;
                        if (a) {
                            var n = $("#" + a).find(".chart").data("chart-data");
                            n && n.setTheme(i, t)
                        }
                    }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, a) {
                        var n = $(a).data("chart-data");
                        n && n.setTheme(i, t)
                    })
                }
            },
            e.setFullDisplayDevice = function (a) {
                a !== e.fullDisplayDevice && (e.fullDisplayDevice = a, BDPLogger.log("feStatistics", {
                    category: "interaction",
                    action: "click",
                    opt_label: "setFullDisplayDevice",
                    opt_value: 1
                }), BDPLogger.log("feStatistics", {
                    category: "feature",
                    action: "fullDisplayDevice",
                    opt_label: a,
                    opt_value: 1
                }), localStorage ? localStorage.setItem("fullDisplayDevice", a) : $.cookie("fullDisplayDevice", a), e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                    var i = e.children[0].dom_id;
                    if (i) {
                        var n = $("#" + i).find(".chart").data("chart-data");
                        n && n.setDisplayDevice(a, t)
                    }
                }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, i) {
                    var n = $(i).data("chart-data");
                    n && n.setDisplayDevice(a, t)
                }))
            };
        var Y = {
            setMobLayout: function (t) {
                e.global.showMobLayout = t
            },
            setFreeLayout: function () {
                var t, a = $("#J_gridster .gridster-item"),
                    i = "",
                    n = {};
                angular.forEach(a, function (a, r) {
                    if (i = $(a).attr("style"), t = $(a).data("chartId"), i) {
                        i.split(";").forEach(function (e, t) {
                            var a = e.replace(/\s/g, "").split(":");
                            a[1] && (n[a[0]] = a[1].replace("px", ""))
                        });
                        for (var o = 0; o < e.dashStandardItems.length; o++) t === e.dashStandardItems[o].children[0].meta.ct_id && (e.dashStandardItems[o].left = +n.left, e.dashStandardItems[o].top = +n.top, e.dashStandardItems[o].width = +n.width, e.dashStandardItems[o].height = +n.height)
                    } else console.log("布局尚未完成切换导致错误")
                })
            },
            getBlankPos: function () {
                var t = $(".J_data_screen_hook "),
                    a = t.height(),
                    i = [];
                angular.forEach(e.dashStandardItems, function (e, t) {
                    i.push(e.top + e.height)
                });
                var n = Math.max.apply(this, i),
                    r = {};
                if (n + 8 + 336 >= a) {
                    var o = $(".J-dash-wrapper").scrollTop();
                    r = o >= 100 ? {
                        top: o + 100,
                        left: 100
                    } : {
                        top: 100,
                        left: 100
                    }
                } else r = {
                    top: n < 0 ? 0 : n + 8,
                    left: 0
                };
                return r
            },
            save: function () {
                this.setFreeLayout(), e.saveDashboard()
            }
        };
        e.setMobLayout = Y.setMobLayout, e.sortMobCharts = {
            stop: function (t, a) {
                e.saveDashboard()
            }
        },
            e.makeDashEdit = function (e) {
                t.dashEditMode = e
            },
            e.dash = {
                isCreatingItem: !1,
                isDeletingItem: !1,
                isGettingInfo: !1,
                posChanged: !1,
                calcCurIndex: function (t) {
                    t.forEach(function (t) {
                        t.hasOwnProperty("zIndex") && (e.minZIndex = Math.min(e.minZIndex, t.zIndex), e.maxZIndex = Math.max(e.maxZIndex, t.zIndex))
                    })
                },
                setZIndex: function (t) {
                    var a = e.minZIndex,
                        n = e.maxZIndex,
                        r = e.dashLayoutInfo.ct_id;
                    if (!r) return void d(e.tips["dash.advDash.selectElementToSetLayer"]);
                    var o;
                    "top" === t ? (o = n + 1, e.maxZIndex = o) : "bottom" === t && (o = a - 1, e.minZIndex = o), i(function () {
                        e.dashStandardItems.forEach(function (e) {
                            e.children[0].meta.ct_id == r && (e.zIndex = o), L(e)
                        }), e.saveDashboard()
                    })
                },
                addVideoComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    P("C103"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 4,
                        dsh_meta: {
                            charts: N(e.dashStandardItems, !0)
                        },
                        category: 2
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C103")
                    })
                },
                createSuccess: function (t, a) {
                    if (0 != +t.status) return e.dashStandardItems.pop(), !1;
                    e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.ct_id = t.result.ct_id, e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type = a;
                    var n = $(".gridster-item").last(),
                        r = function () {
                            n.addClass("highlight-chart"), i(function () {
                                n.removeClass("highlight-chart")
                            }, 500)
                        };
                    2 != e.dash.scaleDashbord.selectedData ? $(".dash-wrapper").animate({
                        scrollTop: n.position().top
                    }, r) : r(), i(function () {
                        e.dash.editChartMeta(e.dashStandardItems[e.dashStandardItems.length - 1].children[0], e.dashStandardItems[e.dashStandardItems.length - 1]), e.dash.calcCurIndex(e.dashStandardItems)
                    })
                },
                addImageComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    P("C102"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 3,
                        dsh_meta: {
                            charts: N(e.dashStandardItems, !0)
                        },
                        category: 2
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C102")
                    })
                },
                addBorderComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    P("C104"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 5,
                        dsh_meta: {
                            charts: N(e.dashStandardItems, !0)
                        },
                        category: 2
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C104")
                    })
                },
                addTextComponent: function (t) {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    e.makeDashEdit(!0), P(t), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: "C101" == t ? 2 : 6,
                        dsh_meta: {
                            charts: N(e.dashStandardItems, !0)
                        },
                        category: 2
                    }).success(function (a) {
                        if (i(function () {
                                e.dash.isCreatingItem = !1
                            }, 1e3), 0 != +a.status) return e.dashStandardItems.pop(), !1;
                        var n = $(".gridster-item").last();
                        e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.ct_id = a.result.ct_id, e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type = t;
                        var r = function () {
                            n.addClass("highlight-chart"), i(function () {
                                e.dash.editTextComponent(e.dashStandardItems[e.dashStandardItems.length - 1].children[0], e.dashStandardItems[e.dashStandardItems.length - 1]), i(function () {
                                    f.retrieveEditor(a.result.ct_id).scope.displayElements.text.trigger("focus"), n.removeClass("highlight-chart")
                                }, 500)
                            })
                        };
                        2 != e.dash.scaleDashbord.selectedData ? $(".dash-wrapper").animate({
                            scrollTop: n.position().top
                        }, r) : r()
                    })
                },
                delComponent: function (t) {
                    var i = "",
                        n = angular.copy(e.dashStandardItems);
                    n.forEach(function (e, a) {
                        e.children[0].meta.ct_id === t && (n.splice(a, 1), i = e.children[0].meta.type)
                    });
                    var r = {
                        ct_id: t,
                        dsh_meta: {
                            charts: N(n, !0)
                        }
                    };
                    e.pageWrapStyles && (r.dsh_meta.styles = JSON.stringify(e.pageWrapStyles)), e.dash.isDeletingItem = !0, a.chart.del(r).success(function (t) {
                        e.dash.isDeletingItem = !1, 0 == +t.status && (e.dashStandardItems = n, i && e.dash.changeEditMetaVisible(i, !1))
                    })
                },
                copyComponent: function (t, a) {
                    function i() {
                        e.global.clickComplete = !1;
                        var t = e.copyChartData;
                        t.dashId && l.get("/api/chart/copy", {
                            ct_id: t.chartInfo.chart_id,
                            from: angular.toJson({
                                proj_id: t.curProId,
                                dsh_id: t.curDshId
                            }),
                            to: angular.toJson({
                                proj_id: t.projId,
                                dsh_id: t.dashId
                            })
                        }).then(function (t) {
                            if (0 == t.status) {
                                d(e.tips["dash.advDash.copySuccess"]), o.closeAll();
                                var a = e.copyChartData;
                                a.curProId == a.projId && a.curDshId == a.dashId && e.getDashboardInfo(a.curDshId)
                            }
                            e.global.clickComplete = !0
                        })
                    }

                    function n(a) {
                        e.copyChartData = {
                            curProId: s.projId,
                            curDshId: s.dashId,
                            chartInfo: {
                                chart_id: t.meta.ct_id,
                                name: t.meta.name
                            },
                            projId: s.projId,
                            dashId: s.dashId,
                            project_list: a
                        };
                        for (var n = e.copyChartData.project_list, r = 0, l = n.length; r < l; r++) n[r].proj_id == e.copyChartData.projId && (e.copyChartData.dash_list = n[r].dsh_list);
                        o.open({
                            template: "/static/partials/chart-copy.html",
                            className: "ngdialog-theme-default ngDialog-width-360",
                            data: {
                                okActionFunc: i
                            },
                            scope: e
                        })
                    }
                    var r = t.meta.type;
                    ["C101", "C102", "C103", "C105"].indexOf(r) >= 0 ? e.dash.getCacheProjListForOpt(n, 2) : e.dash.getCacheProjListForOpt(n)
                },
                moveComponent: function (t, a) {
                    function i() {
                        var t = bdp.bdpDash.getItemIndexInDashList(e.dashStandardItems, e.moveChartData.chartInfo.chart_id);
                        e.dashStandardItems.splice(t, 1), e.getDashboardInfo(e.dashSelected)
                    }

                    function n() {
                        var t = e.moveChartData;
                        if (e.global.clickComplete = !1, !t.dashId) return d(e.tips["dash.advDash.pleaseSelectDashboard"]), void(e.global.clickComplete = !0);
                        if (t.curProId == t.projId && t.curDshId == t.dashId) return d(e.tips["dash.advDash.targetPositionIsSame"]), void(e.global.clickComplete = !0);
                        var a = [].concat(e.dashStandardItems),
                            n = bdp.bdpDash.getItemIndexInDashList(e.dashStandardItems, e.moveChartData.chartInfo.chart_id);
                        a.splice(n, 1), l.post("/api/chart/move", {
                            ct_id: t.chartInfo.chart_id,
                            from: angular.toJson({
                                proj_id: t.curProId,
                                dsh_id: t.curDshId
                            }),
                            to: angular.toJson({
                                proj_id: t.projId,
                                dsh_id: t.dashId
                            }),
                            check: "do",
                            dsh_meta: angular.toJson({
                                charts: N(a, !0)
                            })
                        }).then(function (t) {
                            e.global.clickComplete = !0, t.result.ismoved ? (d(e.tips["chart.moveChartSuccess"]), i(), o.closeAll()) : o.openConfirm({
                                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                                className: "ngdialog-theme-default ngdialog-width-340",
                                scope: e,
                                data: {
                                    message: e.tips["chart.checkToContinueMove"]
                                }
                            }).then(function () {
                                var t = e.moveChartData;
                                l.post("/api/chart/move", {
                                    ct_id: t.chartInfo.chart_id,
                                    from: angular.toJson({
                                        proj_id: t.curProId,
                                        dsh_id: t.curDshId
                                    }),
                                    to: angular.toJson({
                                        proj_id: t.projId,
                                        dsh_id: t.dashId
                                    }),
                                    check: "pass",
                                    dsh_meta: angular.toJson({
                                        charts: N(a, !0)
                                    })
                                }).then(function (t) {
                                    t.result.ismoved ? (d(e.tips["chart.moveChartSuccess"]), i()) : d(e.tips["chart.moveChartFail"]), o.closeAll()
                                })
                            })
                        })
                    }

                    function r(a) {
                        e.moveChartData = {
                            curProId: s.projId,
                            curDshId: s.dashId,
                            chartInfo: {
                                chart_id: t.meta.ct_id,
                                name: t.meta.name
                            },
                            projId: s.projId,
                            dashId: s.dashId,
                            project_list: a
                        };
                        for (var i = e.moveChartData.project_list, r = 0, l = i.length; r < l; r++) i[r].proj_id == e.moveChartData.projId && (e.moveChartData.dash_list = i[r].dsh_list);
                        o.open({
                            template: "/static/partials/chart-move.html",
                            className: "ngdialog-theme-default ngDialog-width-360",
                            data: {
                                okActionFunc: n
                            },
                            scope: e
                        })
                    }
                    var c = t.meta.type;
                    ["C101", "C102", "C103", "C105"].indexOf(c) >= 0 ? e.dash.getCacheProjListForOpt(r, 2) : e.dash.getCacheProjListForOpt(r)
                },
                getCacheProjListForOpt: function (e, t) {
                    function i() {
                        n = void 0 != t ? bdp.bdpDash.filterProjByQuery(n, {
                            category: t,
                            type: 0
                        }) : bdp.bdpDash.filterProjByQuery(n, {
                            type: 0
                        })
                    }
                    var n = angular.copy(b.getTreeCache());
                    if (n) i(), e(n);
                    else {
                        var r = [];
                        bdp.bdpPageStatus.isUnderAdvDash() && (r = [0, 2]), bdp.bdpPageStatus.isUnderDataScreen() && (r = [1]);
                        var o = {
                            categories: angular.toJson(r)
                        };
                        a.project.getTree(o).then(function (t) {
                            if (t) {
                                var a = angular.copy(t.proj);
                                b.setTreeCache(a), i(), e(a)
                            }
                        })
                    }
                },
                clearAllTextEditState: function (t) {
                    for (var a in e.textComponentEditMode) e.textComponentEditMode.hasOwnProperty(a) && (e.textComponentEditMode.hasOwnProperty(a) && e.textComponentEditMode[a] || (e.textComponentEditMode[a] = !1))
                },
                editTextComponent: function (t, a) {
                    var n = t.meta.ct_id;
                    e.dash.editChartMeta(t, a), angular.element(".gridster-item").map(function (e, t) {
                        angular.element(t).removeClass("selected")
                    }), e.textComponentEditMode[n] = !0, i(function () {
                        var t = $("#" + n);
                        e.dash.setTaToolbarPos(t), f.retrieveEditor(n).scope.displayElements.text.trigger("focus")
                    })
                },
                setTaToolbarPos: function (e) {
                    var t = angular.element("body").height(),
                        a = e[0].getBoundingClientRect();
                    t - a.bottom < 100 || t - a.bottom < 0 ? e.find(".ta-toolbar").removeClass("bottom").addClass("top") : e.find(".ta-toolbar").removeClass("top").addClass("bottom")
                },
                setOperatorIndex: function (t, a, i) {
                    a ? e.dashStandardItems.map(function (e) {
                        e.isTopIndex = !!t
                    }) : i.isTopIndex = !!t
                },
                editTextFromMore: function (t, a) {
                    e.makeDashEdit(!0), this.editTextComponent(t, a), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos")
                },
                saveTextComponent: function (t) {
                    var a = t.meta.ct_id;
                    e.textComponentEditMode[a] = !1, i(function () {
                        e.saveDashboard()
                    }, 0)
                },
                isBeyondOuterBorder: function (t, a) {
                    var i = angular.element("#" + t),
                        n = angular.element(".gridster");
                    if (!i || !n || !i.position()) return !0;
                    var r = e.dash.scaleDashbord && e.dash.scaleDashbord.curScaleVal,
                        o = n.width(),
                        s = n.height(),
                        l = i.position().left,
                        d = i.position().top,
                        c = i.width(),
                        p = i.height(),
                        u = !1;
                    return r && (o *= r, s *= r, c *= r, p *= r), l <= 0 && 37 == a && (e.currentSelectedItem.item.left = 0, u = !0), l > o - c && 39 == a && (e.currentSelectedItem.item.left = r ? (o - c) / r : o - c, u = !0), d <= 0 && 38 == a && (e.currentSelectedItem.item.top = 0, u = !0), d > s - p && 40 == a && (u = !0), u && e.$digest(), u
                },
                handleKeyBoardMoveEvent: function (t, a) {
                    if (!e.isAdvDashEdit) return !1;
                    var i = t.meta.ct_id;
                    if (["C101", "C105"].indexOf(t.meta.type) >= 0 && e.textComponentEditMode[i]) return !1;
                    $(document).off("keydown.change_item_pos").on("keydown.change_item_pos", bdp.utils.throttle(function (t) {
                        if (!bdp.bdpPageStatus.isUnderAdvDashEdit()) return !1;
                        var a = e.currentSelectedItem.child && e.currentSelectedItem.child.meta.ct_id;
                        if (e.lockItemPosMap[a]) return !1;
                        var i = t || window.event;
                        if (e.dash.isBeyondOuterBorder(a, i.keyCode) && 40 != i.keyCode) return e.dash.posChanged = !1, !1;
                        switch (i.keyCode) {
                            case 37:
                                e.currentSelectedItem.item.left -= 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 38:
                                e.currentSelectedItem.item.top -= 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 39:
                                e.currentSelectedItem.item.left += 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 40:
                                e.currentSelectedItem.item.top += 1, i.preventDefault(), i.stopPropagation()
                        }
                        e.dash.posChanged = !0, L(e.currentSelectedItem.item), e.$digest()
                    }, 0)), $(document).off("keydown.save_item_pos").on("keydown.save_item_pos", bdp.utils.debounce(function (t) {
                        if (!bdp.bdpPageStatus.isUnderAdvDashEdit()) return !1;
                        var a = e.currentSelectedItem.child && e.currentSelectedItem.child.meta.ct_id;
                        if (e.lockItemPosMap[a] || !e.dash.posChanged) return !1;
                        var i = t || window.event;
                        [37, 38, 39, 40].indexOf(i.keyCode) >= 0 && (e.dash.savePosByKeyboard(), 40 == i.keyCode && I("noDelay"))
                    }, 100))
                },
                editChartMetaVisible: {
                    text: !1,
                    style: !1,
                    video: !1,
                    img: !1,
                    numerical: !1,
                    pageEle: !1,
                    pageWrap: !0
                },
                clickGridsterItem: function (t, a) {
                    e.dash.editChartMeta(t, a), e.dash.handleKeyBoardMoveEvent(t, a)
                },
                editChartMeta: function (t, a) {
                    if (!H || e.dashLayoutInfo.id == t.dom_id) return !1;
                    var n = t.meta.ct_id;
                    e.dashLayoutInfo.id = t.dom_id, e.dashLayoutInfo.ct_id = n, e.dashLayoutInfo.chart_type = t.meta.type, e.dashLayoutInfo.show_navigator = t.meta.show_navigator, e.dash.clearAllTextEditState(n), e.dashLayoutInfo.dash_setting = t.meta.dash_setting || {
                            show_axis: !0,
                            show_datalabels: ["C230", "C271", "C272", "C330", "C360"].indexOf(t.meta.type) > -1,
                            show_legend: !0,
                            show_title: !0,
                            show_total: !0,
                            border_left: !1,
                            border_top: !1,
                            border_right: !1,
                            border_bottom: !1,
                            border_null: !0
                        }, e.dashLayoutInfo.hasTotal = t.meta.hasTotal, void 0 === e.dashLayoutInfo.dash_setting.show_navigator && e.dashLayoutInfo.show_navigator && (e.dashLayoutInfo.dash_setting.show_navigator = !0), e.currentSelectedItem = {
                        child: t,
                        item: a
                    }, n && e.dashLayoutInfo.chart_type && (this.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !0), i(function () {
                        e.$broadcast("editChartMeta", {
                            child: t,
                            item: a,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            need_reload: !0
                        })
                    }, 0)), $(document).off("click.edit_dashboard").on("click.edit_dashboard", function (t) {
                        var a = $(t.target);
                        a.parents(".gridster-item").length || a.parents(".J_chart_box").length || a.parents(".dash-edit-wrapper").length || a.parents(".J_side_panel").length || a.hasClass("J_side_panel") || a.hasClass("backToMainChart") || a.parents(".fht-table-wrapper").length || a.hasClass("J_no_fix_wrap") || a.hasClass("J_set_zindex") || a.parents(".J_set_zindex").length || e.dash.cancelEditState()
                    })
                },
                cancelEditState: function () {
                    e.dashLayoutInfo.chart_type && this.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !1), i(function () {
                        e.dash.clearAllTextEditState(), e.dashLayoutInfo.id = void 0, e.dashLayoutInfo.ct_id = "", e.dashLayoutInfo.chart_type = void 0
                    }, 0), e.$broadcast("screenDashboardInfo", {
                        pageWrapStyles: e.pageWrapStyles,
                        resolution: e.resolution
                    }), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos")
                },
                changeEditMetaVisible: function (t, a) {
                    e.dash.editChartMetaVisible = {
                        text: !!a && ["C101", "C105"].indexOf(t) >= 0,
                        style: !!a && ["C101", "C102", "C103", "C104", "C105"].indexOf(t) < 0,
                        video: !!a && ["C103"].indexOf(t) >= 0,
                        img: !!a && ["C102"].indexOf(t) >= 0,
                        numerical: !1,
                        pageEle: a,
                        pageWrap: !a
                    }
                },
                savePosByKeyboard: bdp.utils.debounce(function () {
                    e.$broadcast("editChartMeta", {
                        child: e.currentSelectedItem.child,
                        item: e.currentSelectedItem.item,
                        is_cancel: !1,
                        lock_status: e.lockItemPosMap
                    }), e.saveDashboard()
                }, 100),
                saveChartStyle: function (t) {
                    var a = t.style,
                        i = t.ct_id,
                        n = t.drill_level;
                    e.dashStandardItems.some(function (e) {
                        var t = e.children[0].meta,
                            r = !1;
                        if (i == e.children[0].meta.ct_id && (t.style = a, t.drill_level = n, r = !0), r) return r
                    }), e.saveDashboard()
                },
                modify: function (t) {
                    e.saveDashboard().then(function (a) {
                        if ("datalabels" === t) {
                            var i = angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart .chart").data("chart-data");
                            i && i.info && (i.info.show_datalabels = e.dashLayoutInfo.dash_setting.show_datalabels, i.renderChart())
                        } else "legend" === t || "axis" === t || "total" === t || "navigator" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0, !0) : "title" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0) : "show_block" !== t && "fixed_width" !== t || (O(), angular.element(".item-chart").each(function () {
                            reflowChart(angular.element(this), !0)
                        }))
                    })
                },
                scaleDashbord: {
                    selectedData: 1,
                    selectedScaleVal: "none",
                    curScaleVal: 0,
                    setScreenScale: function () {
                        var t = e.dash.scaleDashbord,
                            a = $(".J_data_screen_hook"),
                            i = "none",
                            n = 0,
                            r = 0;
                        if (2 == t.selectedData) {
                            var o = $(".dash-wrapper"),
                                s = o.width(),
                                l = o.height(),
                                d = e.resolution.width,
                                c = bdp.bdpPageStatus.isUnderAdvDash() ? parseInt(o[0].scrollHeight) : e.resolution.height;
                            borderWidth = parseInt(e.pageWrapStyles.width), borderWidth && (d += 2 * borderWidth, c += 2 * borderWidth);
                            var p = s / d,
                                u = l / c,
                                h = Math.min(p, u),
                                f = Math.min(1, h);
                            f < 1 && (i = "scale(" + h + ")", h == p ? n = (l - c * h) / 2 : r = (s - d * h) / 2, n += o.scrollTop())
                        }
                        t.selectedScaleVal = i, t.curScaleVal = f, setTimeout(function () {
                            I(), a.css({
                                top: n,
                                left: r
                            })
                        }, 0)
                    },
                    modifyScale: function () {
                        e.dash.scaleDashbord.setScreenScale(), e.saveDashboard()
                    }
                }
            },
            u([
                "dash.delChartFail",
                "dash.plzSelectTable",
                "dash.selectTbTitle",
                "dash.emptyFolderList",
                "dash.titleRequired",
                "dash.titleDuplicate",
                "dash.delChartLinkSuccess",
                "chart.untitledChart",
                "saveSuccess",
                "chart.chainChart",
                "chart.chainField",
                "dash.dashCartJump.errSameTip",
                "dash.dashCartJump.successDelTip",
                "dash.dashCartJump.selectDashPrefix",
                "dash.dashCartJump.selectDashPrefix",
                "dash.dashCartJump.selectFolder",
                "dash.dashCartJump.selectDashboard",
                "dash.dashCartJump.selectFilter",
                "dash.dashCartJump.globalFilter",
                "dash.dashCartJump.openType",
                "dash.dashCartJump.thisWin",
                "dash.dashCartJump.newWin",
                "dash.dashCartJump.errEmptyTip",
                "chart.copyChartSuccess",
                "chart.confirmDelChart",
                "template.selectDash",
                "chart.selectOtherPlace",
                "chart.checkToContinueMove",
                "chart.moveChartSuccess",
                "chart.moveChartFail",
                "dash.advDash.selectElementToSetLayer",
                "dash.advDash.copySuccess",
                "dash.advDash.pleaseSelectDashboard",
                "dash.advDash.targetPositionIsSame"], e)
    }
    angular.module("BC.controllers.dashboard")
        .controller("advDashboardCtrl", e),
        e.$inject = [
            "$scope",
            "$rootScope",
            "commonService",
            "$timeout",
            "$interval",
            "$location",
            "ngDialog",
            "$stateParams",
            "commonHttp",
            "errHint",
            "operatorHelpLink",
            "$http",
            "$jsTipTranslate",
            "autoRefreshChart",
            "textAngularManager",
            "dashChartLink",
            "dashChartJump",
            "$q",
            "screenElePadding",
            "projectTreeCache",
            "$translate"]
}();
function () {
    function e(e, t, a, i, n, r, o, s, l, d, c, p, u, h, f, g, m, _, v, b) {
        function y(t, i) {
            function n(e) {
                return $.isEmptyObject(e) || "C400" === e.chart_type && $.isEmptyObject(e.layers) || e.level && !e.level[0].chart_type
            }
            1 == i.meta.property || i.meta.ct_id.indexOf("text_") > -1 || (e.dash.isDeletingItem = !0, a.chart.getInfo({
                ct_id: i.meta.ct_id,
                ws_id: e.wsId
            }).success(function (r) {
                "0" == r.status ? n(r.result.meta) ? (e.chartdel["chart" + i.meta.ct_id] = !0, e.dashStandardItems.splice(t, 1), a.chart.del({
                    ct_id: i.meta.ct_id,
                    ws_id: e.wsId,
                    dsh_meta: {
                        charts: F(e.dashStandardItems, !0)
                    }
                }).success(function (t) {
                    e.dash.isDeletingItem = !1, 0 == t.status || d(e.tips["dash.delChartFail"])
                })) : e.dash.isDeletingItem = !1 : (e.dash.isDeletingItem = !1, d(Number(r.status)))
            }))
        }

        function w(i) {
            e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.global.globalDashFilter = [], a.dash_global_filter.item({
                dash_id: i,
                rule_id: t.global.rule_id || ""
            }).then(function (t) {
                if ("0" == t.status) {
                    if (e.selected.dsh_id !== i) return;
                    t.result.length > 0 ? angular.element(".J-dash-edit-content-view").addClass("J-content-filter-view") : angular.element(".J-dash-edit-content-view").removeClass("J-content-filter-view"), e.global.originalGlobalFilter = angular.copy(t.result);
                    var a = bdp.utils.handleGlobalFilterLevel(t.result),
                        n = s.df_id,
                        r = s.range;
                    angular.forEach(a, function (e) {
                        if (n == e.df_id ? C(r, e) : x(e), "date" == e.data_type && "" == e.config.granularity) {
                            var t = e.config.range || "";
                            if (t) {
                                var a = !1;
                                angular.forEach(e.adv_date_list, function (e) {
                                    e.opt_id == t && (a = !0)
                                }), a || (e.config.range = "", e.config.default_select = !1, e.range = [])
                            }
                        }
                    }), e.global.globalDashFilter = a, e.global.globalDashFilter.length ? $(".gridster").removeClass("gridster-nofilters") : $(".gridster").addClass("gridster-nofilters")
                } else d(Number(t.status))
            })
        }

        function C(t, a) {
            if ("date" == a.data_type && "" == a.config.granularity)
                for (var i = 0, n = a.adv_date_list.length; i < n; i++) {
                    var r = a.adv_date_list[i];
                    r.name == t ? a.range[0] = r.opt_id : a.range[0] = t
                } else a.range[0] = t;
            e.hitJumpGlobalFilter = !0
        }

        function x(a) {
            var i = angular.fromJson(window.localStorage.getItem("global_filter_memory")) || [],
                n = !1,
                r = t.wsId || "";
            angular.forEach(i, function (t) {
                t.ws_id == r && a.data_type == t.data_type && a.name == t.name && a.config && a.config.hasOwnProperty("granularity") && a.config.granularity == t.granularity && ("date" == a.data_type && "" == a.config.granularity ? angular.forEach(a.adv_date_list, function (e) {
                    e.opt_id == t.range[0] && (a.range = t.range, n = !0)
                }) : (a.range = t.range, a.range_type = t.range_type), e.hitMemoryGlobalFilter = !0, e.hitGlobalFilterId.push(a.df_id))
            })
        }

        function k() {
            e.dashLayoutInfo.dashMode = "dataScreen", e.dashLayoutInfo.dashWrapperStyle = {}, 2 == e.dash.scaleDashbord.selectedData && (e.dashLayoutInfo.dashWrapperStyle = {
                overflow: "hidden"
            }), e.dashLayoutInfo.gridsterStyle = {
                width: e.resolution.width + "px",
                "min-width": e.resolution.width + "px",
                height: e.resolution.height + "px",
                "min-height": e.resolution.height + "px",
                transform: e.dash.scaleDashbord.selectedScaleVal,
                "transform-origin": "0 0",
                "background-color": e.pageWrapStyles.bgColor,
                "border-color": e.pageWrapStyles.lineColor,
                "border-style": e.pageWrapStyles.style,
                "border-width": e.pageWrapStyles.width,
                "background-size": e.pageWrapStyles["background-size"],
                "background-image": e.pageWrapStyles["background-image"],
                "background-repeat": e.pageWrapStyles["background-repeat"],
                "background-position": e.pageWrapStyles["background-position"]
            }, i(function () {
                bdp.bdpDash.setDashItemPadding(e.dashStandardItems, _, reflowChart, null)
            }, 100)
        }

        function D(e) {
            return localforage.getItem("CACHE_DASH_ID").then(function (t) {
                t != e.dsh_id && localforage.setItem("CACHE_DASH_ID", e.dsh_id)
            }), localforage.getItem("CACHE_DASH_DATA")
        }

        function S(a, n) {
            t.dashLoading = !1;
            var o = n.result;
            if (!isObjectEmpty(o)) {
                e.resolution = o.resolution, t.dashProperty = B ? 0 : 1, t.dashCategory = o.category, e.outer_share_info = o.outer_share_info, e.gis_flag = o.gis_flag, e.isTpl = o.is_template || 0, e.dashTbId = e.isTpl && o && o.tb_ids ? o.tb_ids[0] : "", e.dashLayoutInfo.show_block = !defined(o.meta.show_block) || o.meta.show_block, e.dashLayoutInfo.fixed_width = !!defined(o.meta.fixed_width) && o.meta.fixed_width, e.dashLayoutInfo.layout_style = 2, o.meta.styles && !$.isEmptyObject(JSON.parse(o.meta.styles)) && (e.pageWrapStyles = JSON.parse(o.meta.styles)), e.$broadcast("screenDashboardInfo", {
                    pageWrapStyles: e.pageWrapStyles,
                    resolution: e.resolution
                }), e.dash.scaleDashbord.selectedData = defined(o.meta.scale_flag) ? o.meta.scale_flag : 1, B && 1 != e.dash.scaleDashbord.selectedData && e.dash.scaleDashbord.setScreenScale(), (t.proj_share || t.global.rule_id) && (t.dashEditMode = !1), I(e.dashLayoutInfo.show_block, e.dashLayoutInfo.layout_style), e.dashTitle = o.name, e.dashLabel = o.label || "", e.dashComment = o.comment || "", e.property = o.property;
                var s = o.meta.charts || [];
                e.minZIndex = s.minZIndex || j, e.maxZIndex = s.maxZIndex || j, e.dash.calcCurIndex(s), e.dashStandardItems = s || [], e.dashStandardItems.sort(function (e, t) {
                    return e.row == t.row ? e.col - t.col : e.row < t.row ? -1 : 1
                }), e.dashInit.load = !1, e.draw_chart_url = {};
                var l, d;
                e.chartdel = {};
                for (var c = 0; c < e.dashStandardItems.length; c++) {
                    var p = e.dashStandardItems[c];
                    p.children[0].meta.filter_list = [], p.zIndex = p.zIndex || j
                }
                if (t.creatingChart) return t.creatingChart = !1, T(e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type), delete t.creatingChartInfo, e.saveDashboard().then(function () {
                    r.path().indexOf(e.currDash.dashSelected) >= 0 && e.getDashboardInfo(e.currDash.dashSelected)
                }), !1;
                t.isGlobalCustom = {}, e.isFullscreenMode ? e.chartTheme = 1 === e.fullDisplayTheme ? "dark" : "default" : e.chartTheme = 1 === t.usedThemeId ? "dark" : "default", window.dashChartsUpdateMap = {};
                for (var u = 0; u < s.length; u++) {
                    l = s[u];
                    for (var h = 0; h < l.children.length; h++)
                        if (d = l.children[h], d.meta.filter_list = [], d.meta.type) {
                            window.dashChartsUpdateMap[d.meta.ct_id] = d.meta.tb_update_time + d.meta.update_time;
                            t.isGlobalCustom[d.meta.ct_id] = !1, e.global.rule_id && "&rule_id=" + e.global.rule_id, e.draw_chart_url[d.dom_id] = {
                                options: {
                                    theme: e.chartTheme,
                                    device: e.isFullscreenMode ? e.fullDisplayDevice : "pc",
                                    ws_id: t.wsId,
                                    dsh_id: a,
                                    ct_id: d.meta.ct_id,
                                    tb_id: d.meta.tb_id,
                                    rule_id: t.global.rule_id,
                                    read_cache: !0,
                                    optional: {
                                        linked_chart_type: d.meta.chart_link.linked_chart_type,
                                        link_info: d.meta.chart_link.link_info,
                                        chart_jump_info: d.meta.chart_jump
                                    }
                                },
                                lazyload: !0
                            }
                        } else !e.global.rule_id && y(u, d)
                }
                if (e.global.dashboardLoaded = !0, e.isGettingDashInfo = !1, e.isFullscreenMode && !e.$$phase && e.$digest(), 2 == e.dashLayoutInfo.layout_style && $(".dash-wrapper") && $(".dash-wrapper").length > 0) {
                    var f = $(".dash-wrapper")[0].scrollHeight;
                    $(".gridster").height(f)
                }
                D(o).then(function (a) {
                    window.dashChartsCache && !window.dashChartsCache[o.dsh_id] ? (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = null) : (window.dashChartsCache = {}, window.dashChartsCache[o.dsh_id] = a || null);
                    for (var n = 0; n < s.length; n++) {
                        l = s[n].children;
                        for (var r = 0; r < l.length; r++) {
                            d = l[r];
                            var c = e.draw_chart_url[d.dom_id];
                            void 0 !== c && (c.lazyload = n > 2)
                        }
                    }
                    i(function () {
                        if (e.lazy = new bdpChart.LazyLoad(".gridster", ".gridster-item", {
                                diff: 50,
                                handleResize: !0,
                                onItemLoad: function (t) {
                                    var a = $(t).find(".item-chart").attr("id");
                                    e.draw_chart_url[a] && (e.draw_chart_url[a].lazyload = !1)
                                },
                                onItemsLoad: function () {
                                    e.$$phase || e.$digest()
                                }
                            }), e.$on("$destroy", function () {
                                e.lazy.destroy()
                            }), 2 != e.dash.scaleDashbord.selectedData) {
                            var a = bdp.store.get("chart_editId");
                            e.search_ct_id ? setTimeout(function () {
                                e.scrollToChart(e.search_ct_id)
                            }, 10) : a && (setTimeout(function () {
                                e.$broadcast("scrollToChart", a)
                            }, 10), bdp.store.set("chart_editId", "")), setTimeout(function () {
                                t.wtbRelationSelectedItem && (e.scrollToChart(t.wtbRelationSelectedItem.ct_id), t.wtbRelationSelectedItem = null)
                            }, 0), setTimeout(function () {
                                t.warnListSelectedItem && (e.scrollToChart(t.warnListSelectedItem.ct_id), t.warnListSelectedItem = null)
                            }, 0)
                        }
                    })
                }), k(), B ? e.makeDashEdit(!0) : e.makeDashEdit(!1)
            }
        }

        function T(a) {
            var i = e.dashStandardItems,
                n = i[i.length - 1];
            switch (a) {
                case "C310":
                    n.sizeX = 3, n.sizeY = 2;
                    break;
                case "C230":
                case "C261":
                case "C290":
                    n.sizeX = 4, n.sizeY = 4;
                    break;
                case "C271":
                case "C272":
                case "C330":
                case "C340":
                case "C360":
                case "C370":
                    n.sizeX = 6, n.sizeY = 6;
                    break;
                case "C400":
                    n.sizeX = 12, n.sizeY = 7;
                    break;
                case "C350":
                case "C351":
                case "C352":
                    n.sizeX = 6, n.sizeY = 4
            }
            t.creatingChartInfo && t.creatingChartInfo.split_compare && (n.sizeX = 12, n.sizeY = 6);
            for (var r, o = i.length, s = 0, l = 0, d = 0; d < o - 1; d++) r = i[d], r.row + r.sizeY > s && (r.col + r.sizeX > 12 - n.sizeX ? (s = Math.max(s, r.row + r.sizeY), l = 0) : (s = Math.max(s, r.row), l = Math.max(l, r.col + r.sizeX)));
            n.row = s, n.col = l
        }

        function I(a, n) {
            var r = bdpChart.helper.isMobile(),
                o = t.isThirdIframe;
            r && o && function () {
                t.mobileMode = !0;
                var e = null;
                $(".gridster").on("click", ".J_chart_box", function (t) {
                    var a = $(this).find(".item-chart").get(0);
                    if (a == e) return !1;
                    $(a).addClass("reactive").removeClass("noscroll"), e && $(e).removeClass("reactive"), e = a
                }), $(document).on("touchmove", ".item-chart.reactive", function (e) {
                    return $(this).find(".chart-table").length > 0
                }), $(document).on("scroll", function (t) {
                    e && ($(e).removeClass("reactive"), e = null)
                })
            }(), e.gridsterOpts = {
                layoutStyle: n,
                margins: a ? r && o ? [8, 0] : [8, 8] : [0, 0],
                outerMargin: !1,
                minColumns: 1,
                minRows: 1,
                columns: 24,
                isMobile: !(!r || !o),
                insideContainer: !0,
                resizable: {
                    enabled: !t.proj_share && t.permision.dashOperate && t.dashEditMode,
                    handles: "se",
                    start: function (t, a, i) {
                        e._draggingElemBox = {
                            width: a.width(),
                            height: a.height()
                        };
                        var n = a.attr("id"),
                            r = e.dashStandardItems.length;
                        if (e.dashLayoutInfo.ct_id != n)
                            for (var o = 0; o < r; o++)
                                if (e.dashStandardItems[o].children[0].meta.ct_id === n) {
                                    e.dash.editChartMeta(e.dashStandardItems[o].children[0], e.dashStandardItems[o]);
                                    break
                                }
                    },
                    resize: function (t, a, i) {
                        var n = a.find(".chart").data("chart-data"),
                            r = a.attr("data-chart-type");
                        ["C101", "C102", "C103", "C104", "C105"].indexOf(r) < 0 && (!n || n.isSplitChart()) || (1 == e.dashLayoutInfo.layout_style ? reflowChart(a) : 2 == e.dashLayoutInfo.layout_style && bdp.utils.throttle(function () {
                            reflowChart(a)
                        }, 17)(), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id))
                    },
                    stop: function (t, a, n) {
                        i(function () {
                            var t = a.find(".chart").data("chart-data");
                            if (t) {
                                var i = e._draggingElemBox.width / e._draggingElemBox.height,
                                    n = a.width() / a.height(),
                                    r = i < 1 && n >= 1 || i >= 1 && n < 1,
                                    o = t.getChartType(),
                                    s = r || t.isSplitChart() || o === bdpChart.ChartType.Line && "dark" === t.theme || o === bdpChart.ChartType.TreeMap;
                                reflowChart(a, !0, s), "C310" == a.context.dataset.chartType && bdp.utils.updateChartFontSize(a.context.id)
                            }
                        }, 0), k(), 1 == e.dashLayoutInfo.layout_style ? e.saveDashboard() : 2 == e.dashLayoutInfo.layout_style && (i(function () {
                            L(a)
                        }, 0), G.save()), e.$emit("emitItemSizePos", "resizable")
                    }
                },
                draggable: {
                    enabled: !(t.dashEditMode && r && o || N) && (!t.proj_share && t.permision.dashOperate),
                    handle: ".J_chart_box",
                    stop: function (t, a, i) {
                        k(), e.lazy && e.lazy.fireLoad(), 1 == e.dashLayoutInfo.layout_style ? e.saveDashboard() : 2 == e.dashLayoutInfo.layout_style && G.save(), e.$emit("emitItemSizePos", "draggable")
                    }
                }
            }
        }

        function L(t) {
            var a = t.data("chart-type"),
                i = t.data("chart-id");
            ["C101", "C102", "C103", "C104", "C105", "C400", "C500"].indexOf(a) >= 0 && e.dashStandardItems.forEach(function (t, a) {
                t.children[0].meta.ct_id === i && e.$broadcast("editChartMeta", {
                    child: t.children[0],
                    item: t,
                    is_cancel: !1,
                    lock_status: e.lockItemPosMap,
                    need_reload: !1
                })
            })
        }

        function A() {
            var t = e.dashLayoutInfo.show_block;
            e.gridsterOpts.margins = t ? [8, 8] : [0, 0]
        }

        function E(t) {
            for (var a, i, n = $.inArray(t, ["C101", "C102", "C103", "C105"]) > -1, r = e.dashStandardItems || [], o = r.length, s = 0, l = 0, d = 0, c = 0; c < o; c++) {
                var p = r[c];
                p.row + p.sizeY > l && (p.col + p.sizeX > 6 ? (l = p.row + p.sizeY, d = 0) : (l = p.row, d = p.col + p.sizeX));
                for (var u = 0; u < p.children.length; u++) a = p.children[u], i = parseInt(a.dom_id.substr(2)), s = i > s ? i : s
            }
            s++;
            var h = {
                sizeX: 6,
                sizeY: 4,
                row: l,
                col: d,
                children: [{
                    dom_id: "id" + s,
                    meta: {
                        name: e.tips["chart.untitledChart"],
                        ct_id: "init_ctid",
                        is_special_chart: n
                    }
                }]
            };
            if ("C101" === t && (h.sizeX = 3, h.sizeY = 2), "C104" === t && (h.borderType = "t1"), "C105" === t && (h.children[0].meta.style = {
                    "font-size": "14px",
                    "text-align": "center"
                }, h.borderType = "t2", h.width = 188, h.height = 44), $.inArray(t, ["C101", "C102", "C103", "C104", "C105"]) > -1 && (h.zIndex = e.maxZIndex + 1), e.dashLayoutInfo && 2 == e.dashLayoutInfo.layout_style) {
                G.setFreeLayout();
                var f = G.getBlankPos();
                h.width = h.width || 480, h.height = h.height || 336, h.left = f.left, h.top = f.top
            }
            e.dashStandardItems || (e.dashStandardItems = []), e.dashStandardItems.push(h)
        }

        function F(e, t) {
            var a = angular.copy(e);
            return angular.forEach(a, function (e) {
                e.children[0].meta = {
                    ct_id: e.children[0].meta.ct_id,
                    dash_setting: e.children[0].meta.dash_setting,
                    html: e.children[0].meta.html || "",
                    style: e.children[0].meta.style || {}
                }, t || delete e.children[0].meta.dash_setting, e.children[0].meta.style && !$.isEmptyObject(e.children[0].meta.style) || delete e.children[0].meta.style
            }), a
        }

        function M(t, a) {
            var i = e.dashLayoutInfo.dash_setting;
            return i.style = {}, t.some(function (e) {
                var t = e.children[0].meta,
                    n = !1;
                if (a == t.ct_id && (i.style = t.style, i.drill_level = t.drill_level, n = !0), n) return n
            }), i
        }
        var j = 3e3,
            O = r.path(),
            P = O.indexOf("data_screen/") > -1,
            N = O.indexOf("data_screen/") > -1 && O.indexOf("data_screen_edit/") < 0,
            B = O.indexOf("data_screen_edit/") > -1;
        if (e.isDataScreen = P, e.isDataScreenEdit = B, e.isDataScreenReadonly = N, t.permision.isDataScreen = !0, t.dashEditMode = !!B, e.mouseleaveItem = function () {
                e.$broadcast("fire-mouseleave-item-event", !0)
            }, e.chartOptions = {}, t.mainChartContainer = [], t.mainChartIdContainer = [], t.mainChartColorContainer = {}, t.view = P ? "data_screen" : "data_screen_edit", t.show_bdp_header = !!P, e.global.dashboardLoaded = !1, e.lockItemPosMap = {}, e.currentSelectedItem = {}, e.showDataScreenGrid = !!B, s.projId) {
            localStorage ? e.fullDisplayTheme = +localStorage.getItem("fullDisplayTheme") || t.usedThemeId : e.fullDisplayTheme = +$.cookie("fullDisplayTheme") || t.usedThemeId, localStorage ? e.fullDisplayDevice = localStorage.getItem("fullDisplayDevice") || "pc" : e.fullDisplayDevice = $.cookie("fullDisplayDevice") || "pc", s.ruleId ? e.global.rule_id = s.ruleId : O.indexOf("ru_") >= 0 && (e.global.rule_id = O.substring(O.indexOf("ru_"))), i(function () {
                e.pageContent = {
                    addChart: b.instant("dash.advDash.addChart"),
                    addTitle: b.instant("dash.advDash.addTitle"),
                    addText: b.instant("dash.advDash.addText"),
                    addImage: b.instant("dash.advDash.addImage"),
                    addVideo: b.instant("dash.advDash.addVideo"),
                    addBorder: b.instant("dash.advDash.addBorder"),
                    top: b.instant("dash.advDash.top"),
                    bottom: b.instant("dash.advDash.bottom")
                }
            }, 1e3), e.AllMap = ["全部", "全部时间", "All"], e.$on("jumpToSearch", function (t, a) {
                e.search_ct_id = a
            });
            e.$on("_websocketChartMessage_", function (t, a) {
                1 == ("string" == typeof a.data ? $.parseJSON(a.data) : a.data).type && h.refresh({
                    drawChartUrl: e.draw_chart_url,
                    type: "dashboard",
                    evt: t,
                    scope: e,
                    ret: a
                })
            }), e.$on("scrollToChart", function (t, a) {
                setTimeout(function () {
                    e.scrollToChart(a)
                }, 0)
            }), t.$editable = !0, e.currDash = {
                activeProjId: s.projId,
                dashSelected: s.dashId
            }, e.activeProjId = s.projId, e.dashSelected = s.dashId, e.dashInit = {}, e.dashInit.load = !0, s.ruleId ? e.global.rule_id = s.ruleId : O.indexOf("ru_") >= 0 && (e.global.rule_id = O.substring(O.indexOf("ru_"))), e.selected = {
                proj_id: s.projId,
                dsh_id: s.dashId,
                rule_id: e.global.rule_id,
                ws_id: t.wsId
            }, e.scrollToChart = function (e, t) {
                t = t || $(".gridster-desktop");
                var a = t.closest(".dash-wrapper");
                t.find(".gridster-item").each(function (t, i) {
                    var n = $(i);
                    if (e == n.data("chart-id")) {
                        var r = a.height(),
                            o = a.width(),
                            s = n[0].offsetTop,
                            l = n[0].offsetLeft,
                            d = scrollLeftFlag = !1;
                        s + n.height() > r && (d = !0, a.animate({
                            scrollTop: s - 15
                        }, function () {
                            n.addClass("highlight-chart")
                        })), l > o && (scrollLeftFlag = !0, a.animate({
                            scrollLeft: l
                        }, function () {
                            d || n.addClass("highlight-chart")
                        })), d || scrollLeftFlag || n.addClass("highlight-chart"), $(document).on("click.cancelHighlight", function () {
                            n.removeClass("highlight-chart"), $(this).off("click.cancelHighlight")
                        })
                    }
                })
            }, localStorage.setItem("mc_location_path", r.path()), e.getGlobalFilterItem = w, e.dashLayoutInfo = {}, e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.$on("useMemoryGlobalFilter", function (t, a) {
                if (a) {
                    var i = [];
                    angular.forEach(e.global.globalDashFilter, function (t, a) {
                        i.push({
                            df_id: t.df_id,
                            range: t.range,
                            data_type: t.data_type,
                            granularity: t.config.granularity || "",
                            range_type: t.range_type || "1"
                        }), e.hitGlobalFilterId.indexOf(t.df_id) > -1 && (e.global.globalDashFilterItems[t.df_id] = {
                            granularity: t.config.granularity || "",
                            df_id: t.df_id,
                            range: t.range,
                            data_type: t.data_type,
                            show_name: t.range,
                            real_name: t.range,
                            rela_charts: t.rela_ct_ids
                        })
                    }), angular.forEach(e.draw_chart_url, function (t, a) {
                        t.global_filter_value = [], angular.forEach(e.global.globalDashFilter, function (e, a) {
                            e.rela_ct_ids.indexOf(t.options.ct_id) > -1 && (t.options.optional.dsh_filter = i, delete t.options.optional.filter_list, t.options.read_cache = !1, t.options.optional._t = new Date)
                        })
                    })
                }
            }), e.dashboardAutoplay = !1;
            var z = null;
            e.toggleDashboardAutoplay = function () {
                e.dashboardAutoplay = !e.dashboardAutoplay;
                var t = e.dashboardAutoplay ? "Play" : "Pause";
                e.dashboardAutoplay && (clearTimeout(z), z = setTimeout(function () {
                    e.dashboardAutoplay && $("#dash-slider").slick("slickNext")
                }, 1e3)), $("#dash-slider").slick("slick" + t)
            };
            var R = function () {
                    $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").addClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").addClass("cursor-none")
                },
                q = function () {
                    $(".dash-fullscreen-wrap .page-nav, .dash-fullscreen-wrap .view-header .btn-layer").removeClass("invisible"), $(".dash-fullscreen-wrap, .dash-fullscreen-wrap .gridster-item, .dash-fullscreen-wrap .gridster-item .item-chart").removeClass("cursor-none")
                };
            if (e.isFullscreenMode) {
                var H = setTimeout(R, 5e3);
                $(".dash-fullscreen-wrap").on("mousemove", function () {
                    null !== H && (window.clearTimeout(H), H = null, q(), setTimeout(function () {
                        H = setTimeout(R, 3e3)
                    }, 200))
                })
            }
            e.getDashboardInfo = function (i) {
                if (e.lazy && e.lazy.destroy(), i ? w(i) : e.global.globalDashFilter = [], t.dashLoading = !0, "" == i || void 0 === i) return t.dashLoading = !1, !1;
                var n = {};
                return n.dsh_id = i, t.global.rule_id && (n.rule_id = t.global.rule_id), e.isGettingDashInfo = !0, a.dashboard.getInfo(n).then(function (a) {
                    if (0 == a.status)
                        if (!t.projectLoaded && P) var n = setInterval(function () {
                            t.projectLoaded && (S(i, a), clearInterval(n))
                        }, 200);
                        else S(i, a);
                    else {
                        if (t.dashLoading = !1, e.isGettingDashInfo = !1, 3 == a.status) return t.wsId ? r.path("/dash_edit_ws/" + t.wsId) : r.path("/dash_edit/"), void location.reload();
                        d(a.status)
                    }
                })
            }, e.getDashboardInfo(e.currDash.dashSelected), e.$on("fire-refresh-dashboard", function () {
                "data_screen" == t.view && e.getDashboardInfo(e.currDash.dashSelected)
            }), e.clearOuterShareInfo = function () {
                e.outer_share_info = {}
            }, e.showThirdIframeDshList = function () {
                $(".dash-sidebar").addClass("show-list"), $(".dashboard-item").off("click.showThirdIframeDshList").on("click.showThirdIframeDshList", function (e) {
                    $(".dash-sidebar").removeClass("show-list")
                })
            }, e.btn_layer = {}, $("body").on("dashboard-scroll-start.dashOperate", function () {
                var a = e.btn_layer;
                a.show_more_btn = !1, a.show_presentation_mode = !1, a.showDownloadSheet = !1, a.outerShareFuncs = !1, t.permision.personal_help_video = !1, $(".J_dashboard_presentation").addClass("ng-hide"), $(".J_dashboard_more_btn").addClass("ng-hide"), $(".J_dashboard_share_layer").addClass("ng-hide"), $(".J-help-video").addClass("ng-hide")
            }), $(document).off("click.table").on("click.table", function (e) {
                $(document).trigger("clickTable", {
                    e: e
                })
            }), e.$on("$destroy", function () {
                $("body").off("dashboard-scroll-start.dashOperate"), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos")
            }), e.filterMergedTable = function (e) {
                return "excel" !== e.type && "aggr" !== e.type
            }, e.addItem = function (a) {
                if (!e.loadingStatus || !e.loadingStatus.isAdding) {
                    e.loadingStatus = {
                        isAdding: !0,
                        loadingFolders: !0
                    };
                    o.open({
                        template: "/static/partials/dialogTemplates/chart-select-table.html",
                        className: "ngdialog-theme-default choose-table J-chart-select-table" + (t.permision.canUseCustomChart ? "" : " no-custom-chart"),
                        data: {
                            getClearSaveMeta: F,
                            addGridItem: E,
                            currDash: {
                                activeProjId: s.projId,
                                dashSelected: s.dashId
                            },
                            dashStandardItems: e.dashStandardItems
                        },
                        scope: e,
                        controller: "chartAddCtrl"
                    })
                }
            }, e.saveDashboard = function () {
                if (!e.dashTitle) return void d(e.tips["dash.titleRequired"]);
                var t = {};
                e.dashLayoutInfo.ct_id && (t[e.dashLayoutInfo.ct_id] = M(e.dashStandardItems, e.dashLayoutInfo.ct_id));
                var i = {
                    layout_style: e.dashLayoutInfo.layout_style || 1,
                    show_block: e.dashLayoutInfo.show_block,
                    fixed_width: e.dashLayoutInfo.fixed_width || !1,
                    charts: F(e.dashStandardItems, !0),
                    scale_flag: e.dash.scaleDashbord.selectedData
                };
                e.pageWrapStyles && (i.styles = JSON.stringify(e.pageWrapStyles));
                var n = {
                    ws_id: e.wsId,
                    dsh_id: e.currDash.dashSelected,
                    chart_data: angular.toJson(t),
                    data: angular.toJson({
                        name: e.dashTitle,
                        label: e.dashLabel,
                        comment: e.dashComment,
                        resolution: e.resolution,
                        meta: i
                    })
                };
                return a.dashboard.modify(n).then(function (t) {
                    0 != +t.status ? (3204 == +t.status && d(e.tips["dash.titleDuplicate"]), d(Number(t.status))) : r.path().indexOf(e.currDash.dashSelected) >= 0 && w(e.currDash.dashSelected)
                })
            }, e.$watch(function () {
                return t.proj_share || !t.permision.dashOperate
            }, function (a) {
                e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !a && t.dashEditMode, e.gridsterOpts.draggable.enabled = !a && t.dashEditMode)
            }), e.$watch("dashProperty", function (t) {
                1 == t && e.gridsterOpts && (e.gridsterOpts.resizable.enabled = !1, e.gridsterOpts.draggable.enabled = !1)
            }), e.$on("datascreenPageEle", function (t, a) {
                var n = a.eleStyle || {},
                    r = a.opt || {},
                    o = null;
                e.dashStandardItems.some(function (t) {
                    var a = t.children[0],
                        s = a.meta;
                    return s.ct_id == e.dashLayoutInfo.ct_id && (o = s, i(function () {
                            $.extend(!0, t, n), s.drill_level = r.drill_level, r.save && e.saveDashboard().then(function () {
                                k(), bdp.bdpDash.setDashItemPadding(e.dashStandardItems, _, reflowChart, {
                                    meta: o,
                                    style: n
                                })
                            })
                        }), !0)
                })
            }), e.pageWrapStyles = e.pageWrapStyles || {}, e.$on("datascreenPageWrap", function (t, a) {
                var n = a.pageStyle;
                i(function () {
                    e.pageWrapStyles = $.extend(e.pageWrapStyles, {
                        bgColor: n.bgColor + " !important",
                        lineColor: n.lineColor,
                        style: n.style,
                        width: n.width
                    }),
                    "url(undefined)" == e.pageWrapStyles["background-image"] && (e.pageWrapStyles["background-image"] = "url()"), e.dash.scaleDashbord.setScreenScale(), k(), e.saveDashboard()
                })
            }), e.$on("datascreenResolution", function (t, a) {
                e.resolution = a.resolution, e.dash.scaleDashbord.modifyScale()
            }), e.$on("datascreenEleLockPos", function (t, a) {
                a && e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == a.ct_id && (e.lockItemPosMap[a.ct_id] = a.lock)
                })
            }), e.$on("showPageImage", function (t, a) {
                var n = a.pageImageSrc;
                i(function () {
                    e.pageWrapStyles = $.extend(e.pageWrapStyles, {
                        "background-size": "cover",
                        "background-image": "url(" + n + ")",
                        "background-repeat": "no-repeat",
                        "background-position": "center"
                    }), n || (e.pageWrapStyles["background-image"] = "url()"), e.dash.scaleDashbord.setScreenScale(), e.saveDashboard()
                })
            }), e.$on("chartScreenImg", function (t, a) {
                var n = a.screenImg || {};
                e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == e.dashLayoutInfo.ct_id && i(function () {
                        t.url = n.url, e.saveDashboard()
                    })
                })
            }), e.$on("chartScreenVideo", function (t, a) {
                var n = a.screenVideo || {};
                e.dashStandardItems.forEach(function (t) {
                    t.children[0].meta.ct_id == e.dashLayoutInfo.ct_id && i(function () {
                        t.src = n.src, t.autoplay = n.autoplay, t.loop = n.loop, e.saveDashboard()
                    })
                })
            }), e.$on("changeDashSetting", function (t, a) {
                e.dash.modify(a.type)
            }), e.$on("emitChartStyle", function (a, n) {
                if (n) {
                    var r = n.chart,
                        o = r.ct_id;
                    o != t.editChartId && o != e.dashLayoutInfo.ct_id || (delete t.editChartId, e.dashStandardItems.forEach(function (t, a) {
                        t.children[0].meta.ct_id === o && (e.dashLayoutInfo.id == t.children[0].dom_id ? n.needFresh && e.$broadcast("editChartMeta", {
                            child: t.children[0],
                            item: t,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            opts: n.opts || {},
                            need_reload: !0
                        }) : i(function () {
                            e.dash.editChartMeta(t.children[0], t)
                        }, 0))
                    }))
                }
            }), e.$on("emitItemSizePos", function (t, a) {
                if (a) {
                    var i = e.dashLayoutInfo.ct_id;
                    e.dashStandardItems.forEach(function (t, a) {
                        t.children[0].meta.ct_id === i && (e.dashLayoutInfo.chart_type && e.dash.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !0), e.$broadcast("editChartMeta", {
                            child: t.children[0],
                            item: t,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            need_reload: !1
                        }))
                    })
                }
            }), e.goHelp = function (e) {
                c(e)
            }, e.chartChain = g(e), e.getAllChartInstances = function () {
                var t = [];
                return e.dashStandardItems && e.dashStandardItems.length > 0 && e.dashStandardItems.forEach(function (e) {
                    var a = e.children[0].dom_id;
                    if (a) {
                        var i = $("#" + a).find(".chart").data("chart-data");
                        i && t.push(i)
                    }
                }), t
            }, 
            e.enterFullScreen = function () {
                var e = $(".J_data_screen_hook")[0];
                (e.requestFullscreen || e.webkitRequestFullscreen || e.mozRequestFullScreen || e.msRequestFullscreen).apply(e), 
                $(document)
                .off("fullscreenchange.dataScreen webkitfullscreenchange.dataScreen mozfullscreenchange.dataScreen msRequestFullscreen.dataScreen")
                .on("fullscreenchange.dataScreen webkitfullscreenchange.dataScreen mozfullscreenchange.dataScreen msRequestFullscreen.dataScreen", function (e) {
                    bdp.bdpDash.getCurFullScreenElement() ? $(".J_data_screen_hook").addClass("J-data-screen-fullscreen") : ($(".J_data_screen_hook").removeClass("J-data-screen-fullscreen"), $(document).off("fullscreenchange.dataScreen webkitfullscreenchange.dataScreen mozfullscreenchange.dataScreen msRequestFullscreen.dataScreen"))
                })
            }, 
            e.enterEditScreen = function () {
                var e = r.path().replace("data_screen", "data_screen_edit");
                r.path(e)
            }, 
            e.backDataScreen = function () {
                var e = r.path().replace("data_screen_edit", "data_screen");
                r.path(e)
            }, 
            e.setFullDisplayTheme = function (a) {
                if (a !== e.fullDisplayTheme) {
                    e.fullDisplayTheme = a, BDPLogger.log("feStatistics", {
                        category: "interaction",
                        action: "click",
                        opt_label: "setFullDisplayTheme",
                        opt_value: 1
                    }), BDPLogger.log("feStatistics", {
                        category: "feature",
                        action: "fullDisplayTheme",
                        opt_label: a,
                        opt_value: 1
                    }), localStorage ? localStorage.setItem("fullDisplayTheme", a) : $.cookie("fullDisplayTheme", a);
                    var i = 1 === a ? "dark" : "default";
                    e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                        var a = e.children[0].dom_id;
                        if (a) {
                            var n = $("#" + a).find(".chart").data("chart-data");
                            n && n.setTheme(i, t)
                        }
                    }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, a) {
                        var n = $(a).data("chart-data");
                        n && n.setTheme(i, t)
                    })
                }
            }, e.setFullDisplayDevice = function (a) {
                a !== e.fullDisplayDevice && (e.fullDisplayDevice = a, BDPLogger.log("feStatistics", {
                    category: "interaction",
                    action: "click",
                    opt_label: "setFullDisplayDevice",
                    opt_value: 1
                }), BDPLogger.log("feStatistics", {
                    category: "feature",
                    action: "fullDisplayDevice",
                    opt_label: a,
                    opt_value: 1
                }), localStorage ? localStorage.setItem("fullDisplayDevice", a) : $.cookie("fullDisplayDevice", a), e.isFullscreenMode && e.dashStandardItems.forEach(function (e) {
                    var i = e.children[0].dom_id;
                    if (i) {
                        var n = $("#" + i).find(".chart").data("chart-data");
                        n && n.setDisplayDevice(a, t)
                    }
                }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, i) {
                    var n = $(i).data("chart-data");
                    n && n.setDisplayDevice(a, t)
                }))
            };
            var G = {
                setMobLayout: function (t) {
                    e.global.showMobLayout = t
                },
                setFreeLayout: function () {
                    var t, a = $("#J_gridster .gridster-item"),
                        i = "",
                        n = {};
                    angular.forEach(a, function (a, r) {
                        if (i = $(a).attr("style"), t = $(a).data("chartId"), i) {
                            i.split(";").forEach(function (e, t) {
                                var a = e.replace(/\s/g, "").split(":");
                                a[1] && (n[a[0]] = a[1].replace("px", ""))
                            });
                            for (var o = 0; o < e.dashStandardItems.length; o++) t === e.dashStandardItems[o].children[0].meta.ct_id && (e.dashStandardItems[o].left = +n.left, e.dashStandardItems[o].top = +n.top, e.dashStandardItems[o].width = +n.width, e.dashStandardItems[o].height = +n.height)
                        } else console.log("布局尚未完成切换导致错误")
                    })
                },
                getBlankPos: function () {
                    var t = $(".J_data_screen_hook "),
                        a = t.height(),
                        i = [];
                    angular.forEach(e.dashStandardItems, function (e, t) {
                        i.push(e.top + e.height)
                    });
                    var n = Math.max.apply(this, i),
                        r = {};
                    if (n + 8 + 336 >= a) {
                        var o = $(".J-dash-wrapper").scrollTop();
                        r = o >= 100 ? {
                            top: o + 100,
                            left: 100
                        } : {
                            top: 100,
                            left: 100
                        }
                    } else r = {
                        top: n < 0 ? 0 : n + 8,
                        left: 0
                    };
                    return r
                },
                save: function () {
                    this.setFreeLayout(), e.saveDashboard()
                }
            };
            e.setMobLayout = G.setMobLayout, e.sortMobCharts = {
                stop: function (t, a) {
                    e.saveDashboard()
                }
            }, e.makeDashEdit = function (e) {
                t.dashEditMode = e
            }, 
            e.textComponentEditMode = {}, 
            e.dash = {
                isCreatingItem: !1,
                isDeletingItem: !1,
                isGettingInfo: !1,
                posChanged: !1,
                calcCurIndex: function (t) {
                    t.forEach(function (t) {
                        t.hasOwnProperty("zIndex") && (e.minZIndex = Math.min(e.minZIndex, t.zIndex), e.maxZIndex = Math.max(e.maxZIndex, t.zIndex))
                    })
                },
                setZIndex: function (t) {
                    var a = e.minZIndex,
                        n = e.maxZIndex,
                        r = e.dashLayoutInfo.ct_id;
                    if (!r) return void d("请选择需要设置层级的元素");
                    var o;
                    "top" === t ? (o = n + 1, e.maxZIndex = o) : "bottom" === t && (o = a - 1, e.minZIndex = o), i(function () {
                        e.dashStandardItems.forEach(function (e) {
                            e.children[0].meta.ct_id == r && (e.zIndex = o)
                        }), e.saveDashboard()
                    })
                },
                addVideoComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    E("C103"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 4,
                        dsh_meta: {
                            charts: F(e.dashStandardItems, !0)
                        },
                        category: 1
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C103")
                    })
                },
                createSuccess: function (t, a) {
                    if (0 != +t.status) return e.dashStandardItems.pop(), !1;
                    e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.ct_id = t.result.ct_id, e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type = a;
                    var n = $(".gridster-item").last(),
                        r = function () {
                            n.addClass("highlight-chart"), i(function () {
                                n.removeClass("highlight-chart")
                            }, 500)
                        };
                    2 != e.dash.scaleDashbord.selectedData ? $(".dash-wrapper").animate({
                        scrollTop: n.position().top
                    }, r) : r(), i(function () {
                        e.dash.editChartMeta(e.dashStandardItems[e.dashStandardItems.length - 1].children[0], e.dashStandardItems[e.dashStandardItems.length - 1])
                    })
                },
                addImageComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    E("C102"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 3,
                        dsh_meta: {
                            charts: F(e.dashStandardItems, !0)
                        },
                        category: 1
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C102")
                    })
                },
                addBorderComponent: function () {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    E("C104"), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: 5,
                        dsh_meta: {
                            charts: F(e.dashStandardItems, !0)
                        },
                        category: 1
                    }).success(function (t) {
                        i(function () {
                            e.dash.isCreatingItem = !1
                        }, 1e3), e.dash.createSuccess(t, "C104")
                    })
                },
                addTextComponent: function (t) {
                    if (e.dash.isCreatingItem || e.dash.isDeletingItem || e.isGettingDashInfo) return !1;
                    e.makeDashEdit(!0), E(t), e.dash.isCreatingItem = !0, a.chart.create({
                        dsh_id: e.currDash.dashSelected,
                        ct_type: "C101" == t ? 2 : 6,
                        dsh_meta: {
                            charts: F(e.dashStandardItems, !0)
                        },
                        category: 1
                    }).success(function (a) {
                        if (i(function () {
                                e.dash.isCreatingItem = !1
                            }, 1e3), 0 != +a.status) return e.dashStandardItems.pop(), !1;
                        var n = $(".gridster-item").last();
                        e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.ct_id = a.result.ct_id, e.dashStandardItems[e.dashStandardItems.length - 1].children[0].meta.type = t;
                        var r = function () {
                            n.addClass("highlight-chart"), i(function () {
                                e.dash.editTextComponent(e.dashStandardItems[e.dashStandardItems.length - 1].children[0], e.dashStandardItems[e.dashStandardItems.length - 1]), i(function () {
                                    f.retrieveEditor(a.result.ct_id).scope.displayElements.text.trigger("focus"), n.removeClass("highlight-chart")
                                }, 500)
                            })
                        };
                        2 != e.dash.scaleDashbord.selectedData ? $(".dash-wrapper").animate({
                            scrollTop: n.position().top
                        }, r) : r()
                    })
                },
                delComponent: function (t) {
                    var i = "",
                        n = angular.copy(e.dashStandardItems);
                    n.forEach(function (e, a) {
                        e.children[0].meta.ct_id === t && (n.splice(a, 1), i = e.children[0].meta.type)
                    });
                    var r = {
                        ct_id: t,
                        dsh_meta: {
                            charts: F(n, !0)
                        }
                    };
                    e.pageWrapStyles && (r.dsh_meta.styles = JSON.stringify(e.pageWrapStyles)), e.dash.isDeletingItem = !0, a.chart.del(r).success(function (t) {
                        e.dash.isDeletingItem = !1, 0 == +t.status && (e.dashStandardItems = n, i && e.dash.changeEditMetaVisible(i, !1))
                    })
                },
                copyComponent: function (t, a) {
                    function i() {
                        e.global.clickComplete = !1;
                        var t = e.copyChartData;
                        t.dashId && l.get("/api/chart/copy", {
                            ct_id: t.chartInfo.chart_id,
                            from: angular.toJson({
                                proj_id: t.curProId,
                                dsh_id: t.curDshId
                            }),
                            to: angular.toJson({
                                proj_id: t.projId,
                                dsh_id: t.dashId
                            })
                        }).then(function (t) {
                            if (0 == t.status) {
                                d("复制成功"), o.closeAll();
                                var a = e.copyChartData;
                                a.curProId == a.projId && a.curDshId == a.dashId && e.getDashboardInfo(a.curDshId)
                            }
                            e.global.clickComplete = !0
                        })
                    }

                    function n(a) {
                        e.copyChartData = {
                            curProId: s.projId,
                            curDshId: s.dashId,
                            chartInfo: {
                                chart_id: t.meta.ct_id,
                                name: t.meta.name
                            },
                            projId: s.projId,
                            dashId: s.dashId,
                            project_list: a
                        };
                        for (var n = e.copyChartData.project_list, r = 0, l = n.length; r < l; r++) n[r].proj_id == e.copyChartData.projId && (e.copyChartData.dash_list = n[r].dsh_list);
                        o.open({
                            template: "/static/partials/chart-copy.html",
                            className: "ngdialog-theme-default ngDialog-width-360",
                            data: {
                                okActionFunc: i
                            },
                            scope: e
                        })
                    }
                    e.dash.getCacheProjListForOpt(n)
                },
                moveComponent: function (t, a) {
                    function i() {
                        var t = bdp.bdpDash.getItemIndexInDashList(e.dashStandardItems, e.moveChartData.chartInfo.chart_id);
                        e.dashStandardItems.splice(t, 1), e.getDashboardInfo(e.dashSelected)
                    }

                    function n() {
                        var t = e.moveChartData;
                        if (e.global.clickComplete = !1, !t.dashId) return d("请选择仪表盘"), void(e.global.clickComplete = !0);
                        if (t.curProId == t.projId && t.curDshId == t.dashId) return d("移动目标位置与图表当前位置相同，请选择其他位置"), void(e.global.clickComplete = !0);
                        var a = [].concat(e.dashStandardItems),
                            n = bdp.bdpDash.getItemIndexInDashList(e.dashStandardItems, e.moveChartData.chartInfo.chart_id);
                        a.splice(n, 1), l.post("/api/chart/move", {
                            ct_id: t.chartInfo.chart_id,
                            from: angular.toJson({
                                proj_id: t.curProId,
                                dsh_id: t.curDshId
                            }),
                            to: angular.toJson({
                                proj_id: t.projId,
                                dsh_id: t.dashId
                            }),
                            check: "do",
                            dsh_meta: angular.toJson({
                                charts: F(a, !0)
                            })
                        }).then(function (t) {
                            e.global.clickComplete = !0, t.result.ismoved ? (d(e.tips["chart.moveChartSuccess"]), i(), o.closeAll()) : o.openConfirm({
                                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                                className: "ngdialog-theme-default ngdialog-width-340",
                                scope: e,
                                data: {
                                    message: e.tips["chart.checkToContinueMove"]
                                }
                            }).then(function () {
                                var t = e.moveChartData;
                                l.post("/api/chart/move", {
                                    ct_id: t.chartInfo.chart_id,
                                    from: angular.toJson({
                                        proj_id: t.curProId,
                                        dsh_id: t.curDshId
                                    }),
                                    to: angular.toJson({
                                        proj_id: t.projId,
                                        dsh_id: t.dashId
                                    }),
                                    check: "pass",
                                    dsh_meta: angular.toJson({
                                        charts: F(a, !0)
                                    })
                                }).then(function (t) {
                                    t.result.ismoved ? (d(e.tips["chart.moveChartSuccess"]), i()) : d(e.tips["chart.moveChartFail"]), o.closeAll()
                                })
                            })
                        })
                    }

                    function r(a) {
                        e.moveChartData = {
                            curProId: s.projId,
                            curDshId: s.dashId,
                            chartInfo: {
                                chart_id: t.meta.ct_id,
                                name: t.meta.name
                            },
                            projId: s.projId,
                            dashId: s.dashId,
                            project_list: a
                        };
                        for (var i = e.moveChartData.project_list, r = 0, l = i.length; r < l; r++) i[r].proj_id == e.moveChartData.projId && (e.moveChartData.dash_list = i[r].dsh_list);
                        o.open({
                            template: "/static/partials/chart-move.html",
                            className: "ngdialog-theme-default ngDialog-width-360",
                            data: {
                                okActionFunc: n
                            },
                            scope: e
                        })
                    }
                    e.dash.getCacheProjListForOpt(r)
                },
                getCacheProjListForOpt: function (e, t) {
                    var i = angular.copy(v.getTreeCache());
                    if (i) i = bdp.bdpDash.filterProjByQuery(i, {
                        type: 0
                    }), e(i);
                    else {
                        var n = [];
                        bdp.bdpPageStatus.isUnderAdvDash() && (n = [0, 2]), bdp.bdpPageStatus.isUnderDataScreen() && (n = [1]);
                        var r = {
                            categories: angular.toJson(n)
                        };
                        a.project.getTree(r).then(function (t) {
                            if (t) {
                                var a = angular.copy(t.proj);
                                v.setTreeCache(a), a = bdp.bdpDash.filterProjByQuery(a, {
                                    type: 0
                                }), e(a)
                            }
                        })
                    }
                },
                clearAllTextEditState: function () {
                    for (var t in e.textComponentEditMode) e.textComponentEditMode.hasOwnProperty(t) && (e.textComponentEditMode.hasOwnProperty(t) && e.textComponentEditMode[t] || (e.textComponentEditMode[t] = !1))
                },
                editTextComponent: function (t, a) {
                    var n = t.meta.ct_id;
                    e.dash.editChartMeta(t, a), angular.element(".gridster-item").map(function (e, t) {
                        angular.element(t).removeClass("selected")
                    }), e.textComponentEditMode[n] = !0, i(function () {
                        var t = $("#" + n);
                        e.dash.setTaToolbarPos(t), f.retrieveEditor(n).scope.displayElements.text.trigger("focus")
                    })
                },
                setTaToolbarPos: function (e) {
                    var t = angular.element("body").height(),
                        a = e[0].getBoundingClientRect();
                    t - a.bottom < 100 || t - a.bottom < 0 ? e.find(".ta-toolbar").removeClass("bottom").addClass("top") : e.find(".ta-toolbar").removeClass("top").addClass("bottom")
                },
                setOperatorIndex: function (t, a, i) {
                    a ? e.dashStandardItems.map(function (e) {
                        e.isTopIndex = !!t
                    }) : i.isTopIndex = !!t
                },
                editTextFromMore: function (t, a) {
                    e.makeDashEdit(!0), this.editTextComponent(t, a), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos")
                },
                saveTextComponent: function (t) {
                    var a = t.meta.ct_id;
                    e.textComponentEditMode[a] = !1, i(function () {
                        e.saveDashboard()
                    }, 0)
                },
                isBeyondOuterBorder: function (t, a) {
                    var i = angular.element("#" + t),
                        n = angular.element(".gridster");
                    if (!i || !n) return !0;
                    var r = e.dash.scaleDashbord && e.dash.scaleDashbord.curScaleVal,
                        o = n.width(),
                        s = n.height(),
                        l = i.position().left,
                        d = i.position().top,
                        c = i.width(),
                        p = i.height(),
                        u = !1;
                    return r && (o *= r, s *= r, c *= r, p *= r), l <= 0 && 37 == a && (e.currentSelectedItem.item.left = 0, u = !0), l > o - c && 39 == a && (e.currentSelectedItem.item.left = r ? (o - c) / r : o - c, u = !0), d <= 0 && 38 == a && (e.currentSelectedItem.item.top = 0, u = !0), d > s - p && 40 == a && (e.currentSelectedItem.item.top = r ? (s - p) / r : s - p, u = !0), u && e.$digest(), u
                },
                handleKeyBoardMoveEvent: function (t, a) {
                    if (!e.isDataScreenEdit) return !1;
                    var i = t.meta.ct_id;
                    if (["C101", "C105"].indexOf(t.meta.type) >= 0 && e.textComponentEditMode[i]) return !1;
                    $(document).off("keydown.change_item_pos").on("keydown.change_item_pos", bdp.utils.throttle(function (t) {
                        if (!e.isDataScreenEdit) return !1;
                        var a = e.currentSelectedItem.child && e.currentSelectedItem.child.meta.ct_id;
                        if (e.lockItemPosMap[a]) return !1;
                        var i = t || window.event;
                        if (e.dash.isBeyondOuterBorder(a, i.keyCode)) return e.dash.posChanged = !1, !1;
                        switch (i.keyCode) {
                            case 37:
                                e.currentSelectedItem.item.left -= 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 38:
                                e.currentSelectedItem.item.top -= 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 39:
                                e.currentSelectedItem.item.left += 1, i.preventDefault(), i.stopPropagation();
                                break;
                            case 40:
                                e.currentSelectedItem.item.top += 1, i.preventDefault(), i.stopPropagation()
                        }
                        e.dash.posChanged = !0, e.$digest()
                    }, 0)), $(document).off("keydown.save_item_pos").on("keydown.save_item_pos", bdp.utils.debounce(function (t) {
                        if (!e.isDataScreenEdit) return !1;
                        var a = e.currentSelectedItem.child && e.currentSelectedItem.child.meta.ct_id;
                        if (e.lockItemPosMap[a] || !e.dash.posChanged) return !1;
                        var i = t || window.event;
                        [37, 38, 39, 40].indexOf(i.keyCode) >= 0 && e.dash.savePosByKeyboard()
                    }, 100))
                },
                editChartMetaVisible: {
                    text: !1,
                    style: !1,
                    video: !1,
                    img: !1,
                    numerical: !1,
                    pageEle: !1,
                    pageWrap: !0
                },
                editChartMeta: function (t, a) {
                    if (!B || e.dashLayoutInfo.id == t.dom_id) return !1;
                    var n = t.meta.ct_id;
                    e.dashLayoutInfo.id = t.dom_id, e.dashLayoutInfo.ct_id = n, e.dashLayoutInfo.chart_type = t.meta.type, e.dashLayoutInfo.show_navigator = t.meta.show_navigator, e.dash.clearAllTextEditState(), e.dashLayoutInfo.dash_setting = t.meta.dash_setting || {
                            show_axis: !0,
                            show_datalabels: ["C230", "C271", "C272", "C330", "C360"].indexOf(t.meta.type) > -1,
                            show_legend: !0,
                            show_title: !0,
                            show_total: !0,
                            border_left: !1,
                            border_top: !1,
                            border_right: !1,
                            border_bottom: !1,
                            border_null: !0
                        }, e.dashLayoutInfo.hasTotal = t.meta.hasTotal, void 0 === e.dashLayoutInfo.dash_setting.show_navigator && e.dashLayoutInfo.show_navigator && (e.dashLayoutInfo.dash_setting.show_navigator = !0), e.currentSelectedItem = {
                        child: t,
                        item: a
                    }, n && e.dashLayoutInfo.chart_type && (this.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !0), i(function () {
                        e.$broadcast("editChartMeta", {
                            child: t,
                            item: a,
                            is_cancel: !1,
                            lock_status: e.lockItemPosMap,
                            need_reload: !0
                        })
                    }, 0)), $(document).off("click.edit_dashboard").on("click.edit_dashboard", function (t) {
                        var a = $(t.target);
                        a.parents(".gridster-item").length || a.parents(".J_chart_box").length || a.parents(".dash-edit-wrapper").length || a.parents(".J_side_panel").length || a.hasClass("J_side_panel") || a.hasClass("backToMainChart") || a.parents(".fht-table-wrapper").length || a.hasClass("J_no_fix_wrap") || a.hasClass("J_set_zindex") || a.parents(".J_set_zindex").length || e.dash.cancelEditState()
                    })
                },
                cancelEditState: function () {
                    e.dashLayoutInfo.chart_type && this.changeEditMetaVisible(e.dashLayoutInfo.chart_type, !1), i(function () {
                        e.dash.clearAllTextEditState(), e.dashLayoutInfo.id = void 0, e.dashLayoutInfo.ct_id = "", e.dashLayoutInfo.chart_type = void 0
                    }, 0), $(document).off("keydown.change_item_pos"), $(document).off("keydown.save_item_pos")
                },
                changeEditMetaVisible: function (t, a) {
                    e.dash.editChartMetaVisible = {
                        text: !!a && ["C101", "C105"].indexOf(t) >= 0,
                        style: !!a && ["C101", "C102", "C103", "C104", "C105"].indexOf(t) < 0,
                        video: !!a && ["C103"].indexOf(t) >= 0,
                        img: !!a && ["C102"].indexOf(t) >= 0,
                        numerical: !1,
                        pageEle: a,
                        pageWrap: !a
                    }
                },
                savePosByKeyboard: bdp.utils.debounce(function () {
                    e.$broadcast("editChartMeta", {
                        child: e.currentSelectedItem.child,
                        item: e.currentSelectedItem.item,
                        is_cancel: !1,
                        lock_status: e.lockItemPosMap
                    }), e.saveDashboard()
                }, 100),
                saveChartStyle: function (t) {
                    var a = t.style,
                        i = t.ct_id,
                        n = t.drill_level;
                    e.dashStandardItems.some(function (e) {
                        var t = e.children[0].meta,
                            r = !1;
                        if (i == e.children[0].meta.ct_id && (t.style = a, t.drill_level = n, r = !0), r) return r
                    }), e.saveDashboard()
                },
                canSetLegend: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return t && ["C200", "C261", "C280", "C300", "C310", "C320", "C330", "C340", "C360", "C370", "C400"].indexOf(t) < 0
                },
                canSetAxis: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return t && ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C250", "C280", "C350", "C351", "C352"].indexOf(t) > -1
                },
                canSetDataLabels: function () {
                    var t = e.dashLayoutInfo.chart_type;
                    return ["C200", "C261", "C300", "C310", "C340", "C400"].indexOf(t) < 0
                },
                canSetTitle: function () {
                    return !!e.dashLayoutInfo.ct_id && e.dashLayoutInfo.ct_id.indexOf("text_") < 0
                },
                canSetNavigator: function () {
                    return e.dashLayoutInfo.show_navigator
                },
                modify: function (t) {
                    e.saveDashboard().then(function (a) {
                        if ("datalabels" === t) {
                            var i = angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart .chart").data("chart-data");
                            i && i.info && (i.info.show_datalabels = e.dashLayoutInfo.dash_setting.show_datalabels, i.renderChart())
                        } else "legend" === t || "axis" === t || "total" === t || "navigator" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0, !0) : "title" === t ? reflowChart(angular.element("#" + e.dashLayoutInfo.ct_id).find(".item-chart"), !0) : "show_block" !== t && "fixed_width" !== t || (A(), angular.element(".item-chart").each(function () {
                            reflowChart(angular.element(this), !0)
                        }))
                    })
                },
                toggleBorder: function (t) {
                    var a = e.dashLayoutInfo.dash_setting;
                    a["border_" + t] = !a["border_" + t], "null" !== t ? a.border_null = !Boolean(a.border_left + a.border_bottom + a.border_right + a.border_top) : (a.border_top = !1, a.border_right = !1, a.border_bottom = !1, a.border_left = !1, a.border_null = !0);
                    for (var i = 0; i < e.dashStandardItems.length; i++) {
                        var n = e.dashStandardItems[i].children[0];
                        if (n.dom_id === e.dashLayoutInfo.id) {
                            n.meta.dash_setting = e.dashLayoutInfo.dash_setting;
                            break
                        }
                    }
                    e.saveDashboard().then(function (e) {})
                },
                scaleDashbord: {
                    selectedData: 1,
                    selectedScaleVal: "none",
                    curScaleVal: 0,
                    setScreenScale: function () {
                        var t = e.dash.scaleDashbord,
                            a = $(".J_data_screen_hook"),
                            i = "none",
                            n = 0,
                            r = 0;
                        if (2 == t.selectedData) {
                            var o = $(".dash-wrapper"),
                                s = o.width(),
                                l = o.height(),
                                d = e.resolution.width,
                                c = e.resolution.height,
                                p = parseInt(e.pageWrapStyles.width);
                            p && (d += 2 * p, c += 2 * p);
                            var u = s / d,
                                h = l / c,
                                f = Math.min(u, h),
                                g = Math.min(1, f);
                            g < 1 && (i = "scale(" + f + ")", f == u ? n = (l - c * f) / 2 : r = (s - d * f) / 2, n += o.scrollTop());
                            for (var m in e.draw_chart_url) e.draw_chart_url[m].lazyload && (e.draw_chart_url[m].lazyload = !1)
                        }
                        t.selectedScaleVal = i, t.curScaleVal = g, setTimeout(function () {
                            k(), a.css({
                                top: n,
                                left: r
                            })
                        }, 0)
                    },
                    modifyScale: function () {
                        e.dash.scaleDashbord.setScreenScale(), e.saveDashboard()
                    }
                }
            }, 
            u([
                "dash.delChartFail", 
                "dash.plzSelectTable", 
                "dash.selectTbTitle", 
                "dash.emptyFolderList", 
                "dash.titleRequired", 
                "dash.titleDuplicate", 
                "dash.delChartLinkSuccess", 
                "chart.untitledChart", 
                "saveSuccess", 
                "chart.chainChart", 
                "chart.chainField", 
                "dash.dashCartJump.errSameTip", 
                "dash.dashCartJump.successDelTip", 
                "dash.dashCartJump.selectDashPrefix", 
                "dash.dashCartJump.selectDashPrefix", 
                "dash.dashCartJump.selectFolder", 
                "dash.dashCartJump.selectDashboard", 
                "dash.dashCartJump.selectFilter", 
                "dash.dashCartJump.globalFilter", 
                "dash.dashCartJump.openType", 
                "dash.dashCartJump.thisWin", 
                "dash.dashCartJump.newWin", 
                "dash.dashCartJump.errEmptyTip", 
                "chart.copyChartSuccess", 
                "chart.confirmDelChart", 
                "template.selectDash", 
                "chart.selectOtherPlace", 
                "chart.checkToContinueMove", 
                "chart.moveChartSuccess", 
                "chart.moveChartFail"], e)
        }
    }
    angular.module("BC.controllers.dataScreen", ["ngDragDrop", "gridster", "slick"])
        .controller("DataScreenCtrl", e),
        e.$inject = [
            "$scope",
            "$rootScope",
            "commonService",
            "$timeout",
            "$interval",
            "$location",
            "ngDialog",
            "$stateParams",
            "commonHttp",
            "errHint",
            "operatorHelpLink",
            "$http",
            "$jsTipTranslate",
            "autoRefreshChart",
            "textAngularManager",
            "dashChartLink",
            "$q",
            "screenElePadding",
            "projectTreeCache",
            "$translate"]
}();
function () {
    function e(e, t, a, i, n, r, o, s, l, d, c, p) {
        function u(i) {
            e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.global.globalDashFilter = [], a.dash_global_filter.item({
                dash_id: i,
                rule_id: t.global.rule_id || "",
                is_tpl: 1
            }).then(function (t) {
                if ("0" == t.status) {
                    if (e.selected.dsh_id !== i) return;
                    e.global.originalGlobalFilter = angular.copy(t.result);
                    var a = bdp.utils.handleGlobalFilterLevel(t.result);
                    angular.forEach(a, function (e) {
                        if (h(e), "date" == e.data_type && "" == e.config.granularity) {
                            var t = e.config.range || "";
                            if (t) {
                                var a = !1;
                                angular.forEach(e.adv_date_list, function (e) {
                                    e.opt_id == t && (a = !0)
                                }), a || (e.config.range = "", e.config.default_select = !1, e.range = [])
                            }
                        }
                    }), e.global.globalDashFilter = a, e.hitMemoryGlobalFilter && e.$emit("hitMemoryGlobalFilter", !0)
                } else l(Number(t.status))
            })
        }

        function h(a) {
            var i = angular.fromJson(window.localStorage.getItem("global_filter_memory")) || [],
                n = !1,
                r = t.wsId || "";
            angular.forEach(i, function (t) {
                t.ws_id == r && a.data_type == t.data_type && a.name == t.name && a.config && a.config.hasOwnProperty("granularity") && a.config.granularity == t.granularity && ("date" == a.data_type && "" == a.config.granularity ? angular.forEach(a.adv_date_list, function (e) {
                    e.opt_id == t.range[0] && (a.range = t.range, n = !0)
                }) : a.range = t.range, e.hitMemoryGlobalFilter && (e.hitMemoryGlobalFilter = o.dashId != t.setDashId), e.hitMemoryGlobalFilter = !0, e.hitGlobalFilterId.push(a.df_id))
            })
        }

        function f() {
            var a = t.global.dshWatermarkImg;
            if (a) {
                var i = $(".gridster"),
                    r = 1 == t.usedThemeId ? "water-mark-white" : "water-mark-dark";
                if (n.path().indexOf("dash_tpl_fullscreen") > -1 && (r = "water-mark-white"), e.dashLayoutInfo.show_block) bdp.utils.browser().ie ? i.addClass(r) : $(".dash-water-mark").remove();
                else if ("url(" + a + ")", bdp.utils.browser().ie) i.addClass(r);
                else if (0 == $(".dash-water-mark").length) {
                    var o = document.createElement("div");
                    o.className = "water-mark dash-water-mark " + r, i.append(o)
                } else $(".dash-water-mark").removeClass("water-mark-white").removeClass("water-mark-white").addClass(r)
            }
        }

        function g(a, n) {
            t.dashLoading = !1;
            var r = n.result;
            if (!isObjectEmpty(r)) {
                t.dashProperty = r.property, e.outer_share_info = r.outer_share_info, e.gis_flag = r.gis_flag, e.dashLayoutInfo.show_block = !defined(r.meta.show_block) || r.meta.show_block, e.dashLayoutInfo.fixed_width = !!defined(r.meta.fixed_width) && r.meta.fixed_width, m(r.meta.show_block), e.dashTitle = r.name, e.dashLabel = r.label || "", e.dashComment = r.comment || "", e.property = r.property;
                var o = r.meta.charts || [];
                if (e.dashStandardItems = o || [], e.isFullscreenMode) {
                    var s = $(".main"),
                        l = $(".dash-wrapper"),
                        d = s.height() - parseInt($(".dash-title-wrap").height()) - parseInt(l.css("paddingTop")) - parseInt(l.css("paddingBottom")),
                        c = d / 9 + (e.global.globalDashFilter.length ? 16 : 20);
                    e.dashPages = [], e.gridsterOpts.rowHeight = c, e.gridsterOpts.draggable.enabled = !1, e.gridsterOpts.resizable.enabled = !1;
                    var p = [],
                        u = 0,
                        h = 0;
                    e.dashStandardItems.sort(function (e, t) {
                        return e.row == t.row ? e.col - t.col : e.row < t.row ? -1 : 1
                    }), e.dashStandardItems.forEach(function (t, a) {
                        t.sizeY = Math.min(t.sizeY, 9), t.row += h, t.row %= 9;
                        var i = !0;
                        if (t.row + t.sizeY > 9) i = !1;
                        else
                            for (var n = 0; n < p.length; n++) {
                                var r = p[n];
                                if (!(r.col >= t.col + t.sizeX || r.row >= t.row + t.sizeY || t.col >= r.col + r.sizeX || t.row >= r.row + r.sizeY)) {
                                    i = !1;
                                    break
                                }
                            }
                        i ? p.push(t) : (h += 9 - t.row, e.dashPages.push(p), p = [], u++, t.row = 0, p.push(t))
                    }), p.length > 0 && e.dashPages.push(p)
                }
                e.dashInit.load = !1, e.draw_chart_url = {};
                for (var g, _, v = 0; v < e.dashStandardItems.length; v++) e.dashStandardItems[v].children[0].meta.filter_list = [];
                e.hasChartLink = !1, t.isGlobalCustom = {};
                for (var b = 0; b < o.length; b++) {
                    g = o[b];
                    for (var y = 0; y < g.children.length; y++)
                        if (_ = g.children[y], _.meta.filter_list = [], _.meta.type) {
                            t.isGlobalCustom[_.meta.ct_id] = !1, e.global.rule_id && "&rule_id=" + e.global.rule_id, e.draw_chart_url[_.dom_id] = {
                                options: {
                                    theme: e.isFullscreenMode || 1 === t.usedThemeId ? "dark" : "default",
                                    device: e.isFullscreenMode ? e.fullDisplayDevice : "pc",
                                    ws_id: t.wsId,
                                    dsh_id: a,
                                    ct_id: _.meta.ct_id,
                                    tb_id: _.meta.tb_id,
                                    rule_id: t.global.rule_id,
                                    is_tpl: 1,
                                    optional: {
                                        linked_chart_type: _.meta.linked_chart_type
                                    }
                                },
                                lazyload: b > 2
                            }
                        }
                }
                e.$$phase || e.$apply(), i(function () {
                    e.lazy = new bdpChart.LazyLoad(".gridster-desktop", ".gridster-item", {
                        diff: 50,
                        handleResize: !0,
                        onItemLoad: function (t) {
                            var a = $(t).find(".item-chart").attr("id");
                            e.draw_chart_url[a] && (e.draw_chart_url[a].lazyload = !1)
                        },
                        onItemsLoad: function () {
                            e.$$phase || e.$apply()
                        }
                    }), e.search_ct_id && setTimeout(function () {
                        e.scrollToChart(e.search_ct_id)
                    }, 10)
                }), f()
            }
        }

        function m(t) {
            e.gridsterOpts = {
                margins: t ? [8, 8] : [0, 0],
                outerMargin: !1,
                minColumns: 2,
                minRows: 2,
                columns: 12,
                resizable: {
                    enabled: !1
                },
                draggable: {
                    enabled: !1
                }
            }
        }
        if (e.mouseleaveItem = function () {
                e.$broadcast("fire-mouseleave-item-event", !0)
            }, e.chartOptions = {}, o.projId) {
            if (e.AllMap = ["全部", "全部时间", "All"], t.last_dash_path = n.path(), t.dashEditMode = !1, e.currDash = {
                    activeProjId: o.projId,
                    dashSelected: o.dashId
                }, e.activeProjId = o.projId, e.dashSelected = o.dashId, t.view = "dash_tpl", t.show_bdp_header = !0, e.dashInit = {}, e.dashInit.load = !0, o.ruleId) e.global.rule_id = o.ruleId;
            else {
                var _ = n.path();
                _.indexOf("ru_") >= 0 && (e.global.rule_id = _.substring(_.indexOf("ru_")))
            }
            e.selected = {
                proj_id: o.projId,
                dsh_id: o.dashId,
                rule_id: e.global.rule_id,
                ws_id: t.wsId
            }, e.$on("jumpToSearch", function (t, a) {
                e.search_ct_id = a
            }), e.scrollToChart = function (e, t) {
                t = t || $(".gridster-desktop");
                var a = t.closest(".dash-wrapper");
                t.find(".gridster-item").each(function (t, i) {
                    var n = $(i);
                    if (e == n.data("chart-id")) {
                        var r = a.height(),
                            o = n[0].offsetTop;
                        o + n.height() > r ? a.animate({
                            scrollTop: o - 15
                        }, function () {
                            n.addClass("highlight-chart")
                        }) : n.addClass("highlight-chart"), $(document).on("click.cancelHighlight", function () {
                            n.removeClass("highlight-chart"), $(this).off("click.cancelHighlight")
                        })
                    }
                })
            }, e.$on("scrollToChart", function (t, a) {
                setTimeout(function () {
                    e.scrollToChart(a)
                }, 0)
            }), localStorage.setItem("mc_location_path", n.path());
            var _ = n.path();
            _.indexOf("dash_tpl_fullscreen") > 0 ? (e.isFullscreenMode = !0, t.show_bdp_header = !0, e.$dashSlider = $("#dash-slider"), $(document).on("keyup", function (t) {
                switch (t.keyCode) {
                    case 37:
                        e.$dashSlider.slick("slickPrev");
                        break;
                    case 39:
                        e.$dashSlider.slick("slickNext");
                        break;
                    case 27:
                        0 === $(".fullscreen-chart").length && e.exitFullScreen()
                }
            })) : (e.isFullscreenMode = !1, t.view = "dash_tpl", t.show_bdp_header = !0, $(document).off("keyup")), e.dashLayoutInfo = {}, e.hitMemoryGlobalFilter = !1, e.hitGlobalFilterId = [], e.getDashboardInfo = function (i) {
                if (i ? u(i) : e.global.globalDashFilter = [], t.dashLoading = !0, "" == i || void 0 === i) return t.dashLoading = !1, !1;
                var r = {};
                return r.dsh_id = i, r.is_tpl = 1, a.dashboard.getInfo(r).then(function (e) {
                    if (0 == e.status) var a = setInterval(function () {
                        g(i, e), clearInterval(a)
                    }, 200);
                    else {
                        if (t.dashLoading = !1, 3 == e.status) return n.path("/dash_tpl/"), void location.reload();
                        l(e.status)
                    }
                })
            }, e.getDashboardInfo(e.currDash.dashSelected), e.$on("fire-refresh-dashboard", function () {
                "dash_tpl" == t.view && e.getDashboardInfo(e.currDash.dashSelected)
            }), e.goHelp = function (e) {
                d(e)
            }, e.enterFullScreen = function (e) {
                var t = n.path().replace("dash_tpl", "dash_tpl_fullscreen");
                if (n.path(t), $("body").addClass("route-dash-fullscreen"), e) {
                    var a = $("body")[0],
                        i = a.requestFullscreen || a.webkitRequestFullscreen || a.mozRequestFullScreen || a.msRequestFullscreen;
                    i && (i.apply(a), $(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange", function (e) {
                        if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement);
                        else {
                            if ($("body").find(".fullscreen-chart").length > 0);
                            else {
                                var t = n.path();
                                t.indexOf("dash_tpl_fullscreen") && n.path(t.replace("dash_tpl_fullscreen", "dash_tpl"))
                            }
                            $(document).off("webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange")
                        }
                    }), $("body").hasClass("fullscreen-status") || $("body").addClass("fullscreen-status"))
                }
            }, e.exitFullScreen = function () {
                var e = n.path().replace("dash_tpl_fullscreen", "dash_tpl");
                n.path(e), $("body").removeClass("route-dash-fullscreen");
                var t = document.exitFullscreen || document.webkitExitFullscreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || document.msExitFullscreen;
                t && t.apply(document)
            }, localStorage ? e.fullDisplayDevice = localStorage.getItem("fullDisplayDevice") || "pc" : e.fullDisplayDevice = $.cookie("fullDisplayDevice") || "pc", e.setFullDisplayDevice = function (a) {
                a !== e.fullDisplayDevice && (e.fullDisplayDevice = a, BDPLogger.log("feStatistics", {
                    category: "interaction",
                    action: "click",
                    opt_label: "setFullDisplayDevice",
                    opt_value: 1
                }), BDPLogger.log("feStatistics", {
                    category: "feature",
                    action: "fullDisplayDevice",
                    opt_label: a,
                    opt_value: 1
                }), localStorage ? localStorage.setItem("fullDisplayDevice", a) : $.cookie("fullDisplayDevice", a), e.dashStandardItems.forEach(function (e) {
                    var i = e.children[0].dom_id;
                    if (i) {
                        var n = $("#" + i).find(".chart").data("chart-data");
                        n && n.setDisplayDevice(a, t)
                    }
                }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, i) {
                    var n = $(i).data("chart-data");
                    n && n.setDisplayDevice(a, t)
                }))
            }, e.removeFullDisplayStyle = function () {
                e.isFullscreenMode || "pc" === e.fullDisplayDevice && e.fullDisplayTheme === t.usedThemeId || e.dashStandardItems.forEach(function (e) {
                    var a = e.children[0].dom_id;
                    if (a) {
                        var i = $("#" + a).find(".chart").data("chart-data");
                        i && i.setDisplayStyle("pc", 1 == t.usedThemeId ? "dark" : "default", t)
                    }
                })
            }, localStorage ? e.fullDisplayTheme = +localStorage.getItem("fullDisplayTheme") || t.usedThemeId : e.fullDisplayTheme = +$.cookie("fullDisplayTheme") || t.usedThemeId, e.setFullDisplayTheme = function (t) {
                if (t !== e.fullDisplayTheme) {
                    e.fullDisplayTheme = t, BDPLogger.log("feStatistics", {
                        category: "interaction",
                        action: "click",
                        opt_label: "setFullDisplayTheme",
                        opt_value: 1
                    }), BDPLogger.log("feStatistics", {
                        category: "feature",
                        action: "fullDisplayTheme",
                        opt_label: t,
                        opt_value: 1
                    }), localStorage ? localStorage.setItem("fullDisplayTheme", t) : $.cookie("fullDisplayTheme", t);
                    var a = 1 === t ? "dark" : "default";
                    e.dashStandardItems.forEach(function (e) {
                        var t = e.children[0].dom_id;
                        if (t) {
                            var i = $("#" + t).find(".chart").data("chart-data");
                            i && i.setTheme(a)
                        }
                    }), $(".fullscreen-chart").length > 0 && $(".fullscreen-chart").each(function (e, t) {
                        var i = $(t).data("chart-data");
                        i && i.setTheme(a)
                    })
                }
            },
                e.useTpl = function () {
                    r.open({
                        templateUrl: "/static/partials/dialogTemplates/use_tpl_option.html",
                        scope: e,
                        className: "ngdialog-theme-default use-tpl-option"
                    })
                }, e.useTplByOption = function (a, i) {
                r.closeAll(), t.pageLoading = !0, s.post("/api/personal/apply", {
                    dsh_id: a
                }).then(function (a) {
                    if (t.pageLoading = !1, "0" == a.status) {
                        var o = a.result;
                        1 === i ? (location.href = "/api/personal/export?dsh_id=" + o.dsh_id, r.open({
                            templateUrl: "/static/partials/dialogTemplates/library_tpl_step.html",
                            scope: e,
                            showClose: !1,
                            className: "ngdialog-theme-default dash-tpl-step",
                            data: {
                                proj_id: o.proj_id,
                                dsh_id: o.dsh_id
                            },
                            controller: ["$scope", function (e) {
                                e.goToTplDashborad = function () {
                                    r.closeAll(), n.path("/dash_edit/" + e.ngDialogData.proj_id + "/" + e.ngDialogData.dsh_id)
                                }, e.goToReplaceTpl = function () {
                                    r.closeAll(), n.path("/tpl_replace/" + e.ngDialogData.proj_id + "/" + e.ngDialogData.dsh_id)
                                }
                            }]
                        })) : n.path("/dash_edit/" + o.proj_id + "/" + o.dsh_id)
                    }
                })
            }, p(["dash.delChartFail", "dash.plzSelectTable", "dash.selectTbTitle", "dash.emptyFolderList", "dash.titleRequired", "dash.titleDuplicate", "dash.delChartLinkSuccess", "chart.untitledChart", "saveSuccess", "chart.chainChart", "chart.chainField"], e)
        }
    }
    angular.module("BC.controllers.dashboard")
        .controller("newDashController", e),
        e.$inject = [
            "$scope",
            "$rootScope",
            "commonService",
            "$timeout",
            "$location",
            "ngDialog",
            "$stateParams",
            "commonHttp",
            "errHint",
            "operatorHelpLink",
            "$http",
            "$jsTipTranslate"]
}();
function () {
    function e(e, a, i, n, r, o, s, l, d, c, p, u) {
        function h() {
            return e.wsId ? d.when() : i.chart_tpl.typeList().then(function (e) {
                "0" == e.status && (a.chartAddView.tplTypeList = e.result.tpl_type_list, a.chartAddView.tplTypeList.length > 0 && ($(".ngdialog.choose-table").addClass("ngdialog-drawer-open"), a.chartAddView.chooseType()))
            })
        }

        function f(e) {
            return n.get("/api/folder/list_for_chart").then(function (t) {
                a.loadingStatus.isAdding = !1, a.loadingStatus.loadingFolders = !1, 0 == t.status && e(t.result)
            })
        }

        function g(e) {
            a.chartAddView.folderList = e, a.chartAddView.original_folderList = angular.copy(e), a.$broadcast("updatefolderList", a.chartAddView.original_folderList), a.chartAddView.tplTypeList.length > 0 && $(".ngdialog.choose-table .dialog-drawer").show()
        }

        function m(e) {
            a.chartAddView.selectedTplType = e;
            var t = {
                type: e
            };
            i.chart_tpl.applyList(t).then(function (e) {
                "0" == e.status && (a.chartAddView.tplList = e.result.tpl_list, angular.forEach(a.chartAddView.tplList, function (e) {
                    r.get("/api/chart/data", {
                        params: {
                            ct_id: e.ct_id,
                            is_chart_tpl: 1
                        }
                    }).then(function (t) {
                        200 == t.status && 0 == t.data.status ? e.chart_type = t.data.result.info.chart_type : e.error = t.data.errstr
                    })
                }))
            })
        }

        function _(e) {
            a.chartAddView.selectedTpl = e
        }

        function v() {
            e.canUseCustomChart && u.getGuideVal("newCustomChartGuide") && (u.setGuideApi("newCustomChartGuide", 0), $(".dotguidenewCustomChartGuide").remove())
        }

        function b(e) {
            a.chartAddView.tabIndex = e, p(function () {
                a.$broadcast("updatefolderList", a.chartAddView.original_folderList)
            }), a.chartAddView.tabIndex ? $(".J-chart-select-table").removeClass("ngdialog-drawer-open") : a.chartAddView.tplTypeList.length && ($(".J-chart-select-table").addClass("ngdialog-drawer-open"), a.chartAddView.chooseType())
        }

        function y() {
            function e(t) {
                angular.forEach(t, function (t) {
                    angular.forEach(t.tb_list, function (e) {
                        e.check && i.push(e.tb_id)
                    }), t.sub_folders && t.sub_folders.length > 0 && e(t.sub_folders)
                })
            }
            if (0 == a.chartAddView.tabIndex) {
                if (!a.chartAddView.selectedTbId) return void l(a.tips["dash.plzSelectTable"]);
                a.chartAddView.selectedTpl ? s.open({
                    templateUrl: "/static/chartTemplate/view/ngdialog_match_field.html",
                    scope: a,
                    data: {
                        selectedTpl: a.chartAddView.selectedTpl,
                        selectedTbId: a.chartAddView.selectedTbId,
                        chooseTableOk: C
                    },
                    className: "ngdialog-theme-default chart-tpl-field",
                    controller: t
                }) : a.chartAddView.chooseTableOk(a.chartAddView.selectedTbId, "normal")
            } else {
                var i = [],
                    n = 2 == a.chartAddView.tabIndex ? "custom" : "gis";
                e(a.chartAddView.folderList), i.length ? a.chartAddView.chooseTableOk(i, n) : l(a.tips["dash.plzSelectTable"])
            }
        }

        function w(e) {
            ! function (t) {
                for (var a = 0, i = t.length; a < i; a++) {
                    t[a].tb_id == e.tb_id && (t[a].check = e.check);
                    for (var n = 0, r = t[a].tb_list.length; n < r; n++) t[a].tb_list[n].tb_id == e.tb_id && (t[a].tb_list[n].check = e.check)
                }
            }(a.chartAddView.folderList)
        }

        function C(t, n, r) {
            function d() {
                a.ngDialogData.addGridItem();
                var e = 0;
                bdp.bdpPageStatus.isUnderDataScreen() && (e = 1), bdp.bdpPageStatus.isUnderAdvDash() && (e = 2);
                var o = {
                    dsh_id: a.ngDialogData.currDash.dashSelected,
                    tb_id: t,
                    dsh_meta: {
                        charts: a.ngDialogData.getClearSaveMeta(a.ngDialogData.dashStandardItems, !0)
                    },
                    type: n,
                    category: e
                };
                r && angular.isFunction(r) ? r(o).then(u) : i.chart.create(o).then(u)
            }
            if (!t) return void l(a.tips["dash.plzSelectTable"]);
            var c, p, u = function (t) {
                if ("0" == t.status) {
                    s.closeAll(), $.cookie("grid_index", "");
                    var i = t.result.ct_id,
                        r = {
                            normal: "chart_edit",
                            gis: "gis_edit",
                            custom: "custom_chart_edit"
                        },
                        d = r[n] || "chart_edit";
                    if (e.creatingChart = !0, p) {
                        var u = o.path();
                        c && (u += a.ngDialogData.currDash.activeProjId), p && (u += a.ngDialogData.currDash.dashSelected), window.setTimeout(function () {
                            window.location.href = window.location.href.replace(o.path(), u.replace("dash_edit", d) + "/" + i), window.location.reload()
                        }, 100)
                    }
                    if (s.closeAll(), !p) {
                        var h, f;
                        u = o.path().replace("/mode/adv", ""), h = a.chartAddView.isAdvDashEdit ? "adv_dash_edit" : a.chartAddView.isAdvDash ? "dash_edit" : a.chartAddView.isDataScreenEdit ? "data_screen_edit" : a.chartAddView.isDataScreen ? "data_screen" : "dash_edit", f = h ? "?page_referrer=" + h : "", u = u.replace(h, d), u = u + "/" + i + f, o.url(u)
                    }
                } else a.ngDialogData.dashStandardItems.pop(), l(+t.status)
            };
            if (a.ngDialogData.currDash.dashSelected) return d();
            var h = function () {
                var e = {
                    name: "仪表盘1",
                    proj_id: a.ngDialogData.currDash.activeProjId
                };
                return i.dashboard.create(e).success(function (e) {
                    e = e.data || e, "0" === e.status && (a.ngDialogData.currDash.dashSelected = e.result.dsh_id, a.dashTitle = "仪表盘1", p = !0, d())
                })
            };
            void 0 == a.ngDialogData.currDash.activeProjId ? i.project.create({
                name: "文件夹1"
            }).success(function (e) {
                e = e.data || e, "0" === e.status && (a.ngDialogData.currDash.activeProjId = e.result.proj_id, c = !0, h())
            }) : h()
        }
        a.init = function () {
            var e = o.path();
            a.chartAddView = {
                isDataScreen: e.indexOf("data_screen/") > -1,
                isDataScreenEdit: e.indexOf("data_screen_edit/") > -1,
                isAdvDashEdit: e.indexOf("adv_dash_edit") >= 0 && e.indexOf("mode/adv") >= 0,
                isAdvDash: e.indexOf("dash_edit") >= 0 && e.indexOf("mode/adv") >= 0 && e.indexOf("adv_dash_edit") < 0,
                tabIndex: 0,
                tplTypeList: [],
                selectedTbId: "",
                selectedTpl: null,
                selectedTplType: "",
                tplList: [],
                query: "",
                folderList: [],
                original_folderList: [],
                turnOffGuide: v,
                showTab: b,
                confirm: y,
                changeChecked: w,
                chooseType: m,
                chooseTpl: _,
                chooseTableOk: C
            }, a.loadingStatus.loadingFolders = !0, a.chartAddView.showTab(0), h(), f(g)
        }, a.init(), a.$on("recoverFolderList", function (e, t) {
            a.chartAddView.folderList = t
        }), c(["dash.plzSelectTable"], a)
    }

    function t(e, t, a, i, n) {
        function r() {
            a.field.getList(e.ngDialogData.selectedTbId).then(function (t) {
                if ("0" == t.status) {
                    e.fieldList = t.result.schema, e.fidToName = {}, e.tbType = t.result.tb_type, angular.forEach(e.fieldList, function (t, a) {
                        e.fidToName[t.fid] = t.name, 0 === t.is_build_aggregated ? t.field_type = "common" : t.is_build_aggregated > 0 && (t.hasOwnProperty("param") && "group" == t.param.type ? t.field_type = "group" : t.field_type = "calc")
                    });
                    for (var a = e.fieldList.length; a--;) 1 == e.fieldList[a].is_build_aggregated && e.fieldList.splice(a, 1)
                }
            })
        }

        function o(t) {
            a.chart_tpl.info(t).then(function (t) {
                if ("0" == t.status) {
                    var a = t.result.tpl_info.fid_explain;
                    e.tplMatchInfo.tplFields = a
                }
            })
        }

        function s() {
            var a = e.ngDialogData.selectedTpl;
            a.chart_options = {
                theme: 1 == +t.usedThemeId ? "dark" : "default",
                ct_id: a.ct_id,
                is_chart_tpl: 1,
                optional: {}
            }
        }
        e.tplMatchInfo = {
            tplFields: [],
            matchFields: []
        }, 
        e.fieldDragging = null, 
        e.fieldList = [], 
        e.fidToName = {}, 
        e.tbType = "", 
        e.matchTabIndex = 1, 
        e.showTab = function (t) {
            e.matchTabIndex = t, 2 == t && s()
        }, 
        e.dragThisField = function (t, a, i, n) {
            e.fieldDragging = i
        }, 
        e.dropFieldMatch = function (t, a, r) {
            if (e.fieldDragging) {
                for (var o = e.tplMatchInfo.matchFields, s = o.length; s--;)
                    if (o[s] && o[s].fid == e.fieldDragging.fid) return i(n.instant("chartTemplate.duplicateUseField"));
                if (e.tplMatchInfo.tplFields[r].data_type != e.fieldDragging.data_type) return i(n.instant("chartTemplate.dataTypeNotMatch"));
                e.tplMatchInfo.matchFields[r] = e.fieldDragging
            }
        }, 
        e.optionsList = {}, 
        e.autoMatch = function () {
            function t(t, a) {
                return !(!t || i[t.fid]) && (i[t.fid] = !0, e.tplMatchInfo.matchFields[a] = t, !0)
            }
            e.tplMatchInfo.matchFields = [];
            var a = {};
            e.fieldList.forEach(function (e) {
                a[e.data_type + ":" + e.name] = e, a[e.data_type + ":" + e.original_name] = e, a[e.data_type] || (a[e.data_type] = []), a[e.data_type].push(e)
            });
            var i = {};
            e.tplMatchInfo.tplFields.forEach(function (e, i) {
                var n = e.data_type + ":" + e.title;
                t(a[n], i)
            }), e.tplMatchInfo.tplFields.forEach(function (i, n) {
                if (!e.tplMatchInfo.matchFields[n]) {
                    var r = a[i.data_type];
                    if (angular.isArray(r))
                        for (; r[0] && !t(r.shift(), n););
                    e.tplMatchInfo.matchFields[n]
                }
            })
        }, 
        e.chartTpl = function () {
            var t = {},
                r = e.tplMatchInfo.tplFields,
                o = e.tplMatchInfo.matchFields,
                s = !1;
            if (r.forEach(function (e, a) {
                    if (o[a]) return t[e.fid] = o[a].fid;
                    s = !0
                }), s) return void i(n.instant("chartTemplate.plzFillAllTplFields"));
            var l = function (i) {
                var n = 0;
                bdp.bdpPageStatus.isUnderDataScreen() && (n = 1), bdp.bdpPageStatus.isUnderAdvDash() && (n = 2);
                var r = {
                    tpl_id: e.ngDialogData.selectedTpl.tpl_id,
                    dsh_id: i.dsh_id,
                    tb_id: i.tb_id,
                    used_origin_fids_map: t,
                    dsh_meta: i.dsh_meta,
                    category: n
                };
                return a.chart_tpl.createChart(r)
            };
            e.ngDialogData.chooseTableOk(e.ngDialogData.selectedTbId, "normal", l)
        },
            function () {
                r(), 
                o(e.ngDialogData.selectedTpl.tpl_id)
            }()
    }
    angular.module("BC.controllers.dashboard")
        .controller("chartAddCtrl", e),
        e.$inject = ["$rootScope", "$scope", "commonService", "commonHttp", "$http", "$location", "ngDialog", "errHint", "$q", "$jsTipTranslate", "$timeout", "guideService"],
        t.$inject = ["$scope", "$rootScope", "commonService", "errHint", "operatorHelpLink", "$http", "$jsTipTranslate", "$translate"]
}();

function () {
    angular.module("BC.controllers.dashUpload", ["ngDragDrop", "gridster"])
        .controller("DashUploadController", ["$scope", "$rootScope", "commonService", "$timeout", "$location", "ngDialog", "$stateParams", "$state", "commonHttp", "errHint", "$jsTipTranslate", "capacityHint", function (e, t, a, i, n, r, o, s, l, d, c, p) {
            function u() {
                angular.element("#dashUploadFile").find("input").click()
            }
            e.isPersonal = !1,
                e.$watch(function () {
                        return t.enterprise_type
                    },
                    function (a) {
                        3 == t.enterprise_type && (e.isPersonal = !0)
                    }),
                e.setCsvDelimiter = function () {
                    var t = e.csvData.csv_terminate;
                    return "other" == e.csvData.csv_terminate && (t = e.csvData.csv_other, t.length > 1) ? void d(e.tips["upload.onlyOneDelimiter"]) : t ? (e.uploadData.field_terminate = t, void e.$broadcast("fileInputChange", e.hasFile)) : void d(e.tips["upload.csvDesc"])
                },
                e.uploadData = {
                    opt: 1,
                    folder_id: "folder_root"
                };
            e.uploadMethod = function () {
                e.operate_type = "add", e.uploadData.opt = 1, e.uploadDialogTitle = e.tips["wb.uploadData"], e.choose_file = !0, u()
            },
                e.onFileInputChange = function (a) {
                    e.hasFile = a && a.length, e.file_name = e.hasFile ? a[0].name : e.tips["wb.clickToUpload"];
                    var i = t.personalInfo,
                        n = i.capacity,
                        r = a[0].size;
                    if ("personal" == t.global.domain && r + i.used > n) return void p();
                    if (a[0].size >= 52428800) {
                        var o = a[0].size / (1 << 20);
                        return e.status = "error", e.errMsg = e.tips["upload.fileSizeError"] + parseInt(o) + "M", void(e.$$phase || e.$digest())
                    }
                    /\.csv$/.test(e.file_name) ? (e.status = "setCsv", e.dialogTitle = e.tips["wb.setCsvTitle"], e.isCsv = 1, e.csvData = {
                        csv_terminate: "comma",
                        csv_other: ""
                    }) : (e.isCsv = 0, e.$broadcast("fileInputChange", a)), e.uploadData.size = a[0].size, e.show_adding_db(), e.$$phase || e.$digest()
                },
                e.uploadOption = {},
                e.show_adding_db = function (t) {
                    e.uploadOption.method = t, e.uploadOption.default_tb = t ? e.selected.tb.dstb_id : void 0, e.uploadOption.excel = null;
                    var t = "";
                    e.isCsv || (e.status = "loading", e.dialogTitle = e.tips["wb.isUploading"]), e.upload_dialog = r.open({
                        template: "/static/js/user-guide/guide_upload_data.html",
                        className: "ngdialog-theme-default ngdialog-guide-upload" + t + " ",
                        scope: e
                    })
                },
                e.onUpload = function (t) {
                    console.log(e.tips["wb.isUploading"], t), e.status = "loading", e.showProgress = !0, angular.element("#upload-progress .progress-bar").css("width", "0")
                },
                e.onProgress = function (t) {
                    e.uploadProgress = (100 * t).toFixed(2) + "%", angular.element("#upload-progress .progress-bar").css("width", e.uploadProgress)
                },
                e.onError = function (t) {
                    if (23040 == t.data.status) return void p();
                    console.error(e.tips["wb.uploadFailed"], t), e.showProgress = !1, e.status = "error", e.dialogTitle = e.tips["wb.uploadFailed"], e.responseData = t.data, e.errMsg = t.data.errstr
                },
                e.onComplete = function (i) {
                    console.log(e.tips["wb.uploadDone"], i);
                    var n = i.data;
                    if (e.showProgress = !1, e.errSheet = [], 0 == n.status) {
                        e.status = "taskStart", e.dialogTitle = e.tips["wb.isAnalyzing"], e.uploadMsg = e.tips["wb.isAnalyzing"], h = n.result.task_id;
                        f(function (i) {
                            e.sheetList = [], angular.forEach(i.info, function (t) {
                                e.sheetList.push({
                                    check: !1,
                                    name: t.name,
                                    errMsg: t.errmsg ? t.errmsg : ""
                                })
                            });
                            var n = i.excel_id,
                                r = [];
                            angular.forEach(e.sheetList, function (e) {
                                r.push(e.name)
                            });
                            var o = function () {
                                e.status = "taskStart", e.dialogTitle = e.tips["wb.isCreatingWorkSheet"], e.uploadMsg = e.tips["wb.isCreatingWorkSheet"], a.db.excelCreate({
                                    excel_id: n,
                                    sheet_names: angular.toJson(r),
                                    folder_id: "folder_root"
                                }).then(function (t) {
                                    if (0 == t.status) {
                                        var a = [],
                                            i = !1;
                                        angular.forEach(t.result, function (t) {
                                            0 == t.status ? (i = !0, a.push(t.task_id)) : e.errSheet.push(t)
                                        }), i ? (h = a.join(","), f(s)) : (e.status = "complete", e.upload_stat = "analysis", e.dialogTitle = e.tips["wb.uploadDone"], e.createErrMsg = e.errSheet)
                                    } else e.status = "complete", e.upload_stat = "fail", e.errMsg = t.errstr
                                })
                            };
                            1 == e.sheetList.length ? (e.showOffsetInfo(e.sheetList[0].name), o()) : (e.status = "selectSheet", e.dialogTitle = "选择工作表", e.confirmCreateExcel = function () {
                                r = [], angular.forEach(e.sheetList, function (e) {
                                    e.check && r.push(e.name)
                                }), o()
                            });
                            var s = function (a) {
                                var i = !0;
                                if (e.createErrMsg = [], e.errSheetList = [], a.tb_id ? 1 == a.status && (i = !1) : angular.forEach(a, function (t) {
                                        1 == t.status ? (i = !1, e.createErrMsg.push(t)) : e.errSheetList.push(t)
                                    }), e.errSheetList = e.errSheetList.concat(e.errSheet), i) e.upload_stat = "fail";
                                else {
                                    e.upload_stat = "success";
                                    var n = [];
                                    a.tb_id ? n.push(a.tb_id) : angular.forEach(a, function (e) {
                                        1 == e.status && n.push(e.tb_id)
                                    }), e.getFolderList().then(function () {
                                        e.new_tb = [];
                                        var t = !1,
                                            i = {},
                                            r = "";
                                        if (1 == n.length) r = a.tb_id;
                                        else
                                            for (var o in a) {
                                                r = a[o].tb_id;
                                                break
                                            }
                                        var s = bdp.bdpTables.getFolderByTableId(e.originFolderList, r);
                                        angular.forEach(n, function (a) {
                                            for (var n = 0, r = s.tb_list.length; n < r; n++)
                                                if (a == s.tb_list[n].dstb_id) {
                                                    t = g(s.tb_list[n]), i = angular.copy(s.tb_list[n]), t && (i.repeatName = !0, e.no_repeat_name = !1), e.new_tb.push(i);
                                                    break
                                                }
                                        }), e.status = "complete", e.upload_stat = "success", e.dialogTitle = e.tips["wb.uploadDone"]
                                    }), 3 == t.enterprise_type && e.$emit("changeCapacity", "change")
                                }
                            }
                        }, "upload")
                    } else e.onError(i)
                }, e.offsetList = [], e.showOffsetInfo = function (t) {
                var a = e.offsetList;
                angular.forEach(a, function (e) {
                    if (t == e.name && (e.row_offset >= 0 || e.col_offset >= 0)) {
                        var a = e.row_offset,
                            i = e.col_offset;
                        0 == a && 0 == i || d("文件数据处理结果：删除前 " + a + " 行,前 " + i + " 列")
                    } else t != e.name || e.row_offset >= 0 || e.col_offset >= 0 || d(e.errmsg)
                })
            };
            var h, f = function (t, n) {
                a.getTaskStatus(h).then(function (a) {
                    if (!a.result.hasOwnProperty("excel_id"))
                        if (a.result.hasOwnProperty("tb_id")) e.new_tb_id = a.result.tb_id;
                        else {
                            var r = [];
                            for (var o in a.result) r.push(a.result[o]);
                            e.new_tb_id = r[0].tb_id
                        }
                    if (e.offsetList = a.result.info, 0 == a.status) {
                        var s = a.result;
                        if (void 0 !== s.status)
                            if (0 == s.status || 3 == s.status) i(function () {
                                f(t, n)
                            }, 1e3);
                            else if (2 == s.status) e.status = "complete", e.upload_stat = "fail", e.errMsg = s.error_msg || s.errstr;
                            else {
                                if (!t) return;
                                t(s)
                            } else {
                            var l = 0;
                            if (angular.forEach(s, function (e, t) {
                                    0 != e.status && 3 != e.status || (l += 1)
                                }), l > 0) i(function () {
                                f(t, n)
                            }, 1e3);
                            else {
                                if (!t) return;
                                t(s)
                            }
                        }
                    } else e.status = "complete", e.upload_stat = "fail", e.errMsg = e.tips["wb.analysisFailed"]
                })
            };
            e.getFolderList = function () {
                function t(t) {
                    if (e.folderList = [], t.map(function (t) {
                            e.folderList.push(t)
                        }), e.originFolderList = t, e.original_folderList = t, e.no_datasource = bdp.bdpTables.checkNoTableInFolder(t, "list"), e.no_datasource) return !1
                }
                return a.folder.getList().then(function (e) {
                    if (e) return t(e)
                })
            };
            var g = function (t) {
                function a(e) {
                    angular.forEach(e, function (e) {
                        i || (angular.forEach(e.tb_list, function (e) {
                            e.tb_id != t.tb_id && e.name == t.name && (i = !0)
                        }), !i && e.sub_folders && e.sub_folders.length > 0 && a(e.sub_folders))
                    })
                }
                var i = !1;
                return a(e.folderList), i
            };
            e.no_repeat_name = !0, e.rename_tb = function (t, i) {
                var n = i.name;
                return i.name = t, g(i) ? (i.repeatName = !0, i.name = n, d(e.tips["wb.changeWorkSheetName"]), void(e.no_repeat_name = !1)) : (i.repeatName = !1, e.no_repeat_name = !0, angular.forEach(e.folderList[0].tb_list, function (e) {
                    e.tb_id == i.tb_id && (e.name = i.name)
                }), a.tb.modify(angular.toJson([i])).success(function (t) {
                    0 == t.status ? (d(e.tips["wb.editSuccesss"]), e.getFolderList()) : e.getFolderList()
                }), t)
            }, e.preview_current_tb = function () {
                if (e.no_repeat_name) {
                    var t = {
                        tb_id: e.new_tb_id
                    };
                    e.chooseTableOk(t.tb_id)
                }
            }, e.closeDialog = function () {
                e.upload_dialog.close()
            }, e.checkAll = function (t) {
                var a = t.currentTarget.checked;
                e.selectAll = a, angular.forEach(e.sheetList, function (e) {
                    e.errMsg || (e.check = a)
                })
            }, e.reUpload = function () {
                e.uploadMethod()
            }, e.resetUpload = function () {
                angular.element("#guideUploadFile").find("input").val(""), e.operate_type = "add", e.uploadData.opt = 1, e.uploadDialogTitle = "上传数据", e.choose_file = !0
            }, e.modify = function () {
                if (e.dashStandardItems.sort(function (e, t) {
                        return e.row - t.row
                    }), !e.dashTitle) return void alert(e.tips["dash.titleRequired"]);
                var t = angular.copy(e.dashStandardItems);
                angular.forEach(t, function (e) {
                    e.children[0].meta = {
                        ct_id: e.children[0].meta.ct_id
                    }
                });
                var i;
                return i = {
                    access_token: $.cookie("token"),
                    dsh_id: e.dashSelected,
                    data: angular.toJson({
                        name: e.dashTitle,
                        label: e.dashLabel || "",
                        comment: e.dashComment || "",
                        meta: {
                            charts: t
                        }
                    })
                }, a.dashboard.modify(i).success(function (t) {
                    "0" != t.status ? ("3204" == t.status && alert(e.tips["dash.titleDuplicate"]), errorHandle(t)) : getGlobalFilterItem(e.dashSelected)
                })
            }, c(["wb.isUploading", "wb.uploadFailed", "wb.analysisFailed", "wb.uploadDone", "wb.isAnalyzing", "wb.isCreatingWorkSheet", "wb.selectWorkSheet", "wb.editSuccesss", "wb.changeWorkSheetName", "upload.csvDesc", "upload.onlyOneDelimiter"], e)
        }])
}();

function () {
    angular.module("BC.controllers.chartEdit", ["ngDragDrop"])
        .controller("ChartController", ["$scope", "$rootScope", "$timeout", "$interval", "$location", "$stateParams", "ngDialog", "commonService", "chartType", "chartTypeTip", "errHint", "commonHttp", "$http", "$q", "$jsTipTranslate", "formulaKeyMap", "dateNameMap", "setAdvanceAggregatorName", "formatFieldPercentile", "$translate", "formulaService", "chartEditService", function (e, t, a, i, n, r, o, s, l, d, c, p, u, h, f, g, m, v, b, y, w, C) {
            function x() {
                var e = r.page_referrer,
                    a = t.wsId ? t.wsId + "/" : "",
                    i = t.wsId ? "/dash_edit_ws/" : "/dash_edit/";
                e && (i = t.wsId ? e + "_ws/" : e + "/");
                var n = i + a + ge + "/" + me;
                return ["adv_dash_edit"].indexOf(e) >= 0 && (n += "/mode/adv"), n
            }

            function k(e, t, a) {
                if (e.tb_conditional_formatting && e.tb_conditional_formatting.length > 0) {
                    var i = e.tb_conditional_formatting.length;
                    if (a)
                        for (var n = i - 1; n >= 0; n--) {
                            var r = e.tb_conditional_formatting[n];
                            "row_summary" === r.fid && r.uniq_id !== t && e.tb_conditional_formatting.splice(n, 1)
                        } else if (t)
                        for (var n = 0; n < i; n++) {
                            var r = e.tb_conditional_formatting[n];
                            if (t && r.uniq_id === t) {
                                e.tb_conditional_formatting.splice(n, 1);
                                break
                            }
                        }
                }
            }

            function D(e, t, a) {
                if (e.advanced_sort && e.advanced_sort.length > 0) {
                    var i = e.advanced_sort.length;
                    if (a)
                        for (var n = i - 1; n >= 0; n--) {
                            var r = e.advanced_sort[n];
                            "row_summary" === r.fid && r.uniq_id !== t && e.advanced_sort.splice(n, 1)
                        } else if (t)
                        for (var o = 0; o < i; o++) {
                            var s = e.advanced_sort[o];
                            if (s.uniq_id == t) {
                                e.advanced_sort.splice(o, 1);
                                break
                            }
                        }
                }
                e.advanced_sort && 0 !== e.advanced_sort.length || (e.is_advanced_sort = 0)
            }

            function S(e) {
                for (var t, a = 0, i = e.y.length; a < i; a++) "row_summary" != e.y[a].fid || e.y[a].parent_uniq_id || (t = e.y[a].uniq_id);
                return t
            }

            function T(e, t) {
                var a = S(e);
                if (t.row_setting) {
                    if (e.tb_conditional_formatting && e.tb_conditional_formatting.length > 0)
                        for (var i = e.tb_conditional_formatting.length, n = i - 1; n >= 0; n--) {
                            var r = e.tb_conditional_formatting[n];
                            r.uniq_id === t.row_setting.uniq_id && e.tb_conditional_formatting.splice(n, 1)
                        }
                    if (e.advanced_sort && e.advanced_sort.length > 0)
                        for (var i = e.advanced_sort.length, n = i - 1; n >= 0; n--) {
                            var r = e.advanced_sort[n];
                            r.uniq_id === t.row_setting.uniq_id && e.advanced_sort.splice(n, 1)
                        }
                    e.advanced_sort && 0 !== e.advanced_sort.length || (e.is_advanced_sort = 0)
                }(!e.compare_axis || !e.compare_axis.length || e.y.length < 1 || 1 == e.compare_axis.length && "virtual" == e.compare_axis[0].data_type) && (e.tb_statistic && (e.tb_statistic.number_row = !1), e.y.forEach(function (e, t) {
                    delete e.row_setting
                }), k(e, a, !0), D(e, a, !0)), (1 == e.y.length && "virtual" == e.y[0].data_type || !e.y.length) && (e.tb_statistic && (e.tb_statistic.row = !1, e.tb_statistic.col = !1), e.y = [], k(e, a), D(e, a))
            }

            function I(e) {
                if (e.tb_statistic && e.tb_statistic.subtotal) {
                    e.x.length;
                    e.tb_statistic.subtotal_setting = {
                        dimensions: []
                    }
                }
            }

            function L(e) {
                var t = e.width_opts;
                if (("C200" === e.chart_type || e.tb_flip) && t)
                    for (var a in t) {
                        var i = 1 * a;
                        Number.isNaN(i) || delete t[a]
                    }
            }

            function A(e) {
                var t = e.virtual_wordwrap,
                    a = e.compare_axis;
                if (a && t && ("C200" === e.chart_type || e.tb_flip))
                    for (var i = 0, n = a.length; i < n; i++) {
                        var r = a[i];
                        if ("virtual" == r.data_type) return void(t.index = i)
                    }
            }

            function E(e, t) {
                if (t && "C200" === e.chart_type && e.advanced_sort && e.advanced_sort.length > 0)
                    for (var a = 0, i = e.advanced_sort.length; a < i; a++) {
                        var n = e.advanced_sort[a];
                        if (t.uniq_id) {
                            if (t.uniq_id == n.uniq_id) {
                                e.advanced_sort.splice(a, 1);
                                break
                            }
                        } else if (t.fid === n.fid) {
                            e.advanced_sort.splice(a, 1);
                            break
                        }
                    }
            }

            function F(t) {
                if (t) {
                    var a = e.selected_type,
                        i = null;
                    a && (i = e.chart_ops.meta.level[e.drill_level], "C200 C230 C250 C261 C271 C300 C310 C330".indexOf(a) < 0 && !i.split_compare);
                    var n = t.x || [],
                        r = t.y || [],
                        o = t.compare_axis || [];
                    1 != r.length || o.length || (0 == n.length || 1 == n.length && "string" == n[0].data_type ? t.title_formula = "TOTAL" : 1 == n.length && "date" == n[0].data_type && (t.title_formula = "LAST"))
                }
            }

            function M(t, a) {
                return s.field.getFilteredRange(e.ct_id, a, t).then(function (e) {
                    var t = e;
                    return 0 == t.status ? t.result : null
                })
            }

            function j(a) {
                M(a.meta.color_setting.field, e.tb_id).then(function (e) {
                    e && e.total <= 100 && t.$emit("triggerBuildEnumColorMap", e.result, !!a.reset, !!a.bindToMeta)
                }).then(function () {
                    a.callback()
                })
            }

            function O(t) {
                var a, i, n = e.chart_ops.meta.level[e.drill_level];
                for (a = 0, i = n.y.length; a < i; a++)
                    if (n.y[a].fid == t) return !1;
                for (a = 0, i = n.x.length; a < i; a++)
                    if (n.x[a].fid == t) return !1;
                if (n.compare_axis)
                    for (a = 0, i = n.compare_axis.length; a < i; a++)
                        if (n.compare_axis[a].fid == t) return !1;
                if (n.y_optional)
                    for (a = 0, i = n.y_optional.length; a < i; a++)
                        if (n.y_optional[a].fid == t) return !1;
                return !0
            }

            function P() {
                return !e.chart_ops || void 0 != e.chart_ops.name && "" !== e.chart_ops.name || (c(e.tips["chart.emptyChartName"]), !1)
            }

            function N() {
                if (e.chart_ops) return e.originChartTitle != e.chart_ops.name
            }

            function B(t, a) {
                angular.forEach(a, function (a, i) {
                    if (a.QoQ && (a.QoQ = t), a.YoY ? ("year" === t || ["quarter", "month", "week"].indexOf(t) > -1 && "year" !== a.YoY) && (delete a.YoY, delete a.yoyQoqType, delete a.formatter) : a.yoyQoqSetting && "custom" === a.yoyQoqSetting.type && delete a.yoyQoqSetting, a.advance_aggregator)
                        if (["retention", "repetition", "activity"].indexOf(a.advance_aggregator.type) > -1) a.advance_aggregator.setting.date_field_type = t;
                        else if ("running" === a.advance_aggregator.type) {
                            var n = {
                                    day: "week",
                                    week: "month",
                                    month: "quarter",
                                    quarter: "year",
                                    year: "all"
                                },
                                r = {
                                    week: ["day"],
                                    month: ["day", "week"],
                                    quarter: ["day", "week", "month"],
                                    year: ["day", "week", "month", "quarter"],
                                    all: ["day", "week", "month", "quarter", "year"]
                                };
                            e.chart_ops.meta.level[e.drill_level].x[0].granularity_name ? a.advance_aggregator.setting.reset_period = "all" : r[a.advance_aggregator.setting.reset_period].indexOf(t) < 0 && (a.advance_aggregator.setting.reset_period = n[t])
                        }
                })
            }

            function z(e, t) {
                var a = t.offset.top < 37 || t.offset.left < 230 - t.item.width() || t.offset.left > $(".chart-right").offset().left - 10;
                return a = a || t.offset.top > $("#chartBox").offset().top - 5
            }

            function R(e, t) {
                delete e.granularity, t.sort && e.fid === t.sort.fid && delete t.sort, e.is_new && 2 != e.is_build_aggregated || ("number" === e.data_type ? e.aggregator = "SUM" : e.aggregator = "COUNT", e.aggregator_name = g[e.aggregator]), e.uniq_id || (e.uniq_id = +new Date)
            }

            function q(t) {
                if (t.hasClass("not-sortable")) return e.deleteField = {}, t.sortable.cancel(), !1
            }

            function H(e) {
                var t = e.is_build_aggregated,
                    a = e.dragFieldType,
                    i = e.dragFieldFormula || "";
                return i = i.toLowerCase(), 1 !== t || "date" == a && (i.indexOf("MAX_DATE") >= 0 || i.indexOf("max_date") >= 0 || i.indexOf("MIN_DATE") >= 0 || i.indexOf("min_date") >= 0)
            }

            function G(t, a, i) {
                var n = t.tb_fid,
                    r = t.tb_name,
                    o = t.tb_data_type,
                    s = t.tb_new,
                    l = t.is_build_aggregated,
                    d = t.meta,
                    c = d.chart_type,
                    p = t.axis_field,
                    u = bdpChart.getColorsByType(c, "bdp"),
                    h = [].concat(d.y || [], d.y_optional || []);
                if ("x" === a) I(d), p.push({
                    fid: n,
                    uniq_id: +new Date + (i || 0),
                    name: r,
                    data_type: o,
                    is_new: s,
                    is_build_aggregated: l,
                    granularity: "day"
                });
                else if ("compare_axis" === a) {
                    var f = {
                        fid: n,
                        uniq_id: +new Date + (i || 0),
                        name: r,
                        data_type: o,
                        is_new: s,
                        is_build_aggregated: l,
                        granularity: "day"
                    };
                    if (c === bdpChart.ChartType.Table && 0 === p.length) {
                        var g = de(0, "compare_axis");
                        p.push(g)
                    }
                    p.push(f)
                } else {
                    var m = {
                            check: "num",
                            num: {
                                digit: 0,
                                millesimal: !0
                            },
                            percent: {
                                digit: 0
                            }
                        },
                        _ = e.getDefaultAggr(d, o, l),
                        v = ($.extend(!0, {}, p), {
                            fid: n,
                            uniq_id: +new Date + (i || 0),
                            name: r,
                            data_type: o,
                            is_new: s,
                            is_build_aggregated: l,
                            aggregator: _.aggregator,
                            aggregator_name: _.name,
                            formatter: 1 == s ? "" : ["string", "date", "sub_date"].indexOf(o) > -1 ? m : ""
                        }),
                        b = c === bdpChart.ChartType.Table,
                        y = d.tb_statistic && d.tb_statistic.row && "right" == d.tb_statistic.row_pos,
                        w = d.tb_statistic && d.tb_statistic.number_row,
                        C = p.length - 1;
                    if (w)
                        for (var x = 1; x < p.length; x++)
                            if ("virtual" === p[x].data_type) {
                                C = x;
                                break
                            }
                    if (b && d.tb_statistic && d.tb_statistic.col && (v.statistic_method = "SUM"), (b && y && d.tb_statistic || w) && "y" === a) p.splice(C, 0, v);
                    else {
                        var k = h.some(function (e) {
                            return !!e.series_color
                        });
                        k && (v.series_color = u[h.length % u.length]), p.push(v)
                    }
                    if (d.color_setting && 0 == +d.color_setting.mode) return void j({
                        meta: d,
                        bindToMeta: !0,
                        callback: function () {
                            Z(!1, "add", !1)
                        }
                    })
                }
            }

            function W(e, t, a) {
                var i = e.y.concat(e.y_scatter);
                angular.forEach(i, function (e, t) {
                    e.aggregator || 1 == e.is_build_aggregated || (e.aggregator = V(e.data_type))
                })
            }

            function J(t) {
                e.global.show_discrete = "C280" === t.chart_type;
                for (var a = 0; a < t.y.length; a++)
                    if ("string" === t.y[a].data_type || 1 == t.y[a].is_build_aggregated) {
                        e.global.show_discrete = !1;
                        break
                    }
                if (t.y_scatter)
                    for (var i = 0; i < t.y_scatter.length; i++)
                        if ("string" === t.y_scatter[i].data_type || 1 == t.y_scatter[i].is_build_aggregated) {
                            e.global.show_discrete = !1;
                            break
                        }
            }

            function V(e) {
                switch (e) {
                    case "string":
                    case "date":
                    case "sub_date":
                        return "COUNT";
                    case "number":
                        return "SUM";
                    default:
                        return ""
                }
            }

            function U(e) {
                return [fe.BubbleMap, fe.AreaMap].indexOf(e) > -1
            }

            function Y(e) {
                return [fe.NStackColumn, fe.NStackBar, fe.NStackArea, fe.PStackColumn, fe.PStackBar, fe.PStackArea].indexOf(e) > -1
            }

            function X(t) {
                var a = e.chart_type;
                for (var i in t)
                    if (t.hasOwnProperty(i))
                        for (var n = 0; n < a.length; n++)
                            if (a[n].type == i) {
                                a[n].status = t[i];
                                break
                            }
            }

            function Q(t, a) {
                var i, n, r = e.chart_ops.meta.level[e.drill_level],
                    o = r.x.length,
                    s = r.compare_axis ? r.compare_axis.length : 0,
                    l = r.y.length + (r.y_scatter ? r.y_scatter.length : 0) + (r.y_optional ? r.y_optional.length : 0),
                    d = e.chart_ops.meta.level_fields.length;
                r.y.forEach(function (e) {
                    "virtual" === e.data_type && l--
                }), r.compare_axis && r.compare_axis.forEach(function (e) {
                    "virtual" === e.data_type && s--
                });
                var c = l <= 2 && 0 === s;
                if (r.show_y_axis_optional) return o > 1 ? (n = "C250" === t && 2 == o ? "C250" : "C200", i = {
                    C210: !1,
                    C211: !1,
                    C212: !1,
                    C220: !1,
                    C230: !1,
                    C240: !1,
                    C241: !1,
                    C242: !1,
                    C243: !1,
                    C200: !0,
                    C250: 2 == o,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: !1,
                    C290: !1,
                    C300: !1,
                    C310: !1,
                    C320: !1,
                    C330: !1,
                    C340: !1,
                    C350: !1,
                    C351: !1,
                    C352: !1,
                    C360: !1,
                    C370: !1
                }) : 0 === o ? (n = l > 0 ? "C250" : "", i = {
                    C210: l > 0,
                    C211: !1,
                    C212: !1,
                    C220: !1,
                    C230: l > 0,
                    C240: l > 0,
                    C241: !1,
                    C242: !1,
                    C243: !1,
                    C200: l > 0,
                    C250: l > 0,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: l > 0 && c,
                    C290: !1,
                    C300: !1,
                    C310: l > 0,
                    C320: l > 0,
                    C330: l > 1 && 0 === s,
                    C340: !1,
                    C350: l > 0,
                    C351: !1,
                    C352: !1,
                    C360: !1,
                    C370: !1
                }) : (n = "C250", i = {
                    C210: !0,
                    C211: !0,
                    C212: !0,
                    C220: !0,
                    C230: 1 === l,
                    C240: !0,
                    C241: !0,
                    C242: !0,
                    C243: !0,
                    C200: !0,
                    C250: !0,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: c,
                    C290: !0,
                    C300: !1,
                    C310: !1,
                    C320: !1,
                    C330: !1,
                    C340: !1,
                    C350: !0,
                    C351: !0,
                    C352: !0,
                    C360: !1,
                    C370: !1
                }), X(i), {
                    defaultType: n,
                    typeStatus: i
                };
                if (0 === o && 0 === l && $("#chartBox").find(".chart").html(""), 0 === o) 0 === l ? (i = {
                    C210: !1,
                    C211: !1,
                    C212: !1,
                    C220: !1,
                    C230: !1,
                    C240: !1,
                    C241: !1,
                    C242: !1,
                    C243: !1,
                    C200: !1,
                    C250: !1,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: !1,
                    C290: !1,
                    C300: !1,
                    C310: !1,
                    C320: !1,
                    C330: !1,
                    C340: !1,
                    C350: !1,
                    C351: !1,
                    C352: !1,
                    C360: !1,
                    C370: !1
                }, X(i)) : ("C200" === t && a ? n = "C200" : "C280" === t ? (r.y.length > 1 || r.y_scatter && r.y_scatter.length > 1) && (n = "C200", t = n) : n = "C210", i = {
                    C210: !0,
                    C211: !1,
                    C212: !1,
                    C220: !1,
                    C230: 0 === s,
                    C240: !0,
                    C241: !1,
                    C242: !1,
                    C243: !1,
                    C200: !0,
                    C250: l > 1,
                    C261: 1 === l,
                    C271: !1,
                    C272: !1,
                    C280: c,
                    C290: l > 2 && s > 0,
                    C300: !1,
                    C310: 1 === l || 2 === l,
                    C320: l > 1 && 0 === s,
                    C330: l > 1 && 0 === s,
                    C340: !1,
                    C350: !0,
                    C351: !1,
                    C352: !1,
                    C360: !1,
                    C370: !1
                }, X(i));
                else if (o > 1) {
                    "C280" !== t ? (n = "C200", "C230" === t && d < 2 ? n = "C360" : "C300" === t && (t = 0 === s && 1 === l ? t : "C200")) : (r.y.length > 1 || r.y_scatter && r.y_scatter.length > 1) && (n = "date" === r.x[0].data_type ? "C220" : "C210", t = n);
                    var p = 2 === o;
                    i = {
                        C210: p && l > 0,
                        C211: p && (l > 1 || 1 == l && s > 0),
                        C212: p && (l > 1 || 1 == l && s > 0),
                        C220: p && l > 0,
                        C230: !1,
                        C240: p && l > 0,
                        C241: p && (l > 1 || 1 == l && s > 0),
                        C242: p && (l > 1 || 1 == l && s > 0),
                        C243: !1,
                        C200: !0,
                        C250: p && l > 1 && l < 3,
                        C261: !1,
                        C271: !1,
                        C272: !1,
                        C280: c,
                        C290: !1,
                        C300: p && 1 === l && 0 === s,
                        C310: !1,
                        C320: p && 1 === l && 0 === s,
                        C330: !1,
                        C340: !1,
                        C350: !1,
                        C351: !1,
                        C352: !1,
                        C360: 1 === l && 0 === s && 0 === d,
                        C370: l < 2 && 0 === s && 0 === d
                    }, X(i)
                } else if (0 === l) i = {
                    C210: !1,
                    C211: !1,
                    C212: !1,
                    C220: !1,
                    C230: !1,
                    C240: !1,
                    C241: !1,
                    C242: !1,
                    C243: !1,
                    C200: !0,
                    C250: !1,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: c,
                    C290: !1,
                    C300: !1,
                    C310: !1,
                    C320: !1,
                    C330: !1,
                    C340: 1 == o && 0 == s && "date" !== r.x[0].data_type && "sub_date" !== r.x[0].data_type,
                    C350: !1,
                    C351: !1,
                    C352: !1,
                    C360: !1,
                    C370: 0 === s && 0 === d
                }, n = "C200", X(i);
                else if (1 === l) {
                    if ("C360" === t) n = "C230";
                    else if ("C370" === t && 0 === s) n = "C370";
                    else if ("C200" === t && "remove" === a) n = "C200";
                    else if ("C243" === t) n = s > 0 ? 1 == s ? "C243" : "C200" : "C240";
                    else {
                        var u = r.x[0].data_type;
                        if (["C230", "C271", "C272"].indexOf(t) >= 0) {
                            var h = "string" === u && 0 === s;
                            "C230" === t ? (n = 0 === s ? t : "C200", t = 0 === s ? t : "C200") : (n = h ? t : "C200", t = h ? t : "C200")
                        } else ["C240", "C241", "C242"].indexOf(t) >= 0 ? (n = "date" === u ? "C220" : "C240", t = "date" === u ? "C220" : "C240") : ["C210", "C211", "C212"].indexOf(t) >= 0 ? (n = "date" === u ? "C220" : "C210", t = "date" === u ? "C220" : "C210") : ["C350", "C351", "C352"].indexOf(t) >= 0 ? (n = "date" === u ? "C220" : "C350", t = "date" === u ? "C220" : "C350") : ["C280", "C290", "C350", "C351", "C352"].indexOf(t) < 0 && (n = "date" === u ? "C220" : "C210", t = "date" === u ? "C220" : "C210")
                    }
                    i = {
                        C210: !0,
                        C211: s > 0,
                        C212: s > 0,
                        C220: !0,
                        C230: 0 === s,
                        C240: !0,
                        C241: s > 0,
                        C242: s > 0,
                        C243: 1 == s,
                        C200: !0,
                        C250: !1,
                        C261: !1,
                        C271: "string" === r.x[0].data_type && 0 === s,
                        C272: "string" === r.x[0].data_type && 0 === s,
                        C280: c,
                        C290: !0,
                        C300: !1,
                        C310: !1,
                        C320: 0 === s,
                        C330: 0 === s,
                        C340: !1,
                        C350: !0,
                        C351: s > 0,
                        C352: s > 0,
                        C360: !1,
                        C370: 0 === s && 0 === d
                    }, X(i)
                } else "C230" === t ? n = "C212" : "C200" === t ? a ? n = "C200" : (n = "date" === r.x[0].data_type ? "C220" : "C210", t = n) : "C280" === t ? (r.y.length > 1 || r.y_scatter && r.y_scatter.length > 1) && (n = "date" === r.x[0].data_type ? "C220" : "C210", t = n) : "C243" === t && (n = 0 !== s ? "C240" : l > 2 ? "C240" : "C243"), i = {
                    C210: !0,
                    C211: !0,
                    C212: !0,
                    C220: !0,
                    C230: !1,
                    C240: !0,
                    C241: !0,
                    C242: !0,
                    C243: 2 == l && 0 == s,
                    C200: !0,
                    C250: !0,
                    C261: !1,
                    C271: !1,
                    C272: !1,
                    C280: c,
                    C290: !0,
                    C300: !1,
                    C310: !1,
                    C320: !1,
                    C330: !1,
                    C340: !1,
                    C350: !0,
                    C351: !0,
                    C352: !0,
                    C360: !1,
                    C370: !1
                }, X(i);
                return i[t] && (n = t), {
                    defaultType: n,
                    typeStatus: i
                }
            }

            function K() {
                return e.drill_level >= e.chart_ops.meta.level.length && (e.drill_level = e.chart_ops.meta.level.length - 1), e.chart_ops.meta.level[e.drill_level].chart_type
            }

            function Z(t, a, i) {
                var n = K(),
                    r = bdpChart.ChartType,
                    o = Q(n, a),
                    s = e.chart_ops.meta.level[e.drill_level];
                if (t && "" !== e.chart_type) return void re();
                if (o.defaultType) s.chart_type = o.defaultType;
                else
                    for (var l in o.typeStatus)
                        if (o.typeStatus.hasOwnProperty(l)) {
                            if (o.typeStatus[l]) {
                                s.chart_type = l;
                                break
                            }
                            e.chart_ops.meta.level[e.drill_level].chart_type = ""
                        } if (n === r.Biax && s.chart_type !== r.Biax && (s.y = s.y_optional ? s.y.concat(s.y_optional) : [], delete s.y_optional, s.show_y_axis_optional = !1), n === r.Gauge && s.chart_type !== r.Gauge && delete s.tb_conditional_formatting, n === r.Scatter && s.chart_type !== r.Scatter && ee(s), [r.Line, r.Area, r.NStackArea, r.PStackArea, r.Biax].indexOf(s.chart_type) > -1 && void 0 === s.use_spline && (s.use_spline = "0"), s.chart_type === r.Pie && (void 0 === s.shape && (s.shape = "pie"), void 0 === s.show_connector_label && (s.show_connector_label = !0)), s.chart_type === r.Pie && s.compare_axis && s.compare_axis.length && (delete s.shape, s.chart_type = "C210"), [r.Sunburst, r.Sankey].indexOf(n) > -1 && [r.Sunburst, r.Sankey].indexOf(s.chart_type) < 0 && delete s.color_setting, s.chart_type === r.TreeMap ? s.hover_mode = "single" : n === r.TreeMap && (s.hover_mode = "multiple"), (s.y.length > 1 || s.chart_type === r.Biax || s.compare_axis && s.compare_axis.length) && s.color_setting && !$.isEmptyObject(s.color_setting) && 1 == s.color_setting.mode && delete s.color_setting, pe(s), s.sort)
                    if ("y" === s.sort.axis) {
                        for (var d = 0, c = 0; c < s.y.length; c++)
                            if (s.y[c].uniq_id === s.sort.uniq_id) {
                                d = c;
                                break
                            }
                        s.sort.col_index = s.x.length + d
                    } else if ("y_optional" === s.sort.axis) {
                        for (var d = 0, c = 0; c < s.y_optional.length; c++)
                            if (s.y_optional[c].uniq_id === s.sort.uniq_id) {
                                d = c;
                                break
                            }
                        s.sort.col_index = s.x.length + s.y.length + d
                    }("C220" == n && "C220" != s.chart_type && window.bdpChart.helper.timePredicted.isOpen(n, s.y) || s.x && (1 != s.x.length || "date" != s.x[0].data_type)) && angular.forEach(s.y, function (e, t) {
                    delete e.time_seires_setting
                }), F(s), i ? te({
                    set_warn: !0
                }) : te()
            }

            function ee(e) {
                e.y = e.y_scatter ? e.y.concat(e.y_scatter) : e.y;
                for (var t = 0, a = e.y.length; t < a; t++) {
                    var i = e.y[t];
                    "" == i.aggregator && 1 != i.is_build_aggregated && (i.aggregator = V(i.data_type), i.aggregator_name = g[i.aggregator] || "")
                }
                delete e.y_scatter
            }

            function te(t) {
                t && ((t.only_redraw || t.not_need_redraw || t.only_save_meta) && (e.saveChartOnlyRedraw = !0), t.is_drill_chart && (e.saveChartOnlyRedraw = !1));
                var a = e.chart_ops.meta.level[0].y[0];
                if (!P()) return !1;
                "C310" === e.chart_ops.meta.level[0].chart_type && (e.chart_ops.name = a.nick_name ? a.nick_name : a.name, $(".nick-name-value").text(e.chart_ops.name), $(".set-layer-title").remove());
                var i = e.chart_ops.meta.level[e.drill_level],
                    n = i.y,
                    l = n[0],
                    d = n[n.length - 1],
                    c = null;
                if ("right" == t) {
                    if (d && ("row_summary" != d.fid || d.parent_uniq_id)) {
                        var c = n.shift();
                        n.push(c)
                    }
                } else if ("left" == t && l && "row_summary" != l.fid && !l.parent_uniq_id) {
                    var c = n.pop();
                    n.unshift(c)
                }
                var u = $.extend(!0, {
                    only_save_meta: !1,
                    only_redraw: !1,
                    not_need_redraw: !1,
                    only_refresh_data: !1,
                    closeDialog: !0,
                    is_drill_chart: !!e.drill_level,
                    callback: null
                }, t);
                u.is_drill_chart || $(".drill-crumbs").remove();
                var h = e.chart_ops.meta;
                h.level_fields.forEach(function (e) {
                    i.x.forEach(function (t) {
                        e.uniq_id == t.uniq_id && (e.nick_name = t.nick_name)
                    })
                }), e.serviceFilterList = {};
                for (var f = i.chart_type, g = 0; g < i.x.length; g++) delete i.x[g].show_formula;
                if (i.compare_axis)
                    for (var g = 0; g < i.compare_axis.length; g++) delete i.compare_axis[g].show_formula;
                for (var m = 0; m < i.y.length; m++) delete i.y[m].show_formula;
                if (i.y_optional)
                    for (var _ = 0; _ < i.y_optional.length; _++) delete i.y_optional[_].show_formula;
                if (i.y_scatter)
                    for (_ = 0; _ < i.y_scatter.length; _++) delete i.y_scatter[_].show_formula;
                if (i.color_setting && (delete i.color_setting.is_series, $.isEmptyObject(i.color_setting) && delete i.color_setting), "C200" != f && i.x.length > 0 && "date" == i.x[0].data_type && (i.sort = {}), f === fe.Pie && (i.title_formula = "TOTAL"), f === fe.Sankey) {
                    if (!i.sankey_setting)
                        for (var g = 0; g < e.field_list.length; g++)
                            if (["string", "number"].indexOf(e.field_list[g].data_type) > -1) {
                                i.sankey_setting = {
                                    relate_field_fid: e.field_list[g].fid
                                };
                                break
                            }
                } else f === fe.KPICard && (e.chart_ops.name = a.nick_name ? a.nick_name : a.name, i.split_compare = i.compare_axis && i.compare_axis.length > 0);
                f === fe.WordCloud ? (i.word_count || (i.color_setting = ie(i), i.word_count = e.defaultWordCount, i.smart = !0, i.top && (i.top.enabled = !1)), i.word_result_filter || (i.word_result_filter = {
                    range_type: 0,
                    range_list: []
                })) : (delete i.display_in_3d, delete i.wordcloud_setting, delete i.word_count, delete i.smart, delete i.word_result_filter, e.wordCloudValues = null, i.color_setting && i.color_setting.noSet && delete i.color_setting), [fe.Gauge].indexOf(f) > -1 && (i.split_compare = i.compare_axis && i.compare_axis.length > 0, i.tb_conditional_formatting && 0 === i.tb_conditional_formatting.length && (delete i.tb_conditional_formatting, i.y[0].series_color || (i.y[0].series_color = "#A3ABB0")));
                var v = function (e) {
                        for (var t = i[e], a = 0; a < t.length; a++)(t[a].YoY || t[a].QoQ) && (t[a].formatter = {
                            check: "num",
                            num: {
                                digit: 2,
                                millesimal: !0
                            },
                            percent: {
                                digit: 0
                            }
                        }), delete t[a].YoY, delete t[a].QoQ, delete t[a].yoyQoqType, t[a].yoyQoqSetting && "custom" === t[a].yoyQoqSetting.type && delete t[a].yoyQoqSetting
                    },
                    b = function (e) {
                        for (var t = 0; t < i[e].length; t++) {
                            var a = i[e][t],
                                n = a.yoyQoqSetting;
                            if (n) {
                                if ("custom" === n.type) return;
                                a.formatter = {
                                    check: "num",
                                    num: {
                                        digit: 2,
                                        millesimal: !0
                                    },
                                    percent: {
                                        digit: 0
                                    }
                                }
                            }
                            delete a.yoyQoqSetting
                        }
                    },
                    y = function (e) {
                        for (var t, a = 0; a < i[e].length; a++) t = i[e][a], t.advance_aggregator && ["moving", "running"].indexOf(t.advance_aggregator.type) > -1 && (delete t.advance_aggregator, delete t.formatter)
                    },
                    w = function (e, t) {
                        for (var a = i[e], n = 0; n < a.length; n++) a[n].advance_aggregator && ["retention", "repetition"].indexOf(a[n].advance_aggregator.type) > -1 && (a[n].advance_aggregator.setting.date_field_type = t)
                    };
                if (0 === i.x.length ? (v("y"), y("y"), "C250" === f && i.y_optional && (v("y_optional"), y("y_optional"))) : i.x.length >= 1 && ("date" !== h.level[0].x[0].data_type ? (v("y"), "C250" === f && i.y_optional && v("y_optional")) : (b("y"), w("y", i.x[0].granularity), "C250" === f && i.y_optional && (b("y_optional"), w("y_optional", i.x[0].granularity)))), "C250" == f)
                    for (var C = 0; C < 2; C++) "C212" === i.type_optional[C] && angular.forEach(e.warnSetting.info, function (t, a) {
                        t.axis_type === C && p.get("/api/warn/delete", {
                            ct_id: r.chartId,
                            warn_id: t.warn_id
                        }).then(function (t) {
                            e.warnSetting.info.splice(a, 1), u.set_warn = !0
                        })
                    });
                angular.forEach(h.filter_list, function (e) {
                    e.total > 100 && e.is_config && 0 == e.range.length && (e.is_all = !0, e.is_config = !1)
                }),
                    function (e) {
                        t && 1 == t.is_advanced_sort && (e.is_advanced_sort = 1);
                        var a = e.chart_type,
                            i = [].concat(e.y, e.y_optional || []);
                        if (e.advanced_sort && e.advanced_sort.length > 0) {
                            var n = [];
                            e.advanced_sort.forEach(function (t) {
                                var r = t.axis;
                                if ("date" !== t.data_type || "C200" === a)
                                    if ("x" === r || "compare_axis" === r) {
                                        var o = function (r) {
                                            var o = t.sort_items.sort_item_type;
                                            if (1 == o) {
                                                var s = t.sort_items.aggregator_sort.uniq_id,
                                                    l = "C200" !== a && "uniqIdForSum" === s && i.length > 1,
                                                    d = ae(i, s);
                                                (l || d) && n.push(t)
                                            } else {
                                                var c = 0;
                                                e[r].forEach(function (e, a) {
                                                    e.uniq_id === t.uniq_id && (c = a, t.axis = r)
                                                }), t.originIndex !== c && (t.originIndex = c), (3 !== o || 3 === o && "C261" === a) && n.push(t)
                                            }
                                        };
                                        "x" === r ? ae(e.x, t.uniq_id) ? o("x") : ae(e.compare_axis || [], t.uniq_id) && o("compare_axis") : ae(e.compare_axis || [], t.uniq_id) ? o("compare_axis") : ae(e.x, t.uniq_id) && o("x")
                                    } else "y" === r && ("C200" !== a && e.x.length && "date" === e.x[0].data_type || !(ae(i, t.uniq_id) || "uniqIdForSum" === t.uniq_id && ["C200", "C250", "C310"].indexOf(a) < 0 && e.x.length && "date" !== e.x[0].data_type && e.y.length >= 2) || n.push(t))
                            }), e.advanced_sort = n
                        }
                    }(i),
                    function (e) {
                        !$.isEmptyObject(e.sort) && "y" == e.sort.axis && e.sort.uniq_id && (function (e, t) {
                            for (var a = 0, i = e.length; a < i; a++) {
                                var n = e[a];
                                if (n && t.fid == n.fid && (t.uniq_id == n.uniq_id || "virtual" == n.data_type)) return !0
                            }
                            return !1
                        }(e.y.concat(e.y_optional || []), e.sort) || (e.sort = {})), $.isEmptyObject(e.sort) || "x" != e.sort.axis || function (e, t) {
                            for (var a = 0, i = e.length; a < i; a++) {
                                var n = e[a];
                                if (n && t.fid == n.fid) return !0
                            }
                            return !1
                        }(e.x, e.sort) || (e.sort = {})
                    }(i), J(i), i.y.map(function (e, t) {
                    if (e.BDP_TCF && i.tb_conditional_formatting)
                        for (var a = i.tb_conditional_formatting.length - 1; a >= 0; a--) {
                            var n = i.tb_conditional_formatting[a];
                            n.uniq_id === e.uniq_id && n.fid === e.fid && i.tb_conditional_formatting.splice(a, 1)
                        }
                }), i.tb_conditional_formatting && !i.tb_conditional_formatting.length && delete i.tb_conditional_formatting, i.color_setting && i.color_setting.isDefault && delete i.color_setting;
                var x = angular.copy(h);
                ne(x), e.loadingData = !0;
                var k = {
                    ct_id: _e,
                    data: angular.toJson({
                        meta: x,
                        name: e.chart_ops.name || e.tips["chart.untitledChart"],
                        tb_id: e.chart_ops.tb_id,
                        description: e.chart_ops.description || ""
                    })
                };
                return s.chart.modify(k).success(function (a) {
                    if ("0" === a.status) {
                        if (ue(), u.closeDialog && o.closeAll(), u.callback && "function" == typeof u.callback && u.callback(a), u.only_save_meta) return;
                        if (e.serviceFilterList = angular.copy(h.filter_list), u.only_redraw) {
                            var n = e.$bdpChart;
                            Y(n.getChartType()) && n.chartData.y.reverse(), i.color_setting && i.color_setting.isDefault && delete i.color_setting, n.updateInfo(i, !0)
                        } else u.is_drill_chart && !u.not_need_redraw ? e.draw_chart_url.options._t = (new Date).getTime() : u.not_need_redraw ? e.loadingData = !1 : re();
                        if (t && (t.set_warn || t.getChartInfo)) {
                            oe(t ? {
                                set_warn: t.set_warn,
                                getChartInfo: t.getChartInfo
                            } : {})
                        }
                        e.orginChartTile = e.chart_ops.name
                    } else 90101 == a.status ? o.openConfirm({
                        templateUrl: "/static/partials/dialogTemplates/confirm-dialog.html",
                        className: "ngdialog-theme-default ngDialog-width-320",
                        data: {
                            title: e.tips.tips,
                            message: a.errstr,
                            okValue: e.tips["wb.gotIt"],
                            hideCancel: !0
                        }
                    }).then(function () {
                        e.changeRoute()
                    }) : errorHandle(a)
                })
            }

            function ae(e, t) {
                var a = !1;
                return (e || []).forEach(function (e) {
                    e.uniq_id === t && (a = !0)
                }), a
            }

            function ie(e) {
                return {
                    field: [e.x[0]],
                    aggregator: "",
                    mode: "0",
                    theme: "default",
                    noSet: !0
                }
            }

            function ne(a) {
                angular.forEach(a.level, function (a, i) {
                    for (var n = a.chart_type, r = a.y, o = e.chart_ops.meta.level[i], s = 0; s < r.length; s++) defined(r[s]) || r.splice(s, 1);
                    angular.forEach(r, function (e, t) {
                        "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                    }), a.compare_axis && a.compare_axis.length && a.split_compare ? a.color_setting && $.isEmptyObject(a.color_setting.enum_color_map) && delete a.color_setting : (a.split_compare = !1, delete a.split_compare_setting);
                    var l = a.y_optional;
                    if (angular.forEach(l, function (e, t) {
                            "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                        }), a.hasOwnProperty("y_scatter")) {
                        var d = a.y_scatter;
                        angular.forEach(d, function (e, t) {
                            "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                        })
                    }
                    if ("C271" !== n && "C272" !== n ? delete a.map : a.map || (a.map = {
                            granularity: "province",
                            region: 1
                        }), "C261" !== n && (delete a.gauge_setting, delete o.gauge_setting), "C300" !== n && delete a.sankey_setting, "C320" !== n ? delete a.waterfall_setting : ("C320" === o.chart_type && (o.waterfall_setting || (o.series_theme = "green_contrast_2", o.waterfall_setting = {
                            show_sum: !o.x.length || "date" !== o.x[0].data_type,
                            sum_name: "en" === t.language ? "Sum" : "累计值",
                            color_theme: bdpChart.getColorsByType("C320", "bdp")
                        })), a.waterfall_setting ? (a.waterfall_setting.sum_name || (a.waterfall_setting.sum_name = "en" === e.$parent.language ? "Sum" : "累计值"), defined(a.waterfall_setting.color_theme) || (a.waterfall_setting.color_theme = bdpChart.getColorsByType("C320", "bdp"))) : a.waterfall_setting = {
                            show_sum: !a.x.length || "date" !== a.x[0].data_type,
                            sum_name: "en" === e.$parent.language ? "Sum" : "累计值",
                            color_theme: bdpChart.getColorsByType("C320", "bdp")
                        }), "C200" !== n) delete a.tb_statistic, delete a.tb_flip, delete a.tb_pinned_index, delete o.tb_pinned_index, delete o.tb_statistic, !!a.sort && delete a.sort.col_index;
                    else {
                        void 0 === o.tb_merge_cell && (o.tb_merge_cell = !0);
                        for (var c, p = a.compare_axis || [], s = 0; s < p.length; s++) {
                            var u = p[s];
                            if ("virtual" === u.data_type) {
                                c = s;
                                break
                            }
                        }
                        void 0 !== c ? (a.compare_setting = {
                            sort: {
                                index: c
                            }
                        }, p.splice(c, 1)) : delete a.compare_setting;
                        for (var h = void 0, s = 0; s < r.length; s++) {
                            var u = r[s];
                            if ("virtual" === u.data_type && !u.parent_uniq_id) {
                                h = s;
                                break
                            }
                        }
                        void 0 !== h ? (a.tb_statistic.row_setting && (a.tb_statistic.row_setting.pos = h), r.splice(h, 1)) : a.tb_statistic;
                        for (var f = 0, s = 1; s < r.length; s++)
                            if ("virtual" === r[s].data_type && r[s].parent_uniq_id) {
                                f = s;
                                break
                            }
                        r.splice(f, f)
                    }
                    "C280" === n || a.y_scatter && i == e.drill_level ? (a.scatter_setting.x_len = 1, a.y = a.y.concat(a.y_scatter || []), delete a.y_scatter) : a.guide_line_x && a.guide_line_x.length && (a.guide_line = [].concat(a.guide_line_x), delete a.guide_line_x), "C330" !== n ? (delete a.funnel_setting, delete e.chart_ops.meta.level[i].funnel_setting) : ("C330" === o.chart_type && (o.funnel_setting || (o.funnel_setting = {
                        show_detail: !0,
                        layout: "vertical"
                    }), Te.clearAdvance(o.y), Te.clearAdvance(o.y_optional)), Te.clearAdvance(a.y), Te.clearAdvance(a.y_optional), a.funnel_setting || (a.funnel_setting = {
                        show_detail: !0,
                        layout: "vertical"
                    })), n !== fe.ComparisonBar && delete a.comparison_xaxis_pos, n !== fe.Sunburst ? (delete a.sunburst_setting, delete a.sunburst_color_setting) : o.chart_type === fe.Sunburst && (o.sunburst_setting || (o.sunburst_setting = {
                        show_detail: !0,
                        showProportion: "text"
                    })), n !== fe.Pie && delete a.show_connector_label, n !== fe.TreeMap && a.data_label_setting && a.data_label_setting.show_percent && delete a.data_label_setting.show_percent, pe(a, "save"), a.advanced_sort && a.advanced_sort.length > 0 && a.advanced_sort.forEach(function (e) {
                        delete e.showDropdown, delete e.hide_by_query, delete e.originName, e.sort_items && delete e.sort_items.selectedName
                    })
                }), angular.forEach(a.filter_list, function (e, t) {
                    "date" != e.data_type && (e.range = [])
                })
            }

            function re() {
                e.draw_chart_url ? (e.draw_chart_url.options._t = (new Date).getTime(), e.draw_chart_url.options.optional = {}, t.wsId && (e.draw_chart_url.options.ws_id = t.wsId)) : (e.draw_chart_url = {
                    options: {
                        theme: 1 == +t.usedThemeId ? "dark" : "default",
                        ct_id: _e,
                        optional: {}
                    },
                    lazyload: !1
                }, t.wsId && (e.draw_chart_url.options.ws_id = t.wsId))
            }

            function oe(a) {
                e.filterRangeList = e.filterRangeList || {}, s.chart.getInfo(_e).success(function (i) {
                    if (a && (a.set_warn || a.getChartInfo) && "innerFilter" == a.getChartInfo) return void(e.chart_ops.meta.filter_list_inner = i.result.meta.filter_list_inner);
                    if ("0" == i.status) {
                        if ("chart_edit" === t.view && e.advDateService && e.advDateService.list(_e), se(i.result.meta), le(i.result), e.serviceFilterList = angular.copy(i.result.meta.filter_list), !i.result.update_time || !i.result.meta.hasOwnProperty("level")) {
                            e.isCreate = !0;
                            try {
                                var n = window.localStorage;
                                0 != Object.keys(response.result.meta) || Number(n.getItem(Ie)) || e.show_user_guide()
                            } catch (e) {}
                        }
                    } else errorHandle(i)
                })
            }

            function se(t) {
                var a = t.level;
                angular.forEach(a, function (t) {
                    for (var a = t.y, i = 0; i < a.length; i++) defined(a[i]) || a.splice(i, 1);
                    angular.forEach(a, function (t) {
                        e.formatFieldPercentile(t)
                    })
                })
            }

            function le(a) {
                var i = a;
                e.pageInfo = {}, e.warnSetting = {
                    warn: i.warn,
                    info: i.warn_info
                };
                var n = {
                    name: i.name || void 0,
                    description: i.description,
                    tb_id: i.tb_id || "",
                    meta: {
                        level_fields: [],
                        level: [],
                        filter_list: [],
                        filter_list_inner: []
                    }
                };
                e.tb_id = i.tb_id, s.field.getList(i.tb_id).then(function (t) {
                    "0" == t.status && (e.field_list = t.result.schema, e.fidToName = {}, e.tbType = t.result.tb_type, e.field_list = bdp.utils.addSpecParamsToFields(e.field_list), e.setDimensionAndMeasureStatus())
                }), e.chart_ops = n, n.meta = $.extend(!0, {}, n.meta, angular.fromJson(i.meta)), n.meta.level[e.drill_level] && n.meta.level[e.drill_level].chart_type || (n.meta.level[e.drill_level] = {
                    x: [],
                    y: [],
                    yaxis_max: 0,
                    yaxis_min: 0,
                    yaxis_max_disabled: !0,
                    yaxis_min_disabled: !0,
                    type_optional: ["C210", "C220"]
                });
                var o = n.meta.level[e.drill_level],
                    l = o.chart_type;
                if (o.map ? o.map.region || (o.map.region = 1) : o.map = {
                        granularity: "province",
                        region: 1
                    }, n.meta.level[0].show_y_axis_optional = !!n.meta.level[0].y_optional || !1, n.meta.level[0].show_y_axis_optional && (e.pageInfo.type = "double_y"), l === fe.Pie) void 0 === o.shape && (o.shape = "pie"), o.pieContent && "text" === o.pieContent.showProportion && (o.show_connector_label = !0, delete o.pieContent);
                else if ([fe.Line, fe.Area, fe.NStackArea, fe.PStackArea, fe.Biax].indexOf(l) > -1) void 0 === o.use_spline && (o.use_spline = "0");
                else if (l === fe.Waterfall) o.waterfall_setting || (o.series_theme = "green_contrast_2", o.waterfall_setting = {
                    show_sum: !0,
                    sum_name: "en" === t.language ? "Sum" : "累计值",
                    color_theme: bdpChart.getColorsByType("C320", "bdp")
                });
                else if (l === fe.Funnel) o.funnel_setting || (o.funnel_setting = {
                    layout: "vertical"
                });
                else if (l === fe.Sunburst) o.sunburst_setting || (o.sunburst_setting = {
                    showProportion: "text"
                });
                else if (l === fe.TreeMap) o.data_label_setting || (o.data_label_setting = {
                    show_percent: !1
                });
                else if (l === fe.ComparisonBar) o.comparison_xaxis_pos || (o.comparison_xaxis_pos = "pos_left");
                else if (l === fe.Gauge) {
                    if (!o.y[0].series_color && !o.tb_conditional_formatting) {
                        var d = o.y[0].fid,
                            c = o.y[0].uniq_id;
                        o.y[0].BDP_TCF = !0, o.tb_conditional_formatting = [{
                            fid: d,
                            uniq_id: c,
                            operator: 4,
                            value: 1,
                            isPercentage: [!0],
                            style: {
                                backgroundColor: "#40A276"
                            }
                        }, {
                            fid: d,
                            uniq_id: c,
                            operator: 12,
                            value: [.75, 1],
                            isPercentage: [!0, !0],
                            style: {
                                backgroundColor: "#F6CC4E"
                            }
                        }, {
                            fid: d,
                            uniq_id: c,
                            operator: 12,
                            value: [.25, .75],
                            isPercentage: [!0, !0],
                            style: {
                                backgroundColor: "#F38000"
                            }
                        }, {
                            fid: d,
                            uniq_id: c,
                            operator: 3,
                            value: .25,
                            isPercentage: [!0],
                            style: {
                                backgroundColor: "#EE4B4B"
                            }
                        }]
                    }
                } else if (l === fe.KPICard) {
                    if (e.chart_ops.name = o.y[0].nick_name || o.y[0].name, (!o.tb_conditional_formatting || !o.tb_conditional_formatting.length) && o.y[1] && !o.y[1].series_color) {
                        var p = o.y[1].fid,
                            u = o.y[1].uniq_id;
                        o.y[0].BDP_TCF = !1, o.y[1].BDP_TCF = !0, o.tb_conditional_formatting = [{
                            fid: p,
                            uniq_id: u,
                            operator: 3,
                            value: 0,
                            shape_type: "arrow-down",
                            style: {
                                color: "#40B27E"
                            }
                        }, {
                            fid: p,
                            uniq_id: u,
                            operator: 0,
                            value: 0,
                            shape_type: "arrow-equal",
                            style: {
                                color: "#A3ABB0"
                            }
                        }, {
                            fid: p,
                            uniq_id: u,
                            operator: 2,
                            value: 0,
                            shape_type: "arrow-up",
                            style: {
                                color: "#EF4B4A"
                            }
                        }]
                    }
                } else if (l === fe.Scatter) {
                    var h = 1;
                    "number" != typeof h && (h = 1), o.y_scatter = o.y.slice(h), o.y = o.y.slice(0, h)
                } else if (l === fe.Table) {
                    void 0 === o.tb_merge_cell && (o.tb_merge_cell = !0);
                    var f = o.compare_axis;
                    if (f && f.length > 0) {
                        var g;
                        o.compare_setting && o.compare_setting.sort ? g = o.compare_setting.sort.index || 0 : (g = 0, o.compare_setting = {
                            sort: {
                                index: g
                            }
                        });
                        var m = de(g, "compare_axis");
                        f.splice(g, 0, m)
                    }(o.tb_statistic && o.tb_statistic.row && o.y.length > 0 || o.tb_statistic.number_row) && pe(o)
                } else l === fe.WordCloud ? o.word_result_filter || (o.word_result_filter = {
                    range_type: 0,
                    range_list: []
                }) : U(l) && (defined(o.show_datalabels) || (o.show_datalabels = !0, o.show_all_datalabels = !0));
                e.canSetSplitCompare(l) && o.split_compare && !o.split_compare_setting && (o.split_compare_setting = {
                    rows: 4,
                    cols: 4
                }), o.top && (o.top.value = +o.top.value), o.top_compare && (o.top_compare.value = +o.top_compare.value), defined(o.fullscreen_granularity) || (o.fullscreen_granularity = !0), defined(o.show_total) || (o.show_total = !0), defined(o.show_datalabels) || (o.show_datalabels = ["C230", "C271", "C272", "C330", "C360"].indexOf(o.chart_type) > -1), defined(o.hover_mode) || (o.hover_mode = l == fe.TreeMap ? "single" : "multiple"), Z(!0, "");
                var _ = e.chart_ops.meta.filter_list;
                angular.forEach(_, function (t, a) {
                    "number" === t.data_type && s.field.getRange(e.tb_id, t.fid, _e).success(function (t) {
                        0 == t.status && (e.initNumRange["n" + a] = {}, e.initNumRange["n" + a].a = t.result.range[0], e.initNumRange["n" + a].b = t.result.range[1])
                    })
                }), J(o), e.viewMeta = o, C.currMeta = o;
                var v = r.page_referrer;
                v && v.indexOf("data_screen") >= 0 && angular.element(".chart-edit-layer").addClass("data-screen-edit"), ue()
            }

            function de(t, a, i) {
                var n = e.chart_ops.meta.level[e.drill_level];
                t = t || 0;
                var r, o = "",
                    s = "",
                    l = {},
                    d = "",
                    c = "",
                    p = "";
                if ("compare_axis" == a) r = "zh" === bdpChart.language ? "数值" : "Metrics";
                else if ("y" == a) {
                    var u = n.tb_statistic && n.tb_statistic.row_setting;
                    r = "zh" === bdpChart.language ? "行总计" : "Row Summary", o = "total", s = "row_summary", u && (l = angular.copy(u.formatter || {}), d = u.nick_name, c = u.unit_adv, p = u.description, i = u.uniq_id)
                }
                return {
                    data_type: "virtual",
                    name: r,
                    index: t,
                    flag: o,
                    fid: s,
                    uniq_id: i,
                    formatter: l,
                    nick_name: d,
                    unit_adv: c,
                    description: p
                }
            }

            function ce(e, t) {
                var a, i = [],
                    n = e.y.length,
                    r = e.tb_statistic && e.tb_statistic.row;
                r && (a = e.tb_statistic.row_pos);
                for (var o = "left" === a ? 1 : 0, s = "right" === a ? n - 1 : n, l = o; l < s; l++) {
                    var d = e.y[l];
                    if ("virtual" === d.data_type && d.parent_uniq_id) {
                        o = l;
                        break
                    }
                    o++
                }
                if (e.chart_type === bdpChart.ChartType.Table && "save" !== t) {
                    if (e.tb_statistic)
                        if (e.tb_statistic.number_row) {
                            for (var c = "zh" === bdpChart.language ? "行" : " Row ", l = 0, n = e.y.length; l < n; l++) {
                                var p, d = e.y[l],
                                    u = d.row_setting;
                                if ("virtual" !== d.data_type) {
                                    var h = d.number_row_formula;
                                    if (void 0 !== h && "SUM" != h || (h = "TOTAL", d.number_row_formula = "SUM"), u) p = {
                                        data_type: "virtual",
                                        alignment_method: u.alignment_method,
                                        name: (u.nick_name || d.nick_name || d.name) + "(" + c + g[h] + ")",
                                        fid: "row_summary",
                                        parent_uniq_id: u.parent_uniq_id,
                                        uniq_id: u.uniq_id,
                                        formatter: u.formatter,
                                        nick_name: u.nick_name,
                                        unit_adv: u.unit_adv,
                                        description: u.description
                                    };
                                    else {
                                        var f = (d.nick_name || d.name) + "(" + c + g[h] + ")";
                                        p = {
                                            data_type: "virtual",
                                            alignment_method: "right",
                                            name: f,
                                            fid: "row_summary",
                                            parent_uniq_id: d.uniq_id,
                                            uniq_id: +new Date + 1e3 * l,
                                            formatter: d.formatter,
                                            nick_name: "",
                                            unit_adv: "",
                                            description: ""
                                        }, d.row_setting = angular.copy(p)
                                    }
                                    d.number_row_formula && i.push(p)
                                }
                            }
                            Array.prototype.splice.apply(e.y, [o, s - o].concat(i))
                        } else
                            for (var l = "left" === a ? 1 : 0, n = "right" === a ? e.y.length - 1 : e.y.length; l < n; l++) {
                                var d = e.y[l];
                                if ("virtual" === d.data_type && d.parent_uniq_id) {
                                    e.y.splice(l, n - l);
                                    break
                                }
                            }
                } else {
                    for (var m = 0, l = 1; l < e.y.length; l++)
                        if ("virtual" === e.y[l].data_type && e.y[l].parent_uniq_id) {
                            m = l;
                            break
                        }
                    e.y.splice(m, m)
                }
            }

            function pe(e, t, a) {
                function i(i) {
                    for (var o, s = e[i] || [], l = de(0, i, a), d = 0, c = 0; c < s.length; c++)
                        if ("virtual" === s[c].data_type && !s[c].parent_uniq_id) {
                            o = c;
                            break
                        }
                    e.chart_type === bdpChart.ChartType.Table && "save" !== t ? i == n ? s.length > 0 && void 0 === o ? (i == n && e.compare_setting && e.compare_setting.sort && (d = e.compare_setting.sort.index || 0), s.splice(d, 0, l)) : 1 === s.length && 0 === o ? s.splice(0, 1) : 0 === e.y.length && void 0 !== o && s.splice(o, 1) : i == r && (e.tb_statistic && e.tb_statistic.row && void 0 === o ? (d = e.tb_statistic.row_setting && e.tb_statistic.row_setting.pos || 0, s.splice(d, 0, l)) : void 0 !== o && (e.tb_statistic.row || s.splice(o, 1), e.tb_statistic.row_setting && (e.tb_statistic.row_setting.pos = o))) : void 0 !== o && (s.splice(o, 1), e.tb_statistic && e.tb_statistic.row_setting && (e.tb_statistic.row_setting.pos = o))
                }
                var n = "compare_axis",
                    r = "y";
                i(n), i(r), ce(e, t)
            }

            function ue() {
                e.conditionDemoText = ["C200", "C310"].indexOf(e.chart_ops.meta.level[e.drill_level].chart_type) > -1 ? "A" : ""
            }

            function he() {
                var t = (e.chart_ops.meta.level[e.drill_level].chart_type, e.chart_ops.meta.level_fields.length, $(".chart-args").height() + 4);
                $(".chart-left-side").css("top", t), $(".toggle-nav").css("top", t), $("#chartBox").css("top", t), $(".J-toggle-nav-chart-left").css("top", 0)
            }
            var fe = bdpChart.ChartType;
            e.ChartType = fe;
            var ge, me, _e;
            ge = r.projId, me = r.dashId, _e = r.chartId, t.view = "chart_edit", t.show_bdp_header = !1, t.projectLoaded = !1, e.chartid = _e, bdp.store.set("chart_editId", _e), localStorage.removeItem("BDP_chart_groupId"), localStorage.setItem("BDP_chart_groupId", bdp.utils.guid() + "-" + +new Date), e.chart_type = l, e.chart_type_tip = d, e.ct_id = _e, e.formulaKeyMap = g, e.ableSetChartStyle = !1;
            var ve = r.page_referrer;
            ve && ve.indexOf("data_screen") >= 0 && (e.isDataScreen = !0), e.$on("emitChangeTableFormatting", function (t, a) {
                e.$broadcast("broadcastChangeTableFormattingName", !0)
            }), e.maxWordCount = 200, e.defaultWordCount = 100, e.hasShownVirtualFieldHint = "1" === $.cookie("virtual_field_hint_showed"), e.turnOffVirtualFieldHint = function () {
                e.hasShownVirtualFieldHint = !0, $.cookie("virtual_field_hint_showed", 1)
            }, e.$on("afterWindowResize", function () {
                if (e.$bdpChart) {
                    var t = e.$bdpChart;
                    t.getChartType() === fe.Line && "dark" === t.theme && (t.destroy(), t.renderChart())
                }
            }), $(window).on("resize.renderChart", $.debounce(300, function () {
                if ("chart_edit" === t.view && e.$bdpChart) {
                    var a = e.$bdpChart;
                    (a.isSplitChart() || a.getChartType() === bdpChart.ChartType.Line && "dark" === a.theme) && a.renderChart()
                }
            })), $(document).off("click.table").on("click.table", function (e) {
                $(document).trigger("clickTable", {
                    e: e
                })
            }), e.$on("$destroy", function () {
                var t = e.$bdpChart;
                $(window).off("resize.renderChart"), $(document).off("click.table"), $(document).off("clickTable"), t.getChartType() === bdpChart.ChartType.Table && t.destroy()
            });
            var be = $(".J_field_search"),
                ye = $(".J_chart_data_info"),
                we = $(".J_view_header"),
                Ce = $(".J_field_list"),
                xe = 0,
                ke = 0,
                De = 0;
            $(".J_chart_left").on("scroll.fieldSearch", function (e) {
                var t = $(e.target),
                    a = t.scrollTop();
                xe = "none" == ye.css("display") ? 0 : ye.height(), ke = ke || we.height(), De = De || be.height(), a >= xe ? (be.css({
                    position: "fixed",
                    width: "174",
                    top: ke,
                    zIndex: 99999
                }), Ce.css({
                    marginTop: De + 20 + "px"
                }), be.attr("data-isceil", 1), be.addClass("field-search-cover")) : (be.css({
                    position: "relative",
                    top: "auto",
                    width: "auto"
                }), Ce.css({
                    "margin-top": "8px"
                }), be.attr("data-isceil", 0), be.removeClass("field-search-cover"))
            }), e.changeRoute = function () {
                t.creatingChart && (t.creatingChartInfo = e.chart_ops.meta.level[0]), t.editChartId = _e, t.$editable = !0, n.url(x())
            }, e.canSetLeftAxis = function () {
                var t = e.selected_type;
                return t && ["C200", "C230", "C261", "C271", "C272", "C290", "C300", "C310", "C330", "C340", "C360", "C370"].indexOf(t) < 0
            }, e.canSetRightAxis = function () {
                var t = e.selected_type;
                return t && ["C250"].indexOf(t) > -1
            }, e.canSetPlotLine = function () {
                var t = e.selected_type;
                return t && ["C230", "C200", "C271", "C272", "C290", "C300", "C310", "C320", "C330", "C340", "C360", "C370"].indexOf(t) < 0
            }, e.canSetConditionFormat = function () {
                var t = e.selected_type;
                return t && ["C261", "C200", "C310"].indexOf(t) > -1
            }, e.canSetChartDataLabels = function () {
                var t = e.selected_type;
                return t && ["C200", "C261", "C300", "C310", "C340", "C400"].indexOf(t) < 0
            }, e.canSetWarnLine = function () {
                var t = e.selected_type,
                    a = e.drill_level || 0;
                return t && ["C212", "C230", "C242", "C271", "C290", "C300", "C310", "C320", "C330", "C340", "C352", "C360", "C370"].indexOf(t) < 0 && a < 1
            }, e.canSetTop = function () {
                var t = e.selected_type,
                    a = !1;
                return t && (a = ["C220", "C261", "C271", "C272", "C300", "C310", "C320", "C330", "C340"].indexOf(t) < 0), a
            }, e.canSetAltTooltip = function () {
                var t = e.selected_type;
                return [fe.Line, fe.Column, fe.NStackColumn, fe.PStackColumn, fe.Area, fe.NStackArea, fe.PStackArea, fe.Biax, fe.ComparisonBar, fe.Bar, fe.NStackBar, fe.PStackBar, fe.TreeMap].indexOf(t) > -1
            }, e.onHoverModeChanged = function () {
                var t = {
                    category: "user_interact",
                    action: "chart_edit",
                    opt_label: JSON.stringify({
                        ct_id: _e,
                        type: "single" == e.viewMeta.hover_mode ? "multiple_to_single" : "single_to_multiple"
                    })
                };
                BDPLogger.log("change_hover_mode", t), e.saveChartImmediate({
                    only_redraw: !0
                })
            }, e.revertSelection = function () {
                e.$bdpChart && e.$bdpChart.exitSelectionView()
            }, e.canSetNavigator = function () {
                var t = e.selected_type,
                    a = !1;
                if (t) {
                    var i = e.chart_ops.meta.level[e.drill_level];
                    a = [fe.Line, fe.Column, fe.NStackColumn, fe.PStackColumn, fe.Area, fe.NStackArea, fe.PStackArea, fe.Biax].indexOf(t) > -1 && i.x.length > 0 && !i.split_compare && e.$bdpChart.data.y[0] && e.$bdpChart.data.y[0].data.length > 1
                }
                return a
            }, e.canDrawMarkPoint = function () {
                var t = e.selected_type,
                    a = !1;
                if (t) {
                    var i = e.chart_ops.meta.level[e.drill_level];
                    a = ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C320", "C350", "C351", "C352", "C360"].indexOf(t) > -1 && 1 === i.x.length && (!i.compare_axis || 0 === i.compare_axis.length)
                }
                return a
            }, e.canSetSplitCompare = function (t) {
                var a = t || e.selected_type,
                    i = !1;
                if (a) {
                    var n = e.chart_ops.meta.level[e.drill_level];
                    i = [fe.Line, fe.Area, fe.Column, fe.Bar, fe.KPICard, fe.Gauge].indexOf(a) > -1 && n.compare_axis && n.compare_axis.length > 0
                }
                return i
            }, e.canSetSummaryDisplay = function () {
                var t = e.$bdpChart && e.$bdpChart.info;
                if (t) var a = t.xAxis.length || 0,
                    i = t.yAxis.length || 0,
                    n = t.compare_axis.length || 0;
                var r = e.selected_type,
                    o = null;
                if (r) {
                    var s = e.chart_ops.meta.level[e.drill_level];
                    o = "C200 C230 C243 C250 C261 C271 C300 C310 C330".indexOf(r) < 0 && !s.split_compare && (1 == a || 0 == a) && 1 == i && 0 == n
                }
                return o
            }, e.needShowSplitCompareGuide = function () {
                var t = e.selected_type;
                return "C310" !== t && "C261" !== t && localStorage && !localStorage.getItem("BDP_showSplitCompareGuide")
            }, e.hideSplitCompareGuide = function () {
                e.hasShowedSplitCompareGuide = !0, localStorage.setItem("BDP_showSplitCompareGuide", 1)
            }, e.saveSplitCompareSetting = function (t) {
                var a = e.chart_ops.meta.level[e.drill_level];
                a.split_compare_setting[t] || (a.split_compare_setting[t] = 6), e.saveChartImmediate({
                    only_redraw: !0
                })
            }, e.newField = {}, e.handlerMorePos = function (e) {
                var t = document.body.clientHeight,
                    a = $(e.target).offset(),
                    i = ($(".field-list").height(), a.top + 20),
                    n = a.left - 50;
                i + 120 > t && (i -= 140), angular.element(".field-editable-handler-more").css({
                    top: i,
                    left: n
                }), e.stopPropagation()
            }, e.modifyField = function (a) {
                var i;
                if ((i = a.param) && (_.isString(i) && (i = JSON.parse(i)), "ml" == i.type)) return c(y.instant("ML_tip.fieldByMLNoEdit"));
                t.pageLoading = !0, e.newField = angular.extend({
                    aggregator: a.formula,
                    original_field_name: a.name
                }, a, {
                    type: "modify",
                    tb_id: e.tb_id,
                    ct_id: _e
                });
                var n = "ngdialog-theme-default add-field-dialog",
                    r = "/static/partials/add-field.html";
                a.hasOwnProperty("param") && "group" == a.param.type && (r = "/static/partials/add-group-field.html", n += " group-field-dialog"), o.open({
                    template: r,
                    data: {
                        fieldList: e.field_list
                    },
                    className: n,
                    scope: e
                })
            }, e.createFieldFormula = function () {
                t.pageLoading = !0, e.newField = {
                    type: "create",
                    name: "",
                    aggregator: ""
                };
                o.open({
                    template: "/static/partials/add-field.html",
                    data: {
                        fieldList: e.field_list
                    },
                    className: "ngdialog-theme-default add-field-dialog",
                    scope: e
                })
            }, e.createFieldGroup = function () {
                t.pageLoading = !0, e.newField = {
                    type: "create",
                    name: "",
                    aggregator: "",
                    tb_id: e.tb_id,
                    ct_id: _e
                };
                o.open({
                    template: "/static/partials/add-group-field.html",
                    data: {
                        fieldList: e.field_list
                    },
                    className: "ngdialog-theme-default add-field-dialog group-field-dialog",
                    scope: e
                })
            }, e.createFieldByML = function () {
                e.dialoging || (e.mlControl = {}, e.dialoging = o.open({
                    template: "/static/training/view/dialog/create-chart-field.html",
                    className: "ngdialog-theme-default ngDialog-width-300 ml-apply-dialog",
                    overlay: !1,
                    scope: e,
                    data: {
                        tb_id: e.tb_id,
                        ct_id: e.ct_id
                    },
                    preCloseCallback: function () {
                        e.dialoging = null, e.chartMainMask = !1
                    }
                }).id, e.chartMainMask = !0)
            }, e.closeMlDialog = function (t) {
                e.mlControl.onClose(), t(), e.mlControl = null
            }, e.commitMlField = function (t) {
                e.mlControl.onOk().then(function (a) {
                    0 == a.status && (s.field.getList(e.tb_id).then(function (t) {
                        0 == t.status && (t = t.result, e.field_list = t.schema, e.setFieldType())
                    }), t(), e.mlControl = null)
                })
            }, e.setFieldType = function () {
                e.field_list = bdp.utils.addSpecParamsToFields(e.field_list), e.fidToName = {}, angular.forEach(e.field_list, function (t, a) {
                    e.fidToName[t.fid] = t.name
                })
            }, e.setDimensionAndMeasureStatus = function () {
                angular.forEach(e.field_list, function (t, a) {
                    "dimension" == t.type ? e.field_list.hasDimension = !0 : "measure" == t.type && (e.field_list.hasMeasure = !0), e.fidToName[t.fid] = t.name
                })
            }, e.addCalcField = function (t) {
                function a() {
                    s.field["create" === t.type ? "create" : "modify"]({
                        tb_id: e.tb_id,
                        original_field_name: t.original_field_name || "",
                        new_field_name: t.name,
                        aggregator: t.aggregator.trim(),
                        data_type: t.data_type,
                        param: angular.toJson(t.param),
                        fid: t.fid || ""
                    }).success(function (a) {
                        e.global.clickComplete = !0, 0 == a.status ? (o.closeAll(), s.field.getList(e.tb_id).then(function (a) {
                            if (0 == a.status) {
                                a = a.result, e.field_list = a.schema, e.setFieldType(), e.setDimensionAndMeasureStatus();
                                for (var i = 0, n = e.field_list.length; i < n; i++)
                                    if (t.fid == e.field_list[i].fid) {
                                        t.name = e.field_list[i].name, t.is_build_aggregated = e.field_list[i].is_build_aggregated;
                                        break
                                    }
                                if ("modify" == t.type) {
                                    for (var i = 0; i < e.chart_ops.meta.level.length; i++) {
                                        if (e.chart_ops.meta.level[i].x)
                                            for (var r = 0; r < e.chart_ops.meta.level[i].x.length; r++)
                                                if (e.chart_ops.meta.level[i].x[r].fid == t.fid) {
                                                    e.chart_ops.meta.level[i].x[r].name = t.name;
                                                    break
                                                }
                                        if (e.chart_ops.meta.level[i].y)
                                            for (var o = t.is_build_aggregated, s = e.chart_ops.meta.level[i], l = 0; l < s.y.length; l++)
                                                if (s.y[l].fid == t.fid) {
                                                    s.y[l].name = t.name, s.y[l].is_build_aggregated = o, 2 == o ? "number" === s.y[l].data_type ? s.y[l].aggregator = "SUM" : s.y[l].aggregator = "COUNT" : s.y[l].aggregator = "";
                                                    break
                                                }
                                        if (e.chart_ops.meta.level[i].y_optional)
                                            for (var o = t.is_build_aggregated, s = e.chart_ops.meta.level[i], d = 0; d < s.y_optional.length; d++)
                                                if (s.y_optional[d].fid == t.fid) {
                                                    s.y_optional[d].name = t.name, s.y_optional[d].is_build_aggregated = o, 2 == o ? "number" === s.y_optional[d].data_type ? s.y_optional[d].aggregator = "SUM" : s.y_optional[d].aggregator = "COUNT" : s.y_optional[d].aggregator = "";
                                                    break
                                                }
                                        e.$broadcast("emitChangeTableFormatting", !0)
                                    }
                                    if (e.chart_ops.meta.level_fields)
                                        for (var i = 0; i < e.chart_ops.meta.level_fields.length; i++) e.chart_ops.meta.level_fields[i].fid == t.fid && (e.chart_ops.meta.level_fields[i].name = t.name);
                                    var c = O(e.newField.fid);
                                    if (e.saveChartImmediate({
                                            not_need_redraw: c,
                                            closeDialog: !1
                                        }), "number" !== t.data_type && e.$bdpChart && e.$bdpChart.supportFreeDrilldown())
                                        for (var p = e.$bdpChart.info.free_drill_fields, i = p.length - 1; i >= 0; i--)
                                            if (p[i].fid == t.fid) {
                                                p[i] = angular.copy(t);
                                                break
                                            }
                                } else if ("create" == t.type && "number" !== t.data_type && e.$bdpChart && e.$bdpChart.supportSelect()) {
                                    for (var u = a.schema.length, i = u - 1; i >= 0; i--)
                                        if (a.schema[i].name == t.name) {
                                            t = angular.copy(a.schema[i]);
                                            break
                                        }
                                    e.$bdpChart.info.free_drill_fields.push(t)
                                }
                                e.global.watch = new Date
                            }
                        })) : "7700" == a.status ? c(isObjectEmpty(t.param) ? e.tips["field.formulaInvalid"] : e.tips["field.groupInvalid"]) : "40005" == a.status && c(a.errstr)
                    })
                }
                e.dataInfo.length > 1 && !t.data_type && (t.data_type = "number"), e.global.clickComplete = !1;
                var i = !1;
                if (t.name ? t.data_type || t.param ? t.aggregator.trim() || t.param && "group" == t.param.type || (c(e.tips["field.fieldFormulaRequired"]), i = !0) : (c(e.tips["field.fieldTypeRequired"]), i = !0) : (c(e.tips["field.fieldNameRequired"]), i = !0), i) return e.global.clickComplete = !0, !1;
                w.isTooLong({
                    tb_id: e.tb_id,
                    aggregator: t.aggregator.trim(),
                    data_type: t.data_type,
                    param: angular.toJson(t.param)
                }).then(function (i) {
                    if (e.global.clickComplete = !0, "error" == i) return !1;
                    i ? w.confirmModify(function () {
                        a()
                    }, t.param) : a()
                })
            }, e.delNewField = function (t, a) {
                function i() {
                    s.field.del(a, e.tb_id).success(function (t) {
                        0 == t.status ? (s.field.getList(e.tb_id).then(function (t) {
                            if (0 == t.status && (t = t.result, e.field_list = t.schema, e.setFieldType(), e.setDimensionAndMeasureStatus(), e.$bdpChart && e.$bdpChart.supportFreeDrilldown()))
                                for (var i = e.$bdpChart.info.free_drill_fields, n = i.length - 1; n >= 0; n--)
                                    if (i[n].fid == a) {
                                        i.splice(n, 1);
                                        break
                                    }
                        }), e.global.watch = new Date) : c("7590" == t.status ? e.tips["chart.fieldInUsing"] : "40006" == t.status ? t.errstr : Number(t.status))
                    })
                }
                e.chart_ops.meta.gauge_setting && t == e.chart_ops.meta.gauge_setting.goal.field_name ? o.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        message: e.tips["chart.delGaugeField"] + ": " + t + " ?"
                    }
                }).then(function () {
                    e.chart_ops.meta.gauge_setting.goal = {
                        value_type: "constant",
                        value: $.cookie("yaxis_max")
                    }, e.saveChartImmediate(), i()
                }) : o.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        title: e.tips["chart.tip"],
                        message: e.tips["chart.delField"] + ": " + t + " ?"
                    }
                }).then(function () {
                    i()
                })
            }, e.onSaveEnumOrder = function (t) {
                var a = O(t);
                e.saveChartImmediate({
                    not_need_redraw: a
                })
            }, e.showEnumOrder = function (t, a, i, n) {
                e.preCloseDialog = !1, o.open({
                    template: "/static/partials/dialogTemplates/enum-order.html",
                    data: {
                        fid: t,
                        tb_id: e.tb_id,
                        ct_id: e.ct_id,
                        isCustomOrder: a,
                        source: i,
                        fieldIndex: n,
                        drillLevel: e.drill_level || 0,
                        meta: e.chart_ops.meta.level[e.drill_level || 0]
                    },
                    scope: e,
                    controller: "enumOrderCtrl",
                    className: "ngdialog-theme-default enum-order-dialog"
                })
            }, e.verifyChartArgs = function () {
                P() && (e.saveAfterCheckDirty({
                    not_need_redraw: !0,
                    only_refresh_data: !1
                }), e.changeRoute())
            }, e.dragField = {}, e.dragTbFunc = function (t, a, i) {
                e.removeFaild = !1, e.dragFlag = "source", e.dragField = i, e.dragFieldFid = i.fid, e.dragFieldName = i.name, e.dragFieldType = i.data_type, e.dragFieldFormula = i.formula, e.dragFieldIsNew = void 0 != i.formula && "" != i.formula, e.dragIsBuildAggregated = i.is_build_aggregated, o.isOpen(e.dialoging) ? angular.element("#" + e.dialoging + " .dropable").append('<div class="draggable-area"></div>') : angular.element(".chart-args,.chart-left-side").append('<div class="draggable-area"></div>')
            }, e.stopDragField = function () {
                angular.element(".draggable-area").remove()
            }, e.dragSubTbFunc = function (t, a, i, n) {
                e.dragField = {
                    fid: i.fid + "_" + n,
                    data_type: "sub_date",
                    name: m[n] + "(" + i.name + ")"
                }, e.dragFlag = "source", e.dragFieldFid = i.fid + "_" + n, e.dragFieldType = "sub_date", e.dragFieldIsNew = "" != i.formula, e.dragIsBuildAggregated = i.is_build_aggregated, e.dragFieldFormula = i.formula || "", e.removeFaild = !1, e.dragFieldName = m[n] + "(" + i.name + ")", angular.element(".chart-args,.chart-left-side").append('<div class="draggable-area"></div>')
            }, e.setGranularity = function (t, a, i, n, r) {
                var o = angular.element(t.target),
                    s = o.parents(".data-tag").parents("li").index(),
                    l = e.chart_ops.meta.level[e.drill_level],
                    d = l[a],
                    c = l.y,
                    p = l.y_optional || [];
                d[s].granularity = n, d[s].granularity_name = r || "", "x" === a && (e.chart_ops.meta.level_fields.length > 0 && (e.chart_ops.meta.level_fields[e.drill_level].granularity = n, e.chart_ops.meta.level_fields[e.drill_level].granularity_name = r || ""), "date" === i.data_type && 0 === s && ("hour" === n || "minute" === n || "second" === n ? angular.forEach(c, function (e, t) {
                    delete e.YoY, delete e.QoQ, delete e.yoyQoqType, delete e.advance_aggregator
                }) : (c.length > 0 && B(n, c), p.length > 0 && B(n, p))));
                var u = l.color_setting;
                if (u && 0 == +u.mode) {
                    for (var h = 0; h < u.field.length; h++)
                        if (u.field[h].fid === i.fid) {
                            u.field.splice(h, 1, i), delete u.enum_color_map;
                            break
                        }
                    return void j({
                        meta: l,
                        reset: !0,
                        bindToMeta: !0,
                        callback: function () {
                            e.saveChartImmediate()
                        }
                    })
                }
                e.saveChartImmediate()
            }, e.showFormula = function (e) {
                e.show_formula = !e.show_formula, $(".field-tip").css("display", "none")
            }, e.setDataShowType = function (t, a, i, n) {
                var r = angular.element(t.target),
                    o = r.parents(".data-tag").parents("li").index(),
                    s = e.chart_ops.meta.level[e.drill_level],
                    l = s[a];
                s.y, s.y_optional;
                l[o].data_show_type = n, "x" === a && e.chart_ops.meta.level_fields.length > 0 && (e.chart_ops.meta.level_fields[e.drill_level].data_show_type = n), e.saveChartImmediate()
            }, e.join_field = function (t, a, i, n, r) {
                if ("source" === e.dragFlag) {
                    if (1 === e.dragIsBuildAggregated) return c(e.tips["chart.buildAggregated"]), !1;
                    if ("C340" == e.selected_type || "C360" == e.selected_type || "C370" == e.selected_type) return void c(e.tips["chart.notdrill"]);
                    var o = e.dragFieldFid,
                        s = e.dragFieldName,
                        l = e.dragFieldType,
                        d = e.dragFieldIsNew,
                        p = e.dragFieldFormula || "";
                    if ("x" === i || "drill" === i) {
                        var u = {
                            fid: o,
                            name: s,
                            data_type: l,
                            is_new: d,
                            nick_name: "",
                            description: "",
                            formula: p,
                            uniq_id: +new Date
                        };
                        if ("date" === l && (u.granularity = "day"), "x" === i) {
                            if (0 !== n) return alert(e.tips["chart.addDrillTip"]), !1;
                            e.chart_ops.meta.level_fields.length || e.chart_ops.meta.level_fields.push(r)
                        }
                        e.chart_ops.meta.level_fields.push(u);
                        var h = $.extend(!0, {}, e.chart_ops.meta.level[0], {
                            x: [u]
                        });
                        "C271" !== h.chart_type && "C272" !== h.chart_type || ("string" === h.x[0].data_type ? h.map = {
                            granularity: "city",
                            region: "2"
                        } : h.chart_type = "C210"), ("C280" == h.chart_type || h.y_scatter) && (h.scatter_setting.x_len = 1, h.y = h.y.concat(h.y_scatter), delete h.y_scatter), h.is_advanced_sort = 0, h.advanced_sort = [], delete h.color_setting, e.chart_ops.meta.level.push(h), angular.element(".axis").find(".ico-remove").remove()
                    }
                    e.inheritInnerFilterOnDrill(), te({
                        not_need_redraw: !1,
                        only_refresh_data: !0,
                        is_drill_chart: !!e.drill_level
                    })
                }
            }, e.inheritInnerFilterOnDrill = function () {
                var t = e.chart_ops.meta.level_fields.length,
                    a = e.drill_level || 0,
                    i = e.chart_ops.meta.filter_list_inner,
                    n = [];
                if (a < t)
                    if (i instanceof Array) {
                        var r = {};
                        r[0] = i;
                        for (var o = 0; o < t; o++) 0 == o ? r[o] = angular.copy(i) : (n = angular.copy(i), angular.forEach(n, function (e) {
                            ("number" == e.data_type || "number" != e.data_type && e.hasOwnProperty("aggregator")) && (e.range = [])
                        }), r[o] = n);
                        e.chart_ops.meta.filter_list_inner = r
                    } else n = angular.copy(i[0]), angular.forEach(n, function (e) {
                        ("number" == e.data_type || "number" != e.data_type && e.hasOwnProperty("aggregator")) && (e.range = [])
                    }), i[t - 1] = n
            }, e.sortAxisField = {
                scroll: !1,
                start: function (t, a) {
                    e.dragFlag = t.target.id.replace("drag", "").toLowerCase(), e.originDragFlag = angular.copy(e.dragFlag), e.originX = angular.copy(e.chart_ops.meta.level[e.drill_level].x), e.originY = angular.copy(e.chart_ops.meta.level[e.drill_level].y), e.originYoptional = angular.copy(e.chart_ops.meta.level[e.drill_level].y_optional);
                    var i = a.item.sortable.model;
                    !e.hasShownVirtualFieldHint && i && "virtual" === i.data_type && e.turnOffVirtualFieldHint()
                },
                sort: function (e, t) {
                    angular.element(".ui-sortable-helper").css({
                        width: $(this).width() + 1
                    });
                    var a = angular.element(".ui-sortable-helper");
                    z(e, t) ? a.find(".ico-remove").length || a.find(".name").append('<i class="bdp-icon ico-remove"></i>') : a.find(".name").find(".ico-remove").remove()
                },
                over: function (t, a) {
                    e.dragFlag = angular.element(".ui-sortable-placeholder").parent()[0].id.replace("drag", "").toLowerCase()
                },
                beforeStop: function (t, a) {
                    var i = a.item.sortable.model,
                        n = angular.element(".ui-sortable-placeholder").index() - 1;
                    z(t, a) && "virtual" !== i.data_type ? e.deleteField = {
                        index: n,
                        del: !0
                    } : e.deleteField = {
                        index: n,
                        del: !1
                    }
                },
                update: function (t, a) {
                    var i = a.item.sortable.model,
                        n = a.item.sortable.index,
                        r = a.item.sortable.dropindex,
                        o = e.chart_ops.meta.level[e.drill_level];
                    if (e.doDragField = i, q(a.item), "virtual" === i.data_type) e.originDragFlag === e.dragFlag && "y" != e.originDragFlag || a.item.sortable.cancel();
                    else if ("y" == e.dragFlag && o.tb_statistic && o.tb_statistic.row) {
                        if (("y" == e.originDragFlag ? o.y[o.y.length - 1] && "row_summary" == o.y[o.y.length - 1].fid : o.y[o.y.length - 2] && "row_summary" == o.y[o.y.length - 2].fid) && r == o.y.length - 1 && "right" == o.tb_statistic.row_pos) {
                            var s = "y" == e.originDragFlag ? o.y[o.y.length - 1] : o.y[o.y.length - 2],
                                l = o.y[n];
                            if ("y" != e.originDragFlag) o.y.splice(o.y.length - 2, 2, o.y[o.y.length - 1], o.y[o.y.length - 2]), R(i, o);
                            else {
                                var d = o.y.slice(0);
                                d.splice(n, 2), d.push(l, s), o.y = d.splice(0)
                            }
                        }
                        if (("y" == e.originDragFlag ? "row_summary" == o.y[0].fid : o.y[1] && "row_summary" == o.y[1].fid) && "left" == o.tb_statistic.row_pos && 0 == r) {
                            var s = "y" == e.originDragFlag ? o.y[0] : o.y[1],
                                l = o.y[n],
                                d = o.y.slice(0);
                            "y" == e.originDragFlag ? (d.splice(n, 1), d.shift(), d.unshift(s, l), o.y = d.slice(0)) : (o.y.splice(0, 2, o.y[1], o.y[0]), R(i, o))
                        }
                    }
                    if ((!e.deleteField.del && "x" === e.dragFlag || "compare_axis" === e.dragFlag) && ("y" === e.originDragFlag || "y_optional" === e.originDragFlag) && 1 === i.is_build_aggregated) {
                        H({
                            is_build_aggregated: e.dragIsBuildAggregated,
                            dragFieldType: e.dragFieldType,
                            dragFieldFormula: e.dragFieldFormula || ""
                        }) || (c("使用聚合函数的新字段无法做为" + ("x" === e.dragFlag ? "维度" : "对比维度") + "使用"), a.item.sortable.cancel())
                    }
                },
                stop: function (t, a) {
                    var i = a.item.sortable.model,
                        n = e.chart_ops.meta.level[e.drill_level],
                        i = n[e.dragFlag][e.deleteField.index],
                        r = (a.item.sortable.index, a.item.sortable.dropindex);
                    if (q(a.item), void 0 == r && "x" != e.dragFlag || "y" == e.originDragFlag && ("compare_axis" == e.dragFlag || "y" == e.dragFlag) || "compare_axis" == e.originDragFlag && ("y" == e.dragFlag || "compare_axis" == e.dragFlag) || I(n), void 0 != r && (($.inArray(e.originDragFlag, ["y", "compare_axis"]) > -1 || $.inArray(e.dragFlag, ["y", "compare_axis"]) > -1) && (e.deleteField && e.deleteField.del && "x" === e.originDragFlag || L(n)), $.inArray("compare_axis", [e.originDragFlag, e.dragFlag]) > -1 && A(n)), "source" !== e.dragFlag) {
                        if (e.deleteField && e.deleteField.del) return "x" == e.originDragFlag && I(n), $.inArray(e.originDragFlag, ["y", "compare_axis"]) > -1 && L(n), e.removeAxis({
                            targetId: t.target.id,
                            notSortable: a.item.hasClass("not-sortable"),
                            delIndex: e.deleteField.index,
                            dragFlag: e.dragFlag,
                            originDragFlag: e.originDragFlag,
                            dragField: i
                        }), !1;
                        if (i && "virtual" !== i.data_type) {
                            if ("x" === e.dragFlag || "compare_axis" === e.dragFlag) {
                                if (!i) return;
                                delete i.aggregator, delete i.aggregator_name, delete i.YoY, delete i.QoQ, delete i.yoyQoqSetting, delete i.yoyQoqType, delete i.percentage, "date" === i.data_type && (i.granularity = "day"), i.filter_sort && "x" !== e.originDragFlag && delete i.filter_sort_list, T(n, i)
                            } else ["y", "y_optional", "y_scatter"].indexOf(e.dragFlag) > -1 && ["x", "compare_axis"].indexOf(e.originDragFlag) > -1 && R(i, n);
                            Z(!1, "remove", !1)
                        } else "compare_axis" !== e.dragFlag && "y" !== e.dragFlag || (pe(n), te())
                    }
                },
                appendTo: "body",
                helper: "clone",
                opacity: .6,
                "ui-floating": !0,
                items: ".drag-item:not(.not-sortable)",
                connectWith: ".drag-target-list-dimension"
            }, e.sortAxisDrillField = {
                scroll: !1,
                start: function (t, a) {
                    e.dragFlag = "drill", e.originDragFieldIndex = angular.element(".ui-sortable-placeholder").index() - 1
                },
                sort: function (e, t) {
                    var a = angular.element(".ui-sortable-helper");
                    z(e, t) ? a.find(".ico-remove").length || a.find(".name").append('<i class="bdp-icon ico-remove"></i>') : a.find(".name").find(".ico-remove").remove()
                },
                beforeStop: function (t, a) {
                    var i = angular.element(".ui-sortable-placeholder").index() - 1;
                    z(t, a) ? e.deleteField = {
                        index: i,
                        del: !0
                    } : e.deleteField = {
                        index: i,
                        del: !1
                    }
                },
                stop: function (t, a) {
                    var i = e.chart_ops.meta.level_fields[e.deleteField.index];
                    if (e.drill_level = 0, e.deleteField && e.deleteField.del) return e.removeAxis({
                        targetId: t.target.id,
                        notSortable: a.item.hasClass("not-sortable"),
                        delIndex: e.deleteField.index,
                        dragFlag: "drill",
                        dragField: i
                    }), !1;
                    var n = e.chart_ops.meta.level[e.originDragFieldIndex];
                    e.chart_ops.meta.level.splice(e.originDragFieldIndex, 1), e.chart_ops.meta.level.splice(e.deleteField.index, 0, n), te()
                },
                appendTo: "body",
                helper: "clone",
                opacity: .6,
                "ui-floating": !0
            }, e.batchOnDropAdd = function (t) {
                return !!P() && (!(!e.field_list || 0 == e.field_list.length) && void o.open({
                        template: "/static/partials/chart_batch_add_ondrop.html",
                        className: "ngdialog-theme-default batch-add-axis-dialog",
                        scope: e,
                        data: {
                            fieldList: e.field_list,
                            axisType: t
                        },
                        controller: ["$scope", "$filter", function (e, t) {
                            e.fieldTypeList = [{
                                type: "date",
                                selected: !1
                            }, {
                                type: "string",
                                selected: !1
                            }, {
                                type: "number",
                                selected: !1
                            }], e.initText = {
                                dialogFooterTip: function (t) {
                                    switch (t) {
                                        case "x":
                                            return e.tips["chart.batchAddTips"];
                                        case "y":
                                            return "";
                                        case "compare_axis":
                                            return e.tips["chart.batchAddTips"]
                                    }
                                }(e.ngDialogData.axisType),
                                dialogTitleKeyWord: function (t) {
                                    switch (t) {
                                        case "x":
                                            return e.tips["chart.addFieldsToAxisX"];
                                        case "y":
                                            return e.tips["chart.addFieldsToAxisY"];
                                        case "compare_axis":
                                            return e.tips["chart.addFieldsToAxisCampar"]
                                    }
                                }(e.ngDialogData.axisType)
                            }, e.axisType = e.ngDialogData.axisType, angular.forEach(e.ngDialogData.fieldList, function (t) {
                                if (t.selected = !1, t.disabled = !1, "x" === e.axisType || "compare_axis" === e.axisType) {
                                    H({
                                        is_build_aggregated: t.is_build_aggregated,
                                        dragFieldType: t.data_type,
                                        dragFieldFormula: t.formula
                                    }) || (t.disabled = !0)
                                }
                            }), e.selectedAllByType = function (a, i) {
                                var n = i.selected,
                                    r = t("getFieldsByDataType")(e.ngDialogData.fieldList, a);
                                angular.forEach(r, function (e) {
                                    e.disabled || (e.selected = n)
                                })
                            }, e.checkBatchAddType = function (a, i) {
                                var n = 0,
                                    r = 0,
                                    o = t("getFieldsByDataType")(e.ngDialogData.fieldList, a);
                                angular.forEach(o, function (e) {
                                    e.disabled || (r += 1, e.selected && (n += 1))
                                }), i.selected = n == r
                            }, e.batchAdd = function () {
                                var t = [],
                                    a = e.chart_ops.meta.level[e.drill_level],
                                    i = e.axisType;
                                return angular.forEach(e.ngDialogData.fieldList, function (e) {
                                    e.selected && t.push(e)
                                }), 0 == t.length ? (c(e.tips["chart.canNotAddEmpty"]), !1) : a[i].length + t.length >= 50 ? (c(e.tips["chart.tooManyField"]), !1) : (angular.forEach(t, function (e, t) {
                                    G({
                                        tb_fid: e.fid,
                                        tb_name: e.name,
                                        tb_data_type: e.data_type,
                                        tb_new: void 0 != e.formula && "" != e.formula,
                                        is_build_aggregated: e.is_build_aggregated,
                                        meta: a,
                                        axis_field: a[i],
                                        axis_length: a[i].length,
                                        dragFieldFormula: e.formula,
                                        dragFieldType: e.data_type
                                    }, i, t)
                                }), Z(!1, "add", !1), void e.closeThisDialog())
                            }
                        }]
                    }))
            }, e.onDropAdd = function (t, a, i) {
                function n(e) {
                    for (var t = 0, a = 0, i = e.length; a < i; a++) {
                        if (e[a].uniq_id == o.uniq_id) {
                            t = a, e.splice(t, 1);
                            break
                        }
                        e[a].items && e[a].items.length > 0 && n(e[a].items)
                    }
                    return e
                }
                var r = e.chart_ops.meta.level[e.drill_level];
                if (P() && !a.draggable.hasClass("enum-item")) {
                    var o = e.doDragField;
                    if ($.inArray(e.originDragFlag, ["x", "compare_axis", "y", "y_optional"]) > -1 && e.originDragFlag != e.dragFlag && o && E(e.chart_ops.meta.level[e.drill_level], o), $.inArray(i, ["y", "y_optional", "compare_axis"]) > -1 && L(r), !e.dragFlag || "source" !== e.dragFlag) {
                        if (angular.element(".axis").find(".ico-remove").remove(), "y" == e.originDragFlag || "y_optional" == e.originDragFlag || "y_scatter" == e.originDragFlag) {
                            if ("y" == e.dragFlag || "y_optional" == e.dragFlag || "y_scatter" == e.dragFlag) return;
                            if ("number" == o.data_type || "number" != o.data_type && o.hasOwnProperty("aggregator")) {
                                var s = e.chart_ops.meta.filter_list_inner;
                                if (s instanceof Array) s = n(s);
                                else {
                                    var l = e.drill_level || 0;
                                    s[l] = n(s[l])
                                }
                                e.chart_ops.meta.filter_list_inner = s
                            }
                        }
                        return !1
                    }
                    if (e.hide_add_to_axis(), e.hide_select_chart_type(), "x" === i || "compare_axis" === i) {
                        if (!H({
                                is_build_aggregated: e.dragIsBuildAggregated,
                                dragFieldType: e.dragFieldType,
                                dragFieldFormula: e.dragFieldFormula || ""
                            })) return c(e.tips["polymer.useAggregate"]), !1
                    }
                    if (r[i].length >= 50) return void c(e.tips["chart.tooManyField"]);
                    G({
                        tb_fid: e.dragFieldFid,
                        tb_name: e.dragFieldName,
                        tb_data_type: e.dragFieldType,
                        tb_new: e.dragFieldIsNew,
                        is_build_aggregated: e.dragIsBuildAggregated,
                        meta: r,
                        axis_field: r[i],
                        axis_length: r[i].length,
                        dragFieldFormula: e.dragFieldFormula
                    }, i), Z(!1, "add", !1)
                }
            }, e.getDefaultAggr = function (e, t, a) {
                var i = "";
                if ("C280" === e.chart_type && e.y.length + e.y_scatter.length < 2) {
                    if (W(e, t, a), 1 != a) {
                        var n = e.y.length + e.y_scatter.length,
                            r = e.y[0] || e.y_scatter[0];
                        i = 1 == n && 1 != r.is_build_aggregated && r.aggregator.data_type === t ? r.aggregator : V(t)
                    }
                } else 1 != a && (i = V(t));
                return {
                    name: g[i] || "",
                    aggregator: i
                }
            }, e.enable_trend_line = function () {
                var t = e.chart_ops.meta.level[e.drill_level];
                t.scatter_setting.enable_trend_line && (t.scatter_setting.trend_line_type = t.scatter_setting.trend_line_type || 1, t.scatter_setting.poly_p = t.scatter_setting.poly_p || 2), e.saveChartImmediate()
            }, e.trend_line_type_change = function () {
                var t = e.chart_ops.meta.level[e.drill_level].scatter_setting;
                t.trend_line_type = +t.trend_line_type, e.saveChartImmediate()
            }, e.onPolynomialBlur = function () {
                var t = e.chart_ops.meta.level[e.drill_level].scatter_setting;
                t.poly_p = t.poly_p || 2, e.saveChartImmediate()
            }, e.onPolynomialEnter = function (e) {
                13 == e.keyCode && e.target && a(function () {
                    e.target.blur()
                })
            }, e.removeAxis = function (t) {
                var a = t.targetId,
                    i = t.notSortable,
                    n = t.delIndex,
                    r = t.dragFlag,
                    o = t.dragField,
                    s = t.originDragFlag;
                if (P() && (angular.element(".chart-main").css({
                        "overflow-x": "auto"
                    }), o)) {
                    var l = e.chart_ops.meta.level,
                        d = e.drill_level,
                        c = l[d];
                    if ("drill" === r) {
                        if (l.splice(n, 1), 0 === d) {
                            var p = l[d];
                            "C280" === p.chart_type && (p.y = p.y.concat(p.y_scatter || []), p.y_scatter = p.y.slice(1), p.y = p.y.slice(0, 1), p.scatter_setting = p.scatter_setting || {}, p.scatter_setting.x_len = 1)
                        }
                        if (e.chart_ops.meta.level_fields.splice(n, 1), 1 === e.chart_ops.meta.level_fields.length && (e.chart_ops.meta.level_fields = []), e.chart_ops.meta.filter_list_inner instanceof Array);
                        else {
                            var u = {},
                                h = 0;
                            angular.forEach(e.chart_ops.meta.filter_list_inner, function (e, t) {
                                t != n && (u[h] = e, h++)
                            }), e.chart_ops.meta.filter_list_inner = u
                        }
                    } else if ("x" === r) c.sort && e.dragFieldFid === c.sort.fid && (c.sort = {}), c.x.splice(n, 1), 0 === n && i && (l.splice(d, 1), e.chart_ops.meta.level_fields.splice(d, 1)), pe(c);
                    else {
                        var f = function () {
                                c.sort && e.dragFieldFid === c.sort.fid && (e.chart_ops.meta.level[d].sort = {}), c.sort && e.dragFieldFid === c.sort.fid && (c.sort = {}), c[r].splice(n, 1), pe(c)
                            },
                            g = function (e) {
                                if (e && e.length)
                                    for (var t = e.length; t--;) e[t].fid == o.fid && e[t].uniq_id == o.uniq_id && e.splice(t, 1)
                            };
                        g(c.guide_line), g(c.guide_line_x), g(c.guide_line_right);
                        var m = c.tb_conditional_formatting;
                        if (m && m.length)
                            for (len = m.length; len--;) m[len].fid == o.fid && m[len].uniq_id == o.uniq_id && m.splice(len, 1);
                        var _ = void 0;
                        if (void 0 !== (_ = "dragY" == a ? 0 : "dragY_optional" == a ? 1 : void 0) && 1 == e.warnSetting.warn && function (t) {
                                var a = !1;
                                return angular.forEach(e.warnSetting.info, function (e) {
                                    e.axis_type == t && e.field_name == o.name && (a = !0)
                                }), a
                            }(_)) return confirm(e.tips["chart.delWarnField"]) ? (f(), void Z(!1, "remove", !0)) : (c.x = angular.copy(e.originX), c.y = angular.copy(e.originY), c.y_optional = angular.copy(e.originYoptional), angular.element(".ui-draggable-dragging").find(".ico-remove").remove(), void angular.element(".ui-draggable-dragging").css({
                            left: 0,
                            top: 0
                        }));
                        f()
                    }
                    if ("number" === o.data_type || "number" != o.data_type && o.hasOwnProperty("aggregator")) {
                        var v = e.drill_level || 0,
                            b = e.chart_ops.meta.filter_list_inner[v];
                        angular.forEach(b, function (e, t) {
                            e.uniq_id == o.uniq_id && b.splice(t, 1)
                        })
                    }
                    T(c, o), E(c, o), c.x.length || c.y.length || c.compare_axis && c.compare_axis.length || c.y_optional && (!c.y_optional || c.y_optional.length) || c.y_scatter && (!c.y_scatter || c.y_scatter.length) || (c.chart_type = "");
                    var y = c.color_setting;
                    if ("x" === r || "x" === s || "compare_axis" === s) {
                        if (y && 0 == +y.mode) {
                            var w = !1;
                            if (y.field.length > 0)
                                for (var C = 0; C < y.field.length; C++) {
                                    if (y.field[C] && o.fid === y.field[C].fid) {
                                        y.field.splice(C, 1), w = !0;
                                        break
                                    }
                                    if (!y.field[0]) {
                                        y.field.splice(C, 1), w = !0;
                                        break
                                    }
                                }
                            if (y.field && 0 === y.field.length && (delete c.color_setting, y = null), w && y && y.field.length > 0) return void j({
                                meta: c,
                                bindToMeta: !0,
                                callback: function () {
                                    Z(!1, "remove")
                                }
                            })
                        }
                    } else if (("y" === r || "y_optional" === r) && y && 0 == +y.mode) return void j({
                        meta: c,
                        bindToMeta: !0,
                        callback: function () {
                            Z(!1, "remove")
                        }
                    });
                    c.x.length + (c.compare_axis || []).length !== 0 && c.y.length + (c.y_optional || []).length !== 0 || y && 1 == +y.mode && (delete c.color_setting, y = null), Z(!1, "remove")
                }
            }, e.removeAxisAction = function (t, a, i) {
                var n = $(t.target).parents(".J-delete-target-id"),
                    r = $(t.target).parents(".J-delete-item-cls"),
                    o = {
                        targetId: n.attr("id"),
                        notSortable: r.hasClass("not-sortable"),
                        delIndex: n.find(r).index(),
                        dragFlag: a,
                        dragField: i,
                        originDragFlag: a
                    };
                "x" == a ? I(i) : "drill" == a && (e.drill_level = 0), e.removeAxis(o)
            };
            var Se;
            e.lazySaveChart = function (e, t) {
                var a = e || {
                            not_need_redraw: !1,
                            only_refresh_data: !1
                        },
                    i = void 0 === t || "" === t ? 600 : t;
                clearTimeout(Se), Se = setTimeout(function () {
                    te(a)
                }, i)
            }, e.ifEnterDown = function (t) {
                13 == t.keyCode && e.saveAfterCheckDirty({
                    not_need_redraw: !0,
                    only_refresh_data: !1,
                    closeDialog: !1
                })
            }, e.ifClearName = function (t) {
                (e.chart_ops && "未命名图表" == e.chart_ops.name || "Untitled Chart" == e.chart_ops.name) && (e.chart_ops.name = "")
            }, e.saveChartImmediate = te, e.saveAfterCheckDirty = function (e) {
                if (!N()) return !1;
                te(e)
            },
                e.switchChartType = function (t, a) {
                    if (e.chart_ops) {
                        var i = e.chart_ops.meta.level[e.drill_level],
                            n = i.chart_type,
                            r = e.chart_type[t].type,
                            o = e.$bdpChart,
                            s = 0;
                        if (o.data.x && o.data.x.length > 0 && o.data.x[0].data ? s = o.data.x[0].data.length : o.data.y && o.data.y.length > 0 && o.data.y[0].data ? s = o.data.y[0].data.length : o.data.y_optional && o.data.y_optional.length > 0 && o.data.y_optional[0].data && (s = o.data.y_optional[0].data.length), window.bdpa && bdpa.track("switch_chart_type", {
                                is_disable: !!a,
                                chart_name: e.chart_ops.name,
                                chart_type: r,
                                origion_chart_type: n,
                                chart_edit: "图表编辑",
                                mode_type: "图表类型",
                                chart_row_num: s,
                                dimension_num: i.x ? i.x.length : 0,
                                y_num: i.y ? i.y.length : 0,
                                compare_num: i.compare_axis ? i.compare_axis.length : 0,
                                y_optional_num: i.y_optional ? i.y_optional.length : 0
                            }), !a && n !== r) {
                            if ([fe.Line, fe.Area, fe.NStackArea, fe.PStackArea, fe.Biax].indexOf(r) > -1 && void 0 === i.use_spline && (i.use_spline = "0"), r === fe.Pie && (void 0 === i.shape && (i.shape = "pie"), void 0 === i.show_connector_label && (i.show_connector_label = !0)), r === fe.ComparisonBar && (i.comparison_xaxis_pos || (i.comparison_xaxis_pos = "pos_left")), n === fe.Sunburst && delete i.color_setting, r !== fe.Biax ? n === fe.Biax && (i.y = i.y_optional ? i.y.concat(i.y_optional) : [], delete i.y_optional, i.show_y_axis_optional = !1) : n !== fe.Biax && (angular.forEach(i.y, function (e, t) {
                                    "virtual" === e.data_type && i.y.splice(t, 1)
                                }), n == fe.Scatter && i.y_scatter.length > 0 ? i.y_optional = [i.y_scatter.pop()] : i.y.length > 0 && (i.y_optional = [i.y.pop()]), i.show_y_axis_optional = !0, i.type_optional = ["C210", "C220"]), r !== fe.Scatter ? n === fe.Scatter && (delete i.color_setting, ee(i)) : "C280" !== n && (delete i.color_setting, angular.forEach(i.y, function (e, t) {
                                    "virtual" === e.data_type && i.y.splice(t, 1)
                                }), i.y_scatter = i.y.slice(1), i.y = i.y.slice(0, 1), i.scatter_setting = i.scatter_setting || {}, i.scatter_setting.x_len = 1), r === fe.Gauge) {
                                var l = i.y[0].fid,
                                    d = i.y[0].uniq_id;
                                i.y[0].BDP_TCF = !0, i.tb_conditional_formatting = [{
                                    fid: l,
                                    uniq_id: d,
                                    operator: 4,
                                    value: 1,
                                    isPercentage: [!0],
                                    style: {
                                        backgroundColor: "#40A276"
                                    }
                                }, {
                                    fid: l,
                                    uniq_id: d,
                                    operator: 12,
                                    value: [.75, 1],
                                    isPercentage: [!0, !0],
                                    style: {
                                        backgroundColor: "#F6CC4E"
                                    }
                                }, {
                                    fid: l,
                                    uniq_id: d,
                                    operator: 12,
                                    value: [.25, .75],
                                    isPercentage: [!0, !0],
                                    style: {
                                        backgroundColor: "#F38000"
                                    }
                                }, {
                                    fid: l,
                                    uniq_id: d,
                                    operator: 3,
                                    value: .25,
                                    isPercentage: [!0],
                                    style: {
                                        backgroundColor: "#EE4B4B"
                                    }
                                }], delete i.y[0].series_color
                            } else n === fe.Gauge && (delete i.y[0].BDP_TCF, delete i.tb_conditional_formatting);
                            if (r === fe.TreeMap ? i.hover_mode = "single" : n === fe.TreeMap && (i.hover_mode = "multiple"), r === fe.KPICard) {
                                if (i.y.length > 1 && !i.y[1].series_color) {
                                    var c = i.y[1].fid,
                                        p = i.y[1].uniq_id;
                                    i.y[0].BDP_TCF = !1, i.y[1].BDP_TCF = !0, i.tb_conditional_formatting = [{
                                        fid: c,
                                        uniq_id: p,
                                        operator: 3,
                                        value: 0,
                                        shape_type: "arrow-down",
                                        style: {
                                            color: "#40B27E"
                                        }
                                    }, {
                                        fid: c,
                                        uniq_id: p,
                                        operator: 0,
                                        value: 0,
                                        shape_type: "arrow-equal",
                                        style: {
                                            color: "#A3ABB0"
                                        }
                                    }, {
                                        fid: c,
                                        uniq_id: p,
                                        operator: 2,
                                        value: 0,
                                        shape_type: "arrow-up",
                                        style: {
                                            color: "#EF4B4A"
                                        }
                                    }]
                                }
                            } else n === fe.KPICard && (i.y.forEach(function (e, t) {
                                delete e.BDP_TCF
                            }), delete i.tb_conditional_formatting);
                            if (U(r) && (defined(i.show_datalabels) || (i.show_datalabels = !0, i.show_all_datalabels = !1)), i.chart_type = r, setTimeout(function () {
                                    e.selected_type = r
                                }, 0), pe(i), i.chart_type !== fe.Table) delete i.tb_flip, i.chart_type === fe.KPICard && (e.chart_ops.name || (e.chart_ops.name = i.y[0].nick_name || i.y[0].name));
                            else {
                                var u = i.y_optional ? i.y_optional.slice(0) : [],
                                    h = i.y,
                                    f = h[h.length - 1],
                                    g = h[h.length - 2];
                                if (f && "row_summary" == f.fid) {
                                    var m = f;
                                    h.pop(), h = h.concat(u).concat(m), i.tb_statistic.row_setting && (i.tb_statistic.row_setting.pos = h.length - 1)
                                } else h = h.concat(u);
                                if (i.y = h.slice(0), h = [], g && "row_summary" == g.fid && "right" == i.tb_statistic.row_pos) {
                                    var _ = (jQuery.extend(!0, {}, i.y), g),
                                        v = f,
                                        b = i.y.slice(0);
                                    b.splice(h.length - 2, 2), b.push(v, _), i.y = b.splice(0)
                                }
                                delete i.y_optional, delete i.yaxis_name_right, delete i.yaxis_unit_right, delete i.yaxis_max_right, delete i.yaxis_min_right, delete i.yaxis_max_disabled_right, delete i.yaxis_min_disabled_right, delete i.type_optional, delete i.guide_line_right, i.show_y_axis_optional = !1
                            }
                            var y = !1;
                            ("C220" == n && "C220" != r && window.bdpChart.helper.timePredicted.isOpen(n, i.y) || i.x && (1 != i.x.length || "date" != i.x[0].data_type)) && (y = !0, angular.forEach(i.y, function (e, t) {
                                delete e.time_seires_setting
                            }));
                            var w = [fe.Scatter, fe.Biax, fe.WordCloud, fe.Sankey, fe.KPICard, fe.Gauge, fe.Table, fe.Pie, fe.Sunburst, fe.TreeMap, fe.ComparisonBar],
                                C = [fe.Scatter, fe.Biax, fe.WordCloud, fe.Sankey, fe.KPICard, fe.Gauge, fe.Table, fe.Pie, fe.Sunburst, fe.TreeMap, fe.ComparisonBar],
                                x = w.indexOf(n) > -1 || C.indexOf(r) > -1 || U(n) || U(r) || y;
                            ([fe.PStackColumn, fe.PStackBar, fe.PStackArea].indexOf(r) > -1 && [fe.PStackColumn, fe.PStackBar, fe.PStackArea].indexOf(n) < 0 || [fe.PStackColumn, fe.PStackBar, fe.PStackArea].indexOf(n) > -1 && [fe.PStackColumn, fe.PStackBar, fe.PStackArea].indexOf(r) < 0) && i.compare_axis && i.compare_axis.length > 0 && (x = !0), te({
                                only_redraw: !x,
                                is_drill_chart: !!e.drill_level
                            })
                        }
                    }
                }, e.showChartTypeTip = function (t, a) {
                a.stopPropagation();
                var i = $(".chart-type-tip");
                if ("block" != i.css("display")) {
                    e.chartTypeConfigMesg = {}, e.chart_type_tip.map(function (a, i) {
                        a.type == t && (e.chartTypeConfigMesg = angular.copy(a))
                    });
                    var n = $(a.target),
                        r = $("body").outerWidth(),
                        o = n.offset(),
                        s = o.top - 85,
                        l = r - o.left + 14;
                    i.css("top", s), i.css("right", l), i.css("display", "block")
                }
            }, e.hideChartTypeTip = function (e, t) {
                var a = $(".chart-type-tip");
                a.css("display", "none"), a.css("top", 0), a.css("right", 0)
            }, e.saveWordCount = function (t) {
                13 == t.keyCode && e.saveWordCountModify()
            }, e.saveWordCountModify = function () {
                var t = e.chart_ops.meta.level[e.drill_level];
                t.word_count || (t.word_count = e.maxWordCount), e.lazySaveChart({
                    not_need_redraw: !1,
                    only_refresh_data: !1
                }, 0)
            }, e.changeSmart = function () {
                e.lazySaveChart({
                    not_need_redraw: !1,
                    only_refresh_data: !1
                }, 0)
            }, e.$on("checkChartTypeCondition", function (e, t, a) {
                Q(t, a)
            }), e.switchToScatter = function () {
                var t = e.chart_ops.meta.level[e.drill_level];
                t.y_scatter = t.y_scatter || t.y.slice(1), t.y = t.y.slice(0, 1)
            }, e.$watch("drill_level", function (t, a) {
                if (e.chart_ops) {
                    var i = e.chart_ops.meta.level[a],
                        n = e.chart_ops.meta.level[t];
                    void 0 != a && i && "C280" == i.chart_type && (i.y = i.y.concat(i.y_scatter), delete i.y_scatter), void 0 != t && "C280" == n.chart_type && e.switchToScatter(), n && n.chart_type === bdpChart.ChartType.Table && pe(n)
                }
            });
            var Te = {
                clearAdvance: function (e) {
                    e && e.forEach(function (e, t) {
                        delete e.advance_aggregator, delete e.YoY, delete e.QoQ, delete e.yoyQoqSetting, delete e.yoyQoqType, delete e.series_color
                    })
                }
            };
            e.showGuideVideo = !1, e.isPersonal = !1, e.$watch(function () {
                return t.enterprise_type
            }, function (t) {
                3 == t && (e.isPersonal = !0)
            }), e.show_guide_video = function () {
                $(".J-guide-video").append('<video id="guide_video" src="../static/video/demo.mp4" controls="controls" ></video>'), e.showGuideVideo = !0, e.videoStatus = "pause", e.showPlayBtn = !0, e.showPauseBtn = !1
            }, e.close_guide_video = function () {
                e.showGuideVideo = !1, e.videoStatus = "pause", $("#guide_video").remove()
            }, e.showVideoLayer = !0, e.showPlayBtn = !0, e.showPauseBtn = !1, e.videoStatus = "pause", e.changeVideoStatus = function (t) {
                t.stopPropagation(), "pause" == e.videoStatus ? (e.videoStatus = "play", document.getElementById("guide_video").play(), e.showPlayBtn = !1, e.showPauseBtn = !1) : "play" == e.videoStatus && (e.videoStatus = "pause", document.getElementById("guide_video").pause(), e.showPlayBtn = !0, e.showPauseBtn = !1)
            }, e.playVideo = function (t) {
                t.stopPropagation(), e.videoStatus = "play", document.getElementById("guide_video").play(), e.showPlayBtn = !1, e.showPauseBtn = !1, e.showVideoLayer = !1
            }, e.pauseVideo = function (t) {
                t.stopPropagation(), e.videoStatus = "pause", document.getElementById("guide_video").pause(), e.showPlayBtn = !0, e.showPauseBtn = !1, e.showVideoLayer = !0
            }, e.show_edit_help = function () {
                this.show_chart_edit_guide = !this.show_chart_edit_guide;
                var e = this;
                this.show_chart_edit_guide && setTimeout(function () {
                    $(document).on("click.hguide", function () {
                        e.$apply(function () {
                            e.show_chart_edit_guide = !1
                        }), $(document).off("click.hguide")
                    })
                }, 0)
            };
            var Ie = "mc_guide_edit_guide";
            e.show_user_guide = function () {
                e.add_to_axis_guide = !0, e.select_chart_type_guide = !0
            }, e.hide_add_to_axis = function () {
                e.add_to_axis_guide = !1, localStorage.setItem(Ie, "1")
            }, e.hide_select_chart_type = function () {
                e.select_chart_type_guide = !1, localStorage.setItem(Ie, "1")
            }, e.canSetColor = function (t) {
                if (!t) return !1;
                var a = ["C200"],
                    i = !0,
                    n = e.chart_ops.meta.level[e.drill_level];
                if ("C290" == t) n && 0 == n.x.length && (i = !1);
                else if ("C261" == t) n && n.tb_conditional_formatting && n.tb_conditional_formatting.length > 0 && (i = !1);
                else if ("C310" == t && n && n.tb_conditional_formatting && n.tb_conditional_formatting.length > 0) {
                    var r = [0, 0];
                    n.tb_conditional_formatting.forEach(function (e, t) {
                        e.uniq_id === n.y[0].uniq_id && (r[0] = 1), n.y.length > 1 && e.uniq_id === n.y[1].uniq_id && (r[1] = 1)
                    }), i = r[0] + r[1] !== 2
                }
                return a.indexOf(t) < 0 && i
            }, e.isSortField = function (t) {
                var a = t.field,
                    i = t.axis,
                    n = e.chart_ops.meta.level[e.drill_level],
                    r = ["C200", "C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C290", "C330", "C350", "C351", "C352"],
                    o = ["C320"].concat(r),
                    s = n.sort;
                return "compare_axis" === i && (s = n.compare_axis[t.index].compare_sort), !(r.indexOf(n.chart_type) < 0) && (!(!s || !s.type) && (!("x" == s.axis && o.indexOf(n.chart_type) < 0) && ("virtual" == a.data_type && s.uniq_id === a.uniq_id || ["x", "y", "compare_axis"].indexOf(s.axis) > -1 && (a.uniq_id && s.uniq_id ? s.uniq_id == a.uniq_id : s.fid == a.fid))))
            }, e.fieldSortType = function (t) {
                var a = e.chart_ops.meta.level[e.drill_level],
                    i = a.sort;
                return t && "compare_axis" === t.axis && (i = a.compare_axis[t.index].compare_sort), i && i.type ? t && t.index && i.col_index && t.index != i.col_index ? {} : {
                    "ico-sort-desc": "desc" == i.type,
                    "ico-sort-asc": "asc" == i.type
                } : {}
            }, e.axisHandle = {
                add: function (t) {
                    var a = e.chart_ops.meta.level[e.drill_level];
                    "y_optional" === t ? (a.y_optional = [], a.chart_type = "C250", a.type_optional = ["C210", "C220"], void 0 == a.yaxis_max_disabled_right && (a.yaxis_max_disabled_right = !0), void 0 == a.yaxis_min_disabled_right && (a.yaxis_min_disabled_right = !0), a.show_y_axis_optional = !0, delete e.chart_ops.guide_line, Z()) : "compare_axis" === t && (a.compare_axis = [], e.saveChartImmediate())
                },
                remove: function (t) {
                    var a = e.chart_ops.meta.level[e.drill_level];
                    if ("y_optional" === t) a.chart_type = "C210", a.y = a.y_optional ? a.y.concat(a.y_optional) : [], delete a.y_optional, delete a.yaxis_name_right, delete a.yaxis_unit_right, delete a.yaxis_max_right, delete a.yaxis_min_right, delete a.yaxis_max_disabled_right, delete a.yaxis_min_disabled_right, delete a.type_optional, delete a.guide_line_right, a.show_y_axis_optional = !1, Z();
                    else if ("compare_axis" === t) {
                        var i = a.color_setting;
                        if (i && 0 == +i.mode) {
                            var n = !1;
                            if (i.field.length > 0 && angular.forEach(a.compare_axis, function (e) {
                                    for (var t = 0; t < i.field.length; t++)
                                        if (e.fid === i.field[t].fid) {
                                            i.field.splice(t, 1), n = !0;
                                            break
                                        }
                                }), i.field && 0 === i.field.length && (delete a.color_setting, i = null), n && i && i.field.length > 0) return void j({
                                meta: a,
                                bindToMeta: !0,
                                callback: function () {
                                    delete a.compare_axis, e.saveChartImmediate()
                                }
                            })
                        }
                        delete a.compare_axis, "C200" === a.chart_type && a.tb_statistic && a.tb_statistic.number_row && (a.tb_statistic.number_row = !1, a.y.forEach(function (e) {
                            delete e.row_setting
                        })), Z(!1, "remove")
                    }
                }
            }, e.$on("setChartStyle", function (t, i) {
                if (i) {
                    var n = r.page_referrer;
                    n && n.indexOf("data_screen") >= 0 && (e.ableSetChartStyle = !0, angular.element(".chart-edit-layer").addClass("data-screen-edit"), a(function () {
                        e.$broadcast("initChartStyleExtend", "data_screen_edit")
                    }, 0))
                }
            }), e.handleVirtualFieldForTable = pe, e.getCurrentLayerFilter = function (t) {
                var a = e.drill_level || 0;
                return t instanceof Array ? t : t[a]
            }, e.drill_level = 0, oe(), e.emitCrumbsClick = function (t) {
                t < e.drill_level && $(".drill-crumbs").find("span").eq(t).find("a").click()
            }, e.getChartArgsHeight = he, e.setAdvanceAggregatorName = v, e.showFieldTip = function (e, t) {
                if (t.nick_name) {
                    var a = $(e.target).parents(".data-tag").next(".field-tip"),
                        i = parseInt(a.css("width")),
                        n = a.children(".arrow"),
                        r = $(e.target).parents("li").position(),
                        o = parseInt($(e.target).parents("li").css("width")),
                        s = ($(e.target).parents("ul"), parseInt($(e.target).parents("ul").css("width")));
                    a.css("display", "block"), a.css("top", r.top + 38), s > r.left + i ? (a.css("left", r.left), n.css("left", 16)) : (a.css("left", r.left + o - i - 5), n.css("left", i - 16 - 15)), "row_summary" == t.fid && a.css({
                        left: 0,
                        top: r.top + 32
                    })
                }
            }, e.hideFieldTip = function (e) {
                $(e.target).parents(".data-tag").next(".field-tip").css("display", "none")
            }, bdp.utils.fixedBlur($(".chart-right input, .chart-right textarea")), e.$on("$destroy", function () {
                o.closeAll(), C.destory()
            }), f(["field.fieldNameRequired", "field.fieldTypeRequired", "field.fieldFormulaRequired", "field.addFieldSuccess", "field.modifyFieldSuccess", "field.formulaInvalid", "field.groupInvalid", "chart.delGaugeField", "chart.delField", "chart.tip", "chart.fieldInUsing", "chart.buildAggregated", "chart.duplicateField", "chart.tooManyField", "chart.delWarnField", "chart.untitledChart", "chart.addDrillTip", "chart.canNotAddEmpty", "polymer.useAggregate", "chart.notdrill", "chart.emptyChartName", "chart.showConnectorLabel", "chart.batchAddTips", "chart.addFieldsToAxisX", "chart.addFieldsToAxisY", "chart.addFieldsToAxisCampar", "chart.showxAxisPos", "chart.xAxisTwoSide", "chart.xAxisLeftSide", "chart.xAxisRightSide", "chart.xAxisMiddleSide"], e)
        }])
        .directive("chartDropDown", ["$timeout", function (e) {
            return {
                restrict: "A",
                scope: {
                    dropDownFlag: "="
                },
                link: function (t) {
                    t.$watch("dropDownFlag", function (a, i) {
                        if (a !== i && 1 == a) {
                            var n = angular.element(".chart-left").scrollTop();
                            e(function () {
                                angular.element(".chart-left").on("scroll.chartfolder", function (a) {
                                    Math.abs(n - $(a.target).scrollTop()) > 8 && (t.dropDownFlag = !1, e(function () {
                                        t.$digest()
                                    }, 0))
                                })
                            }, 0)
                        } else a !== i && 0 == a && angular.element(".chart-left").off("scroll.chartfolder")
                    })
                }
            }
        }])
}();

function () {
    angular.module("BC.controllers.chartEdit")
        .controller("CustomChartEditCtrl", [
            "$scope",
            "$rootScope",
            "$timeout",
            "$interval",
            "$location",
            "$stateParams",
            "ngDialog",
            "commonService",
            "chartType",
            "chartTypeTip",
            "errHint",
            "commonHttp",
            "$http",
            "$q",
            "$jsTipTranslate",
            "formulaKeyMap",
            "dateNameMap",
            "setAdvanceAggregatorName",
            "formatFieldPercentile",
            "$translate",
            "guideService",
            "formulaService", 
            function (e, t, a, i, n, r, o, s, l, d, c, p, u, h, f, g, m, v, b, y, w, C) {
                function x() {
                    e.codeEditor = CodeMirror(document.getElementById("custom-code-editor"), {
                        lineNumbers: !0,
                        mode: "javascript",
                        lint: {
                            asi: !0,
                            es5: !0,
                            beforeLinting: function (t) {
                                if (!e.chart_ops) return t;
                                var a = e.chart_ops.rootMeta;
                                return a.custom_chart_setting && "vega" == a.custom_chart_setting.mode ? "var vega = " + t + ";" : t
                            }
                        },
                        theme: 1 == +t.usedThemeId ? "bdp-dark" : "bdp-light",
                        lineWrapping: !0,
                        extraKeys: {
                            "Ctrl-Q": function (e) {
                                e.foldCode(e.getCursor())
                            }
                        },
                        autoCloseBrackets: !0,
                        matchBrackets: !0,
                        foldGutter: !0,
                        gutters: ["CodeMirror-lint-markers", "CodeMirror-linenumbers", "CodeMirror-foldgutter"]
                    }), e.codeEditor.on("focus", function (t) {
                        e.showCodeEditorHint && (e.showCodeEditorHint = !1, e.$apply())
                    }), e.codeEditor.on("blur", function (t) {
                        "" != e.codeEditor.getValue() || e.showCodeEditorHint || (e.showCodeEditorHint = !0, e.$apply())
                    })
                }

                function k(t, a) {
                    var i = e.chart_ops.views[t];
                    e.chart_ops.views.splice(t, 1), s.chart.del({
                        ct_id: i.ct_id
                    }).success(function (i) {
                        if (0 == +i.status) {
                            e.$bdpChart;
                            if (!a) {
                                c(y.instant("delSuccess"));
                                var n = Math.max(t - 1, 0);
                                e.setCurrentView(n)
                            }
                        } else c(y.instant("delFailed"))
                    })
                }

                function D(a) {
                    return h.all(a.map(function (e) {
                        return s.tb.getInfo(e)
                    })).then(function (a) {
                        for (var i = {}, n = [], r = {}, o = 0, s = a.length; o < s; o++) {
                            var l = a[o].result;
                            i[l.tb_id] = l.schema, n.push(l), r[l.tb_id] = l.tb_type
                        }
                        e.viewData.schemaMap = i, e.viewData.tbList = n, t.creatingChart ? e.addView(n[0]) : (e.setCurrentView(e.currentViewIndex), Z(!0))
                    })
                }

                function S() {
                    var e = r.page_referrer,
                        a = t.wsId ? t.wsId + "/" : "",
                        i = t.wsId ? "/dash_edit_ws/" : "/dash_edit/";
                    e && (i = t.wsId ? e + "_ws/" : e + "/");
                    var n = i + a + ae + "/" + ie;
                    return ["adv_dash_edit"].indexOf(e) >= 0 && (n += "/mode/adv"), n
                }

                function T(e, t, a) {
                    if (e.tb_conditional_formatting && e.tb_conditional_formatting.length > 0) {
                        var i = e.tb_conditional_formatting.length;
                        if (a)
                            for (var n = i - 1; n >= 0; n--) {
                                var r = e.tb_conditional_formatting[n];
                                "row_summary" === r.fid && r.uniq_id !== t && e.tb_conditional_formatting.splice(n, 1)
                            } else if (t)
                            for (var n = 0; n < i; n++) {
                                var r = e.tb_conditional_formatting[n];
                                if (t && r.uniq_id === t) {
                                    e.tb_conditional_formatting.splice(n, 1);
                                    break
                                }
                            }
                    }
                }

                function I(e, t, a) {
                    if (e.advanced_sort && e.advanced_sort.length > 0) {
                        var i = e.advanced_sort.length;
                        if (a)
                            for (var n = i - 1; n >= 0; n--) {
                                var r = e.advanced_sort[n];
                                "row_summary" === r.fid && r.uniq_id !== t && e.advanced_sort.splice(n, 1)
                            } else if (t)
                            for (var o = 0; o < i; o++) {
                                var s = e.advanced_sort[o];
                                if (s.uniq_id == t) {
                                    e.advanced_sort.splice(o, 1);
                                    break
                                }
                            }
                    }
                    e.advanced_sort && 0 !== e.advanced_sort.length || (e.is_advanced_sort = 0)
                }

                function L(e) {
                    for (var t, a = 0, i = e.y.length; a < i; a++) "row_summary" != e.y[a].fid || e.y[a].parent_uniq_id || (t = e.y[a].uniq_id);
                    return t
                }

                function A(e, t) {
                    var a = L(e);
                    if (t.row_setting) {
                        if (e.tb_conditional_formatting && e.tb_conditional_formatting.length > 0)
                            for (var i = e.tb_conditional_formatting.length, n = i - 1; n >= 0; n--) {
                                var r = e.tb_conditional_formatting[n];
                                r.uniq_id === t.row_setting.uniq_id && e.tb_conditional_formatting.splice(n, 1)
                            }
                        if (e.advanced_sort && e.advanced_sort.length > 0)
                            for (var i = e.advanced_sort.length, n = i - 1; n >= 0; n--) {
                                var r = e.advanced_sort[n];
                                r.uniq_id === t.row_setting.uniq_id && e.advanced_sort.splice(n, 1)
                            }
                        e.advanced_sort && 0 !== e.advanced_sort.length || (e.is_advanced_sort = 0)
                    }(!e.compare_axis || !e.compare_axis.length || e.y.length < 1 || 1 == e.compare_axis.length && "virtual" == e.compare_axis[0].data_type) && (e.tb_statistic && (e.tb_statistic.number_row = !1), e.y.forEach(function (e, t) {
                        delete e.row_setting
                    }), T(e, a, !0), I(e, a, !0)), (1 == e.y.length && "virtual" == e.y[0].data_type || !e.y.length) && (e.tb_statistic && (e.tb_statistic.row = !1, e.tb_statistic.col = !1), e.y = [], T(e, a), I(e, a))
                }

                function E(e) {
                    if (e.tb_statistic && e.tb_statistic.subtotal) {
                        e.x.length;
                        e.tb_statistic.subtotal_setting = {
                            dimensions: []
                        }
                    }
                }

                function F(e, t) {
                    if (t && "C200" === e.chart_type && e.advanced_sort && e.advanced_sort.length > 0)
                        for (var a = 0, i = e.advanced_sort.length; a < i; a++) {
                            var n = e.advanced_sort[a];
                            if (t.uniq_id) {
                                if (t.uniq_id == n.uniq_id) {
                                    e.advanced_sort.splice(a, 1);
                                    break
                                }
                            } else if (t.fid === n.fid) {
                                e.advanced_sort.splice(a, 1);
                                break
                            }
                        }
                }

                function M(t, a) {
                    return s.field.getFilteredRange(e.currentView.ct_id, a, t).then(function (e) {
                        var t = e;
                        return 0 == t.status ? t.result : null
                    })
                }

                function j(a) {
                    M(a.meta.color_setting.field, e.currentView.tb_id).then(function (e) {
                        e && e.total <= 100 && t.$emit("triggerBuildEnumColorMap", e.result, !!a.reset, !!a.bindToMeta)
                    }).then(function () {
                        a.callback()
                    })
                }

                function O(t) {
                    var a, i, n = e.chart_ops.meta.level[e.drill_level];
                    for (a = 0, i = n.y.length; a < i; a++)
                        if (n.y[a].fid == t) return !1;
                    for (a = 0, i = n.x.length; a < i; a++)
                        if (n.x[a].fid == t) return !1;
                    if (n.compare_axis)
                        for (a = 0, i = n.compare_axis.length; a < i; a++)
                            if (n.compare_axis[a].fid == t) return !1;
                    if (n.y_optional)
                        for (a = 0, i = n.y_optional.length; a < i; a++)
                            if (n.y_optional[a].fid == t) return !1;
                    return !0
                }

                function P() {
                    return !e.chart_ops || void 0 != e.chart_ops.name && "" !== e.chart_ops.name || (c(e.tips["chart.emptyChartName"]), !1)
                }

                function N() {
                    if (e.chart_ops) return e.originChartTitle != e.chart_ops.name
                }

                function B(t, a) {
                    angular.forEach(a, function (a, i) {
                        if (a.QoQ && (a.QoQ = t), a.YoY ? ("year" === t || ["quarter", "month", "week"].indexOf(t) > -1 && "year" !== a.YoY) && (delete a.YoY, delete a.yoyQoqType, delete a.formatter) : a.yoyQoqSetting && "custom" === a.yoyQoqSetting.type && delete a.yoyQoqSetting, a.advance_aggregator)
                            if (["retention", "repetition", "activity"].indexOf(a.advance_aggregator.type) > -1) a.advance_aggregator.setting.date_field_type = t;
                            else if ("running" === a.advance_aggregator.type) {
                                var n = {
                                        day: "week",
                                        week: "month",
                                        month: "quarter",
                                        quarter: "year",
                                        year: "all"
                                    },
                                    r = {
                                        week: ["day"],
                                        month: ["day", "week"],
                                        quarter: ["day", "week", "month"],
                                        year: ["day", "week", "month", "quarter"],
                                        all: ["day", "week", "month", "quarter", "year"]
                                    };
                                e.chart_ops.meta.level[e.drill_level].x[0].granularity_name ? a.advance_aggregator.setting.reset_period = "all" : r[a.advance_aggregator.setting.reset_period].indexOf(t) < 0 && (a.advance_aggregator.setting.reset_period = n[t])
                            }
                    })
                }

                function z(e, t) {
                    var a = t.offset.top < 37 || t.offset.left < 230 - t.item.width() || t.offset.left > $(".chart-right").offset().left - 10;
                    return a = a || t.offset.top > $("#chartBox").offset().top - 5
                }

                function R(e, t) {
                    delete e.granularity, t.sort && e.fid === t.sort.fid && delete t.sort, e.is_new && 2 != e.is_build_aggregated || ("number" === e.data_type ? e.aggregator = "SUM" : e.aggregator = "COUNT", e.aggregator_name = g[e.aggregator]), e.uniq_id || (e.uniq_id = +new Date)
                }

                function q(t, a, i) {
                    var n = e.chart_ops.meta.level[e.drill_level];
                    t = t || 0;
                    var r, o = "",
                        s = "",
                        l = {},
                        d = "",
                        c = "",
                        p = "";
                    if ("compare_axis" == a) r = "zh" === bdpChart.language ? "数值" : "Metrics";
                    else if ("y" == a) {
                        var u = n.tb_statistic && n.tb_statistic.row_setting;
                        r = "zh" === bdpChart.language ? "行总计" : "Row Summary", o = "total", s = "row_summary", u && (l = angular.copy(u.formatter || {}), d = u.nick_name, c = u.unit_adv, p = u.description, i = u.uniq_id)
                    }
                    return {
                        data_type: "virtual",
                        name: r,
                        index: t,
                        flag: o,
                        fid: s,
                        uniq_id: i,
                        formatter: l,
                        nick_name: d,
                        unit_adv: c,
                        description: p
                    }
                }

                function H(e, t) {
                    var a, i = [],
                        n = e.y.length,
                        r = e.tb_statistic && e.tb_statistic.row;
                    r && (a = e.tb_statistic.row_pos);
                    for (var o = "left" === a ? 1 : 0, s = "right" === a ? n - 1 : n, l = o; l < s; l++) {
                        var d = e.y[l];
                        if ("virtual" === d.data_type && d.parent_uniq_id) {
                            o = l;
                            break
                        }
                        o++
                    }
                    if (e.chart_type === bdpChart.ChartType.Table && "save" !== t) {
                        if (e.tb_statistic)
                            if (e.tb_statistic.number_row) {
                                for (var c = "zh" === bdpChart.language ? "行" : " Row ", l = 0, n = e.y.length; l < n; l++) {
                                    var p, d = e.y[l],
                                        u = d.row_setting;
                                    if ("virtual" !== d.data_type) {
                                        var h = d.number_row_formula;
                                        if (void 0 !== h && "SUM" != h || (h = "TOTAL", d.number_row_formula = "SUM"), u) p = {
                                            data_type: "virtual",
                                            alignment_method: u.alignment_method,
                                            name: (u.nick_name || d.nick_name || d.name) + "(" + c + g[h] + ")",
                                            fid: "row_summary",
                                            parent_uniq_id: u.parent_uniq_id,
                                            uniq_id: u.uniq_id,
                                            formatter: u.formatter,
                                            nick_name: u.nick_name,
                                            unit_adv: u.unit_adv,
                                            description: u.description
                                        };
                                        else {
                                            var f = (d.nick_name || d.name) + "(" + c + g[h] + ")";
                                            p = {
                                                data_type: "virtual",
                                                alignment_method: "right",
                                                name: f,
                                                fid: "row_summary",
                                                parent_uniq_id: d.uniq_id,
                                                uniq_id: +new Date + 1e3 * l,
                                                formatter: d.formatter,
                                                nick_name: "",
                                                unit_adv: "",
                                                description: ""
                                            }, d.row_setting = angular.copy(p)
                                        }
                                        d.number_row_formula && i.push(p)
                                    }
                                }
                                Array.prototype.splice.apply(e.y, [o, s - o].concat(i))
                            } else
                                for (var l = "left" === a ? 1 : 0, n = "right" === a ? e.y.length - 1 : e.y.length; l < n; l++) {
                                    var d = e.y[l];
                                    if ("virtual" === d.data_type && d.parent_uniq_id) {
                                        e.y.splice(l, n - l);
                                        break
                                    }
                                }
                    } else {
                        for (var m = 0, l = 1; l < e.y.length; l++)
                            if ("virtual" === e.y[l].data_type && e.y[l].parent_uniq_id) {
                                m = l;
                                break
                            }
                        e.y.splice(m, m)
                    }
                }

                function G(e, t, a) {
                    function i(i) {
                        for (var o, s = e[i] || [], l = q(0, i, a), d = 0, c = 0; c < s.length; c++)
                            if ("virtual" === s[c].data_type && !s[c].parent_uniq_id) {
                                o = c;
                                break
                            }
                        e.chart_type === bdpChart.ChartType.Table && "save" !== t ? i == n ? s.length > 0 && void 0 === o ? (i == n && e.compare_setting && e.compare_setting.sort && (d = e.compare_setting.sort.index || 0), s.splice(d, 0, l)) : 1 === s.length && 0 === o ? s.splice(0, 1) : 0 === e.y.length && void 0 !== o && s.splice(o, 1) : i == r && (e.tb_statistic && e.tb_statistic.row && void 0 === o ? (d = e.tb_statistic.row_setting && e.tb_statistic.row_setting.pos || 0, s.splice(d, 0, l)) : void 0 !== o && (e.tb_statistic.row || s.splice(o, 1), e.tb_statistic.row_setting && (e.tb_statistic.row_setting.pos = o))) : void 0 !== o && (s.splice(o, 1), "compare_axis" == i ? $.extend(!0, e, {
                            compare_setting: {
                                sort: {
                                    index: o
                                }
                            }
                        }) : e.tb_statistic && e.tb_statistic.row_setting && (e.tb_statistic.row_setting.pos = o))
                    }
                    var n = "compare_axis",
                        r = "y";
                    i(n), i(r), H(e, t)
                }

                function W(t) {
                    if (t.hasClass("not-sortable")) return e.deleteField = {}, t.sortable.cancel(), !1
                }

                function J(e) {
                    var t = e.is_build_aggregated,
                        a = e.dragFieldType,
                        i = e.dragFieldFormula || "";
                    return i = i.toLowerCase(), 1 !== t || "date" == a && (i.indexOf("MAX_DATE") >= 0 || i.indexOf("max_date") >= 0 || i.indexOf("MIN_DATE") >= 0 || i.indexOf("min_date") >= 0)
                }

                function V(t, a, i) {
                    var n = t.tb_fid,
                        r = t.tb_name,
                        o = t.tb_data_type,
                        s = t.tb_new,
                        l = t.is_build_aggregated,
                        d = t.meta,
                        c = d.chart_type,
                        p = t.axis_field;
                    bdpChart.getColorsByType(c, "bdp"), [].concat(d.y || [], d.y_optional || []);
                    if ("x" === a) E(d), p.push({
                        fid: n,
                        uniq_id: +new Date + (i || 0),
                        name: r,
                        data_type: o,
                        is_new: s,
                        is_build_aggregated: l,
                        granularity: "day"
                    });
                    else if ("compare_axis" === a) {
                        var u = {
                            fid: n,
                            name: r,
                            data_type: o,
                            is_new: s,
                            is_build_aggregated: l,
                            granularity: "day"
                        };
                        if (0 === p.length) {
                            var h = q(0, "compare_axis");
                            p.push(h)
                        }
                        p.push(u)
                    } else {
                        var f = {
                                check: "num",
                                num: {
                                    digit: 0,
                                    millesimal: !0
                                },
                                percent: {
                                    digit: 0
                                }
                            },
                            g = e.getDefaultAggr(d, o, l),
                            m = ($.extend(!0, {}, p), {
                                fid: n,
                                uniq_id: +new Date + (i || 0),
                                name: r,
                                data_type: o,
                                is_new: s,
                                is_build_aggregated: l,
                                aggregator: g.aggregator,
                                aggregator_name: g.name,
                                formatter: 1 == s ? "" : ["string", "date", "sub_date"].indexOf(o) > -1 ? f : ""
                            }),
                            _ = d.tb_statistic && d.tb_statistic.row && "right" == d.tb_statistic.row_pos,
                            v = d.tb_statistic && d.tb_statistic.number_row,
                            b = p.length - 1;
                        if (v)
                            for (var y = 1; y < p.length; y++)
                                if ("virtual" === p[y].data_type) {
                                    b = y;
                                    break
                                }(_ && d.tb_statistic || v) && "y" === a ? p.splice(b, 0, m) : p.push(m), d.color_setting && 0 == +d.color_setting.mode && j({
                            meta: d,
                            bindToMeta: !0,
                            callback: function () {}
                        })
                    }
                    G(d), Y()
                }

                function U(e) {
                    switch (e) {
                        case "string":
                        case "date":
                        case "sub_date":
                            return "COUNT";
                        case "number":
                            return "SUM";
                        default:
                            return ""
                    }
                }

                function Y(t, a) {
                    if (a = a || e.currentView, !P() || !e.currentView) return !1;
                    var i = a.meta.level[e.drill_level];
                    i.tb_statistic || (i.tb_statistic = {}), i.tb_statistic.tb_merge_cell = i.tb_merge_cell, void 0 === i.chart_type && (i.chart_type = "C200");
                    var n = i.y,
                        r = n[0],
                        l = n[n.length - 1],
                        d = null;
                    if ("right" == t) {
                        if (l && ("row_summary" != l.fid || l.parent_uniq_id)) {
                            var d = n.shift();
                            n.push(d)
                        }
                    } else if ("left" == t && r && "row_summary" != r.fid && !r.parent_uniq_id) {
                        var d = n.pop();
                        n.unshift(d)
                    }
                    var c = $.extend(!0, {
                        only_save_meta: !1,
                        only_redraw: !1,
                        not_need_redraw: !1,
                        only_refresh_data: !1,
                        closeDialog: !0,
                        is_drill_chart: !!e.drill_level,
                        callback: null
                    }, t);
                    e.serviceFilterList = {};
                    for (var p = 0; p < i.x.length; p++) delete i.x[p].show_formula;
                    if (i.compare_axis)
                        for (var p = 0; p < i.compare_axis.length; p++) delete i.compare_axis[p].show_formula;
                    for (var u = 0; u < i.y.length; u++) delete i.y[u].show_formula;
                    i.color_setting && (delete i.color_setting.is_series, $.isEmptyObject(i.color_setting) && delete i.color_setting);
                    var h = function (e) {
                        for (var t = i[e], a = 0; a < t.length; a++)(t[a].YoY || t[a].QoQ) && (t[a].formatter = {
                            check: "num",
                            num: {
                                digit: 2,
                                millesimal: !0
                            },
                            percent: {
                                digit: 0
                            }
                        }), delete t[a].YoY, delete t[a].QoQ, delete t[a].yoyQoqType, t[a].yoyQoqSetting && "custom" === t[a].yoyQoqSetting.type && delete t[a].yoyQoqSetting
                    };
                    0 === i.x.length ? (h("y"), function (e) {
                        for (var t, a = 0; a < i[e].length; a++) t = i[e][a], t.advance_aggregator && ["moving", "running"].indexOf(t.advance_aggregator.type) > -1 && (delete t.advance_aggregator, delete t.formatter)
                    }("y")) : i.x.length >= 1 && ("date" !== a.meta.level[0].x[0].data_type ? h("y") : (function (e) {
                        for (var t = 0; t < i[e].length; t++) {
                            var a = i[e][t],
                                n = a.yoyQoqSetting;
                            if (n) {
                                if ("custom" === n.type) return;
                                a.formatter = {
                                    check: "num",
                                    num: {
                                        digit: 2,
                                        millesimal: !0
                                    },
                                    percent: {
                                        digit: 0
                                    }
                                }
                            }
                            delete a.yoyQoqSetting
                        }
                    }("y"), function (e, t) {
                        for (var a = i[e], n = 0; n < a.length; n++) a[n].advance_aggregator && ["retention", "repetition"].indexOf(a[n].advance_aggregator.type) > -1 && (a[n].advance_aggregator.setting.date_field_type = t)
                    }("y", i.x[0].granularity))), angular.forEach(a.filter_list, function (e) {
                        e.total > 100 && e.is_config && 0 == e.range.length && (e.is_all = !0, e.is_config = !1)
                    }),
                        function (e) {
                            t && 1 == t.is_advanced_sort && (e.is_advanced_sort = 1);
                            var a = e.chart_type,
                                i = [].concat(e.y, e.y_optional || []);
                            if (e.advanced_sort && e.advanced_sort.length > 0) {
                                var n = [];
                                e.advanced_sort.forEach(function (t) {
                                    var r = t.axis;
                                    if ("date" !== t.data_type || "C200" === a)
                                        if ("x" === r || "compare_axis" === r) {
                                            var o = function (r) {
                                                var o = t.sort_items.sort_item_type;
                                                if (1 == o) {
                                                    var s = t.sort_items.aggregator_sort.uniq_id,
                                                        l = "C200" !== a && "uniqIdForSum" === s && i.length > 1,
                                                        d = X(i, s);
                                                    (l || d) && n.push(t)
                                                } else {
                                                    var c = 0;
                                                    e[r].forEach(function (e, a) {
                                                        e.uniq_id === t.uniq_id && (c = a, t.axis = r)
                                                    }), t.originIndex !== c && (t.originIndex = c), (3 !== o || 3 === o && "C261" === a) && n.push(t)
                                                }
                                            };
                                            "x" === r ? X(e.x, t.uniq_id) ? o("x") : X(e.compare_axis || [], t.uniq_id) && o("compare_axis") : X(e.compare_axis || [], t.uniq_id) ? o("compare_axis") : X(e.x, t.uniq_id) && o("x")
                                        } else "y" === r && ("C200" !== a && e.x.length && "date" === e.x[0].data_type || !(X(i, t.uniq_id) || "uniqIdForSum" === t.uniq_id && ["C200", "C250", "C310"].indexOf(a) < 0 && e.x.length && "date" !== e.x[0].data_type && e.y.length >= 2) || n.push(t))
                                }), e.advanced_sort = n
                            }
                        }(i),
                        function (e) {
                            !$.isEmptyObject(e.sort) && "y" == e.sort.axis && e.sort.uniq_id && (function (e, t) {
                                for (var a = 0, i = e.length; a < i; a++) {
                                    var n = e[a];
                                    if (n && t.fid == n.fid && (t.uniq_id == n.uniq_id || "virtual" == n.data_type)) return !0
                                }
                                return !1
                            }(e.y.concat(e.y_optional || []), e.sort) || (e.sort = {})), $.isEmptyObject(e.sort) || "x" != e.sort.axis || function (e, t) {
                                for (var a = 0, i = e.length; a < i; a++) {
                                    var n = e[a];
                                    if (n && t.fid == n.fid) return !0
                                }
                                return !1
                            }(e.x, e.sort) || (e.sort = {})
                        }(i);
                    var f = angular.copy(a.meta, {});
                    K(f), e.loadingData = !0;
                    var g = {
                        ct_id: a.ct_id,
                        data: angular.toJson({
                            meta: f,
                            name: a.name || e.tips["chart.untitledChart"],
                            tb_id: a.tb_id,
                            description: ""
                        })
                    };
                    return s.chart.modify(g).success(function (t) {
                        if ("0" === t.status) {
                            if (c.closeDialog && o.closeAll(), c.callback && "function" == typeof c.callback && c.callback(t), c.only_save_meta) return;
                            e.serviceFilterList = angular.copy(a.filter_list), c.only_redraw ? angular.element(".chart").each(function (t, n) {
                                var r = $(n).data("chart-data");
                                r && (r.ct_id == a.ct_id ? r.updateInfo(i, !0) : r.ct_id == a.parent_id && r.updateInfo(e.chart_ops.rootMeta, !0))
                            }) : c.is_drill_chart && !c.not_need_redraw ? e.draw_chart_url.options._t = (new Date).getTime() : c.not_need_redraw ? e.loadingData = !1 : (Z(), Z(!0)), e.orginChartTile = e.chart_ops.name
                        } else 90101 == t.status ? o.openConfirm({
                            templateUrl: "/static/partials/dialogTemplates/confirm-dialog.html",
                            className: "ngdialog-theme-default ngDialog-width-320",
                            data: {
                                title: e.tips.tips,
                                message: t.errstr,
                                okValue: e.tips["wb.gotIt"],
                                hideCancel: !0
                            }
                        }).then(function () {
                            e.changeRoute()
                        }) : errorHandle(t)
                    })
                }

                function X(e, t) {
                    var a = !1;
                    return (e || []).forEach(function (e) {
                        e.uniq_id === t && (a = !0)
                    }), a
                }

                function Q(t) {
                    var a = t || {},
                        i = {
                            ct_id: e.ct_id,
                            data: angular.toJson({
                                meta: e.chart_ops.rootMeta,
                                name: e.chart_ops.name || e.tips["chart.untitledChart"],
                                tb_ids: e.chart_ops.tb_ids,
                                description: e.chart_ops.description || ""
                            })
                        },
                        n = angular.element(".J_rootchart").data("chart-data");
                    return n && n.updateInfo(e.chart_ops.rootMeta, !a.only_save_meta), s.chart.modify(i).success(function (e) {
                        0 == +e.status && a.callback && "function" == typeof a.callback && a.callback(e)
                    })
                }

                function K(e) {
                    angular.forEach(e.level, function (e, t) {
                        for (var a = (e.chart_type, e.y), i = 0; i < a.length; i++) defined(a[i]) || a.splice(i, 1);
                        angular.forEach(a, function (e, t) {
                            "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                        });
                        var n = e.y_optional;
                        angular.forEach(n, function (e, t) {
                            "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                        });
                        for (var r, o = e.compare_axis || [], i = 0; i < o.length; i++) {
                            var s = o[i];
                            if ("virtual" === s.data_type) {
                                r = i;
                                break
                            }
                        }
                        void 0 !== r ? (e.compare_setting = {
                            sort: {
                                index: r
                            }
                        }, o.splice(r, 1)) : delete e.compare_setting, r = void 0;
                        for (var i = 0; i < a.length; i++) {
                            var s = a[i];
                            if ("virtual" === s.data_type && !s.parent_uniq_id) {
                                r = i;
                                break
                            }
                        }
                        void 0 !== r ? (e.tb_statistic.row_setting && (e.tb_statistic.row_setting.pos = r), a.splice(r, 1)) : e.tb_statistic && (e.tb_statistic.row_setting = {});
                        for (var l = 0, i = 1; i < a.length; i++)
                            if ("virtual" === a[i].data_type && a[i].parent_uniq_id) {
                                l = i;
                                break
                            }
                        a.splice(l, l), G(e, "save")
                    }), angular.forEach(e.filter_list, function (e, t) {
                        "date" != e.data_type && (e.range = [])
                    })
                }

                function Z(a) {
                    var i = a ? "draw_root_chart_url" : "draw_chart_url",
                        n = a ? ne : e.currentView.ct_id;
                    e[i] && e[i].options.ct_id == n ? (e[i].options._t = (new Date).getTime(), e[i].options.optional = {}, t.wsId && (e[i].options.ws_id = t.wsId)) : (e[i] = {
                        options: {
                            theme: 1 == +t.usedThemeId ? "dark" : "default",
                            ct_id: n,
                            parent_id: a ? void 0 : e.currentView.parent_id,
                            optional: {}
                        },
                        lazyload: !1
                    }, t.wsId && (e[i].options.ws_id = t.wsId))
                }

                function ee(t) {
                    var a = t;
                    e.pageInfo = {}, e.warnSetting = {
                        warn: a.warn,
                        info: a.warn_info
                    };
                    var i = {
                        name: a.name || void 0,
                        description: a.description,
                        tb_ids: a.tb_ids || "",
                        meta: {}
                    };
                    e.chart_ops = i, e.chart_ops.views = a.views, e.chart_ops.rootMeta = $.extend(!0, {}, e.chart_ops.meta, angular.fromJson(a.meta)), e.chart_ops.views.length > 0 ? (e.chart_ops.meta = e.chart_ops.views[e.currentViewIndex].meta, e.chart_ops.views.forEach(function (e) {
                        e.meta.level.forEach(function (e) {
                            e.chart_type = "C200";
                            var t = e.compare_axis;
                            if (t && t.length > 0 && e.y.length > 0) {
                                var a;
                                e.compare_setting && e.compare_setting.sort ? a = e.compare_setting.sort.index || 0 : (a = 0, e.compare_setting = {
                                    sort: {
                                        index: a
                                    }
                                });
                                var i = q(a, "compare_axis");
                                t.splice(a, 0, i)
                            }(e.tb_statistic && e.tb_statistic.row && e.y.length > 0 || e.tb_statistic.number_row) && G(e)
                        })
                    })) : e.chart_ops.meta = {
                        level: [],
                        level_fields: [],
                        filter_list: [],
                        filter_list_inner: []
                    }, i.rootMeta.chart_type && i.rootMeta.custom_chart_setting || (i.rootMeta = {
                        chart_type: "C500",
                        custom_chart_setting: {
                            code: "",
                            mode: "vega"
                        }
                    }, Q()), e.lastSavedCode = i.rootMeta.custom_chart_setting.code;
                    var n = i.rootMeta;
                    n.chart_type;
                    n.custom_chart_setting && "" != n.custom_chart_setting.code && (e.showCodeEditorHint = !1), n.top && (n.top.value = +n.top.value), n.top_compare && (n.top_compare.value = +n.top_compare.value), D(a.tb_ids)
                }

                function te() {
                    if (e.currentView) {
                        var t = (e.chart_ops.meta.level_fields.length, $(".chart-args").height() + 4);
                        $(".chart-left-side").css("top", t), $(".toggle-nav").css("top", t), $("#chartBox").css("top", t), $(".J-toggle-nav-chart-left").css("top", 0)
                    }
                }
                f([
                    "field.fieldNameRequired", "field.fieldTypeRequired",
                    "field.fieldFormulaRequired", "field.addFieldSuccess",
                    "field.modifyFieldSuccess", "field.formulaInvalid",
                    "field.groupInvalid", "chart.delGaugeField",
                    "chart.delField", "chart.tip", "chart.fieldInUsing",
                    "chart.buildAggregated", "chart.duplicateField",
                    "chart.tooManyField", "chart.delWarnField",
                    "chart.untitledChart", "chart.addDrillTip", "chart.canNotAddEmpty",
                    "polymer.useAggregate", "chart.notdrill", "chart.emptyChartName",
                    "chart.showConnectorLabel", "chart.batchAddTips", "chart.addFieldsToAxisX",
                    "chart.addFieldsToAxisY", "chart.addFieldsToAxisCampar",
                    "delSuccess", "delFailed", "copySuccess", "copyFailed", "dash.selectTbTitle",
                    "chart.addWorksheetSuccess", "addWorksheetDuplicated"], e);
                var ae, ie, ne;
                ae = r.projId, ie = r.dashId, ne = r.chartId, t.view = "custom_chart_edit", t.show_bdp_header = !1, t.projectLoaded = !1, e.chartid = ne, bdp.store.set("chart_editId", ne), e.ct_id = ne, e.formulaKeyMap = g, e.formatFieldPercentile = b, e.isCustomChart = !0, e.selected_type = "C500", e.curView = t.creatingChart ? "data" : "develop", e.currentViewIndex = 0, e.viewData = {};
                var re = "customChartEditGuide";
                e.needShowGuide = e.creatingChart && 0 == w.getGuideVal(re), e.hasShownVirtualFieldHint = "1" === $.cookie("virtual_field_hint_showed"),
                    e.turnOffVirtualFieldHint = function () {
                        e.hasShownVirtualFieldHint = !0, $.cookie("virtual_field_hint_showed", 1)
                    }, $(window).on("resize.renderChart", $.debounce(300, function () {
                    if ("custom_chart_edit" === t.view && e.$bdpChart) {
                        e.$bdpChart.renderChart()
                    }
                })),
                    e.$on("$destroy", function () {
                        $(window).off("resize.renderChart"), $(window).off("customChartEditGuide"), $("#console-message").off("click.lineNum")
                    }),
                e.needShowGuide && $(window).on("customChartEditGuide", function (a, i) {
                    if (4 == i)
                        if (e.codeEditor) {
                            e.showCodeEditorHint = !1;
                            var n = 1 == +t.usedThemeId ? "dark" : "light",
                                r = $("#vega-example-" + n).html();
                            e.codeEditor.setValue(r), w.setGuideApi(re, 5)
                        } else console.error("Code editor not loaded yet, fail to run guide-step-6")
                }),
                    e.changeView = function (t) {
                        e.curView = t, e.needShowGuide && "develop" == t && a(function () {
                            w.setGuideApi(re, 4)
                        }, 500)
                    },
                    e.showCodeEditorHint = !0;
                var oe = {
                    funcQueue: [],
                    loadLibInProgress: !1
                };
                window.CustomCodeEditorLoaded ? x() : thirdPluginLoader({
                    initFun: x,
                    libSrc: "https://s1.bdp.cn/static/js/lib/codemirror/codemirror.all_73870d3.js",
                    otherSrc: "",
                    libId: window.CustomCodeEditorLoaded
                }, oe),
                    e.runCode = function () {
                        if (e.codeEditor) {
                            var t = e.codeEditor.getValue(),
                                a = e.chart_ops.rootMeta;
                            $.extend(!0, a.custom_chart_setting, {
                                code: t
                            }), $("#console-message").html("");
                            var i = angular.element(".J_rootchart").data("chart-data");
                            i && i.updateInfo({
                                meta: e.chart_ops.rootMeta
                            }, !0), e.needShowGuide && 5 == w.getGuideVal(re) && (window.bdpGuideVeil.remove(), w.setGuideApi(re, 6))
                        }
                    },
                    $("#console-message").on("click.lineNum", "span.line-number", function () {
                        var t = +$(this).data("linenum");
                        e.codeEditor && (e.codeEditor.setCursor(t - 1), e.codeEditor.focus())
                    }),
                    e.saveCode = function () {
                        if (e.codeEditor) {
                            var t = e.codeEditor.getValue(),
                                a = e.chart_ops.rootMeta;
                            $.extend(!0, a.custom_chart_setting, {
                                code: t
                            }), Q({
                                only_save_meta: !0,
                                callback: function (a) {
                                    0 == +a.status ? (c(y.instant("saveSuccess")), e.lastSavedCode = t) : c(y.instant("saveFail"))
                                }
                            }), e.needShowGuide && 6 == w.getGuideVal(re) && (w.setGuideApi(re, -1), e.needShowGuide = !1, window.bdpGuideVeil.remove())
                        }
                    },
                    e.setEditorCursor = function (t) {
                        e.codeEditor && e.codeEditor.setCursor(t)
                    },
                    e.showEditorConsole = !1, e.toggleEditorConsole = function () {
                    e.showEditorConsole = !e.showEditorConsole
                },
                    e.curZoomView = null,
                    e.zoomInView = function (t) {
                        e.curZoomView != t && (e.curZoomView = t, "preview" == t && setTimeout(function () {
                            angular.element(".J_rootchart").data("chart-data").renderChart()
                        }, 500))
                    },
                    e.zoomOut = function () {
                        e.curZoomView = null, setTimeout(function () {
                            var e = angular.element(".J_rootchart").data("chart-data");
                            e && e.renderChart()
                        }, 500)
                    },
                    e.showAddTableDialog = function () {
                        o.open({
                            template: "/static/partials/choose-table-list.html",
                            className: "ngdialog-theme-default data-source choose-table-list",
                            data: {
                                json_data: {
                                    title: e.tips["dash.selectTbTitle"],
                                    type: "choose",
                                    show_upload: !1
                                },
                                choose_table: {
                                    tb_id: ""
                                }
                            },
                            scope: e,
                            controller: ["$scope", function (e) {
                                e.loadingTableList = !0, s.folder.getList().then(function (t) {
                                    e.loadingTableList = !1, e.folderList = t, e.original_folderList = angular.copy(t), e.$broadcast("updatefolderList", e.original_folderList)
                                }), e.chooseTableOk = function (t) {
                                    e.addTableToChart(t.tb_id), e.closeThisDialog()
                                }
                            }]
                        })
                    },
                    e.addTableToChart = function (t) {
                        for (var a = e.viewData.tbList, i = !1, n = 0; n < a.length; n++) {
                            var r = a[n];
                            if (t == r.tb_id) {
                                i = !0;
                                break
                            }
                        }
                        return i ? c(y.instant("chart.addWorksheetDuplicated")) : s.chart.addRelaTb(ne, t).then(function (a) {
                            "0" == a.status && s.tb.getInfo(t).then(function (a) {
                                if ("0" == a.status) {
                                    var i = a.result;
                                    e.viewData.schemaMap[t] = i.schema, e.viewData.tbList.push(i), e.chart_ops.tb_ids.push(t), c(y.instant("chart.addWorksheetSuccess"))
                                }
                            })
                        })
                    },
                    e.deleteTb = function (t, a, i) {
                        o.openConfirm({
                            template: "/static/partials/dialogTemplates/confirm-dialog.html",
                            className: "ngdialog-theme-default ngDialog-width-380",
                            scope: e,
                            data: {
                                message: y.instant("chart.removeWorksheetWithLayer")
                            }
                        }).then(function () {
                            for (var i = e.chart_ops.views, n = void 0 !== i ? i.length : 0, r = !1; n--;) i[n].tb_id === t && (e.deleteView(n, !0), r = !0);
                            e.viewData.tbList.splice(a, 1), s.chart.delRelaTb(ne, t).then(function (t) {
                                if ("0" != t.status) return void c(y.instant("chart.removeWorksheetFail"));
                                r && (e.setCurrentView(0), Q({
                                    only_redraw: !0
                                }))
                            })
                        })
                    },
                    e.addView = function (t) {
                        var a = {
                            parent_id: e.ct_id,
                            tb_id: t.tb_id,
                            dsh_id: ie,
                            name: t.name,
                            type: "view",
                            meta: {
                                level_fields: [],
                                level: [{
                                    x: [],
                                    y: [],
                                    yaxis_max: 0,
                                    yaxis_min: 0,
                                    yaxis_max_disabled: !0,
                                    yaxis_min_disabled: !0
                                }],
                                filter_list: [],
                                filter_list_inner: []
                            }
                        };
                        e.chart_ops.views = e.chart_ops.views || [];
                        for (var i = e.chart_ops.views, n = 0, r = 1; n < i.length; n++) {
                            var o = i[n];
                            a.name === o.name && (a.name = t.name + "_" + r, r++, n = -1)
                        }
                        e.chart_ops.views.push(a), s.chart.create(a).then(function (t) {
                            if (0 == +t.status) {
                                var a = e.chart_ops.views.length - 1;
                                e.chart_ops.views[a].ct_id = t.result.ct_id, e.setCurrentView(a), Y({
                                    only_save_meta: !0
                                })
                            } else c(y.instant("addFailed")), e.chart_ops.views.pop()
                        })
                    },
                    e.setCurrentView = function (t) {
                        if (e.currentView && (e.currentView.filterRangeList = e.filterRangeList), e.currentViewIndex = t, e.currentView = e.chart_ops.views[t], e.currentView) e.chart_ops.meta = e.chart_ops.views[t].meta, e.viewMeta = e.chart_ops.meta.level[e.drill_level], e.currentView.filterRangeList = e.currentView.filterRangeList || {}, e.filterRangeList = e.currentView.filterRangeList, e.field_list = e.viewData.schemaMap[e.currentView.tb_id], e.setFieldType(), e.advDateService && e.advDateService.list(e.currentView.ct_id), Z();
                        else {
                            e.viewMeta = {}, e.chart_ops.meta = {}, e.field_list = [];
                            var a = angular.element(".J_subchart").data("chart-data");
                            a && "function" == typeof a.destroy && a.destroy()
                        }
                    },
                    e.deleteView = function (t, a) {
                        if (a) return k(t, a);
                        o.openConfirm({
                            template: "/static/partials/dialogTemplates/confirm-dialog.html",
                            className: "ngdialog-theme-default ngDialog-width-300",
                            scope: e,
                            data: {
                                message: y.instant("chart.deleteView")
                            }
                        }).then(function () {
                            k(t)
                        })
                    },
                    e.copyView = function (t) {
                        var a = e.chart_ops.views,
                            i = angular.copy(a[t], {});
                        i.name = i.name + "_副本", e.renameView(i);
                        var n = angular.toJson({
                            proj_id: ae,
                            dsh_id: ie
                        });
                        s.chart.copy({
                            ct_id: i.ct_id,
                            ct_name: i.name,
                            from: n,
                            to: n
                        }).success(function (t) {
                            0 == +t.status ? (a.push(i), e.setCurrentView(a.length - 1), i.ct_id = t.result) : c(y.instant("copyFailed"))
                        })
                    },
                    e.renameView = function (t, a) {
                        if (!t.name) return c(y.instant("chart.viewNameRequired")), !0;
                        for (var i = e.chart_ops.views || [], n = 0, r = 1; n < i.length; n++) {
                            var o = i[n];
                            t.ct_id !== o.ct_id && (t.name === o.name && (t.name = t.name + "_" + r, r++, n = 0))
                        }
                        return a && Y({
                            only_save_meta: !0,
                            callback: function () {
                                var e = angular.element(".J_rootchart").data("chart-data");
                                e && (e.views.forEach(function (e) {
                                    e.info.chart_id == t.ct_id && (e.info.title = t.name)
                                }), e.renderChart())
                            }
                        }, t), !1
                    },
                    e.onRenameViewKeyUp = function (e) {
                        13 === e.keyCode && setTimeout(function () {
                            e.target.blur()
                        }, 0)
                    };
                var se = $(".J_field_search"),
                    le = $(".J_chart_data_info"),
                    de = $(".J_view_header"),
                    ce = $(".J_field_list"),
                    pe = 0,
                    ue = 0,
                    he = 0;
                $(".J_chart_left").on("scroll.fieldSearch", function (e) {
                    var t = $(e.target),
                        a = t.scrollTop();
                    pe = "none" == le.css("display") ? 0 : le.height(), ue = ue || de.height(), he = he || se.height(), a >= pe ? (se.css({
                        position: "fixed",
                        width: "174",
                        top: ue,
                        zIndex: 99999
                    }), ce.css({
                        marginTop: he + 20 + "px"
                    }), se.attr("data-isceil", 1), se.addClass("field-search-cover")) : (se.css({
                        position: "relative",
                        top: "auto",
                        width: "auto"
                    }), ce.css({
                        "margin-top": "8px"
                    }), se.attr("data-isceil", 0), se.removeClass("field-search-cover"))
                }),
                    e.changeRoute = function () {
                        t.creatingChart && (t.creatingChartInfo = e.chart_ops.rootMeta), t.$editable = !0, n.path(S())
                    },
                    e.newField = {},
                    e.handlerMorePos = function (e) {
                        var t = document.body.clientHeight,
                            a = $(e.target).offset(),
                            i = ($(".field-list").height(), a.top + 20),
                            n = a.left - 50;
                        i + 120 > t && (i -= 140), angular.element(".field-editable-handler-more").css({
                            top: i,
                            left: n
                        }), e.stopPropagation()
                    },
                    e.modifyField = function (a) {
                        var i;
                        if ((i = a.param) && (_.isString(i) && (i = JSON.parse(i)), "ml" == i.type)) return c(y.instant("ML_tip.fieldByMLNoEdit"));
                        t.pageLoading = !0, e.newField = angular.extend({
                            aggregator: a.formula,
                            original_field_name: a.name
                        }, a, {
                            type: "modify",
                            tb_id: e.currentView.tb_id,
                            ct_id: e.currentView.ct_id
                        });
                        var n = "ngdialog-theme-default add-field-dialog",
                            r = "/static/partials/add-field.html";
                        a.hasOwnProperty("param") && "group" == a.param.type && (r = "/static/partials/add-group-field.html", n += " group-field-dialog"), o.open({
                            template: r,
                            data: {
                                fieldList: e.field_list
                            },
                            className: n,
                            scope: e
                        })
                    },
                    e.createFieldFormula = function () {
                        t.pageLoading = !0, e.newField = {
                            type: "create",
                            name: "",
                            aggregator: ""
                        };
                        o.open({
                            template: "/static/partials/add-field.html",
                            data: {
                                fieldList: e.field_list
                            },
                            className: "ngdialog-theme-default add-field-dialog",
                            scope: e
                        })
                    },
                    e.createFieldGroup = function () {
                        t.pageLoading = !0, e.newField = {
                            type: "create",
                            name: "",
                            aggregator: "",
                            tb_id: e.currentView.tb_id,
                            ct_id: e.currentView.ct_id
                        };
                        o.open({
                            template: "/static/partials/add-group-field.html",
                            data: {
                                fieldList: e.field_list
                            },
                            className: "ngdialog-theme-default add-field-dialog group-field-dialog",
                            scope: e
                        })
                    },
                    e.createFieldByML = function () {
                        e.dialoging || (e.mlControl = {}, e.dialoging = o.open({
                            template: "/static/training/view/dialog/create-chart-field.html",
                            className: "ngdialog-theme-default ngDialog-width-300 ml-apply-dialog",
                            overlay: !1,
                            scope: e,
                            preCloseCallback: function () {
                                e.dialoging = null, e.chartMainMask = !1
                            }
                        }).id, e.chartMainMask = !0)
                    },
                    e.closeMlDialog = function (t) {
                        e.mlControl.onClose(), t(), e.mlControl = null
                    },
                    e.commitMlField = function (t) {
                        e.mlControl.onOk().then(function (a) {
                            0 == a.status && (s.field.getList(e.currentView.tb_id).then(function (t) {
                                0 == t.status && (t = t.result, e.field_list = t.schema, e.setFieldType())
                            }), t(), e.mlControl = null)
                        })
                    },
                    e.setFieldType = function () {
                        e.field_list = bdp.utils.addSpecParamsToFields(e.field_list), e.fidToName = {}, angular.forEach(e.field_list, function (t, a) {
                            e.fidToName[t.fid] = t.name
                        })
                    },
                    e.setDimensionAndMeasureStatus = function () {
                        angular.forEach(e.field_list, function (t, a) {
                            "dimension" == t.type ? e.field_list.hasDimension = !0 : "measure" == t.type && (e.field_list.hasMeasure = !0), e.fidToName[t.fid] = t.name
                        })
                    },
                    e.addCalcField = function (t) {
                        function a() {
                            s.field["create" === t.type ? "create" : "modify"]({
                                tb_id: e.currentView.tb_id,
                                original_field_name: t.original_field_name || "",
                                new_field_name: t.name,
                                aggregator: t.aggregator.trim(),
                                data_type: t.data_type,
                                param: angular.toJson(t.param),
                                fid: t.fid || ""
                            }).success(function (a) {
                                e.global.clickComplete = !0, 0 == a.status ? (o.closeAll(), s.field.getList(e.currentView.tb_id).then(function (a) {
                                    if (0 == a.status) {
                                        a = a.result, e.viewData.schemaMap[e.currentView.tb_id] = e.field_list = a.schema, e.setFieldType(), e.setDimensionAndMeasureStatus();
                                        for (var i = 0, n = e.field_list.length; i < n; i++)
                                            if (t.fid == e.field_list[i].fid) {
                                                t.name = e.field_list[i].name, t.is_build_aggregated = e.field_list[i].is_build_aggregated;
                                                break
                                            }
                                        if ("modify" == t.type) {
                                            for (var i = 0; i < e.chart_ops.meta.level.length; i++) {
                                                if (e.chart_ops.meta.level[i].x)
                                                    for (var r = 0; r < e.chart_ops.meta.level[i].x.length; r++)
                                                        if (e.chart_ops.meta.level[i].x[r].fid == t.fid) {
                                                            e.chart_ops.meta.level[i].x[r].name = t.name;
                                                            break
                                                        }
                                                if (e.chart_ops.meta.level[i].y)
                                                    for (var o = t.is_build_aggregated, s = e.chart_ops.meta.level[i], l = 0; l < s.y.length; l++)
                                                        if (s.y[l].fid == t.fid) {
                                                            s.y[l].name = t.name, s.y[l].is_build_aggregated = o, 2 == o ? "number" === s.y[l].data_type ? s.y[l].aggregator = "SUM" : s.y[l].aggregator = "COUNT" : s.y[l].aggregator = "";
                                                            break
                                                        }
                                                if (e.chart_ops.meta.level[i].y_optional)
                                                    for (var o = t.is_build_aggregated, s = e.chart_ops.meta.level[i], d = 0; d < s.y_optional.length; d++)
                                                        if (s.y_optional[d].fid == t.fid) {
                                                            s.y_optional[d].name = t.name, s.y_optional[d].is_build_aggregated = o, 2 == o ? "number" === s.y_optional[d].data_type ? s.y_optional[d].aggregator = "SUM" : s.y_optional[d].aggregator = "COUNT" : s.y_optional[d].aggregator = "";
                                                            break
                                                        }
                                                e.$broadcast("emitChangeTableFormatting", !0)
                                            }
                                            if (e.chart_ops.meta.level_fields)
                                                for (var i = 0; i < e.chart_ops.meta.level_fields.length; i++) e.chart_ops.meta.level_fields[i].fid == t.fid && (e.chart_ops.meta.level_fields[i].name = t.name);
                                            var c = O(e.newField.fid);
                                            e.saveChartImmediate({
                                                not_need_redraw: c,
                                                closeDialog: !1
                                            })
                                        }
                                        e.global.watch = new Date
                                    }
                                })) : "7700" == a.status ? c(isObjectEmpty(t.param) ? e.tips["field.formulaInvalid"] : e.tips["field.groupInvalid"]) : "40005" == a.status && c(a.errstr)
                            })
                        }
                        e.viewData.tbList.length > 1 && !t.data_type && (t.data_type = "number"), e.global.clickComplete = !1;
                        var i = !1;
                        if (t.name ? t.data_type || t.param ? t.aggregator.trim() || t.param && "group" == t.param.type || (c(e.tips["field.fieldFormulaRequired"]), i = !0) : (c(e.tips["field.fieldTypeRequired"]), i = !0) : (c(e.tips["field.fieldNameRequired"]), i = !0), i) return e.global.clickComplete = !0, !1;
                        C.isTooLong({
                            tb_id: e.currentView.tb_id,
                            aggregator: t.aggregator.trim(),
                            data_type: t.data_type,
                            param: angular.toJson(t.param)
                        }).then(function (i) {
                            if (e.global.clickComplete = !0, "error" == i) return !1;
                            i ? C.confirmModify(function () {
                                a()
                            }, t.param) : a()
                        })
                    },
                    e.delNewField = function (t, a) {
                        function i() {
                            s.field.del(a, e.currentView.tb_id).success(function (t) {
                                0 == t.status ? (s.field.getList(e.currentView.tb_id).then(function (t) {
                                    0 == t.status && (t = t.result, e.field_list = t.schema, e.setFieldType(), e.setDimensionAndMeasureStatus())
                                }), e.global.watch = new Date) : c("7590" == t.status ? e.tips["chart.fieldInUsing"] : "40006" == t.status ? t.errstr : Number(t.status))
                            })
                        }
                        o.openConfirm({
                            template: "/static/partials/dialogTemplates/confirm-dialog.html",
                            className: "ngdialog-theme-default ngDialog-width-300",
                            scope: e,
                            data: {
                                title: e.tips["chart.tip"],
                                message: e.tips["chart.delField"] + ": " + t + " ?"
                            }
                        }).then(function () {
                            i()
                        })
                    },
                    e.onSaveEnumOrder = function (t) {
                        var a = O(t);
                        e.saveChartImmediate({
                            not_need_redraw: a
                        })
                    },
                    e.showEnumOrder = function (t, a, i, n) {
                        e.preCloseDialog = !1, o.open({
                            template: "/static/partials/dialogTemplates/enum-order.html",
                            data: {
                                fid: t,
                                tb_id: e.currentView.tb_id,
                                ct_id: e.currentView.ct_id,
                                isCustomOrder: a,
                                source: i,
                                fieldIndex: n,
                                drillLevel: e.drill_level || 0,
                                meta: e.chart_ops.meta.level[e.drill_level || 0]
                            },
                            scope: e,
                            controller: "enumOrderCtrl",
                            className: "ngdialog-theme-default enum-order-dialog"
                        })
                    },
                    e.verifyChartArgs = function () {
                        if (P()) {
                            var t = e.codeEditor && e.codeEditor.getValue();
                            e.lastSavedCode !== t ? o.openConfirm({
                                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                                className: "ngdialog-theme-default ngdialog-width-340",
                                scope: e,
                                data: {
                                    message: y.instant("confirmToBack")
                                }
                            }).then(function () {
                                e.saveAfterCheckDirty({
                                    not_need_redraw: !0,
                                    only_refresh_data: !1
                                }), e.changeRoute()
                            }) : (e.saveAfterCheckDirty({
                                not_need_redraw: !0,
                                only_refresh_data: !1
                            }), e.changeRoute())
                        }
                    },
                    e.dragField = {},
                    e.dragTbFunc = function (t, a, i) {
                        e.removeFaild = !1, e.dragFlag = "source", e.dragField = i, e.dragFieldFid = i.fid, e.dragFieldName = i.name, e.dragFieldType = i.data_type, e.dragFieldFormula = i.formula, e.dragFieldIsNew = void 0 != i.formula && "" != i.formula, e.dragIsBuildAggregated = i.is_build_aggregated, o.isOpen(e.dialoging) ? angular.element("#" + e.dialoging + " .dropable").append('<div class="draggable-area"></div>') : angular.element(".chart-args,.chart-left-side").append('<div class="draggable-area"></div>')
                    },
                    e.stopDragField = function () {
                        angular.element(".draggable-area").remove()
                    },
                    e.dragSubTbFunc = function (t, a, i, n) {
                        e.dragField = {
                            fid: i.fid + "_" + n,
                            data_type: "sub_date",
                            name: m[n] + "(" + i.name + ")"
                        }, e.dragFlag = "source", e.dragFieldFid = i.fid + "_" + n, e.dragFieldType = "sub_date", e.dragFieldIsNew = "" != i.formula, e.dragIsBuildAggregated = i.is_build_aggregated, e.dragFieldFormula = i.formula || "", e.removeFaild = !1, e.dragFieldName = m[n] + "(" + i.name + ")", angular.element(".chart-args,.chart-left-side").append('<div class="draggable-area"></div>')
                    },
                    e.setGranularity = function (t, a, i, n, r) {
                        var o = angular.element(t.target),
                            s = o.parents(".data-tag").parents("li").index(),
                            l = e.viewMeta,
                            d = l[a],
                            c = l.y,
                            p = l.y_optional || [];
                        d[s].granularity = n, d[s].granularity_name = r || "", "x" === a && (e.chart_ops.meta.level_fields.length > 0 && (e.chart_ops.meta.level_fields[e.drill_level].granularity = n, e.chart_ops.meta.level_fields[e.drill_level].granularity_name = r || ""), "date" === i.data_type && 0 === s && ("hour" === n || "minute" === n || "second" === n ? angular.forEach(c, function (e, t) {
                            delete e.YoY, delete e.QoQ, delete e.yoyQoqType, delete e.advance_aggregator
                        }) : (c.length > 0 && B(n, c), p.length > 0 && B(n, p))));
                        var u = l.color_setting;
                        if (u && 0 == +u.mode) {
                            for (var h = 0; h < u.field.length; h++)
                                if (u.field[h].fid === i.fid) {
                                    u.field.splice(h, 1, i), delete u.enum_color_map;
                                    break
                                }
                            return void j({
                                meta: l,
                                reset: !0,
                                bindToMeta: !0,
                                callback: function () {
                                    e.saveChartImmediate()
                                }
                            })
                        }
                        e.saveChartImmediate()
                    },
                    e.showFormula = function (e) {
                        e.show_formula = !e.show_formula, $(".field-tip").css("display", "none")
                    },
                    e.setDataShowType = function (t, a, i, n) {
                        var r = angular.element(t.target),
                            o = r.parents(".data-tag").parents("li").index(),
                            s = e.viewMeta,
                            l = s[a];
                        s.y, s.y_optional;
                        l[o].data_show_type = n, "x" === a && e.chart_ops.meta.level_fields.length > 0 && (e.chart_ops.meta.level_fields[e.drill_level].data_show_type = n), e.saveChartImmediate()
                    },
                    e.handleVirtualFieldForTable = G,
                    e.sortAxisField = {
                        scroll: !1,
                        start: function (t, a) {
                            e.dragFlag = t.target.id.replace("drag", "").toLowerCase(), e.originDragFlag = angular.copy(e.dragFlag), e.originX = angular.copy(e.viewMeta.x), e.originY = angular.copy(e.viewMeta.y), e.originYoptional = angular.copy(e.viewMeta.y_optional);
                            var i = a.item.sortable.model;
                            !e.hasShownVirtualFieldHint && i && "virtual" === i.data_type && e.turnOffVirtualFieldHint()
                        },
                        sort: function (e, t) {
                            angular.element(".ui-sortable-helper").css({
                                width: $(this).width() + 1
                            });
                            var a = angular.element(".ui-sortable-helper");
                            z(e, t) ? a.find(".ico-remove").length || a.find(".name").append('<i class="bdp-icon ico-remove"></i>') : a.find(".name").find(".ico-remove").remove()
                        },
                        over: function (t, a) {
                            e.dragFlag = angular.element(".ui-sortable-placeholder").parent()[0].id.replace("drag", "").toLowerCase()
                        },
                        beforeStop: function (t, a) {
                            var i = a.item.sortable.model,
                                n = angular.element(".ui-sortable-placeholder").index() - 1;
                            z(t, a) && "virtual" !== i.data_type ? e.deleteField = {
                                index: n,
                                del: !0
                            } : e.deleteField = {
                                index: n,
                                del: !1
                            }
                        },
                        update: function (t, a) {
                            var i = a.item.sortable.model,
                                n = a.item.sortable.index,
                                r = a.item.sortable.dropindex,
                                o = e.viewMeta;
                            if (e.doDragField = i, W(a.item), "virtual" === i.data_type) e.originDragFlag === e.dragFlag && "y" != e.originDragFlag || a.item.sortable.cancel();
                            else if ("y" == e.dragFlag && o.tb_statistic && o.tb_statistic.row) {
                                if (("y" == e.originDragFlag ? o.y[o.y.length - 1] && "row_summary" == o.y[o.y.length - 1].fid : o.y[o.y.length - 2] && "row_summary" == o.y[o.y.length - 2].fid) && r == o.y.length - 1 && "right" == o.tb_statistic.row_pos) {
                                    var s = "y" == e.originDragFlag ? o.y[o.y.length - 1] : o.y[o.y.length - 2],
                                        l = o.y[n];
                                    if ("y" != e.originDragFlag) o.y.splice(o.y.length - 2, 2, o.y[o.y.length - 1], o.y[o.y.length - 2]), R(i, o);
                                    else {
                                        var d = o.y.slice(0);
                                        d.splice(n, 2), d.push(l, s), o.y = d.splice(0)
                                    }
                                }
                                if (("y" == e.originDragFlag ? "row_summary" == o.y[0].fid : o.y[1] && "row_summary" == o.y[1].fid) && "left" == o.tb_statistic.row_pos && 0 == r) {
                                    var s = "y" == e.originDragFlag ? o.y[0] : o.y[1],
                                        l = o.y[n],
                                        d = o.y.slice(0);
                                    "y" == e.originDragFlag ? (d.splice(n, 1), d.shift(), d.unshift(s, l), o.y = d.slice(0)) : (o.y.splice(0, 2, o.y[1], o.y[0]), R(i, o))
                                }
                            }
                            if ((!e.deleteField.del && "x" === e.dragFlag || "compare_axis" === e.dragFlag) && ("y" === e.originDragFlag || "y_optional" === e.originDragFlag) && 1 === i.is_build_aggregated) {
                                J({
                                    is_build_aggregated: e.dragIsBuildAggregated,
                                    dragFieldType: e.dragFieldType,
                                    dragFieldFormula: e.dragFieldFormula || ""
                                }) || (c("使用聚合函数的新字段无法做为" + ("x" === e.dragFlag ? "维度" : "对比维度") + "使用"), a.item.sortable.cancel())
                            }
                        },
                        stop: function (t, a) {
                            var i = a.item.sortable.model,
                                n = e.viewMeta,
                                i = n[e.dragFlag][e.deleteField.index],
                                r = (a.item.sortable.index, a.item.sortable.dropindex);
                            if (W(a.item), void 0 == r && "x" != e.dragFlag || "y" == e.originDragFlag && ("compare_axis" == e.dragFlag || "y" == e.dragFlag) || "compare_axis" == e.originDragFlag && ("y" == e.dragFlag || "compare_axis" == e.dragFlag) || E(n), "source" !== e.dragFlag) {
                                if (e.deleteField && e.deleteField.del) return "x" == e.originDragFlag && E(n), e.removeAxis({
                                    targetId: t.target.id,
                                    notSortable: a.item.hasClass("not-sortable"),
                                    delIndex: e.deleteField.index,
                                    dragFlag: e.dragFlag,
                                    originDragFlag: e.originDragFlag,
                                    dragField: i
                                }), !1;
                                if (i && "virtual" !== i.data_type) {
                                    if ("x" === e.dragFlag || "compare_axis" === e.dragFlag) {
                                        if (!i) return;
                                        delete i.aggregator, delete i.aggregator_name, delete i.YoY, delete i.QoQ, delete i.yoyQoqSetting, delete i.yoyQoqType, delete i.percentage, "date" === i.data_type && (i.granularity = "day"), i.filter_sort && "x" !== e.originDragFlag && delete i.filter_sort_list, A(n, i)
                                    } else ["y", "y_optional", "y_scatter"].indexOf(e.dragFlag) > -1 && ["x", "compare_axis"].indexOf(e.originDragFlag) > -1 && R(i, n);
                                    G(n), Y()
                                } else "compare_axis" !== e.dragFlag && "y" !== e.dragFlag || (G(n), Y())
                            }
                        },
                        appendTo: "body",
                        helper: "clone",
                        opacity: .6,
                        "ui-floating": !0,
                        items: ".drag-item:not(.not-sortable)",
                        connectWith: ".drag-target-list-dimension"
                    },
                    e.batchOnDropAdd = function (t) {
                        return !!P() && (!(!e.field_list || 0 == e.field_list.length) && void o.open({
                                template: "/static/partials/chart_batch_add_ondrop.html",
                                className: "ngdialog-theme-default batch-add-axis-dialog",
                                scope: e,
                                data: {
                                    fieldList: e.field_list,
                                    axisType: t
                                },
                                controller: ["$scope", "$filter", function (e, t) {
                                    e.fieldTypeList = [{
                                        type: "date",
                                        selected: !1
                                    }, {
                                        type: "string",
                                        selected: !1
                                    }, {
                                        type: "number",
                                        selected: !1
                                    }], e.initText = {
                                        dialogFooterTip: function (t) {
                                            switch (t) {
                                                case "x":
                                                    return e.tips["chart.batchAddTips"];
                                                case "y":
                                                    return "";
                                                case "compare_axis":
                                                    return e.tips["chart.batchAddTips"]
                                            }
                                        }(e.ngDialogData.axisType),
                                        dialogTitleKeyWord: function (t) {
                                            switch (t) {
                                                case "x":
                                                    return e.tips["chart.addFieldsToAxisX"];
                                                case "y":
                                                    return e.tips["chart.addFieldsToAxisY"];
                                                case "compare_axis":
                                                    return e.tips["chart.addFieldsToAxisCampar"]
                                            }
                                        }(e.ngDialogData.axisType)
                                    }, e.axisType = e.ngDialogData.axisType, angular.forEach(e.ngDialogData.fieldList, function (t) {
                                        if (t.selected = !1, t.disabled = !1, "x" === e.axisType || "compare_axis" === e.axisType) {
                                            J({
                                                is_build_aggregated: t.is_build_aggregated,
                                                dragFieldType: t.data_type,
                                                dragFieldFormula: t.formula
                                            }) || (t.disabled = !0)
                                        }
                                    }), e.selectedAllByType = function (a, i) {
                                        var n = i.selected,
                                            r = t("getFieldsByDataType")(e.ngDialogData.fieldList, a);
                                        angular.forEach(r, function (e) {
                                            e.disabled || (e.selected = n)
                                        })
                                    }, e.checkBatchAddType = function (a, i) {
                                        var n = 0,
                                            r = 0,
                                            o = t("getFieldsByDataType")(e.ngDialogData.fieldList, a);
                                        angular.forEach(o, function (e) {
                                            e.disabled || (r += 1, e.selected && (n += 1))
                                        }), i.selected = n == r
                                    }, e.batchAdd = function () {
                                        var t = [],
                                            a = e.viewMeta,
                                            i = e.axisType;
                                        return angular.forEach(e.ngDialogData.fieldList, function (e) {
                                            e.selected && t.push(e)
                                        }), 0 == t.length ? (c(e.tips["chart.canNotAddEmpty"]), !1) : a[i].length + t.length >= 50 ? (c(e.tips["chart.tooManyField"]), !1) : (angular.forEach(t, function (e, t) {
                                            V({
                                                tb_fid: e.fid,
                                                tb_name: e.name,
                                                tb_data_type: e.data_type,
                                                tb_new: void 0 != e.formula && "" != e.formula,
                                                is_build_aggregated: e.is_build_aggregated,
                                                meta: a,
                                                axis_field: a[i],
                                                axis_length: a[i].length,
                                                dragFieldFormula: e.formula,
                                                dragFieldType: e.data_type
                                            }, i, t)
                                        }), void e.closeThisDialog())
                                    }
                                }]
                            }))
                    },
                    e.onDropAdd = function (t, a, i) {
                        function n(e) {
                            for (var t = 0, a = 0, i = e.length; a < i; a++) {
                                if (e[a].uniq_id == r.uniq_id) {
                                    t = a, e.splice(t, 1);
                                    break
                                }
                                e[a].items && e[a].items.length > 0 && n(e[a].items)
                            }
                            return e
                        }
                        if (P() && !a.draggable.hasClass("enum-item")) {
                            var r = e.doDragField;
                            if ($.inArray(e.originDragFlag, ["x", "y", "y_optional"]) > -1 && e.originDragFlag != e.dragFlag && r && F(e.viewMeta, r), !e.dragFlag || "source" !== e.dragFlag) {
                                if (angular.element(".axis").find(".ico-remove").remove(), "y" == e.originDragFlag || "y_optional" == e.originDragFlag || "y_scatter" == e.originDragFlag) {
                                    if ("y" == e.dragFlag || "y_optional" == e.dragFlag || "y_scatter" == e.dragFlag) return;
                                    if ("number" == r.data_type || "number" != r.data_type && r.hasOwnProperty("aggregator")) {
                                        var o = e.chart_ops.meta.filter_list_inner;
                                        if (o instanceof Array) o = n(o);
                                        else {
                                            var s = e.drill_level || 0;
                                            o[s] = n(o[s])
                                        }
                                        e.chart_ops.meta.filter_list_inner = o
                                    }
                                }
                                return !1
                            }
                            if (e.needShowGuide) {
                                var l = w.getGuideVal(re);
                                1 == l && "x" === i ? (w.setGuideApi(re, 2), e.viewMeta.top = {
                                    enabled: !0,
                                    value: 20,
                                    reversed: 0,
                                    type: "items"
                                }, $(".dotguidecustomChartEditGuide").remove()) : 2 == l && "y" == i && (w.setGuideApi(re, 3), $(".dotguidecustomChartEditGuide").remove())
                            }
                            if ("x" === i || "compare_axis" === i) {
                                if (!J({
                                        is_build_aggregated: e.dragIsBuildAggregated,
                                        dragFieldType: e.dragFieldType,
                                        dragFieldFormula: e.dragFieldFormula || ""
                                    })) return c(e.tips["polymer.useAggregate"]), !1
                            }
                            var d = e.viewMeta;
                            if (d[i].length >= 50) return void c(e.tips["chart.tooManyField"]);
                            V({
                                tb_fid: e.dragFieldFid,
                                tb_name: e.dragFieldName,
                                tb_data_type: e.dragFieldType,
                                tb_new: e.dragFieldIsNew,
                                is_build_aggregated: e.dragIsBuildAggregated,
                                meta: d,
                                axis_field: d[i],
                                axis_length: d[i].length,
                                dragFieldFormula: e.dragFieldFormula
                            }, i)
                        }
                    },
                    e.getDefaultAggr = function (e, t, a) {
                        var i = "";
                        e.chart_type;
                        return 1 != a && (i = U(t)), {
                            name: g[i] || "",
                            aggregator: i
                        }
                    },
                    e.removeAxis = function (t) {
                        var a = t.targetId,
                            i = t.notSortable,
                            n = t.delIndex,
                            r = t.dragFlag,
                            o = t.dragField,
                            s = t.originDragFlag;
                        if (P() && (angular.element(".chart-main").css({
                                "overflow-x": "auto"
                            }), o)) {
                            var l = e.chart_ops.meta.level,
                                d = l[e.drill_level];
                            if ("x" === r) d.sort && e.dragFieldFid === d.sort.fid && (d.sort = {}), d.x.splice(n, 1), 0 === n && i && (l.splice(e.drill_level, 1), e.chart_ops.meta.level_fields.splice(e.drill_level, 1)), G(d);
                            else {
                                var c = function () {
                                        d.sort && e.dragFieldFid === d.sort.fid && (e.viewMeta.sort = {}), d.sort && e.dragFieldFid === d.sort.fid && (d.sort = {}), d[r].splice(n, 1), G(d)
                                    },
                                    p = function (e) {
                                        if (e && e.length)
                                            for (var t = e.length; t--;) e[t].fid == o.fid && e[t].uniq_id == o.uniq_id && e.splice(t, 1)
                                    };
                                p(d.guide_line), p(d.guide_line_x), p(d.guide_line_right);
                                var u = d.tb_conditional_formatting;
                                if (u && u.length)
                                    for (len = u.length; len--;) u[len].fid == o.fid && u[len].uniq_id == o.uniq_id && u.splice(len, 1);
                                var h = void 0;
                                if (void 0 !== (h = "dragY" == a ? 0 : "dragY_optional" == a ? 1 : void 0) && 1 == e.warnSetting.warn && function (t) {
                                        var a = !1;
                                        return angular.forEach(e.warnSetting.info, function (e) {
                                            e.axis_type == t && e.field_name == o.name && (a = !0)
                                        }), a
                                    }(h)) return confirm(e.tips["chart.delWarnField"]) ? void c() : (d.x = angular.copy(e.originX), d.y = angular.copy(e.originY), d.y_optional = angular.copy(e.originYoptional), angular.element(".ui-draggable-dragging").find(".ico-remove").remove(), void angular.element(".ui-draggable-dragging").css({
                                    left: 0,
                                    top: 0
                                }));
                                c()
                            }
                            if ("number" === o.data_type || "number" != o.data_type && o.hasOwnProperty("aggregator")) {
                                var f = e.drill_level || 0,
                                    g = e.chart_ops.meta.filter_list_inner[f];
                                angular.forEach(g, function (e, t) {
                                    e.uniq_id == o.uniq_id && g.splice(t, 1)
                                })
                            }
                            A(d, o), F(d, o);
                            var m = d.color_setting;
                            if ("x" === r || "x" === s || "compare_axis" === s) {
                                if (m && 0 == +m.mode) {
                                    var _ = !1;
                                    if (m.field.length > 0)
                                        for (var v = 0; v < m.field.length; v++) {
                                            if (m.field[v] && o.fid === m.field[v].fid) {
                                                m.field.splice(v, 1), _ = !0;
                                                break
                                            }
                                            if (!m.field[0]) {
                                                m.field.splice(v, 1), _ = !0;
                                                break
                                            }
                                        }
                                    if (m.field && 0 === m.field.length && (delete d.color_setting, m = null), _ && m && m.field.length > 0) return void j({
                                        meta: d,
                                        bindToMeta: !0,
                                        callback: function () {}
                                    })
                                }
                            } else if (("y" === r || "y_optional" === r) && m && 0 == +m.mode) return void j({
                                meta: d,
                                bindToMeta: !0,
                                callback: function () {}
                            });
                            d.x.length + (d.compare_axis || []).length !== 0 && d.y.length + (d.y_optional || []).length !== 0 || m && 1 == +m.mode && (delete d.color_setting, m = null), Y()
                        }
                    },
                    e.removeAxisAction = function (t, a, i) {
                        var n = $(t.target).parents(".J-delete-target-id"),
                            r = $(t.target).parents(".J-delete-item-cls"),
                            o = {
                                targetId: n.attr("id"),
                                notSortable: r.hasClass("not-sortable"),
                                delIndex: n.find(r).index(),
                                dragFlag: a,
                                dragField: i,
                                originDragFlag: a
                            };
                        "x" == a && E(i), e.removeAxis(o)
                    };
                var fe;
                e.lazySaveChart = function (e, t, a) {
                    var i = e || {
                                not_need_redraw: !1,
                                only_refresh_data: !1
                            },
                        n = void 0 === t || "" === t ? 600 : t;
                    clearTimeout(fe), fe = setTimeout(function () {
                        a ? Q(i) : Y(i)
                    }, n)
                },
                    e.ifEnterDown = function (t) {
                        13 == t.keyCode && e.saveAfterCheckDirty({
                            not_need_redraw: !0,
                            only_refresh_data: !1,
                            closeDialog: !1
                        })
                    },
                    e.ifClearName = function (t) {
                        (e.chart_ops && "未命名图表" == e.chart_ops.name || "Untitled Chart" == e.chart_ops.name) && (e.chart_ops.name = "")
                    },
                    e.saveChartImmediate = Y, e.saveAfterCheckDirty = function (e, t) {
                    if (!N()) return !1;
                    t ? Q(e) : Y(e)
                },
                    e.isSortField = function (t) {
                        var a = t.field,
                            i = t.axis,
                            n = e.viewMeta,
                            r = ["C200", "C210", "C211", "C212", "C220", "C240", "C241", "C242", "C250", "C290", "C330", "C350", "C351", "C352"],
                            o = ["C320"].concat(r),
                            s = n.sort;
                        return "compare_axis" === i && (s = n.compare_axis[t.index].compare_sort), !(r.indexOf(n.chart_type) < 0) && (!(!s || !s.type) && (!("x" == s.axis && o.indexOf(n.chart_type) < 0) && ("virtual" == a.data_type && "row_summary" == s.fid || ["x", "y", "compare_axis"].indexOf(s.axis) > -1 && (a.uniq_id && s.uniq_id ? s.uniq_id == a.uniq_id : s.fid == a.fid))))
                    },
                    e.fieldSortType = function (t) {
                        var a = e.viewMeta,
                            i = a.sort;
                        return t && "compare_axis" === t.axis && (i = a.compare_axis[t.index].compare_sort), i && i.type ? {
                            "ico-sort-desc": "desc" == i.type,
                            "ico-sort-asc": "asc" == i.type
                        } : {}
                    },
                    e.axisHandle = {
                        add: function (t) {
                            var a = e.viewMeta;
                            "compare_axis" === t && (a.compare_axis = [], e.saveChartImmediate())
                        },
                        remove: function (t) {
                            var a = e.viewMeta;
                            if ("compare_axis" === t) {
                                var i = a.color_setting;
                                if (i && 0 == +i.mode) {
                                    var n = !1;
                                    if (i.field.length > 0 && angular.forEach(a.compare_axis, function (e) {
                                            for (var t = 0; t < i.field.length; t++)
                                                if (e.fid === i.field[t].fid) {
                                                    i.field.splice(t, 1), n = !0;
                                                    break
                                                }
                                        }), i.field && 0 === i.field.length && (delete a.color_setting, i = null), n && i && i.field.length > 0) return void j({
                                        meta: a,
                                        bindToMeta: !0,
                                        callback: function () {
                                            delete a.compare_axis, e.saveChartImmediate()
                                        }
                                    })
                                }
                                delete a.compare_axis, Y()
                            }
                        }
                    },
                    e.getCurrentLayerFilter = function (t) {
                        var a = e.drill_level || 0;
                        return t instanceof Array ? t : t[a]
                    },
                    e.drill_level = 0,
                    function (t) {
                        e.filterRangeList = e.filterRangeList || {}, s.chart.getInfo(ne).success(function (a) {
                            if (t && (t.set_warn || t.getChartInfo), "0" == a.status) {
                                if (ee(a.result), e.serviceFilterList = angular.copy(a.result.meta.filter_list), !a.result.update_time || !a.result.meta.hasOwnProperty("level")) {
                                    e.isCreate = !0;
                                    try {
                                        var i = window.localStorage;
                                        0 != Object.keys(response.result.meta) || Number(i.getItem(CHART_EDIT_GUIDE_KEY)) || e.show_user_guide()
                                    } catch (e) {}
                                }
                            } else errorHandle(a)
                        })
                    }(), e.getChartArgsHeight = te, e.setAdvanceAggregatorName = v, e.showFieldTip = function (e, t) {
                    if (t.nick_name) {
                        var a = $(e.target).parents(".data-tag").next(".field-tip"),
                            i = parseInt(a.css("width")),
                            n = a.children(".arrow"),
                            r = $(e.target).parents("li").position(),
                            o = parseInt($(e.target).parents("li").css("width")),
                            s = ($(e.target).parents("ul"), parseInt($(e.target).parents("ul").css("width")));
                        a.css("display", "block"), a.css("top", r.top + 38), s > r.left + i ? (a.css("left", r.left), n.css("left", 16)) : (a.css("left", r.left + o - i - 5), n.css("left", i - 16 - 15)), "row_summary" == t.fid && a.css({
                            left: 0,
                            top: r.top + 32
                        })
                    }
                },
                    e.hideFieldTip = function (e) {
                        $(e.target).parents(".data-tag").next(".field-tip").css("display", "none")
                    },
                    bdp.utils.fixedBlur($(".chart-right input, .chart-right textarea")), e.$on("$destroy", function () {
                    o.closeAll()
                })
            }])
}();

angular.module("BC.controllers.chartEdit")
    .controller("gisCtrl", ["$scope", "$rootScope", "$stateParams", "$location", "errHint", "commonService", "$q", "ngDialog", "$jsTipTranslate", "formulaKeyMap", "dateNameMap", "setAdvanceAggregatorName", "formatFieldPercentile", "$translate", "formulaService", function (e, t, a, i, n, r, o, s, l, d, c, p, u, h, f) {
        function g() {
            var t = e.chart_ops.meta.layers;
            if (t)
                for (var a = 0, i = t.length; a < i; a++)
                    if (!t[a].layer_name) return n(h.instant("chart.layerNameRequired")), !1;
            return !0
        }

        function m() {
            return "layer_" + "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" == e ? t : 3 & t | 8).toString(16)
                }).replace(/-/g, "")
        }

        function _(e, t) {
            for (var a = t.layer_name, i = 0, n = 1; i < e.length; i++) {
                var r = e[i];
                t.layer_name = a + "_" + n, t.layer_name === r.layer_name && (n++, t.layer_name = a + "_" + n)
            }
        }

        function v(t) {
            e.chart_ops.meta.layers.splice(t, 1), t == e.currentLayerIndex ? e.currentLayerIndex = e.chart_ops.meta.layers.length ? e.chart_ops.meta.layers.length - 1 : 0 : e.currentLayerIndex == e.chart_ops.meta.layers.length ? e.currentLayerIndex-- : t < e.currentLayerIndex && e.currentLayerIndex--, e.viewData.currentLayer = e.chart_ops.meta.layers[e.currentLayerIndex], e.field_list = e.viewData.currentLayer ? e.viewData.schemaMap[e.viewData.currentLayer.tb_id] : [];
            var a = e.$bdpChart;
            a.data.layers.splice(t, 1), a.info.meta.layers.splice(t, 1), e.saveChart({
                only_redraw: !0
            })
        }

        function b(t) {
            var a = e.chart_ops.meta && e.chart_ops.meta.layers;
            return a = a || [], a.some(function (e) {
                return e.tb_id === t
            })
        }

        function y() {
            window.localStorage.getItem("BDP_ShowGisEditGuide") || (t.showGisEditGuide = !0, t.gisEditGuide = 0, window.localStorage.setItem("BDP_ShowGisEditGuide", 1))
        }

        function w(e, t) {
            return !e.some(function (e) {
                    return !e.lng_field || !e.lat_field
                }) || (t && n(h.instant("chart.saveGisTableSettingFail")), !1)
        }

        function C(t) {
            e.viewData.schemaMap[t.tb_id] = e.field_list = t.schema, e.setFieldType()
        }

        function x(t) {
            var a, i, n = e.viewData.currentLayer;
            for (a = 0, i = n.y.length; a < i; a++)
                if (n.y[a].fid == t) return !1;
            for (a = 0, i = n.x.length; a < i; a++)
                if (n.x[a].fid == t) return !1;
            return !0
        }

        function k(e, t) {
            var a = Math.abs(e.x1 + e.x2 - t.x1 - t.x2),
                i = e.x2 - e.x1 + (t.x2 - t.x1),
                n = Math.abs(e.y1 + e.y2 - t.y1 - t.y2),
                r = e.y2 - e.y1 + (t.y2 - t.y1);
            return a <= i && n <= r
        }

        function D(e, t) {
            var a = {
                    x1: t.offset.left,
                    y1: t.offset.top,
                    x2: t.offset.left + t.helper.width(),
                    y2: t.offset.top + t.helper.height()
                },
                i = $(".chart-args"),
                n = i.offset();
            return !k(a, {
                x1: n.left,
                y1: n.top,
                x2: n.left + i.width(),
                y2: n.top + i.height()
            })
        }

        function S(e, t) {
            var a = {
                    x1: t.offset.left,
                    y1: t.offset.top,
                    x2: t.offset.left + t.helper.width(),
                    y2: t.offset.top + t.helper.height()
                },
                i = $(".layers"),
                n = i.offset();
            return !k(a, {
                x1: n.left,
                y1: n.top,
                x2: n.left + i.width(),
                y2: n.top + i.height()
            })
        }

        function T(e, t) {
            return "heatmap" == e && t > 0
        }

        function I(t, a) {
            switch (t) {
                case "x":
                    if (1 === Number(a.is_build_aggregated)) return n(e.tips["polymer.useAggregate"]), !1;
                    delete a.aggregator, delete a.aggregator_name, a.uniq_id || (a.uniq_id = +new Date);
                    break;
                case "y":
                    var i = e.viewData.currentLayer.color_setting,
                        r = e.viewData.currentLayer.bubble_setting;
                    if (i && 1 === i.field[0].is_build_aggregated || r && 1 === r.field.is_build_aggregated) {
                        var o = e.viewData.currentLayer.y[0];
                        o && o.aggregator ? (a.aggregator = "number" === a.data_type ? "SUM" : "COUNT", a.aggregator_name = d[a.aggregator]) : "number" !== a.data_type && (a.aggregator = "COUNT", a.aggregator_name = d[a.aggregator], e.viewData.currentLayer.y.forEach(function (e) {
                            1 === Number(e.is_build_aggregated) || e.aggregator || (e.aggregator = "number" === e.data_type ? "SUM" : "COUNT", e.aggregator_name = d[e.aggregator])
                        }))
                    } else if (1 !== Number(a.is_build_aggregated)) {
                        var o = e.viewData.currentLayer.y[0];
                        o && o.aggregator ? (a.aggregator = "number" === a.data_type ? "SUM" : "COUNT", a.aggregator_name = d[a.aggregator]) : "number" !== a.data_type && (a.aggregator = "COUNT", a.aggregator_name = d[a.aggregator], e.viewData.currentLayer.y.forEach(function (e) {
                            1 === Number(e.is_build_aggregated) || e.aggregator || (e.aggregator = "number" === e.data_type ? "SUM" : "COUNT", e.aggregator_name = d[e.aggregator])
                        }))
                    } else 1 === Number(a.is_build_aggregated) && (a.aggregator = "COUNT", a.aggregator_name = d[a.aggregator], e.viewData.currentLayer.y.forEach(function (e) {
                        1 === Number(e.is_build_aggregated) || e.aggregator || (e.aggregator = "number" === e.data_type ? "SUM" : "COUNT", e.aggregator_name = d[e.aggregator])
                    }));
                    a.uniq_id || (a.uniq_id = +new Date)
            }
        }

        function L(e, t) {
            for (var a = 0, i = 0, n = t.length; i < n; i++)
                if (e == t[i].layer_id) {
                    a = i;
                    break
                }
            return a
        }

        function A() {
            return e.originChartTitle != e.chart_ops.name
        }

        function E(t) {
            t && (e.global.show_discrete = !0, t.y.some(function (t) {
                return ("string" === t.data_type || 1 == t.is_build_aggregated) && (e.global.show_discrete = !1, !0)
            }))
        }

        function F(t) {
            t && t.y.forEach(function (t) {
                e.formatFieldPercentile(t)
            })
        }

        function M(e) {
            return o.all(e.map(function (e) {
                return r.tb.getInfo(e)
            }))
        }

        function j(t, a, i, n) {
            e.saveDone = !1;
            var o = {
                ct_id: t,
                data: angular.toJson({
                    meta: i,
                    name: a
                })
            };
            return n && (o.operate = angular.toJson(n)), r.chart.modify(o).then(function (t) {
                return e.saveDone = !0, t
            })
        }
        t.view = "chart_edit", t.editGisView = "gis_edit", t.show_bdp_header = !1, e.saveDone = !0, e.chartId = a.chartId, e.chartTitle = "", e.projId = a.projId, e.dashId = a.dashId, e.wsId = a.wsId, e.gisTypes = ["bubble", "heatmap", "massive", "graph", "trajectory", "d_trajectory"], e.gisBubbleSymbol = ["location", "circle", "triangle", "rect", "diamond", "ripple"], e.timeAnimationSpeeds = [{
            name: "chart.animationSlow",
            val: 1
        }, {
            name: "chart.animationNormal",
            val: 3
        }, {
            name: "chart.animationFast",
            val: 5
        }, {
            name: "custom",
            val: 9
        }], e.formatFieldPercentile = u, bdp.store.set("chart_editId", e.chartId), e.gisGraphTypes = ["pie", "column", "bar"], e.heatMapUnit = [{
            name: h.instant("chart.meter"),
            value: "m"
        }, {
            name: h.instant("chart.pixel"),
            value: "px"
        }], e.gisTypeNames = {
            bubble: h.instant("chart.bubble"),
            heatmap: h.instant("chart.heatmap"),
            massive: h.instant("chart.massive"),
            graph: h.instant("chart.graph"),
            trajectory: h.instant("chart.trajectory"),
            d_trajectory: h.instant("chart.d_trajectory")
        }, e.timeGranularity = ["year", "quarter", "month", "week", "day", "hour", "minute", "second"], e.timeGranularityLabelMap = {}, e.timeGranularity.forEach(function (t) {
            e.timeGranularityLabelMap[t] = h.instant(t)
        }), e.draw_chart_url = {
            options: {
                theme: 1 == +t.usedThemeId ? "dark" : "default",
                ct_id: e.chartId,
                ws_id: e.wsId,
                optional: {}
            },
            lazyload: !1
        }, e.currentLayerIndex = 0, e.chart_ops = {
            meta: {}
        }, e.viewData = {}, e.back = function () {
            g() && (t.pageLoading = !0, e.saveCenterAndZoom().then(function () {
                t.pageLoading = !1;
                var n = a.page_referrer,
                    r = t.wsId ? t.wsId + "/" : "",
                    o = t.wsId ? "/dash_edit_ws/" : "/dash_edit/";
                n && (o = t.wsId ? n + "_ws/" : n + "/");
                var s = o + r + e.projId + "/" + e.dashId;
                return ["adv_dash_edit"].indexOf(n) >= 0 && (s += "/mode/adv"), i.path(s), s
            }))
        }, e.saveCenterAndZoom = function () {
            var t = o.defer(),
                a = $("#chartBox").find(".chart").data("bdp-chart-instance");
            if (a && !$.isEmptyObject(e.chart_ops.meta.layers)) {
                a = a.gisMap.bmap;
                var i = a.getZoom(),
                    n = a.getCenter();
                return e.chart_ops.meta.zoom = i, e.chart_ops.meta.center = [n.lng, n.lat], e.saveChart({
                    not_need_redraw: !0
                })
            }
            return t.resolve(), t.promise
        }, e.addLayer = function (t) {
            var a = {
                tb_id: t.tb_id,
                layer_name: t.name,
                layer_id: m(),
                lng: [],
                lat: [],
                x: [],
                y: [],
                type: "bubble",
                bubble_symbol: "circle",
                filter_list: []
            };
            e.chart_ops.meta.layers = e.chart_ops.meta.layers || [];
            for (var i = e.chart_ops.meta.layers, n = 0, r = 1; n < i.length; n++) {
                var o = i[n];
                a.layer_name === o.layer_name && (a.layer_name = t.name + "_" + r, r++, n = -1)
            }
            e.chart_ops.meta.layers.push(a), e.setCurrentLayer(e.chart_ops.meta.layers.length - 1), e.saveChart()
        }, e.copyLayer = function (t) {
            var a = e.chart_ops.meta.layers || [],
                i = angular.copy(e.chart_ops.meta.layers[t]),
                r = i.layer_id;
            if ("d_trajectory" == i.type) return i = null, n(h.instant("chart.copyDTrajectoryLayerFail"));
            i.layer_id = m(), _(a, i), i.timeline && delete i.timeline, e.chart_ops.meta.layers.push(i), e.setCurrentLayer(e.chart_ops.meta.layers.length - 1), e.saveChart({
                operate: {
                    operator: "copy_layer",
                    params: {
                        origin_layer: r,
                        dest_layer: i.layer_id
                    }
                }
            })
        }, e.deleteLayer = function (t) {
            s.openConfirm({
                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                className: "ngdialog-theme-default ngDialog-width-300",
                scope: e,
                data: {
                    message: h.instant("chart.deleteLayer")
                }
            }).then(function () {
                v(t)
            })
        }, e.showAddTableDialog = function () {
            s.open({
                template: "/static/partials/choose-table-list.html",
                className: "ngdialog-theme-default data-source choose-table-list",
                data: {
                    json_data: {
                        title: e.tips["dash.selectTbTitle"],
                        type: "choose",
                        show_upload: !1
                    },
                    choose_table: {
                        tb_id: ""
                    }
                },
                scope: e,
                controller: ["$scope", function (e) {
                    e.loadingTableList = !0, r.folder.getList().then(function (t) {
                        e.loadingTableList = !1, e.folderList = t, e.original_folderList = angular.copy(t), e.$broadcast("updatefolderList", e.original_folderList)
                    }), e.chooseTableOk = function (t) {
                        e.addTableToChart(t.tb_id), e.closeThisDialog(), n(h.instant("chart.addWorksheetSuccess"))
                    }
                }]
            })
        }, e.addTableToChart = function (t) {
            for (var a = e.viewData.tbList, i = !1, o = 0; o < a.length; o++) {
                var s = a[o];
                if (t == s.tb_id) {
                    i = !0;
                    break
                }
            }
            return i ? n(h.instant("chart.addWorksheetDuplicated")) : r.chart.addRelaTb(e.chartId, t).then(function (a) {
                "0" == a.status && r.tb.getInfo(t).then(function (a) {
                    if ("0" == a.status) {
                        var i = a.result;
                        e.viewData.schemaMap[t] = i.schema, e.viewData.tbList.push(i), i.lat_field && i.lng_field || e.showSetCoordDialog(i)
                    }
                })
            })
        }, e.deleteTb = function (t, a) {
            s.openConfirm({
                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                className: "ngdialog-theme-default ngDialog-width-380",
                scope: e,
                data: {
                    message: h.instant("chart.removeWorksheetWithLayer")
                }
            }).then(function () {
                for (var i = e.chart_ops.meta.layers, o = void 0 !== i ? i.length : 0, s = !1; o--;) i[o].tb_id === t && (i.splice(o, 1), s = !0);
                e.viewData.tbList.splice(a, 1), r.chart.delRelaTb(e.chartId, t).then(function (t) {
                    if ("0" != t.status) return void n(h.instant("chart.removeWorksheetFail"));
                    s && e.saveChart()
                })
            })
        }, e.showSetCoordDialog = function (t, a) {
            if (void 0 === t) {
                var i = e.viewData.currentLayer;
                if (i && e.viewData.tbList.forEach(function (e) {
                        e.tb_id === i.tb_id && (t = e, gis_type = t.gis_type)
                    }), void 0 === t) return n(h.instant("chart.unselectedWorksheet"))
            } else gis_type = t.gis_type;
            s.open({
                template: "/static/partials/dialogTemplates/gis-coord-type.html",
                className: "ngdialog-theme-default gis-single-tb-setting",
                data: {
                    table: t
                },
                scope: e,
                preCloseCallback: function (i) {
                    return "$closeButton" == i && (e.viewData.currentLayer || w([t]) ? a && y() : e.back()), !0
                },
                showClose: !1,
                controller: ["$scope", function (e) {
                    e.table = {
                        gis_type: e.ngDialogData.table.gis_type,
                        tb_id: e.ngDialogData.table.tb_id,
                        name: e.ngDialogData.table.name,
                        field_list: e.ngDialogData.table.schema,
                        lng_field: e.ngDialogData.table.lng_field || "",
                        lat_field: e.ngDialogData.table.lat_field || ""
                    }, e.coordTypeList = [{
                        value: 0,
                        name: h.instant("chart.baiduMap")
                    }, {
                        value: 1,
                        name: h.instant("chart.gaodeMap")
                    }, {
                        value: 2,
                        name: h.instant("chart.tencentMap")
                    }, {
                        value: 3,
                        name: h.instant("chart.aliyunMap")
                    }, {
                        value: 4,
                        name: h.instant("chart.googleMap")
                    }, {
                        value: 5,
                        name: h.instant("chart.googleMapAbroad")
                    }, {
                        value: 6,
                        name: "GCJ-02"
                    }, {
                        value: 7,
                        name: "WGS-84"
                    }], e.confirm = function () {
                        if (w([e.table], !0)) {
                            var t = {
                                gis_type: e.table.gis_type,
                                lng_field: e.table.lng_field,
                                lat_field: e.table.lat_field
                            };
                            r.tb.modifyTag([{
                                tb_id: e.table.tb_id,
                                tag: t
                            }]).then(function (t) {
                                "0" === t.status && (e.ngDialogData.table.gis_type = e.table.gis_type, e.ngDialogData.table.lng_field = e.table.lng_field, e.ngDialogData.table.lat_field = e.table.lat_field, n(e.tips["chart.saveSuccess"]), b(e.table.tb_id) && e.saveChart())
                            }), e.closeThisDialog(), a && y()
                        }
                    }, e.cancel = function () {
                        e.closeThisDialog(), e.viewData.currentLayer || w([t]) ? a && y() : e.back()
                    }
                }]
            })
        }, e.toggleMoreAction = function (e) {
            var t = $(e.target).siblings(".more-dropdown");
            t.toggleClass("hidden"), t.hasClass("hidden") || setTimeout(function () {
                $(document).one("click.more-dropdown", function () {
                    t.addClass("hidden")
                })
            }, 0)
        }, e.renameLayer = function (t) {
            if (!t.layer_name) return n(h.instant("chart.layerNameRequired")), !0;
            for (var a = e.chart_ops.meta.layers || [], i = 0, r = 1; i < a.length; i++) {
                var o = a[i];
                t.layer_id !== o.layer_id && (t.layer_name === o.layer_name && (t.layer_name = t.layer_name + "_" + r, r++, i = 0))
            }
            return e.saveChart({
                only_redraw: !0
            }), !1
        }, e.onRenameLayerKeyUp = function (e) {
            13 === e.keyCode && setTimeout(function () {
                e.target.blur()
            }, 0)
        }, e.toggleVisible = function (t) {
            t.invisible = !t.invisible, e.saveChart({
                only_redraw: !0
            })
        }, window.scope = e;
        var O, P;
        e.dragTbFunc = function (e, t, a) {
            O = a
        }, e.onDrop = function (t, a) {
            O && e.addLayer(O)
        }, e.newField = {}, e.handlerMorePos = function (e) {
            var t = document.body.clientHeight,
                a = $(e.target).offset(),
                i = ($(".field-list").height(), a.top + 20),
                n = a.left - 50;
            i + 120 > t && (i -= 140), angular.element(".field-editable-handler-more").css({
                top: i,
                left: n
            }), e.stopPropagation()
        }, e.modifyField = function (a) {
            t.pageLoading = !0, e.newField = angular.extend({
                aggregator: a.formula,
                original_field_name: a.name
            }, a, {
                type: "modify",
                tb_id: e.viewData.currentLayer.tb_id,
                ct_id: e.chartId
            });
            var i = "ngdialog-theme-default add-field-dialog",
                n = "/static/partials/add-field.html";
            a.param && "group" == a.param.type && (n = "/static/partials/add-group-field.html", i += " group-field-dialog"), s.open({
                template: n,
                data: {
                    fieldList: e.field_list
                },
                className: i,
                scope: e
            })
        }, e.createFieldFormula = function () {
            t.pageLoading = !0, e.newField = {
                type: "create",
                name: "",
                aggregator: ""
            };
            s.open({
                template: "/static/partials/add-field.html",
                data: {
                    fieldList: e.field_list
                },
                className: "ngdialog-theme-default add-field-dialog",
                scope: e
            })
        }, e.createFieldGroup = function () {
            t.pageLoading = !0, e.newField = {
                type: "create",
                name: "",
                aggregator: "",
                tb_id: e.viewData.currentLayer.tb_id,
                ct_id: e.chartId
            };
            s.open({
                template: "/static/partials/add-group-field.html",
                data: {
                    fieldList: e.field_list,
                    tb_id: e.viewData.currentLayer.tb_id
                },
                className: "ngdialog-theme-default add-field-dialog group-field-dialog",
                scope: e
            })
        }, e.createFieldByML = function () {
            e.dialoging || (e.mlControl = {}, e.dialoging = s.open({
                template: "/static/training/view/dialog/create-chart-field.html",
                className: "ngdialog-theme-default ngDialog-width-300 ml-apply-dialog",
                overlay: !1,
                scope: e,
                data: {
                    tb_id: e.viewData.currentLayer.tb_id,
                    ct_id: e.chartId
                },
                preCloseCallback: function () {
                    e.dialoging = null, e.chartMainMask = !1
                }
            }).id, e.chartMainMask = !0)
        }, e.closeMlDialog = function (t) {
            e.mlControl.onClose(), t(), e.mlControl = null
        }, e.commitMlField = function (t) {
            e.mlControl.onOk().then(function (a) {
                0 == a.status && (r.field.getList(e.viewData.currentLayer.tb_id).then(function (e) {
                    0 == e.status && C(e.result)
                }), t(), e.mlControl = null)
            })
        }, e.setFieldType = function () {
            if (e.viewData.currentLayer) {
                var t = e.viewData.schemaMap[e.viewData.currentLayer.tb_id];
                t = bdp.utils.addSpecParamsToFields(t), e.fidToName = {}, angular.forEach(t, function (t, a) {
                    e.fidToName[t.fid] = t.name
                })
            }
        }, e.setCurrentLayer = function (t) {
            e.viewData.currentLayer && (e.viewData.currentLayer.filterRangeList = e.filterRangeList), e.currentLayerIndex = t, e.viewData.currentLayer = e.chart_ops.meta.layers[t], e.viewData.currentLayer.filterRangeList = e.viewData.currentLayer.filterRangeList || {}, e.filterRangeList = e.viewData.currentLayer.filterRangeList, e.setGraphColor(), e.field_list = e.viewData.schemaMap[e.viewData.currentLayer.tb_id], e.setFieldType()
        }, e.fetchTbInfo = function (t) {
            return M(t).then(function (t) {
                for (var a = {}, i = [], n = {}, o = !1, l = 0, d = t.length; l < d; l++) {
                    var c = t[l].result;
                    a[c.tb_id] = c.schema, i.push(c), n[c.tb_id] = c.tb_type, c.lng_field && c.lat_field || (o = !0)
                }
                e.viewData.schemaMap = a, e.field_list = e.viewData.currentLayer ? e.viewData.schemaMap[e.viewData.currentLayer.tb_id] : [], e.setFieldType(), e.viewData.tbList = i, o ? i.length > 1 ? s.open({
                    template: "/static/partials/dialogTemplates/gis-coord-type.html",
                    className: "ngdialog-theme-default gis-table-setting",
                    scope: e,
                    preCloseCallback: function (t) {
                        return "$closeButton" === t && (e.viewData.currentLayer || w(i) ? y() : e.back()), !0
                    },
                    showClose: !1,
                    controller: ["$scope", function (e) {
                        e.coordTypeList = [{
                            value: 0,
                            name: h.instant("chart.baiduMap")
                        }, {
                            value: 1,
                            name: h.instant("chart.gaodeMap")
                        }, {
                            value: 2,
                            name: h.instant("chart.tencentMap")
                        }, {
                            value: 3,
                            name: h.instant("chart.aliyunMap")
                        }, {
                            value: 4,
                            name: h.instant("chart.googleMap")
                        }], e.gisSettingTbList = i, e.settingTable = i[0], e.confirm = function () {
                            var t = e.gisSettingTbList;
                            w(t, !0) && (t = e.gisSettingTbList.map(function (e) {
                                return {
                                    tb_id: e.tb_id,
                                    tag: {
                                        gis_type: e.gis_type,
                                        lng_field: e.lng_field,
                                        lat_field: e.lat_field
                                    }
                                }
                            }), r.tb.modifyTag(t).then(function (a) {
                                if ("0" === a.status) {
                                    var i = t.some(function (e) {
                                        return b(e.tb_id)
                                    });
                                    e.gisSettingTbList = null, i && e.saveChart()
                                }
                            }), e.closeThisDialog(), y())
                        }, e.cancel = function () {
                            e.closeThisDialog(), e.viewData.currentLayer || w(i) ? y() : e.back()
                        }, e.setCurrentTable = function (t) {
                            e.settingTable = e.gisSettingTbList[t]
                        }
                    }]
                }) : e.showSetCoordDialog(i[0], !0) : y()
            })
        }, e.addCalcField = function (t) {
            function a() {
                r.field["create" === t.type ? "create" : "modify"]({
                    tb_id: e.viewData.currentLayer.tb_id,
                    original_field_name: t.original_field_name || "",
                    new_field_name: t.name,
                    aggregator: t.aggregator.trim(),
                    data_type: t.data_type,
                    param: angular.toJson(t.param),
                    fid: t.fid || ""
                }).success(function (a) {
                    if (e.global.clickComplete = !0, 0 == a.status) {
                        s.closeAll();
                        var i = e.viewData.currentLayer.tb_id;
                        r.field.getList(i).then(function (a) {
                            if (0 == a.status) {
                                C(a.result);
                                for (var i = 0, n = e.field_list.length; i < n; i++)
                                    if (t.fid == e.field_list[i].fid) {
                                        t.name = e.field_list[i].name, t.is_build_aggregated = e.field_list[i].is_build_aggregated;
                                        break
                                    }
                                if ("modify" == t.type) {
                                    for (var i = 0; i < e.chart_ops.meta.layers.length; i++)
                                        if (e.chart_ops.meta.layers[i].y)
                                            for (var r = t.is_build_aggregated, o = e.chart_ops.meta.layers[i], s = 0; s < o.y.length; s++)
                                                if (o.y[s].fid == t.fid) {
                                                    o.y[s].name = t.name, o.y[s].is_build_aggregated = r, o.y[s].data_type = t.data_type, 2 == r ? "number" === o.y[s].data_type ? o.y[s].aggregator = "SUM" : o.y[s].aggregator = "COUNT" : o.y[s].aggregator = "";
                                                    break
                                                }
                                    x(e.newField.fid);
                                    e.saveChartImmediate({
                                        not_need_redraw: !0,
                                        closeDialog: !1
                                    })
                                }
                            }
                        })
                    } else "7200" == a.status ? n(isObjectEmpty(t.param) ? e.tips["field.formulaInvalid"] : e.tips["field.groupInvalid"]) : "40005" == a.status && n(a.errstr)
                })
            }
            e.global.clickComplete = !1;
            var i = !1;
            if (t.name ? t.data_type || t.param ? t.aggregator.trim() || t.param && "group" == t.param.type || (n(e.tips["field.fieldFormulaRequired"]), i = !0) : (n(e.tips["field.fieldTypeRequired"]), i = !0) : (n(e.tips["field.fieldNameRequired"]), i = !0), i) return e.global.clickComplete = !0, !1;
            f.isTooLong({
                tb_id: e.viewData.currentLayer.tb_id,
                aggregator: t.aggregator.trim(),
                data_type: t.data_type,
                param: angular.toJson(t.param)
            }).then(function (i) {
                if (e.global.clickComplete = !0, "error" == i) return !1;
                i ? f.confirmModify(function () {
                    a()
                }, t.param) : a()
            })
        }, e.delNewField = function (t, a) {
            function i() {
                r.field.del(a, e.viewData.currentLayer.tb_id).success(function (t) {
                    0 == t.status ? (r.field.getList(e.viewData.currentLayer.tb_id).then(function (t) {
                        0 == t.status && (t = t.result, e.viewData.schemaMap[e.viewData.currentLayer.tb_id] = e.field_list = t.schema, e.setFieldType())
                    }), e.global.watch = new Date) : n("7590" == t.status ? e.tips["chart.fieldInUsing"] : "40006" == t.status ? t.errstr : Number(t.status))
                })
            }
            e.chart_ops.meta.gauge_setting && t == e.chart_ops.meta.gauge_setting.goal.field_name ? s.openConfirm({
                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                className: "ngdialog-theme-default ngDialog-width-300",
                scope: e,
                data: {
                    title: e.tips["chart.tip"],
                    message: e.tips["chart.delGaugeField"] + ": " + t + " ?"
                }
            }).then(function () {
                e.chart_ops.meta.gauge_setting.goal = {
                    value_type: "constant",
                    value: $.cookie("yaxis_max")
                }, e.saveChartImmediate(), i()
            }) : s.openConfirm({
                template: "/static/partials/dialogTemplates/confirm-dialog.html",
                className: "ngdialog-theme-default ngDialog-width-300",
                scope: e,
                data: {
                    message: e.tips["chart.delField"] + ": " + t + " ?"
                }
            }).then(function () {
                i()
            })
        }, e.onSaveEnumOrder = function (t) {
            var a = x(t);
            e.saveChartImmediate({
                not_need_redraw: a
            })
        }, e.showEnumOrder = function (t, a, i, n) {
            s.open({
                template: "/static/partials/dialogTemplates/enum-order.html",
                data: {
                    fid: t,
                    tb_id: e.viewData.currentLayer.tb_id,
                    isCustomOrder: a,
                    source: i,
                    fieldIndex: n,
                    drillLevel: e.drill_level || 0
                },
                scope: e,
                controller: "enumOrderCtrl",
                className: "ngdialog-theme-default enum-order-dialog"
            })
        }, e.stopDragField = function () {
            angular.element(".draggable-area").remove()
        }, e.dragFieldFunc = function (t, a, i) {
            P = i, e.dragField = i, e.removeFaild = !1, e.dragFieldFid = i.fid, e.dragFieldName = i.name, e.dragFieldType = i.data_type, s.isOpen(e.dialoging) && angular.element("#" + e.dialoging + " .dropable").append('<div class="draggable-area"></div>')
        }, e.dragSubTbFunc = function (t, a, i, n) {
            e.dragField = {
                fid: i.fid + "_" + n,
                data_type: "sub_date",
                name: c[n] + "(" + i.name + ")"
            }, P = e.dragField, e.removeFaild = !1, e.dragFieldFid = i.fid + "_" + n, e.dragFieldType = "sub_date", e.dragFieldIsNew = "" != i.formula, e.dragIsBuildAggregated = i.is_build_aggregated, e.dragFieldFormula = i.formula || "", e.dragFieldName = c[n] + "(" + i.name + ")"
        }, e.dropFieldTo = function (t, a, i) {
            if ("x" === i) {
                if (1 === P.is_build_aggregated) return n(e.tips["polymer.useAggregate"]), !1
            } else if ("lng" === i || "lat" === i) {
                if (1 === P.is_build_aggregated) return n(e.tips["polymer.gisUseAggregate"]), !1
            } else if ("y" === i && 1 === P.is_build_aggregated) {
                if ("string" === P.data_type || "date" === P.data_type) return n(e.tips["polymer.buildAggregateY"]), !1
            } else if ("y" === i && 1 !== P.is_build_aggregated) {
                var r = e.viewData.currentLayer.color_setting,
                    o = e.viewData.currentLayer.bubble_setting;
                if (r && 1 === r.field[0].is_build_aggregated || o && 1 === o.field.is_build_aggregated) {
                    var s = e.viewData.currentLayer.y[0],
                        l = e.dragField;
                    s && s.length > 0 ? e.viewData.currentLayer.y.forEach(function (e) {
                        1 === Number(e.is_build_aggregated) || e.aggregator || (e.aggregator = "number" === e.data_type ? "SUM" : "COUNT", e.aggregator_name = d[e.aggregator])
                    }) : (l.aggregator = "number" === l.data_type ? "SUM" : "COUNT", l.aggregator_name = d[l.aggregator])
                }
            }
            e.addField(i, angular.copy(P))
        };
        var N = e.sortAxisField = {
            originAxis: "",
            targetAxis: "",
            updated: !1,
            currentAction: "",
            start: function (e, t) {
                N.originAxis = e.target.id.replace("drag", "").toLowerCase(), N.targetAxis = e.target.id.replace("drag", "").toLowerCase(), N.updated = !1
            },
            sort: function (e, t) {
                var a = t.helper;
                a.css({
                    width: $(this).width() + 1
                }), D(e, t) ? a.find(".ico-remove").length || a.find(".name").append('<i class="bdp-icon ico-remove"></i>') : a.find(".name").find(".ico-remove").remove()
            },
            over: function (e, t) {
                N.targetAxis = e.target.id.replace("drag", "").toLowerCase()
            },
            beforeStop: function (t, a) {
                N.currentAction = D(t, a) ? "del" : "";
                var i = e.viewData.currentLayer[N.targetAxis].length,
                    r = "lat" == N.targetAxis || "lng" == N.targetAxis;
                ("del" == N.currentAction || r && i) && a.item.sortable.cancel(), "x" == N.targetAxis && e.dragField && 1 === e.dragField.is_build_aggregated && (n(e.tips["polymer.useAggregate"]), a.item.sortable.cancel()), "y" == N.targetAxis && T(e.viewData.currentLayer.type, i) && (n(h.instant("chart.heatMapOneField")), a.item.sortable.cancel()), a.item.sortable.model && I(N.targetAxis, a.item.sortable.model)
            },
            receive: function (e, t) {
                N.targetAxis = e.target.id.replace("drag", "").toLowerCase(), N.updated = !0
            },
            update: function (e, t) {},
            stop: function (t, a) {
                var i = a.item.sortable.model;
                if ("del" == N.currentAction) return e.removeField(N.originAxis, i), !1;
                e.saveChart()
            },
            appendTo: "body",
            helper: "clone",
            opacity: .6,
            "ui-floating": !0,
            items: ".drag-item:not(.not-sortable)",
            connectWith: ".drag-target-list-dimension"
        };
        e.removeField = function (t, a) {
            var i = e.viewData.currentLayer[t].indexOf(a);
            i > -1 && e.viewData.currentLayer[t].splice(i, 1), e.saveChart()
        }, e.addField = function (t, a) {
            switch (t) {
                case "lng":
                case "lat":
                    0 === e.viewData.currentLayer[t].length && (e.viewData.currentLayer[t][0] = a), e.viewData.currentLayer[t].length = 1;
                    break;
                case "x":
                    e.viewData.currentLayer.x.some(function (e) {
                        return e.fid === a.fid
                    }) || (I("x", a), e.viewData.currentLayer.x.push(a));
                    break;
                case "y":
                    T(e.viewData.currentLayer.type, e.viewData.currentLayer.y.length) ? n(h.instant("chart.heatMapOneField")) : (I("y", a), a.is_new = void 0 != a.formula && "" != a.formula, e.viewData.currentLayer.y.push(a))
            }
            e.saveChart()
        };
        var B = e.sortLayers = {
            currentAction: "",
            sort: function (e, t) {
                var a = t.helper;
                a.css({
                    width: $(this).width() + 1
                }), S(e, t) ? a.find(".ico-remove").length || a.find(".layer-name").append('<i class="bdp-icon ico-remove"></i>') : a.find(".layer-name").find(".ico-remove").remove()
            },
            beforeStop: function (e, t) {
                B.currentAction = S(e, t) ? "del" : "", "del" == B.currentAction && t.item.sortable.cancel()
            },
            stop: function (t, a) {
                if ("del" == B.currentAction) {
                    var i = 0;
                    return i = L(a.item.sortable.model.layer_id, e.chart_ops.meta.layers), void v(i)
                }
                $(".layers").find(".layer-name").find(".ico-remove").remove();
                for (var n = 0, r = e.chart_ops.meta.layers.length; n < r; n++)
                    if (e.chart_ops.meta.layers[n] === e.viewData.currentLayer) {
                        e.currentLayerIndex = n;
                        break
                    }
                e.saveChart()
            }
        };
        e.saveAfterCheckDirty = function (t) {
            if (!A()) return !1;
            e.saveChart(t)
        }, e.ifEnterDown = function (t) {
            13 == t.keyCode && e.saveAfterCheckDirty({
                not_need_redraw: !0,
                only_refresh_data: !1,
                closeDialog: !1
            })
        }, e.setGisType = function (t) {
            var a = e.viewData.currentLayer;
            if (!e.viewData.currentLayer) return n(h.instant("chart.noLayerErr"));
            if ("heatmap" == t && e.viewData.currentLayer.y.length > 1) return n(h.instant("chart.heatMapOneField") + h.instant("chart.removeExtraField"));
            if ("heatmap" == t && $.isEmptyObject(e.viewData.currentLayer.heatmap_setting) && (e.viewData.currentLayer.heatmap_setting = {
                    radius: 10,
                    unit: "px"
                }), "graph" !== t || e.viewData.currentLayer.graph_type || (e.viewData.currentLayer.graph_type = "pie"), "trajectory" === t || "d_trajectory" === t) {
                if ("d_trajectory" == t) {
                    if (e.chart_ops.meta.layers.some(function (e) {
                            return e != a && (e.timeline && e.timeline.enabled)
                        })) return n(h.instant("chart.enableDTrajectoryFail"))
                }
                var i = !1;
                if (e.viewData.currentLayer.y.forEach(function (e) {
                        e.aggregator = "", e.aggregator_name = "", i = !0
                    }), !e.viewData.currentLayer.trajectory) {
                    var r = null;
                    if (!e.field_list.some(function (e) {
                            return "date" !== e.data_type && (r = e, !0)
                        })) return delete e.viewData.currentLayer.sequence, n(h.instatnt("chart.noStrFieldForTrajectory"));
                    e.viewData.currentLayer.trajectory = [r], i = !0
                }
                if (!e.viewData.currentLayer.sequence) {
                    var o = null;
                    if (!e.field_list.some(function (e) {
                            return "date" == e.data_type && (o = e, !0)
                        })) return delete e.viewData.currentLayer.trajectory, n(h.instant("chart.noDateFieldForTrajectory"));
                    var s = angular.copy(o);
                    delete s.granularity, delete s.granularity_name, e.viewData.currentLayer.sequence = [s], i = !0
                }
                if ("d_trajectory" == t && !e.viewData.currentLayer.timeline) {
                    var s = angular.copy(e.viewData.currentLayer.sequence[0]);
                    s.granularity = "day", e.viewData.currentLayer.timeline = {
                        enabled: !0,
                        field: s,
                        loop: !1,
                        fps: 60,
                        speed: 3
                    }, i = !0
                }
                if (i) return e.viewData.currentLayer.type = t, e.saveChart()
            } else delete e.viewData.currentLayer.sequence, delete e.viewData.currentLayer.trajectory;
            e.viewData.currentLayer.timeline && e.viewData.currentLayer.timeline.enabled && (e.viewData.currentLayer.timeline.interval = 1), e.viewData.currentLayer.type = t, e.saveChart({
                only_redraw: !0
            })
        }, e.setGisSymbolType = function (t) {
            e.viewData.currentLayer && (e.viewData.currentLayer.bubble_symbol = t, e.saveChart({
                only_redraw: !0
            }))
        }, e.setGisGraphType = function (t) {
            e.viewData.currentLayer && (e.viewData.currentLayer.graph_type = t, e.saveChart({
                only_redraw: !0
            }))
        }, e.checkRadius = function () {
            var t = e.viewData.currentLayer.heatmap_setting;
            if (!t || !t.radius || t.radius < 0) return n(h.instant("chart.positiveNumber")), void(t.radius = 10);
            e.saveChart({
                only_redraw: !0
            })
        }, e.onRadiusKeyUp = function (t) {
            13 === t.keyCode && e.checkRadius()
        }, e.onUnitChange = function () {
            e.saveChart({
                only_redraw: !0
            })
        }, e.setGraphColor = function () {
            if (e.seriesColors = [], e.viewData.currentLayer && "graph" === e.viewData.currentLayer.type) {
                var t = bdpChart.getColorsByType("C400", "bdp");
                e.viewData.currentLayer.y.forEach(function (a, i) {
                    var n = a.nick_name || a.name;
                    a.series_color = a.series_color || t[i % t.length], e.seriesColors.push({
                        color: a.series_color,
                        show_name: n
                    })
                })
            }
        }, e.changeTrajectory = function () {
            e.viewData.currentLayer.sequence[0] && e.saveChartImmediate()
        }, e.changeSequence = function () {
            var t = e.viewData.currentLayer;
            "d_trajectory" == t.type && (t.timeline || (t.timeline = {
                enabled: !0,
                loop: !1,
                speed: 3
            }), t.timeline.field = angular.copy(t.sequence[0]), t.timeline.field.granularity = "day"), t.trajectory[0] && e.saveChartImmediate()
        }, e.enableTimeline = function () {
            var t = e.viewData.currentLayer;
            if (!t.tb_id) return delete e.viewData.currentLayer, n(h.instant("chart.noLayerErr"));
            if (t.timeline.enabled) {
                if (e.chart_ops.meta.layers.some(function (e) {
                        return e != t && e.timeline && e.timeline.enabled
                    })) return delete t.timeline, n(h.instant("chart.enableTimeAnimationFail"));
                var a = null;
                if (!e.field_list.some(function (e) {
                        return "date" == e.data_type && (a = e, !0)
                    })) return delete t.timeline, n(h.instant("chart.noDateFieldForAnimation"));
                t.timeline.field || (t.timeline.field = a, t.timeline.field.granularity = "day"), t.timeline.speed = t.timeline.speed || 3, t.timeline.fps = t.timeline.fps || 2, t.timeline.interval = t.timeline.interval || 1
            } else delete t.timeline;
            e.saveChartImmediate()
        }, e.setGranularity = function (t, a, i, n, r) {
            i.granularity = n, i.granularity_name = r || "", e.show_timeline_granularity = !1, e.saveChartImmediate()
        }, e.checkTimelineInterval = function () {
            var t = e.viewData.currentLayer.timeline,
                a = /^\-?\d*$/;
            if (!t || !t.interval || t.interval < 0 || !a.test(t.interval)) return n(h.instant("chart.positiveNumber")), void(t.interval = 1);
            e.saveChart({
                only_redraw: !0
            })
        }, e.onTimelineIntervalKeyUp = function (t) {
            13 === t.keyCode && e.checkTimelineInterval()
        }, e.checkTimelineFps = function () {
            var t = e.viewData.currentLayer.timeline;
            if (!t || !t.fps || t.fps < 0) return n(h.instant("chart.positiveNumber")), void(t.fps = "d_trajectory" == e.viewData.currentLayer.type ? 60 : 2);
            e.saveChart({
                only_redraw: !0
            })
        }, e.onTimelineFpsKeyUp = function (t) {
            13 === t.keyCode && e.checkTimelineFps()
        }, e.saveChart = function (t) {
            if (!e.saveDone) {
                var a = o.defer();
                return a.resolve(), a.promise
            }
            t = t || {};
            var i = $("#chartBox").find(".chart").data("bdp-chart-instance");
            if (i && i.gisMap && !$.isEmptyObject(e.chart_ops.meta.layers)) {
                i = i.gisMap.bmap;
                var n = i.getZoom(),
                    r = i.getCenter();
                e.chart_ops.meta.zoom = n, e.chart_ops.meta.center = [r.lng, r.lat]
            }
            var l, d = e.chart_ops.meta;
            if (d && (e.setGraphColor(), l = angular.copy(d), e.viewData.currentLayer)) {
                var c = e.viewData.currentLayer.y.concat(e.viewData.currentLayer.x);
                angular.forEach(c, function (e) {
                    delete e.show_formula
                }), E(e.viewData.currentLayer), l.layers.some(function (t) {
                    return t.layer_id === e.viewData.currentLayer.layer_id && (t.y.forEach(function (e) {
                            "MED" === e.aggregator ? (e.aggregator = "PERCENT", e.percent = "0.5") : e.aggregator && e.aggregator.indexOf("PERCENT") >= 0 && (e.aggregator = "PERCENT")
                        }), !0)
                })
            }
            return j(e.chartId, e.chart_ops.name, l, t.operate).then(function (a) {
                if (e.saveDone = !0, "0" == a.status)
                    if (t.closeDialog && s.closeAll(), t.callback && "function" == typeof t.callback && t.callback(a), F(e.viewData.currentLayer), t.only_redraw) {
                        var i = e.$bdpChart;
                        i.updateInfo({
                            meta: l
                        }, !0)
                    } else t.not_need_redraw || (e.draw_chart_url.options.t = +new Date)
            })
        }, e.showFormula = function (e) {
            e.show_formula = !e.show_formula, $(".field-tip").css("display", "none")
        }, e.setAdvanceAggregatorName = p, e.showFieldTip = function (e, t) {
            if (t.nick_name) {
                var a = $(e.target).parents(".data-tag").siblings(".field-tip"),
                    i = parseInt(a.css("width")),
                    n = a.children(".arrow"),
                    r = $(e.target).parents("li").position(),
                    o = ($(e.target).parents("ul"), parseInt($(e.target).parents("ul").css("width")));
                a.css("display", "block"), a.css("top", r.top + 38), o > r.left + i ? (a.css("left", 0), n.css("left", 16)) : (a.css({
                    left: "auto",
                    right: "5px"
                }), n.css("left", i - 16 - 15))
            }
        }, e.hideFieldTip = function (e) {
            $(e.target).parents(".data-tag").next(".field-tip").css("display", "none")
        }, e.saveChartImmediate = e.saveChart,
            function (t) {
                return r.chart.getInfo(t).then(function (t) {
                    var a = t;
                    if (0 == a.status) return e.advDateService && e.advDateService.list(e.chartId), a.result;
                    n(+a.status)
                })
            }(e.chartId).then(function (t) {
                if (t) return e.chart_ops.meta = t.meta, e.chart_ops.name = t.name, e.chart_ops.meta.chart_type = e.chart_ops.meta.chart_type || "C400", e.chart_ops.ct_id = e.tb_id, t.meta.layers && (e.viewData.currentLayer = t.meta.layers[e.currentLayerIndex], E(e.viewData.currentLayer), t.meta.layers.forEach(function (e) {
                    e.timeline && e.timeline.enabled && (e.timeline.fps = e.timeline.fps || ("d_trajectory" == e.type ? 60 : 2), e.timeline.interval = e.timeline.interval || 1)
                })), e.fetchTbInfo(t.tb_ids)
            }), e.$on("$destroy", function () {
            s.closeAll()
        }), l(["field.fieldNameRequired", "field.fieldTypeRequired", "field.fieldFormulaRequired", "field.addFieldSuccess", "field.modifyFieldSuccess", "field.formulaInvalid", "field.groupInvalid", "chart.delGaugeField", "chart.delField", "chart.tip", "chart.fieldInUsing", "chart.buildAggregated", "chart.duplicateField", "chart.tooManyField", "chart.delWarnField", "chart.untitledChart", "chart.addDrillTip", "polymer.useAggregate", "polymer.buildAggregateY", "polymer.gisUseAggregate", "chart.notdrill", "chart.emptyChartName", "chart.saveSuccess"], e)
    }])
    .directive("gisFieldSetting", ["ngDialog", "errHint", "$jsTipTranslate", function (e, t, a) {
        return {
            link: function (a, i) {
                a.setNumDigit = function (t) {
                    var i = angular.copy(t);
                    if (i.formatter || (i.formatter = {
                            check: "num",
                            num: {
                                digit: 2,
                                millesimal: !0,
                                unit: 1
                            },
                            percent: {
                                digit: 2
                            }
                        }), i.formatter.num.unit) {
                        if (i.formatter.num.unit && "en" == $rootScope.language) switch (i.formatter.num.unit) {
                            case "10000":
                                i.formatter.num.unit = 1e3;
                                break;
                            case "100000000":
                                i.formatter.num.unit = 1e6
                        }
                    } else i.formatter.num.unit = 1;
                    e.open({
                        template: "/static/partials/dialogTemplates/set_numdigit.html",
                        className: "ngdialog-theme-default numdigit-model",
                        data: {
                            field: i,
                            field_index: t
                        },
                        scope: a
                    })
                }, a.saveNumdigit = function (i, n) {
                    return "num" == i.formatter.check && (i.formatter.num.digit > 6 || i.formatter.num.digit < 0) ? void t(a.tips["chart.numDigitInvalid"]) : "percent" == i.formatter.check && (i.formatter.percent.digit > 4 || i.formatter.percent.digit < 0) ? void t(a.tips["chart.percentDigitInvalid"]) : (n.formatter = i.formatter, a.saveChartImmediate(), void e.closeAll())
                }, a.setNickName = function (t) {
                    var i = angular.copy(t);
                    e.open({
                        template: "/static/partials/dialogTemplates/nick_name.html",
                        className: "ngdialog-theme-default nick-model",
                        data: {
                            origin_name: i.nick_name,
                            field_index: t,
                            field: i
                        },
                        scope: a
                    })
                }, a.saveNickName = function (t, i) {
                    i.nick_name = t.nick_name, i.unit_adv = t.unit_adv, i.description = t.description, a.saveChartImmediate(), e.closeAll()
                }, a.setAggrFilter = function (t) {
                    var i = angular.copy(t);
                    e.open({
                        template: "/static/partials/dialogTemplates/aggr_filter.html",
                        className: "ngdialog-theme-default aggr-filter-model",
                        data: {
                            field_index: t,
                            field: i
                        },
                        scope: a,
                        controller: ["$scope", function (e) {
                            e.toggleAggrFilterMax = function () {
                                e.field.aggr_filter.disable_max && (e.field.aggr_filter.max = null)
                            }, e.toggleAggrFilterMin = function () {
                                e.field.aggr_filter.disable_min && (e.field.aggr_filter.min = null)
                            }, e.onMaxChange = function () {
                                t.aggr_filter.disable_max = null == e.field.aggr_filter.max
                            }, e.onMinChange = function () {
                                t.aggr_filter.disable_min = null == e.field.aggr_filter.min
                            };
                            var t = e.field = e.ngDialogData.field;
                            e.field.aggr_filter ? (t.aggr_filter.disable_max = "" === t.aggr_filter.max, t.aggr_filter.disable_min = "" === t.aggr_filter.min, t.aggr_filter.max = "" === t.aggr_filter.max ? null : Number(t.aggr_filter.max), t.aggr_filter.min = "" === t.aggr_filter.min ? null : Number(t.aggr_filter.min)) : t.aggr_filter = {
                                disable_max: !0,
                                disable_min: !0
                            }
                        }]
                    })
                }, a.saveAggrFilter = function (t, i) {
                    null === t.aggr_filter.max && null === t.aggr_filter.min ? delete i.aggr_filter : (null === t.aggr_filter.max && (t.aggr_filter.max = ""), null === t.aggr_filter.min && (t.aggr_filter.min = ""), i.aggr_filter = {
                        max: void 0 !== t.aggr_filter.max ? "" + t.aggr_filter.max : "",
                        min: void 0 !== t.aggr_filter.min ? "" + t.aggr_filter.min : ""
                    }), a.saveChartImmediate(), e.closeAll()
                }
            }
        }
    }]);
    function () {
        function e(e, t, a, i, n, r) {
            function o(t) {
                var a = angular.copy(t);
                e.warnConfigData.warnName = a.warn_name, 0 != a.warn_time ? (e.warnConfigData.warnTime = 1, e.warnConfigData.warnExactTime = Number(a.warn_time)) : e.warnConfigData.warnTime = a.warn_time, e.warnConfigData.logic = a.meta.logic, a.meta.option.length > 0 && angular.forEach(a.meta.option, function (e) {
                    7 == e.compare_type && (e.compare_value_left = e.compare_value[0], e.compare_value_right = e.compare_value[1]), e.compare_type = String(e.compare_type)
                }), e.warnConfigData.warnConditions = a.meta.option, e.warnConfigData.warnName = a.warn_name, e.warnConfigData.warnName = a.warn_name, e.warnConfigData.switchOn = a.switch || 1
            }

            function s(t, a) {
                var i = !1,
                    n = 0,
                    r = 0;
                if ("y" == e.warnConfigData.currentAxisType) {
                    for (n = 0, r = e.warnConfigData.warnItemsYList.length; n < r; n++)
                        if (t == e.warnConfigData.warnItemsYList[n].warn_name && a != e.warnConfigData.warnItemsYList[n].warn_id && e.warnConfigData.type == e.warnConfigData.warnItemsYList[n].type) {
                            i = !0;
                            break
                        }
                } else
                    for (n = 0, r = e.warnConfigData.warnItemsYOptionalList.length; n < r; n++)
                        if (t == e.warnConfigData.warnItemsYOptionalList[n].warn_name && a != e.warnConfigData.warnItemsYOptionalList[n].warn_id && e.warnConfigData.type == e.warnConfigData.warnItemsYOptionalList[n].type) {
                            i = !0;
                            break
                        } return i
            }

            function l() {
                var t = !0,
                    a = e.warnConfigData;
                if (!a.warnName) return n(e.tips["warn.inputWarnName"]), t = !1;
                if (s(a.warnName, a.warnId)) return n(e.tips["warn.repeatWarnName"]), t = !1;
                if (1 == a.warnTime && !a.warnExactTime) return n(e.tips["filter.inputCompleteCondition"]), t = !1;
                for (var i = {}, r = 0, o = a.warnConditions.length; r < o; r++) {
                    if (i = a.warnConditions[r], !i.fid) {
                        n(e.tips["filter.inputCompleteCondition"]), t = !1;
                        break
                    }
                    if (!i.compare_type) {
                        n(e.tips["filter.inputCompleteCondition"]), t = !1;
                        break
                    }
                    if (7 == i.compare_type) {
                        if (void 0 === i.compare_value_left || void 0 === i.compare_value_right) {
                            n(e.tips["warn.inputFormatError"]), t = !1;
                            break
                        }
                        if (null === i.compare_value_left || "" === i.compare_value_left || null === i.compare_value_right || "" === i.compare_value_right) {
                            n(e.tips["filter.inputCompleteCondition"]), t = !1;
                            break
                        }
                        if (i.compare_value_left >= 9007199254740992 || i.compare_value_left <= -9007199254740992 || i.compare_value_right >= 9007199254740992 || i.compare_value_right <= -9007199254740992) {
                            n(e.tips["warn.valueOutOfRange"] + ":-9007199254740991 ~ 9007199254740991"), t = !1;
                            break
                        }
                        if (i.compare_value_left > i.compare_value_right) {
                            n(e.tips["warn.valueCompareTips"]), t = !1;
                            break
                        }
                    } else {
                        if (void 0 === i.compare_value) {
                            n(e.tips["warn.inputFormatError"]), t = !1;
                            break
                        }
                        if (null === i.compare_value || "" === i.compare_value) {
                            n(e.tips["filter.inputCompleteCondition"]), t = !1;
                            break
                        }
                        if (i.compare_value >= 9007199254740992 || i.compare_value <= -9007199254740992) {
                            n(e.tips["warn.valueOutOfRange"] + ":-9007199254740991 ~ 9007199254740991"), t = !1;
                            break
                        }
                    }
                }
                return t
            }

            function d() {
                var t = angular.copy(e.warnConfigData);
                e.warnConfigData.modifyData.warn_name = t.warnName, e.warnConfigData.modifyData.axis_type = "y" == t.currentAxisType ? 0 : 1, e.warnConfigData.modifyData.warn_id = t.warnId, e.warnConfigData.modifyData.type = t.type, e.warnConfigData.modifyData.switch = t.switchOn ? 1 : 0, 1 == t.warnTime && (e.warnConfigData.modifyData.warn_time = t.warnExactTime), e.warnConfigData.modifyData.meta.logic = t.logic, e.warnConfigData.modifyData.meta.option = [], angular.forEach(t.warnConditions, function (t) {
                    7 == t.compare_type && (t.compare_value = [], t.compare_value.push(t.compare_value_left), t.compare_value.push(t.compare_value_right)), t.compare_type = parseInt(t.compare_type), e.warnConfigData.modifyData.meta.option.push(t)
                })
            }

            function c() {
                e.warnConfigData.currentAction = "", e.warnConfigData.currentAxisType = "", e.warnConfigData.warnId = "", e.warnConfigData.warnTime = "0", e.warnConfigData.warnExactTime = 1, e.warnConfigData.warnConditions = [], e.warnConfigData.warnName = "", e.warnConfigData.logic = "and", e.warnConfigData.switchOn = !0, e.warnConfigData.modifyData = {
                    warn_name: "",
                    warn_id: "",
                    axis_type: 0,
                    meta: {
                        logic: "",
                        option: []
                    },
                    warn_time: 0
                }
            }

            function p() {
                if (e.warnConfigData.isDash) e.warnConfigData.isDash && (e.$emit("refreshChartForWarn", !0), e.warnConfigDialog.close());
                else {
                    if (!$(".drill-crumbs").length) {
                        if ([bdpChart.ChartType.Table, bdpChart.ChartType.BubbleMap, bdpChart.ChartType.AreaMap].indexOf(e.$bdpChart.getChartType()) > -1) e.saveChartImmediate({
                            set_warn: !0
                        });
                        else {
                            var t = e.$bdpChart.info,
                                a = e.warnConfigData.warnItemsYList.concat(e.warnConfigData.warnItemsYOptionalList);
                            t.warn_info = a, e.saveChartImmediate({
                                only_redraw: !0
                            })
                        }
                    }
                    i.closeAll()
                }
            }
            e.warnConfigData = {
                ct_id: "",
                rule_id: "",
                currentAction: "",
                currentAxisType: "",
                isYAxis: null,
                isYOptionalAxis: null,
                warnConfigView: "",
                warnItemsYList: [],
                warnItemsYOptionalList: [],
                warnConditions: [],
                warnAxisFields: [],
                warnAxisYFields: [],
                warnAxisYOptionalFields: [],
                warnId: "",
                warnTime: "0",
                warnExactTime: 1,
                warnName: "",
                switchOn: null,
                logic: "and",
                type: 0,
                isDash: null,
                modifyData: {
                    warn_name: "",
                    warn_id: "",
                    axis_type: 0,
                    meta: {
                        logic: "",
                        option: []
                    },
                    warn_time: 0,
                    type: 0,
                    switch: !0
                }
            }, e.warnConfigData.warnConfigView = "list", e.warnConfigData.ct_id = e.ngDialogData.ct_id ? e.ngDialogData.ct_id : "", e.warnConfigData.rule_id = e.ngDialogData.rule_id ? e.ngDialogData.rule_id : "", e.warnConfigData.type = e.ngDialogData.role_type ? e.ngDialogData.role_type : 0, e.warnConfigData.isYAxis = e.ngDialogData.isYAxis, e.warnConfigData.isYOptionalAxis = e.ngDialogData.isYOptionalAxis, e.warnConfigData.warnItemsYList = e.ngDialogData.warnYList ? e.ngDialogData.warnYList : [], e.warnConfigData.warnItemsYOptionalList = e.ngDialogData.warnYOptionalList ? e.ngDialogData.warnYOptionalList : [], e.warnConfigData.warnAxisYFields = e.ngDialogData.yFieldsList ? e.ngDialogData.yFieldsList : [], e.warnConfigData.warnAxisYOptionalFields = e.ngDialogData.yOptionalFieldsList ? e.ngDialogData.yOptionalFieldsList : [], e.warnConfigData.isDash = e.ngDialogData.isDash;
            var u = {
                fid: "",
                uniq_id: 0,
                fid_name: "",
                compare_type: "",
                compare_value: ""
            };
            e.warnTimeMap = [{
                value: 1,
                name: "1:00"
            }, {
                value: 2,
                name: "2:00"
            }, {
                value: 3,
                name: "3:00"
            }, {
                value: 4,
                name: "4:00"
            }, {
                value: 5,
                name: "5:00"
            }, {
                value: 6,
                name: "6:00"
            }, {
                value: 7,
                name: "7:00"
            }, {
                value: 8,
                name: "8:00"
            }, {
                value: 9,
                name: "9:00"
            }, {
                value: 10,
                name: "10:00"
            }, {
                value: 11,
                name: "11:00"
            }, {
                value: 12,
                name: "12:00"
            }, {
                value: 13,
                name: "13:00"
            }, {
                value: 14,
                name: "14:00"
            }, {
                value: 15,
                name: "15:00"
            }, {
                value: 16,
                name: "16:00"
            }, {
                value: 17,
                name: "17:00"
            }, {
                value: 18,
                name: "18:00"
            }, {
                value: 19,
                name: "19:00"
            }, {
                value: 20,
                name: "20:00"
            }, {
                value: 21,
                name: "21:00"
            }, {
                value: 22,
                name: "22:00"
            }, {
                value: 23,
                name: "23:00"
            }, {
                value: 24,
                name: "24:00"
            }], e.warnOperatorMap = a, e.addWarnItem = function (t) {
                if (e.warnConfigData.warnItemsYList.length + e.warnConfigData.warnItemsYOptionalList.length >= 20) return void n(e.tips["warn.warnNumMoreThanTwenty"]);
                var a = [];
                e.warnConfigData.currentAction = "add", e.warnConfigData.warnConfigView = "edit", e.warnConfigData.warnId = "", e.warnConfigData.currentAxisType = t, e.warnConfigData.switchOn = !0, e.warnConfigData.warnAxisFields = "y" == t ? e.warnConfigData.warnAxisYFields : e.warnConfigData.warnAxisYOptionalFields, a = e.warnConfigData.warnAxisFields, e.warnConfigData.warnConditions.push({
                    fid: a[0].fid,
                    uniq_id: a[0].uniq_id,
                    fid_name: a[0].name,
                    compare_type: "3",
                    compare_value: 0
                })
            }, e.editWarnItem = function (t, a) {
                e.warnConfigData.currentAction = "edit", e.warnConfigData.warnConfigView = "edit", e.warnConfigData.currentAxisType = a, e.warnConfigData.warnAxisFields = "y" == a ? e.warnConfigData.warnAxisYFields : e.warnConfigData.warnAxisYOptionalFields, e.warnConfigData.warnId = t.warn_id, o(t)
            }, e.delWarnItem = function (a, i, r) {
                var o = {
                    ct_id: e.warnConfigData.ct_id,
                    rule_id: e.warnConfigData.rule_id,
                    warn_id: i.warn_id
                };
                e.showLoading = !0, t.warn.del(o).then(function (t) {
                    e.showLoading = !1, 0 == Number(t.status) ? (n(e.tips["chart.warnDelSuccess"]), "y" == r ? e.warnConfigData.warnItemsYList.splice(a, 1) : e.warnConfigData.warnItemsYOptionalList.splice(a, 1)) : n(Number(t.status))
                })
            }, e.addWarnCondition = function () {
                e.warnConfigData.warnConditions.push(angular.copy(u)), scrollToBottom($(".warn-edit-list"))
            }, e.delWarnCondition = function (t) {
                e.warnConfigData.warnConditions.splice(t, 1)
            }, e.changeWarnField = function (t, a, i) {
                angular.forEach(e.warnConfigData.warnAxisFields, function (t) {
                    t.uniq_id == a && (e.warnConfigData.warnConditions[i].fid = t.fid, e.warnConfigData.warnConditions[i].fid_name = t.name)
                })
            }, e.saveWarnConfig = function () {
                function a(t) {
                    var a = 0,
                        n = 0;
                    if ("edit" == e.warnConfigData.currentAction)
                        if ("y" == e.warnConfigData.currentAxisType)
                            for (a = 0, n = e.warnConfigData.warnItemsYList.length; a < n; a++) e.warnConfigData.warnId == e.warnConfigData.warnItemsYList[a].warn_id && (e.warnConfigData.warnItemsYList[a] = i);
                        else
                            for (a = 0, n = e.warnConfigData.warnItemsYOptionalList.length; a < n; a++) e.warnConfigData.warnId == e.warnConfigData.warnItemsYOptionalList[a].warn_id && (e.warnConfigData.warnItemsYOptionalList[a] = i);
                    else "add" == e.warnConfigData.currentAction && (i.switch = !0, i.warn_id = t, "y" == e.warnConfigData.currentAxisType ? e.warnConfigData.warnItemsYList.push(i) : e.warnConfigData.warnItemsYOptionalList.push(i));
                    e.warnConfigData.warnConfigView = "list", c()
                }
                if (l()) {
                    d();
                    var i = angular.copy(e.warnConfigData.modifyData),
                        r = {
                            ct_id: e.warnConfigData.ct_id,
                            rule_id: e.warnConfigData.rule_id,
                            data: i,
                            warn_id: e.warnConfigData.warnId
                        };
                    "add" == e.warnConfigData.currentAction ? (r = {
                        ct_id: e.warnConfigData.ct_id,
                        rule_id: e.warnConfigData.rule_id,
                        data: i
                    }, e.showLoading = !0, t.warn.add(r).then(function (t) {
                        e.showLoading = !1, 0 == Number(t.status) ? (n(e.tips["chart.warnAddSuccess"]), a(t.result)) : n(Number(t.status))
                    })) : (r = {
                        ct_id: e.warnConfigData.ct_id,
                        rule_id: e.warnConfigData.rule_id,
                        data: i,
                        warn_id: e.warnConfigData.warnId
                    }, e.showLoading = !0, t.warn.modify(r).then(function (t) {
                        e.showLoading = !1, 0 == Number(t.status) ? (n(e.tips["chart.warnModifySuccess"]), a("")) : n(Number(t.status))
                    }))
                }
            }, e.cancelWarnConfig = function () {
                e.warnConfigData.warnConfigView = "list", c()
            }, e.saveChartWarn = function () {
                var a = [],
                    i = [],
                    r = 0,
                    o = 0;
                if (e.warnConfigData.isYAxis)
                    for (r = 0, o = e.warnConfigData.warnItemsYList.length; r < o; r++) e.warnConfigData.warnItemsYList[r].switch ? a.push({
                        warn_id: e.warnConfigData.warnItemsYList[r].warn_id,
                        type: e.warnConfigData.warnItemsYList[r].type
                    }) : i.push({
                        warn_id: e.warnConfigData.warnItemsYList[r].warn_id,
                        type: e.warnConfigData.warnItemsYList[r].type
                    });
                if (e.warnConfigData.isYOptionalAxis)
                    for (r = 0, o = e.warnConfigData.warnItemsYOptionalList.length; r < o; r++) e.warnConfigData.warnItemsYOptionalList[r].switch ? a.push({
                        warn_id: e.warnConfigData.warnItemsYOptionalList[r].warn_id,
                        type: e.warnConfigData.warnItemsYOptionalList[r].type
                    }) : i.push({
                        warn_id: e.warnConfigData.warnItemsYOptionalList[r].warn_id,
                        type: e.warnConfigData.warnItemsYOptionalList[r].type
                    });
                if (e.warnConfigData.isYAxis && e.warnConfigData.warnItemsYList.length > 0 || e.warnConfigData.isYOptionalAxis && e.warnConfigData.warnItemsYOptionalList.length > 0) {
                    var s = {
                        ct_id: e.warnConfigData.ct_id,
                        open_warn_ids: angular.toJson(a),
                        off_warn_ids: angular.toJson(i),
                        rule_id: e.warnConfigData.rule_id
                    };
                    e.showLoading = !0, t.warn.warnSwitch(s).then(function (t) {
                        e.showLoading = !1, 0 == Number(t.status) ? (n(e.tips["chart.warnSetSuccess"]), p()) : n(Number(t.status))
                    })
                } else p()
            }, e.cancelChartWarn = function () {
                e.warnConfigData.isDash ? p() : (e.draw_chart_url && (e.draw_chart_url.options._t = (new Date).getTime(), e.draw_chart_url.options.optional = {}), i.closeAll())
            }, r(["warn.inputWarnName", "warn.repeatWarnName", "filter.inputCompleteCondition", "warn.inputFormatError", "warn.valueOutOfRange", "warn.valueCompareTips", "warn.warnNumMoreThanTwenty", "chart.warnAddSuccess", "chart.warnModifySuccess", "chart.warnSetSuccess", "chart.warnDelSuccess"], e)
        }
        angular.module("BC.controllers.setWarn", [])
        .controller("chartWarnConfigCtrl", e), 
        e.$inject = ["$scope", "commonService", "warnOperatorMap", "ngDialog", "errHint", "$jsTipTranslate"]
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s, l, d, c) {
            a.show_bdp_header = !1, 
            e.back = function () {
                for (var t = 0, a = 0; a < e.tpl.tbList.length; a++) e.tpl.tbList[a].noLastModify && (t += 1);
                t ? d.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        message: "还有" + t + "张模板数据表没有被替换过，确定返回吗？"
                    }
                }).then(function () {
                    i.path("/dash_edit/" + c.projId + "/" + c.dashId)
                }) : i.path("/dash_edit/" + c.projId + "/" + c.dashId)
            }, 
            e.changeTb = function (t) {
                a.pageLoading = !0, o.tb.preview({
                    tb_id: e.tpl.tbList[t].tbId
                }).then(function (i) {
                    e.tbModel = e.tpl.tbList[t], e.tbModel.tbThead = i.schema, e.tbModel.tbTbody = i.data.splice(0, 25), e.tbModel.unshowIndex = {};
                    for (var n = i.schema.length - 1; n >= 0; n--) i.schema[n].flag && (e.tbModel.unshowIndex[n] = !0);
                    1 == i.status && (i.count > 0 && 0 == i.data.length ? (e.tpl.state = "fail", e.tpl.stateText = "工作表加载失败") : "fail" == e.tpl.state && (e.tpl.state = void 0, e.tpl.stateText = void 0)), 3 == i.status || 6 == i.status ? (e.tpl.state = "updateSuccess", e.tpl.stateText = "工作表正在更新，请耐心等待...") : 2 == i.status ? (e.tpl.state = "updateFail", e.tpl.stateText = "工作表更新失败，请联系客服") : e.tpl.state && (e.tpl.state = void 0, e.tpl.stateText = void 0), localStorage.setItem("TPL_LIBRARY_TBID", e.tpl.tbList[t].tbId), a.pageLoading = !1
                })
            }, 
            e.toReplaceSheet = function (t) {
                e.tbModel.tbId && i.path("/page_upload/replace/" + e.tbModel.tbId)
            }, 
            e.init = function () {
                e.tpl = {
                    tplAciveIndex: 1,
                    tplName: "运营模板",
                    tbList: []
                }, e.tbModel = {};
                var t = {
                    dsh_id: c.dashId
                };
                a.pageLoading = !0, 
                o.tb.getTplExcel(t)
                .then(function (t) {
                    if (0 == t.status) {
                        var i = t.result;
                        e.tpl.tplName = i.name;
                        for (var n = 0, r = i.tb_list.length; n < r; n++) i.tb_list[n].ex_list.tpl && e.tpl.tbList.push({
                            tbName: i.tb_list[n].title,
                            tbId: i.tb_list[n].tb_id,
                            exList: i.tb_list[n].ex_list,
                            lastModifyTime: i.tb_list[n].ex_list.add_by_user.length > 0 ? i.tb_list[n].ex_list.add_by_user[0].time : void 0,
                            lastModifyName: i.tb_list[n].ex_list.add_by_user.length > 0 ? i.tb_list[n].ex_list.add_by_user[0].name : void 0,
                            noLastModify: !(i.tb_list[n].ex_list.add_by_user.length > 0)
                        });
                        for (var o = 0, n = 0; n < e.tpl.tbList.length; n++) e.tpl.tbList[n].tbId == localStorage.getItem("TPL_LIBRARY_TBID") && (o = n);
                        e.changeTb(o)
                    }
                    a.pageLoading = !1
                })
            }, 
            e.init()
        }
        angular.module("BC.controllers.dashboard")
        .controller("tplReplaceCtrl", e), 
        e.$inject = ["$scope", "commonHttp", "$rootScope", "$location", "$timeout", "warnOperatorMap", "commonService", "errHint", "$filter", "ngDialog", "$stateParams"]
    }(),
    function () {
        angular.module("BC.controllers.template.home", [])
        .controller("TemplateHomeController", ["$scope", "$rootScope", "$location", function (e, t, a) {
            t.view = "template", t.show_bdp_header = !0, t.last_template_path = a.path(), e.back = function () {
                var t = localStorage.getItem("mc_location_path");
                a.path(t || "/dash_edit"), e.back_guide = !1
            }
        }])
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s, l, d) {
            function c(e, t) {
                var a, i = function (e) {
                    for (var n = 0, r = e.length; n < r; n++) {
                        var o = e[n];
                        if ("project" === o.attribute) i(o.subs || []);
                        else if ("dashboard" === o.attribute && o.dsh_id === t) return void(a = o)
                    }
                };
                return i(e), a
            }

            function p(e) {
                var t = 0;
                if (e && e.subs) {
                    var a = e.subs || [];
                    angular.forEach(a, function (e) {
                        Math.floor(t) !== Math.round(t) ? (e.choose || e.choosePart) && t++ : e.choose ? t++ : e.choosePart && (t += .5)
                    })
                } else i("该文件无仪表盘");
                return t
            }

            function u(e) {
                var t = 0;
                return e && e.subs && e.subs.forEach(function (e, a) {
                    "project" == e.attribute ? e.subs && e.subs.length > 0 && t++ : t++
                }), t
            }

            function h(t) {
                angular.forEach(t, function (t) {
                    e.chart.chartList.push({
                        ct_id: t.ct_id,
                        name: t.name,
                        check: !0
                    })
                }), e.chart.checkAll = !0
            }
            t.view = "template_config", 
            t.show_bdp_header = !1, 
            e.templateData = {
                create: {},
                dashList: [],
                chooseDshList: [],
                choosedDshList: [],
                name: "",
                templateInfo: [],
                del_dsh: [],
                add_dsh: []
            }, 
            e.templateView = {
                model: "cat",
                empty: "init",
                tplEdit: {},
                tplEditName: ""
            };
            var f = e.templateData,
                g = e.templateView,
                m = function (t, i) {
                    a.get("/api/template/list").then(function (a) {
                        if (0 == a.status) {
                            e.templateData.templateList = a.result;
                            var n = e.templateData.templateList;
                            if (0 == e.templateData.templateList.length) e.templateView.empty = "empty";
                            else {
                                if (e.templateView.empty = "has", e.templateView.model = "cat", void 0 !== i && !i) return;
                                0 == t ? e.templateView.activeTpl = angular.copy(n[t]) : "last" == t && (e.templateView.activeTpl = angular.copy(n[n.length - 1])), e.switchTplInfo()
                            }
                        }
                    })
                };
            e.getCurFolderItem = function (t) {
                if (t) {
                    e.curFolderItem = {};
                    var a = t.subs;
                    if (!a) return void i("空文件夹");
                    var n = [],
                        r = [],
                        o = t;
                    angular.forEach(a, function (t, a) {
                        if ("project" == t.attribute) t.parent = o, n.push(t);
                        else {
                            t.parent = o;
                            for (var a = e.templateData.choosedDshList.length - 1; a >= 0; a--) {
                                var i = e.templateData.choosedDshList[a];
                                i.dsh_id == t.dsh_id && (t.is_all = i.is_all, t.ct_list = i.ct_list)
                            }
                            r.push(t)
                        }
                    }), e.curFolderItem.sub_folders = n, e.curFolderItem.tb_list = r, e.openStateItem = [], e.curOpenItemId = t.proj_id, d.findParId(t, e.openStateItem)
                }
            }, 
            e.createTpl = function () {
                for (var t in e.templateView.tplEdit)
                    if (1 == e.templateView.tplEdit[t]) return i(e.tips["template.templateRenaming"]), !1;
                e.templateView.model = "create";
                var a = e.templateData.dashList;
                0 == a.length && (e.templateView.dashList = 0), e.templateData.chooseDshList = angular.copy(a), d.initDeep(e.templateData.chooseDshList, 0), d.makeParent(e.templateData.chooseDshList), e.templateData.name = e.tips["template.unnameTemplate"], e.templateView.empty = "has", e.templateView.createName = !0, e.templateView.activeTpl = "", e.templateData.sourceChoosedDsh = [], r(function () {
                    $("#newtplName").select().focus()
                }, 100), e.getCurFolderItem(e.templateData.chooseDshList[0])
            }, 
            e.delTpl = function (t, i) {
                i && i.stopPropagation();
                var n = t.tpl_id,
                    r = t.name;
                o.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        message: e.tips["template.delTemplate"] + ": " + r + " ?"
                    }
                }).then(function () {
                    a.get("/api/template/delete", {
                        tpl_id: n
                    }).then(function (t) {
                        0 == t.status && (n == e.templateView.activeTpl.tpl_id ? m(0) : m())
                    })
                })
            }, 
            e.switchTplInfo = function (i) {
                i && (e.templateView.activeTpl = i), t.pageLoading = !0, a.get("/api/template/info", {
                    tpl_id: e.templateView.activeTpl.tpl_id
                }).then(function (a) {
                    if (0 == a.status) {
                        var i = a.result;
                        if (e.templateData.name = i.name, e.templateData.choosedDshList = i.dsh_list, e.templateData.choosedDshList.length > 0) {
                            var n = e.templateData.dashList;
                            0 == n.length && (e.templateView.dashList = 0), e.templateData.chooseDshList = angular.copy(n), f.chooseDshList = angular.copy(e.templateData.chooseDshList), d.initDeep(f.chooseDshList, 0), d.makeParent(f.chooseDshList), angular.forEach(e.templateData.choosedDshList, function (t) {
                                function a(t) {
                                    angular.forEach(t, function (t) {
                                        var n = t.subs;
                                        if (n) {
                                            var r = t;
                                            angular.forEach(n, function (n) {
                                                n.parent = r, n.subs ? a(t.subs) : i == n.dsh_id && (n.choose = !0, e.setAncestorChoosenState(n))
                                            })
                                        }
                                    })
                                }
                                var i = t.dsh_id;
                                a(f.chooseDshList)
                            }), e.showTemplateDate = f.chooseDshList.filter(function (e) {
                                return e.choose || e.choosePart
                            }), e.showTemplateDate.length && e.getCurFolderItem(e.showTemplateDate[0])
                        }
                        e.templateView.model = "cat", t.pageLoading = !1
                    }
                })
            }, 
            e.editTpl = function () {
                var t = e.templateData.dashList,
                    a = angular.copy(t),
                    i = e.templateData.choosedDshList;
                if (e.templateData.sourceChoosedDsh = [], i.length > 0) {
                    var n = [];
                    angular.forEach(i, function (t) {
                        n = [];
                        var r = c(a, t.dsh_id);
                        r && (r.choose = !0, r.is_all = t.is_all, r.ct_list = t.ct_list, angular.forEach(t.ct_list, function (e) {
                            n.push(e.ct_id)
                        }), r.ct_ids = n, e.setAncestorChoosenState(r)), i = angular.copy(e.templateData.chooseDshList), e.templateData.sourceChoosedDsh.push(t.dsh_id)
                    }), e.templateData.chooseDshList = angular.copy(a)
                } else e.templateData.chooseDshList = a;
                d.initDeep(e.templateData.chooseDshList, 0), d.makeParent(e.templateData.chooseDshList), a.map(function (e) {
                    var t = 0;
                    e.subs.map(function (e, a) {
                        e.choose && t++
                    }), e.subs.length == t && (e.choose = !0)
                }), e.getCurFolderItem(e.templateData.chooseDshList[0]), e.templateView.model = "edit", e.templateData.del_dsh = []
            }, 
            e.checkAll = function (t) {
                function a(t) {
                    t && t.forEach(function (t) {
                        n(t, r), r || (t.is_all = 1), t.subs ? a(t.subs) : t.dsh_id && e.templateData.choosedDshList.push(t)
                    })
                }

                function n(t, a, n) {
                    var r = [];
                    d.pushChooseDsh(t, r), r.length ? (t.choose = a, t.choosePart = !1) : (t.choose = !1, n && i(e.tips["template.noDshNoChoose"]))
                }
                if (t && t.subs && t.subs.length) {
                    var r = t.choose;
                    n(t, r, !0), a(t.subs), e.setAncestorChoosenState(t)
                }
            }, 
            e.dshChooseChange = function (t, a) {
                var i = e.templateData.chooseDshList[a];
                if (t.choose) {
                    var n = 0;
                    i.subs.map(function (e) {
                        e.choose && n++
                    }), n == i.subs.length && (i.choose = !0)
                } else t.is_all = 1, i.choose = !1
            }, 
            e.setAncestorChoosenState = function (t, a) {
                var i = (t.choose, t.parent);
                if (i) {
                    var n = p(i),
                        r = u(i);
                    i.is_all = n > 0 && n == r ? 1 : 0, i.choose = !!i.is_all, i.choosePart = n > 0 && n < r, i.parent && e.setAncestorChoosenState(i)
                }
            }, e.checkone = function (t, a) {
                var i = t[a];
                mapDsh = e.mappingChosed(i, e.templateData.chooseDshList), mapDsh.choose = i.choose, e.setAncestorChoosenState(mapDsh), e.templateData.sourceChoosedDsh.push(i)
            }, e.mappingChosed = function (e, t) {
                function a(e, t) {
                    var i;
                    if ((e.dsh_id || e.proj_id) == t) {
                        if (i = e) return i
                    } else if (e.subs) {
                        for (var n = 0, r = e.subs.length; n < r; n++)
                            if (i = a(e.subs[n], t)) return i;
                        return i
                    }
                    return i
                }
                for (var i, n = e.dsh_id || e.proj_id, r = 0, o = t.length; r < o; r++)
                    if (i = a(t[r], n)) return i
            }, e.modifyTpl = function () {
                var t = e.templateView.model;
                if ("" == e.templateData.name) return void i(e.tips["template.nameCanNotNull"]);
                var a = e.templateData.sourceChoosedDsh,
                    n = [],
                    r = [],
                    o = e.templateData.chooseDshList,
                    l = 0;
                if (angular.forEach(o, function (e) {
                        function t(e) {
                            angular.forEach(e, function (e) {
                                e.proj_id ? t(e.subs) : e.choose && e.dsh_id ? (l += 1, n.push({
                                    dsh_id: e.dsh_id,
                                    ct_ids: e.ct_ids || [],
                                    is_all: void 0 !== e.is_all ? e.is_all : 1
                                })) : e.dsh_id && $.inArray(e.dsh_id, a) > -1 && r.push(e.dsh_id)
                            })
                        }
                        t(e.subs)
                    }), 0 == l) return void i(e.tips["template.selectDash"]);
                var d = {
                    name: e.templateData.name,
                    dsh: angular.toJson(n)
                };
                "edit" == t && (d.tpl_id = e.templateView.activeTpl.tpl_id, d.del_dsh_ids = angular.toJson(r)), s.tpl.tplCommit(d).then(function (a) {
                    0 == a.status && ("edit" == t ? (e.switchTplInfo(), m(), e.templateView.model = "cat") : m("last"))
                })
            }, e.renameTpl = function (t, a, n) {
                if (t && t.stopPropagation(), "create" == e.templateView.model) i(e.tips["template.finishCreateFirst"]);
                else {
                    e.templateView.tplEdit[a] = !0;
                    for (var r in e.templateView.tplEdit) e.templateView.tplEdit[r] = r == a;
                    e.templateView.tplEditName = n.name
                }
            }, e.saveTplName = function (t, n) {
                if ("create" == e.templateView.model) {
                    if (!e.templateData.name) return void i(e.tips["template.inputTemplateName"]);
                    for (var r = 0, o = f.templateList.length; r < o; r++)
                        if (e.templateData.name == f.templateList[r].name) return void i(e.tips["template.templateNameRepeat"]);
                    g.createName = !1, g.editCreateName = !1
                } else {
                    var s = g.tplEditName;
                    if (!s) return void i(e.tips["template.inputTemplateName"]);
                    var l = {
                        tpl_id: t.tpl_id,
                        name: s
                    };
                    a.get("/api/template/commit", l).then(function (t) {
                        0 == t.status && (i(e.tips["template.editSuccess"]), f.templateList[n].name = s, g.tplEdit[n] = !1)
                    })
                }
            },
                function () {
                    var t = {
                        categories: angular.toJson([0, 2]),
                        own_only: 1
                    };
                    s.project.getTree(t).then(function (t) {
                        var a = t.proj;
                        0 == a.length && (e.templateView.dashList = 0), e.templateData.dashList = a, d.makeParent(e.templateData.dashList), m(0)
                    })
                }(), e.cancelTpl = function () {
                "create" == e.templateView.model ? m(0) : e.switchTplInfo(e.templateData.cur_tpl)
            }, e.keyupFun = function (t, a, i) {
                13 == t.keyCode && e.saveTplName(a, i)
            }, e.cancelEditName = function () {
                angular.forEach(g.tplEdit, function (e, t) {
                    g.tplEdit[t] = !1
                })
            }, e.clickTplList = function (e) {
                e.stopPropagation()
            }, e.back = function () {
                t.click_show_view("template_home", {
                    wsId: t.wsId
                })
            }, e.chart = {};
            var _ = null;
            e.modifyChart = function (a) {
                var i = e.templateView.model;
                e.chart = {
                    check: "1",
                    checkAll: !1,
                    dsh_id: a.dsh.dsh_id,
                    dsh_index: a.dsh_index,
                    is_all: void 0 === a.dsh.is_all ? 1 : a.dsh.is_all,
                    chartList: []
                }, _ = e.chart, t.pageLoading = !0, s.tpl.chartList({
                    dsh_id: _.dsh_id
                }).then(function (a) {
                    if (t.pageLoading = !1, 0 == a.status) {
                        if ("create" != i)
                            if (_.is_all) h(a.result);
                            else {
                                _.check = 2;
                                var n = 0,
                                    r = d.findItem(_.dsh_id, e.templateData.chooseDshList),
                                    s = r.ct_ids;
                                angular.forEach(a.result, function (e) {
                                    $.inArray(e.ct_id, s) >= 0 && (e.check = !0, n++)
                                }), n == a.result.length && (_.checkAll = !0), _.chartList = a.result
                            }
                        else h(a.result);
                        o.open({
                            template: "/static/partials/dialogTemplates/tpl_choose_chart.html",
                            className: "ngdialog-theme-default ngDialog-width-520",
                            scope: e
                        })
                    }
                })
            }, e.modifyCheckAll = function () {
                angular.forEach(_.chartList, function (e) {
                    e.check = _.checkAll
                })
            }, e.modifyCheck = function () {
                var e = 0;
                angular.forEach(_.chartList, function (t) {
                    t.check && e++
                }), _.checkAll = e == _.chartList.length
            }, e.confirmChart = function () {
                var t = [],
                    a = [],
                    n = d.findItem(_.dsh_id, e.templateData.chooseDshList);
                if (1 == _.check) n.is_all = 1;
                else {
                    if (angular.forEach(_.chartList, function (e) {
                            e.check && (t.push(e.ct_id), a.push(e))
                        }), 0 == t.length) return void i(e.tips["template.selectAChart"]);
                    n.is_all = 0, n.ct_ids = t, n.ct_list = a
                }
                o.closeAll()
            }, e.catChart = function (t) {
                e.chart = {
                    check: t.is_all,
                    chartList: t.ct_list
                }, o.open({
                    template: "/static/partials/dialogTemplates/tpl_cat_chart.html",
                    className: "ngdialog-theme-default ngDialog-width-520",
                    scope: e
                })
            }, l([
                "template.unnameTemplate", 
                "template.delTemplate", 
                "template.nameCanNotNull", 
                "template.selectDash", 
                "template.editSuccess", 
                "template.noDshNoChoose", 
                "template.saveSuccess", 
                "template.templateRenaming", 
                "template.finishCreateFirst", 
                "template.inputTemplateName", 
                "template.templateNameRepeat", 
                "template.selectAChart", 
                "template.unnameTemplate"], e)
        }
        angular.module("BC.controllers.template.config", [])
        .controller("TemplateConfigController", e), 
        e.$inject = ["$scope", "$rootScope", "commonHttp", "errHint", "$location", "$timeout", "ngDialog", "commonService", "$jsTipTranslate", "multipleProService"]
    }(),
    function () {
        angular.module("BC.controllers.template.rule", [])
        .controller("templateRuleCtrl", ["$scope", "$rootScope", "commonHttp", "errHint", "$location", "ngDialog", "commonService", "$jsTipTranslate", "conditionTypeVal", function (e, t, a, i, n, r, o, s, l) {
            function d() {
                if (c.target.selectedField.fid && c.source.selectedField.fid) {
                    var e = c.target.selectedTb.tb_id;
                    angular.forEach(c.fieldRules, function (t) {
                        $.inArray(e, t.rela_tb_id) == -1 ? (t.disabled = !0, t.check = !1) : (t.disabled = !1, t.check = !0)
                    })
                }
            }
            t.view = "template_rule", t.show_bdp_header = !1, e.ruleData = {}, e.conditionTypeVal = l, e.batchSetView = {
                loading: !1
            };
            var c = e.ruleData,
                p = function () {
                    t.pageLoading = !0, a.get("/api/rule/list").then(function (a) {
                        if (t.pageLoading = !1, 0 == a.status) {
                            var i = a.result;
                            e.ruleData.ruleList = i
                        }
                    })
                };
            p();
            e.back = function () {
                t.click_show_view("template_home", {
                    wsId: t.wsId
                })
            }, 
            e.createRule = function () {
                $.cookie("tpl_rule_id", ""), t.click_show_view("template_rule_create", {
                    wsId: t.wsId
                })
            }, 
            e.copyRule = function (e) {
                $.cookie("tpl_rule_id", e), t.click_show_view("template_rule_create", {
                    wsId: t.wsId
                })
            }, 
            e.delRule = function (t) {
                var n = t.rule_id,
                    o = t.name;
                r.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        message: e.tips["template.delRule"] + ": " + o + " ?"
                    }
                }).then(function () {
                    a.get("/api/rule/delete", {
                        rule_id: n
                    }).then(function (t) {
                        0 == t.status && (i(e.tips["template.delSuccess"]), p())
                    })
                })
            };
            var u = function (e) {
                for (var t = [], a = 0; a < e.length; a++) 1 == e[a].is_rule_used && t.push(e[a]);
                return t
            };
            e.batchSet = function () {
                t.pageLoading = !0, o.tpl.ruleTbInfo().then(function (a) {
                    t.pageLoading = !1, 0 == a.status && (e.tbInfo = angular.copy(a.result), e.refTbInfo = u(a.result), r.open({
                        template: "/static/partials/dialogTemplates/batch_set.html",
                        className: "ngdialog-theme-default batch-set-model",
                        scope: e
                    }), e.ruleData.source = {}, e.ruleData.source.selectedTb = {
                        name: e.tips["template.selectWorkSheet"],
                        fields: []
                    }, e.ruleData.source.selectedField = {
                        name: e.tips["template.selectWorkField"]
                    }, e.ruleData.target = {}, e.ruleData.target.selectedTb = {
                        name: e.tips["template.selectWorkSheet"],
                        fields: []
                    }, e.ruleData.target.selectedField = {
                        name: e.tips["template.selectWorkField"]
                    })
                })
            }, e.refTbFieldChange = function (t) {
                c.tbField = "", c.source.selectedField = t, e.getRules()
            }, e.refTbChange = function (t) {
                c.tbName = "", c.source.selectedTb = t, c.source.selectedTb.fields = u(e.ruleData.source.selectedTb.fields), c.source.selectedField = {}, c.fieldRules = []
            }, e.setTbChange = function (e) {
                c.name = "", c.target.selectedField = {}, c.target.selectedTb = e
            }, e.setTbFieldChange = function (e) {
                c.field = "", c.target.selectedField = e, d()
            }, e.changeSourceTb = function () {
                c.source.selectedField = {}, c.fieldRules = []
            }, e.getRules = function () {
                t.pageLoading = !0;
                var a = e.ruleData.source.selectedTb.tb_id,
                    i = e.ruleData.source.selectedField.fid;
                o.tpl.getFieldRule({
                    tb_id: a,
                    fid: i
                }).then(function (a) {
                    t.pageLoading = !1, 0 == a.status && (e.ruleData.fieldRules = a.result, angular.forEach(e.ruleData.fieldRules, function (e) {
                        e.check = !0
                    }))
                })
            }, 
            e.$watch("ruleData.fieldRules", function (t) {
                if (t) {
                    var a = c.target,
                        i = !0,
                        n = !!a.selectedField.fid,
                        r = a.selectedTb.tb_id;
                    angular.forEach(t, function (e) {
                        n && $.inArray(r, e.rela_tb_id) == -1 && (e.disabled = !0), e.check || e.disabled || (i = !1)
                    }), e.ruleData.checkall = i
                }
            }, !0), 
            e.ruleCheck = function () {
                var e = c.checkall;
                angular.forEach(c.fieldRules, function (t) {
                    t.disabled || (t.check = e)
                })
            }, 
            e.saveBatchSet = function () {
                var t = e.ruleData;
                if (!t.source.selectedTb.tb_id) return void i(e.tips["template.selectWorkSheet"]);
                if (!t.source.selectedField.fid || !t.target.selectedField.fid) return void i(e.tips["template.selectWorkField"]);
                if (!t.target.selectedTb.tb_id) return void i(e.tips["template.selectSetWorkSheet"]);
                var a = [],
                    n = e.ruleData.fieldRules,
                    s = t.target;
                if (angular.forEach(n, function (e) {
                        e.check && angular.forEach(e.filter, function (t) {
                            a.push({
                                condition_type: t.condition_type,
                                operator: t.operator,
                                opt_val: t.opt_val,
                                tb_id: s.selectedTb.tb_id,
                                fid: s.selectedField.fid,
                                rule_id: e.rule_id
                            })
                        })
                    }), 0 == a.length) return void i(e.tips["template.selectRule"]);
                e.batchSetView.loading = !0, o.tpl.saveBatchRule({
                    filter_list: angular.toJson(a)
                }).then(function (t) {
                    0 == t.status && (i(e.tips["template.setSuccess"]), p(), r.closeAll()), e.batchSetView.loading = !1
                })
            }, 
            s([
                "template.delRule", 
                "template.delSuccess", 
                "template.selectWorkSheet", 
                "template.selectWorkField", 
                "template.selectSetWorkSheet", 
                "template.selectRule", 
                "template.setSuccess"], e)
        }])
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s, l, d) {
            function c() {
                function e(e) {
                    var t = "";
                    return angular.forEach(g.sqlFilterList, function (a) {
                        a.tb_id == e && (t = a.fl_id)
                    }), t
                }
                var t = {
                    filter_type: g.filter_type,
                    filter_list: []
                };
                if (0 == t.filter_type) {
                    angular.forEach(g.filters, function (e) {
                        t.filter_list.push({
                            fl_id: e.fl_id,
                            tb_id: e.tb_id,
                            fid: e.fid,
                            operator: e.operator,
                            opt_val: e.opt_val,
                            condition_type: e.condition_type,
                            start_date: e.start_date || null,
                            end_date: e.end_date || null
                        })
                    })
                } else angular.forEach(g.sql, function (a, i) {
                    if (a && $.inArray(i, g.tbIds) > -1) {
                        var n = {
                            tb_id: i,
                            expression: a
                        };
                        "create" != r.module && (n.fl_id = e(n.tb_id)), t.filter_list.push(n)
                    }
                });
                return t
            }

            function p(t) {
                if (g.batchSql.common && g.choosedTb.length > 0) {
                    var a = g.choosedTb[0].tb_id;
                    i.tb.sqlTrans({
                        tb_id: a,
                        sql: g.batchSql.common
                    }).then(function (a) {
                        0 == a.status ? t ? t(!0) : n(e.tips["filter.checkSuccess"]) : t && t(!1)
                    })
                } else t(!0)
            }

            function u() {
                function t(e, t) {
                    var a = [];
                    t[0];
                    return a.push(e), angular.forEach(t, function (t, i) {
                        i > 0 && angular.forEach(t.schema, function (i) {
                            i.data_type == e.data_type && i.name == e.name && a.push({
                                fid: i.fid,
                                name: i.name,
                                original_name: i.original_name,
                                data_type: i.data_type,
                                tb_id: t.tb_id,
                                tb_name: t.name
                            })
                        })
                    }), a.length == t.length && a
                }
                var a = g.choosedTb = [];
                e.ruleData.commonFields = [], e.ruleData.commonFieldOpts = [], g.commonCurFilter.tbField[0].fields = [], angular.forEach(e.ruleData.filterlist, function (e) {
                    e.check && g.choosedTb.push(e)
                }), 0 != a.length && (angular.forEach(a[0].schema, function (e) {
                    var i = {
                            fid: e.fid,
                            name: e.name,
                            title: e.name,
                            original_name: e.original_name,
                            data_type: e.data_type,
                            tb_id: a[0].tb_id,
                            tb_name: a[0].name
                        },
                        n = t(i, a);
                    n && (g.commonFieldOpts.push(i), g.commonCurFilter.tbField[0].fields.push(i), g.commonFields.push(n))
                }), e.$broadcast("updateTbList"))
            }

            function h() {
                var e;
                angular.forEach(g.commonFilters, function (t) {
                    e = void 0, T(t) || (e = I(t), void 0 !== e && (t.condition_type = e), g.filters.push(t))
                })
            }

            function f(t) {
                if (t) {
                    var a = g.batchSql.common;
                    if (a) {
                        angular.forEach(g.choosedTb, function (e) {
                            g.sql[e.tb_id] ? g.sql[e.tb_id] = "(" + g.sql[e.tb_id] + ") and " + a : g.sql[e.tb_id] = a
                        });
                        for (var i, n = g.tbInfo, r = 0; r < n.length; r++)
                            if (n[r].open) {
                                i = n[r].tb_id;
                                break
                            }
                        e.$broadcast("initSql", i)
                    }
                    o.closeAll()
                }
            }
            t.view = "template_rule", t.show_bdp_header = !1, e.ruleView = {
                view: "list",
                tab: "group",
                filter: {},
                modifyFilter: !0
            }, e.ruleData = {
                fields: [],
                del_filters: [],
                operators: s,
                tbInfo: [],
                filter_type: 0,
                filters: [],
                sql: {},
                batchSql: {},
                choosedTb: []
            }, e.ruleData.curFilter = {
                tb: {},
                field: {
                    type: "string"
                },
                opt_val: "",
                operator: "",
                condition_type: 0
            };
            var g = e.ruleData,
                m = e.ruleView,
                _ = function (e) {
                    g.tbInfo = angular.copy(e), g.tbIds = [];
                    var t = [];
                    angular.forEach(e, function (e) {
                        t.push(e.tb_id)
                    }), g.tbIds = t, angular.forEach(g.tbInfo, function (e) {
                        e.fields = angular.copy(e.schema), delete e.schema, angular.forEach(e.fields, function (e) {
                            e.title = e.name
                        })
                    })
                },
                v = function (t, i) {
                    if (0 == t.length) return g.filterlist = [], g.fields = [], g.filter_list = [], g.tbInfo = [], void(g.tbIds = []);
                    a.get("/api/tb/rule_filter", {
                        tpl_ids: t.join(",")
                    }).then(function (t) {
                        0 == t.status && (g.filterlist = t.result, _(t.result), e.ruleData.fields = [], d(function () {
                            e.$broadcast("initTbList")
                        }, 10))
                    })
                },
                b = function (t, a) {
                    e.ruleData.tplList = [], e.ruleData.sourceTpls = [];
                    var i = {};
                    angular.forEach(t, function (t) {
                        t.selected ? (i = {
                            tpl_id: t.tpl_id,
                            name: t.name,
                            check: !0
                        }, "create" != a && e.ruleData.sourceTpls.push(t.tpl_id)) : i = {
                            tpl_id: t.tpl_id,
                            name: t.name,
                            check: !1
                        }, e.ruleData.tplList.push(i)
                    })
                },
                y = function (t) {
                    function a(t) {
                        angular.forEach(t, function (t) {
                            t.selected && (t.checked = !0, e.ruleData.sourceGroups.push(t.group_id)), t.group_list && t.group_list.length > 0 && a(t.group_list)
                        })
                    }
                    e.ruleData.groupList = [], e.ruleData.sourceGroups = [], a(t), e.ruleData.groupList = t
                },
                w = function (t) {
                    e.ruleData.userList = [], e.ruleData.sourceUsers = [];
                    var a = [];
                    angular.forEach(t, function (t) {
                        t.selected ? (a = {
                            name: t.name,
                            user_id: t.userid,
                            check: !0,
                            username: t.username
                        }, e.ruleData.sourceUsers.push(t.userid)) : a = {
                            name: t.name,
                            user_id: t.userid,
                            check: !1,
                            username: t.username
                        }, e.ruleData.userList.push(a)
                    })
                },
                C = function (e) {
                    if (g.filter_type = e.filter_type, 1 == g.filter_type) {
                        var t = g.sqlFilterList = e.filter_list;
                        angular.forEach(t, function (e) {
                            g.sql[e.tb_id] = e.expression
                        })
                    } else g.filters = e.filter_list
                },
                x = function (t, a) {
                    e.ruleData.filter_list = [], e.ruleData.sourceFilters = [];
                    var i = [],
                        n = [];
                    angular.forEach(t, function (e, t) {
                        $.inArray(e.tb_id, n) == -1 && (i.push({
                            tb_id: e.tb_id,
                            tb_name: e.tb_name,
                            fields: {}
                        }), i[i.length - 1].fields[e.fid] = {
                            condition_type: e.condition_type,
                            list: []
                        }, n.push(e.tb_id))
                    }), angular.forEach(t, function (t, a) {
                        var r = $.inArray(t.tb_id, n),
                            o = i[r].fields;
                        o[t.fid] || (o[t.fid] = {
                            condition_type: t.condition_type,
                            list: []
                        }), o[t.fid].list.push({
                            tb: {
                                name: t.tb_name,
                                tb_id: t.tb_id
                            },
                            field: {
                                name: t.fid_name,
                                fid: t.fid,
                                data_type: t.data_type,
                                type: "string" == t.data_type ? "string" : "all"
                            },
                            operator: t.operator,
                            start_date: t.start_date,
                            end_date: t.end_date,
                            opt_val: t.opt_val,
                            condition_type: t.condition_type,
                            fl_id: t.fl_id,
                            key: a
                        }), t.fl_id && e.ruleData.sourceFilters.push(t.fl_id)
                    }), e.ruleData.filter_list = i
                };
            if (e.$watch("ruleData.filters", function (t) {
                    m.modifyFilter && (t && t.length > 0 ? x(t) : e.ruleData.filter_list = [])
                }, !0), "create" == r.module) {
                ! function () {
                    e.ruleData.groupList = [], e.ruleData.userList = [], i.user.groupList().then(function (t) {
                        if (0 == t.status) {
                            var a = t.result;
                            e.ruleData.groupList = a
                        }
                    }), a.get("/api/sub/list").then(function (t) {
                        0 == t.status && (t = t.result, angular.forEach(t, function (t) {
                            e.ruleData.userList.push({
                                name: t.name,
                                user_id: t.userid,
                                check: !1,
                                username: t.username
                            })
                        }))
                    })
                }(), e.ruleData.name = "";
                var k = $.cookie("tpl_rule_id");
                k ? a.get("/api/rule/info", {
                    rule_id: k
                }).then(function (t) {
                    if (0 == t.status) {
                        var a = t.result;
                        e.ruleData.filterlist = a.SchemaInfo, _(a.SchemaInfo), b(a.TemplateInfo, "create"), C(a.FilterInfo), d(function () {
                            e.$broadcast("initTbList")
                        }, 10)
                    }
                }) : (e.ruleData.filterlist = [], e.ruleData.filter_list = [], function (t) {
                    a.get("/api/template/list").then(function (a) {
                        0 == a.status && (e.ruleData.tplList = [], "create" == t && angular.forEach(a.result, function (t) {
                            e.ruleData.tplList.push({
                                tpl_id: t.tpl_id,
                                name: t.name,
                                check: !1
                            })
                        }))
                    })
                }("create"))
            } else {
                var D = r.module;
                a.get("/api/rule/info", {
                    rule_id: D
                }).then(function (t) {
                    if (0 == t.status) {
                        var a = t.result;
                        e.ruleData.name = a.name, e.ruleData.rule_id = D, e.ruleData.filterlist = a.SchemaInfo, _(a.SchemaInfo), b(a.TemplateInfo), y(a.group_tree), w(a.SubUserInfo), C(a.FilterInfo), d(function () {
                            e.$broadcast("initTbList")
                        }, 10)
                    }
                })
            }
            e.setcurFieldType = function () {
                var t = e.ruleData.curFilter;
                "string" == t.field.data_type ? t.field.type = "string" : t.field.type = "all", "date" == t.field.data_type ? (t.operator = 10, t.opt_val = "", t.start_date = null, t.end_date = null) : (t.operator = 0, t.opt_val = "")
            }, e.changeCheck = function (t) {
                g.curFilter.tb = {}, g.curFilter.field = {}, g.curFilter.operator = "";
                var a = [];
                e.ruleData.tpls = [], angular.forEach(e.ruleData.tplList, function (t) {
                    t.check && (a.push(t.tpl_id), e.ruleData.tpls.push({
                        tpl_id: t.tpl_id,
                        name: t.name
                    }))
                });
                t.check, v(a)
            }, e.updateSelected = function () {
                if (!e.ruleData.curFilter.tb) return e.ruleData.curFilter = {
                    tb: {},
                    field: {
                        type: "string"
                    },
                    opt_val: "",
                    operator: 0,
                    condition_type: 0
                }, !1;
                g.curFilter.field = {};
                for (var t = e.ruleData.curFilter.tb.tb_id, a = e.ruleData.filterlist, i = 0, n = a.length; i < n; i++)
                    if (a[i].tb_id == t) {
                        e.ruleData.fields = a[i].schema;
                        break
                    }
            }, e.updateCtrl = function (t) {
                g.curFilter.tb = t, g.tbName = "", e.updateSelected()
            }, e.addKeyUp = function (t) {
                13 == t.keyCode && e.addFilter()
            }, e.addFilter = function () {
                var t = angular.copy(e.ruleData.curFilter);
                if (delete t.tb.schema, $.isEmptyObject(t.tb)) return void n(e.tips["template.selectSheet"]);
                if ($.isEmptyObject(t.field)) return void n(e.tips["template.selectField"]);
                if (!t.opt_val && 8 != t.operator && 9 != t.operator && 10 != t.operator) return void n(e.tips["template.inputValue"]);
                if (10 == t.operator && !t.start_date && !t.end_date) return void n(e.tips["template.inputValue"]);
                if ("" === t.operator) return void n(e.tips["template.selectCondition"]);
                m.modifyFilter = !0;
                var a = 1;
                g.filters[0] && (a = g.filters[0].condition_type), g.filters.push({
                    condition_type: a,
                    operator: t.operator,
                    opt_val: t.opt_val,
                    fid: t.field.fid,
                    fid_name: t.field.name,
                    data_type: t.field.data_type,
                    tb_id: t.tb.tb_id,
                    tb_name: t.tb.name,
                    start_date: t.start_date,
                    end_date: t.end_date
                }), e.ruleData.curFilter = {
                    tb: {},
                    field: {},
                    operator: "",
                    opt_val: "",
                    condition_type: 0
                }, 10 == t.operator && (e.ruleData.curFilter.start_date = null, e.ruleData.curFilter.end_date = null), e.ruleData.fields = []
            }, e.filterChange = function (e, t) {
                e.operator = t.value, 8 != e.operator && 9 != e.operator && 10 != e.operator || (e.opt_val = "")
            }, e.conditionTypeFun = function (t, a, i) {
                var n, r, o = e.ruleData.filter_list[t].fields[i],
                    s = o.condition_type;
                angular.forEach(o.list, function (e) {
                    e.condition_type = s, n = e.tb.tb_id, r = e.field.fid
                }), angular.forEach(g.filters, function (e) {
                    e.tb_id == n && e.fid == r && (e.condition_type = s)
                })
            }, e.delFilter = function (t) {
                m.modifyFilter = !0;
                var a = t.key;
                g.filters.splice(a, 1), t.fl_id && e.ruleData.del_filters.push(t.fl_id), e.$$phase || e.$apply()
            }, e.modifyFilter = function (e) {
                m.modifyFilter = !1;
                var t = e.key;
                8 != e.operator && 9 != e.operator && 10 != e.operator || (e.opt_val = ""), 10 != e.operator && (e.start_date = null, e.end_date = null), g.filters[t].operator = e.operator, g.filters[t].opt_val = e.opt_val, g.filters[t].start_date = e.start_date, g.filters[t].end_date = e.end_date
            }, e.updateModel = function (e, t) {
                e.operator = t.value
            }, e.saveRule = function () {
                function i(e) {
                    angular.forEach(e, function (e) {
                        e.checked && p.push(e.group_id), e.group_list && e.group_list.length > 0 && i(e.group_list)
                    })
                }
                if (!t.pageLoading) {
                    var o = e.ruleData,
                        s = "/api/rule/create";
                    if (!o.name) return void n(e.tips["template.inputRuleName"]);
                    var l = {};
                    l.name = o.name;
                    var d = [];
                    if (angular.forEach(e.ruleData.tplList, function (e) {
                            e.check && d.push(e.tpl_id)
                        }), 0 == d.length) return void n(e.tips["template.selectTemplate"]);
                    var p = [],
                        u = [];
                    if (i(e.ruleData.groupList), angular.forEach(e.ruleData.userList, function (e) {
                            e.check && u.push(e.user_id)
                        }), 0 == p.length && 0 == u.length) return void n(e.tips["template.selectUserOrGroup"]);
                    t.pageLoading = !0;
                    var h = c();
                    if ("create" == r.module) s = "/api/rule/create", l.tpl_ids = d.join(","), l.group_ids = p.join(","), l.user_ids = u.join(","), l.rule_filter = angular.toJson(h);
                    else {
                        s = "/api/rule/modify", l.rule_id = o.rule_id;
                        var f = [],
                            g = [],
                            m = e.ruleData.sourceTpls;
                        angular.forEach(m, function (e) {
                            $.inArray(e, d) == -1 && g.push(e)
                        }), angular.forEach(d, function (e) {
                            $.inArray(e, m) == -1 && f.push(e)
                        });
                        var _ = [],
                            v = [],
                            b = e.ruleData.sourceGroups;
                        angular.forEach(b, function (e) {
                            $.inArray(e, p) == -1 && v.push(e)
                        }), angular.forEach(p, function (e) {
                            $.inArray(e, b) == -1 && _.push(e)
                        });
                        var y = [],
                            w = [],
                            C = e.ruleData.sourceUsers;
                        angular.forEach(C, function (e) {
                            $.inArray(e, u) == -1 && w.push(e)
                        }), angular.forEach(u, function (e) {
                            $.inArray(e, C) == -1 && y.push(e)
                        }), l.rule_filter = angular.toJson(h), l.add_tpls = f.join(","), l.del_tpls = g.join(","), l.add_groups = _.join(","), l.del_groups = v.join(","), l.add_users = y.join(","), l.del_users = w.join(",")
                    }
                    a.post(s, l).then(function (a) {
                        t.pageLoading = !1, 0 == a.status && (n(e.tips["template.saveSuccess"]), t.click_show_view("template_rule", {
                            wsId: t.wsId
                        }))
                    })
                }
            }, e.back = function () {
                var a = [];
                angular.forEach(e.ruleData.tplList, function (e) {
                    e.check && a.push(e.tpl_id)
                }), e.ruleData.name && a.length > 0 ? o.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngdialog-width-340",
                    scope: e,
                    data: {
                        message: e.tips["template.confirmToBack"]
                    }
                }).then(function () {
                    t.click_show_view("template_rule", {
                        wsId: t.wsId
                    })
                }) : t.click_show_view("template_rule", {
                    wsId: t.wsId
                })
            }, e.batch_add_filter = function () {
                o.open({
                    template: "/static/partials/dialogTemplates/batch_add_filter.html",
                    className: "ngdialog-theme-default batch-add-filter-model ngDialog-width-740",
                    scope: e
                }), g.common_selected = !1, g.commonFieldOpts = [], g.batchSql = "", e.ruleData.commonCurFilter = {
                    operator: "",
                    field: {
                        name: e.tips["template.selectField"]
                    },
                    tbField: [{
                        tb_id: "common",
                        name: "",
                        fields: []
                    }]
                }, e.ruleData.commonFilters = [], e.ruleView.checkall = !1, angular.forEach(g.filterlist, function (e) {
                    e.check = !1
                })
            }, e.$on("toSqlTrans", function (e, t) {
                p()
            }), e.changeCtrl = function (t) {
                g.commonCurFilter.field = t, g.tbField = "", e.changefield()
            }, e.updateField = function (t) {
                g.curFilter.field = t, g.tbField = "", e.setcurFieldType()
            }, e.modifyCommonTb = function (t) {
                g.commonCurFilter.field.name = e.tips["template.selectField"], g.commonCurFilter.operator = "", g.commonFilters.length > 0 && (confirm(e.tips["template.clearFilterCondition"]) ? g.commonFilters = [] : t.check = !t.check);
                var a = 0;
                angular.forEach(g.filterlist, function (e) {
                    e.check && a++
                }), m.checkall = a == g.filterlist.length, u()
            }, e.changefield = function () {
                var e = g.commonCurFilter;
                e.field && ("string" == e.field.data_type ? e.field.type = "string" : e.field.type = "all"), e.field && "date" == e.field.data_type ? (e.operator = 10, e.opt_val = "", e.start_date = null, e.end_date = null) : (e.operator = 0, e.opt_val = "")
            }, e.batchAddKeyUp = function (t) {
                13 == t.keyCode && e.batchAddFilter()
            }, e.batchAddFilter = function () {
                if (!g.commonCurFilter.field) return void n(e.tips["template.selectField"]);
                if (void 0 === g.commonCurFilter.opt_val || "" === g.commonCurFilter.opt_val && 8 != g.commonCurFilter.operator && 9 != g.commonCurFilter.operator && 10 != g.commonCurFilter.operator) return void n(e.tips["template.inputValue"]);
                if (10 == g.commonCurFilter.operator && !g.commonCurFilter.start_date && !g.commonCurFilter.end_date) return void n(e.tips["template.inputValue"]);
                for (var t = 0, a = g.commonFilters.length; t < a; t++)
                    if (10 != g.commonCurFilter.operator) {
                        if (g.commonCurFilter.field.fid == g.commonFilters[t].fid && g.commonCurFilter.operator == g.commonFilters[t].operator && g.commonCurFilter.opt_val == g.commonFilters[t].opt_val) return !0, void n(e.tips["template.repeatRuleFilter"])
                    } else if (g.commonCurFilter.field.fid == g.commonFilters[t].fid && g.commonCurFilter.operator == g.commonFilters[t].operator && Highcharts.dateFormat("%Y-%m-%d", new Date(g.commonCurFilter.start_date)) == Highcharts.dateFormat("%Y-%m-%d", new Date(g.commonFilters[t].start_date)) && Highcharts.dateFormat("%Y-%m-%d", new Date(g.commonCurFilter.end_date)) == Highcharts.dateFormat("%Y-%m-%d", new Date(g.commonFilters[t].end_date))) return !0, void n(e.tips["template.repeatRuleFilter"]);
                angular.forEach(g.commonFields, function (e) {
                    e[0].fid == g.commonCurFilter.field.fid && angular.forEach(e, function (e) {
                        g.commonFilters.push({
                            fid: e.fid,
                            fid_name: e.name,
                            data_type: e.data_type,
                            opt_val: g.commonCurFilter.opt_val,
                            operator: g.commonCurFilter.operator,
                            condition_type: 1,
                            tb_id: e.tb_id,
                            tb_name: e.tb_name,
                            start_date: g.commonCurFilter.start_date,
                            end_date: g.commonCurFilter.end_date
                        })
                    })
                }), g.commonCurFilter.operator = "", g.commonCurFilter.opt_val = "", scrollToBottom($(".batch-add-filter-model .right .common-filter-list"))
            };
            var S = function (e) {
                var t = [];
                angular.forEach(e, function (e, a) {
                    0 == a ? t.push(e) : 10 != e.operator ? 9 == e.operator || 8 == e.operator ? t[t.length - 1].fid_name === e.fid_name && t[t.length - 1].operator === e.operator || t.push(e) : t[t.length - 1].fid_name === e.fid_name && t[t.length - 1].operator === e.operator && t[t.length - 1].opt_val === e.opt_val || t.push(e) : t[t.length - 1].fid_name === e.fid_name && t[t.length - 1].operator === e.operator && Highcharts.dateFormat("%Y-%m-%d", new Date(t[t.length - 1].start_date)) === Highcharts.dateFormat("%Y-%m-%d", new Date(e.start_date)) && Highcharts.dateFormat("%Y-%m-%d", new Date(t[t.length - 1].end_date)) === Highcharts.dateFormat("%Y-%m-%d", new Date(e.end_date)) || t.push(e)
                });
                var a, i = [],
                    n = 0;
                angular.forEach(t, function (e, t) {
                    0 == t ? (m.commonFilters[n] = [], m.commonFilters[n].push(e), i.push(e.fid_name), n++) : (a = $.inArray(e.fid_name, i), a == -1 ? (m.commonFilters[n] = [], m.commonFilters[n].push(e), i.push(e.fid_name), n++) : m.commonFilters[a].push(e))
                })
            };
            e.$watch("ruleData.commonFilters", function (e) {
                m.commonFilters = [], e && e.length > 0 && S(e)
            }, !0), e.delCommonFilter = function (e, t, a) {
                for (var i = g.commonFilters, n = i.length - 1; n >= 0; n--) i[n].fid_name == e.fid_name && i[n].operator == e.operator && i[n].opt_val == e.opt_val && i.splice(n, 1)
            };
            var T = function (e) {
                    var t = !1;
                    return angular.forEach(g.filters, function (a) {
                        10 != e.operator ? a.fid == e.fid && a.tb_id == e.tb_id && a.operator == e.operator && a.opt_val == e.opt_val && (t = !0) : a.fid == e.fid && a.tb_id == e.tb_id && a.operator == e.operator && Highcharts.dateFormat("%Y-%m-%d", new Date(a.start_date)) == Highcharts.dateFormat("%Y-%m-%d", new Date(e.start_date)) && Highcharts.dateFormat("%Y-%m-%d", new Date(a.end_date)) == Highcharts.dateFormat("%Y-%m-%d", new Date(e.end_date)) && (t = !0)
                    }), t
                },
                I = function (e) {
                    var t = void 0;
                    return angular.forEach(g.filters, function (a) {
                        a.fid == e.fid && a.tb_id == e.tb_id && (t = a.condition_type)
                    }), t
                };
            e.addBatchFilter = function () {
                m.modifyFilter = !0, 0 == g.filter_type ? (h(), o.closeAll()) : p(f)
            }, e.changeCheckAll = function () {
                if (g.commonFilters.length > 0) return confirm(e.tips["template.clearFilterCondition"]) ? (g.commonFilters = [], angular.forEach(g.filterlist, function (e) {
                    e.check = m.checkall
                }), u(), !1) : (m.checkall = !m.checkall, !1);
                angular.forEach(g.filterlist, function (e) {
                    e.check = m.checkall
                }), u()
            }, l(["template.eq", "template.neq", "template.gt", "template.lt", "template.egt", "template.elt", "template.selectSheet", "template.inputValue", "template.selectCondition", "template.inputRuleName", "template.repeatRuleFilter", "template.selectTemplate", "template.selectUserOrGroup", "template.clearFilterCondition", "template.inputCondition", "filter.checkSuccess", "template.selectField", "template.confirmToBack"], e)
        }
        angular.module("BC.controllers.template.modify", [])
        .controller("templateRuleModifyCtrl", e), 
        e.$inject = ["$scope", "$rootScope", "commonHttp", "commonService", "errHint", "$stateParams", "ngDialog", "filterOperatorMapWithTypeSpecial", "$jsTipTranslate", "$timeout"]
    }(),

    function () {
        function e(e, t, a, i, n, r, o, s, l, d) {
            function c(e, t) {
                return "number" == e && "fixed" == t ? 0 : "number" == e && "custom" == t ? 1 : "string" == e && "condition" == t ? 21 : "string" == e && "item" == t ? 22 : "date" == e && "custom" == t ? 3 : "date" == e && "group_year" == t ? 4 : "date" == e && "group_month" == t ? 5 : "date" == e && "group_week" == t ? 6 : "date" == e && "fixed" == t ? 7 : "expression" == t ? 8 : -1
            }

            function p() {
                var t = D[e.selected.field.fid] || [];
                t.length > 0 || e.showLoading ? (e.searchList = t, e.searchListAll = t) : e.fieldRangeMap[e.selected.field.fid] || (e.showLoading = !0, i.post("/api/field/item_search", {
                    tb_id: (e.currentView ? e.currentView.tb_id : e.tb_id) || e.ngDialogData.tb_id,
                    field: angular.toJson(e.selected.field),
                    keyword: ""
                }).then(function (t) {
                    var a = t.result;
                    e.fieldTotalItems = a.total, e.searchList = e.fieldRangeMap[e.selected.field.fid] = a.items, e.searchListAll = e.fieldRangeMap[e.selected.field.fid] = a.items, D[e.selected.field.fid] = a.items, e.showLoading = !1, e.itemEvent.noSearchList()
                }))
            }

            function u(t, a) {
                var i, r = {
                    default_name: e.defaultGroupName
                };
                return "expression" === a ? i = {
                    type: a,
                    groups: []
                } : "number" == t ? "fixed" == a ? (i = {
                    type: a,
                    range: []
                }, n.field.getRange(e.newField.tb_id, e.selected.field.fid, e.newField.ct_id).success(function (e) {
                    0 == e.status && (i.range[0] = e.result.range[0], i.range[1] = e.result.range[1])
                })) : "custom" == a && (i = {
                    type: a,
                    groups: []
                }) : "string" == t ? ("item" === a && p(), i = {
                    type: a,
                    groups: [],
                    default_name: e.defaultGroupName
                }) : "date" == t && (i = "custom" == a || v(a, "group_") ? {
                    type: a,
                    groups: []
                } : {
                    type: a,
                    aggregator: "year",
                    start: [],
                    step: ""
                }), i && i.groups && i.groups.push(h(t, a)), angular.extend(r, i)
            }

            function h(t, a) {
                var i = {
                    name: e.newGroupPrefix + 1
                };
                return "expression" === a ? i.expression = "" : "number" == t && "custom" == a ? (i.range = [], i.boundary = [0, 0]) : "string" == t ? a && "condition" !== a || (i.logic = "AND", i.conditions = [], "condition" === a && (i.conditions = [{
                    operator: "0",
                    value: ""
                }])) : "date" == t && (i.range = "group_year" == a ? [1, 1, 1, 1] : "group_month" == a ? [1, 1] : "group_week" == a ? [1, 1] : []), i
            }

            function f() {
                return r([
                    "field.defaultGroup", 
                    "field.itemWithoutGroup", 
                    "field.groupPrefix", 
                    "field.meetAll", 
                    "field.to", 
                    "field.meetAny", 
                    "field.general", 
                    "field.yearsGroup", 
                    "field.monthsGroup", 
                    "field.weeksGroup", 
                    "field.fixedStep", 
                    "chart.dateFilterExpression", 
                    "lang", 
                    "year", 
                    "quarter", 
                    "month", 
                    "week", 
                    "day", 
                    "equal", 
                    "contain", 
                    "notContain"]).then(function (t) {
                    e.operatorMap = {
                        0: t.equal,
                        1: t.contain,
                        2: t.notContain
                    }, 
                    e.logicMap = {
                        AND: t["field.meetAll"],
                        OR: t["field.meetAny"]
                    }, 
                    e.dateGroupTypeList = [{
                        type: "custom",
                        name: t["field.general"]
                    }, {
                        type: "group_year",
                        name: t["field.yearsGroup"]
                    }, {
                        type: "group_month",
                        name: t["field.monthsGroup"]
                    }, {
                        type: "group_week",
                        name: t["field.weeksGroup"]
                    }, {
                        type: "fixed",
                        name: t["field.fixedStep"]
                    }, {
                        type: "expression",
                        name: t["chart.dateFilterExpression"]
                    }], 
                    e.lang = t.lang, 
                    e.aggregators = [{
                        type: "year",
                        name: t.year
                    }, {
                        type: "quarter",
                        name: t.quarter
                    }, {
                        type: "month",
                        name: t.month
                    }, {
                        type: "week",
                        name: t.week
                    }, {
                        type: "day",
                        name: t.day
                    }], 
                    e.to = t["field.to"], 
                    e.newGroupPrefix = t["field.groupPrefix"], 
                    e.itemWithoutGroup = t["field.itemWithoutGroup"], 
                    e.defaultGroupName = t["field.defaultGroup"]
                })
            }

            function g() {
                if (e.groupData.info.groups) {
                    for (var t = e.groupData.info.groups, a = 0; a < t.length; a++)
                        if ("" == t[a].name || !t[a].name) return !0;
                    return !1
                }
            }

            function m() {
                if (e.groupData.info.groups) {
                    var t, a = e.groupData.info.groups,
                        i = [];
                    for (t = 0; t < a.length; t++) i.push(a[t].name);
                    for (i = i.sort(), t = 0; t < i.length; t++)
                        if (i[t] == i[t + 1]) return !0;
                    return !1
                }
            }

            function _(e) {
                return e < 10 ? "0" + e : e + ""
            }

            function v(e, t) {
                return !(null == t || "" == t || 0 == e.length || t.length > e.length) && e.substr(0, t.length) == t
            }

            function b(e, t) {
                var a = {
                    "M+": e.getMonth() + 1,
                    "d+": e.getDate()
                };
                /(y+)/.test(t) && (t = t.replace(RegExp.$1, (e.getFullYear() + "").substr(4 - RegExp.$1.length)));
                for (var i in a) new RegExp("(" + i + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? a[i] : ("00" + a[i]).substr(("" + a[i]).length)));
                return t
            }

            function y(t, a) {
                if ("pickStart" == t) {
                    for (var i in e.pickStart) i != a && (e.pickStart[i] = !1);
                    e.pickStart[a] = !e.pickStart[a], e.pickEnd = {}
                }
                if ("pickEnd" == t) {
                    for (var n in e.pickEnd) n != a && (e.pickEnd[n] = !1);
                    e.pickEnd[a] = !e.pickEnd[a], e.pickStart = {}
                }
            }
            var w = e.groupData = angular.copy(e.newField.param) || {
                    type: "group",
                    info: {
                        groups: []
                    }
                };
            !w.info.default_name && w.info.default && (w.info.default_name = w.info.default, delete w.info.default), 
            "string" === w.data_type && void 0 === w.info.type && (w.info.type = "condition");
            var C = "",
                x = [],
                k = "create" == e.newField.type;
            e.LessThen = [{
                value: 0,
                text: "<"
            }, {
                value: 1,
                text: "≤"
            }], 
            e.selectedlist = !0, 
            e.addmanually = !1, 
            e.select = {}, 
            e.selected = {
                field: null,
                dateGroupType: null
            }, 
            e.fieldRangeMap = {}, 
            e.searchList = [], 
            e.searchListAll = [], 
            e.field_list = e.ngDialogData.fieldList, 
            e.fieldList = e.field_list, 
            e.dateList = {
                monthList: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                weekDayList: [1, 2, 3, 4, 5, 6, 7],
                dayList: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
            }, 
            e.dayList1 = e.dateList.dayList, 
            e.dayList2 = e.dateList.dayList;
            var D = (e.dateList.dayList, {});
            e.initGroupInfo = function (t) {
                e.itemEvent.keyword = "";
                var a = e.selected.field.data_type;
                t = "date" == a ? t || e.selected.dateGroupType && e.selected.dateGroupType.type || "custom" : "string" == a ? t || "condition" : t || "fixed", w.info.type = t;
                var i = c(a, t);
                e.select = {}, (k || i != e.groupType) && (e.groupType = i, w.info = u(a, t)), w.info.groups && e.selectGroup(w.info.groups[0], a, t)
            }, 
            e.$watch("groupData.info.aggregator", function (t) {
                "date" == e.selected.field.data_type && "fixed" == w.info.type && i.get("/api/field/range", {
                    ct_id: e.newField.ct_id,
                    tb_id: e.newField.tb_id,
                    granularity: t,
                    fid: e.selected.field.fid,
                    adv_enum_display: 0
                }).then(function (a) {
                    0 == a.status && (e.dateRanges = a.result.range, k || C && C != t ? "day" == t ? e.groupData.info.start[1] = e.dateRanges[e.dateRanges.length - 1] : e.groupData.info.start[0] = bdpChart.helper.checkGranularity(t, e.dateRanges[e.dateRanges.length - 1]) : C && C == t && x.length && ("day" == t ? e.groupData.info.start[1] = x[1] : e.groupData.info.start[0] = x[0]))
                })
            }), 
            e.getAggreName = function () {
                for (var t = 0; t < e.aggregators.length; t++)
                    if (e.aggregators[t].type == e.groupData.info.aggregator) return "en" == e.lang && e.groupData.info.step > 1 ? e.aggregators[t].name + "s" : e.aggregators[t].name
            };
            var S = [];
            e.checkInvalidNumber = function (t, i) {
                var n = t.target;
                angular.element(n).hasClass("ng-invalid-number") ? (S[i] = !0, a(e.tips["field.invalidNumber"])) : S[i] = !1
            }, 
            o.$on("$translateChangeSuccess", f), 
            e.addNewNumberGroup = function (t) {
                for (var t, i = e.groupData.info.groups, n = 0; n < i.length; n++) {
                    var r = i[n];
                    if (r.name || (r.name = e.newGroupPrefix + i.length), 0 == r.range.length || void 0 == r.range[0] && void 0 == r.range[1] || S[0] || S[1]) return void a(e.tips["field.mustBeNumber"]);
                    if (r.range[0] > r.range[1]) return void a(e.tips["field.numberRangeErr"]);
                    void 0 == r.range[0] ? r.range[0] = null : void 0 == r.range[1] && (r.range[1] = null)
                }
                t = {
                    name: e.newGroupPrefix + (w.info.groups.length + 1),
                    range: [],
                    boundary: [0, 0]
                }, w.info.groups.push(t), S = []
            }, 
            e.addNewStringGroup = function () {
                if (! function () {
                        var t = !0;
                        return angular.forEach(e.groupData.info.groups, function (e) {
                            e.name || (t = !1)
                        }), t
                    }()) return void a(e.tips["field.nameRequired"]);
                var t = w.info.type,
                    i = w.info.groups,
                    n = {
                        name: e.newGroupPrefix + (i.length + 1),
                        conditions: []
                    };
                if ("condition" === t) {
                    for (var r = 0; r < i.length; r++)
                        for (var o = i[r].conditions, s = 0; s < o.length; s++) {
                            var l = o[s];
                            if (!l.value) return void a(e.tips["field.conditionRequired"])
                        }
                    n.logic = "AND", n.conditions.push({
                        operator: "0",
                        value: ""
                    })
                } else if ("item" === t)
                    for (var r = 0; r < i.length; r++) {
                        var o = i[r].conditions;
                        if (!o.length) return void a(e.tips["field.conditionRequired"])
                    }
                i.push(n), e.selectGroup(n, "string", t)
            }, 
            e.addNewDateGroup = function (t) {
                var i, n = e.groupData.info.groups;
                if ("custom" == t) {
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (o.name || (o.name = e.newGroupPrefix + n.length), 0 == o.range.length || void 0 == o.range[0] && void 0 == o.range[1]) return a(e.tips["field.plzChooseLeastOneOfStart_endDate"]), !1
                    }
                    i = {
                        name: e.newGroupPrefix + (w.info.groups.length + 1),
                        range: []
                    }
                } else if ("group_year" == t) {
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (o.name || (o.name = e.newGroupPrefix + n.length), o.range[0] > o.range[2] || o.range[0] == o.range[2] && o.range[1] > o.range[3]) return a(e.tips["field.endDateGtStartDate"]), void(o.range = [1, 1, 1, 1])
                    }
                    i = {
                        name: e.newGroupPrefix + (w.info.groups.length + 1),
                        range: [1, 1, 1, 1]
                    }
                } else if ("group_month" == t) {
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (o.name || (o.name = e.newGroupPrefix + n.length), o.range[0] > o.range[1]) return a(e.tips["field.endDateGtStartDate"]), void(o.range = [1, 1])
                    }
                    i = {
                        name: e.newGroupPrefix + (w.info.groups.length + 1),
                        range: [1, 1]
                    }
                } else if ("group_week" == t) {
                    for (var r = 0; r < n.length; r++) {
                        var o = n[r];
                        if (o.name || (o.name = e.newGroupPrefix + n.length), o.range[0] > o.range[1]) return a(e.tips["field.endDateGtStartDate"]), void(o.range = [1, 1])
                    }
                    i = {
                        name: e.newGroupPrefix + (w.info.groups.length + 1),
                        range: [1, 1]
                    }
                }
                w.info.groups.push(i)
            }, 
            e.addNewExpressionGroup = function () {
                if ("default" !== e.select.group.type && e.select.group && !e.select.group.expression) return void a(e.tips["filter.checkFailed"]);
                var t = {
                    name: e.newGroupPrefix + (w.info.groups.length + 1),
                    expression: ""
                };
                w.info.groups.push(t), e.selectGroup(t, e.selected.field.data_type, "expression")
            }, 
            e.removeGroup = function (t) {
                var a = e.groupData.info.groups.splice(t, 1);
                a = a[0], 
                angular.toJson(a) == angular.toJson(e.select.group) && (e.groupData.info.groups.length ? e.selectGroup(e.groupData.info.groups[0], e.groupData.data_type, e.groupData.info.type) : e.selectGroup("default"))
            }, 
            e.selectGroup = function (t, i, n) {
                if (e.select.group != t) {
                    if (e.select.group && !e.select.group.name && "default" != e.select.group.type) return void a(e.tips["field.nameRequired"]);
                    if ("default" === t) return e.select.group = {}, e.select.group.name = w.info.default_name, void(e.select.group.type = "default");
                    e.select.group = t;
                    var r = c(i, n);
                    if (21 == r) e.select.group.conditions || (e.select.group.conditions = [], e.select.group.logic = "AND", e.select.group.conditions.push({
                        operator: "0",
                        value: ""
                    }));
                    else if (22 == r) p(), e.select.group.conditions || (e.select.group.conditions = []);
                    else if (8 == r) {
                        e.select.group.expression || (e.select.group.expression = "");
                        var o = new RegExp("\\[_field_id_\\]", "g");
                        e.select.group.expression = e.select.group.expression.replace(o, "[" + e.selected.field.name + "]"), d(function () {
                            e.$broadcast("changeDateExpression", e.select.group.expression)
                        })
                    }
                    e.itemEvent.noSearchList(), e.selectgroup = !1, e.selectedlist = !0
                }
            }, 
            e.addCondition = function (t, i) {
                for (var i, n = t.conditions, r = 0; r < n.length; r++) {
                    if (!n[r].value) return void a(e.tips["field.conditionRequired"])
                }
                i = {
                    operator: "0"
                }, t.conditions.push(i)
            }, 
            e.sortGroupField = {
                start: function () {},
                stop: function () {},
                items: "li:not(.default-group-name)"
            }, 
            e.showDefaultGroup = function () {
                return e.select.group && "default" === e.select.group.type
            }, 
            e.showConditionList = function () {
                return e.select.group && !e.showDefaultGroup()
            }, 
            e.removeCondition = function (e, t) {
                e.splice(t, 1)
            }, 
            e.commit = function () {
                if (!e.selected.field) return !1;
                if (0 == e.newField.name.length) return void a(e.tips["field.nameRequired"]);
                if (e.newField.name.length > 200) return void a(e.tips["field.newFieldNameTooLong"]);
                for (var t = 0; t < e.field_list.length; t++)
                    if (e.field_list[t].name === e.newField.name && e.field_list[t].fid !== e.newField.fid) return a(e.tips["error.fieldRepeat"]), !1;
                if (g()) return void a(e.tips["field.plzCommitAfterCheckGroupName"]);
                if (m()) return void a(e.tips["field.groupNameRepeated"]);
                e.groupData.info.default_name || (e.groupData.info.default_name = "zh" == o.language ? "未分组" : "Ungrouped");
                var i, n = function () {
                    return i && 0 != i.length ? i : (a(e.tips["field.atLeastOneGroup"]), !1)
                };
                e.groupData.fid = e.selected.field.fid, e.groupData.data_type = e.selected.field.data_type;
                var r = c(e.groupData.data_type, e.groupData.info.type);
                angular.copy(e.groupData.info);
                switch (i = angular.copy(e.groupData.info.groups), r) {
                    case 0:
                        var s = e.groupData.info.range,
                            l = e.groupData.info.step;
                        if (void 0 == s[0] || void 0 == s[1]) return a(e.tips["field.stepStartAndEnd"]), !1;
                        if (!l) return a(e.tips["field.stepValueInvalid1"]), !1;
                        if (!/^-?\d+(\.\d{1,6})?$/.test(+l)) return a(e.tips["field.stepValueInvalid2"]), !1;
                        break;
                    case 1:
                        if (!i || 0 == i.length) return a(e.tips["field.atLeastOneGroup"]), !1;
                        for (var t = 0; t < i.length; t++) {
                            var d = i[t];
                            if (0 == d.range.length || void 0 == d.range[0] && void 0 == d.range[1] || S[0] || S[1]) return void a(e.tips["field.mustBeNumber"]);
                            if (void 0 != d.range[0] && void 0 != d.range[1] && d.range[0] > d.range[1]) return void a(e.tips["field.numberRangeErr"]);
                            void 0 == d.range[0] ? d.range[0] = null : void 0 == d.range[1] && (d.range[1] = null)
                        }
                        break;
                    case 21:
                    case 22:
                        if (!i || 0 == i.length) return a(e.tips["field.atLeastOneGroupItem"]), !1;
                        for (var p, t = 0, u = i.length; t < u; t++) {
                            if (p = i[t], 0 == p.conditions.length) return a(p.name + " " + e.tips["field.groupConditionRequired"]), !1;
                            if (p.conditions.length > 1e3) return a(p.name + " " + e.tips["filter.groupItemOver1000"]), !1
                        }
                        if (21 === r)
                            for (var t = 0, u = i.length; t < u; t++)
                                for (var h = i[t].conditions, f = 0; f < h.length; f++) {
                                    var d = h[f];
                                    if (!d.value) return void a(e.tips["field.conditionRequired"])
                                }
                        break;
                    case 3:
                        for (var t = 0; t < i.length; t++) {
                            var d = i[t];
                            if (0 == d.range.length || void 0 == d.range[0] && void 0 == d.range[1]) return a(e.tips["field.plzChooseLeastOneOfStart_endDate"]), !1;
                            if (void 0 != d.range[0] && void 0 != d.range[1] && d.range[0] > d.range[1]) return void a(e.tips["field.endDateGtStartDate"]);
                            void 0 == d.range[0] ? d.range[0] = null : d.range[0] = b(new Date(d.range[0]), "yyyy-MM-dd"), void 0 == d.range[1] ? d.range[1] = null : d.range[1] = b(new Date(d.range[1]), "yyyy-MM-dd")
                        }
                        break;
                    case 4:
                        i = n();
                        for (var t = 0; t < i.length; t++) i[t].range[0] = _(i[t].range[0]) + _(i[t].range[1]), i[t].range[1] = _(i[t].range[2]) + _(i[t].range[3]), i[t].range.splice(2, 2);
                        break;
                    case 7:
                        var l = e.groupData.info.step,
                            v = e.groupData.info.aggregator,
                            y = e.groupData.info.start;
                        if (!l) return a(e.tips["field.stepValueRequired"]), !1;
                        if (l < 1) return a(e.tips["field.stepValueGtOne"]), !1;
                        if (!y.length) return a(e.tips["field.plzChooseAStartDate"]), !1;
                        if ("year" == v || "quarter" == v || "month" == v || "week" == v) {
                            if (!y[0]) return a(e.tips["field.plzChooseAStartDate"]), !1;
                            y.length > 1 && y.splice(1, 1);
                            var w = y[0].match(/\d+/g);
                            "zh" == e.lang ? angular.extend(y, w) : angular.extend(y, w.reverse())
                        } else {
                            if (!y[1]) return a(e.tips["field.plzChooseAStartDate"]), !1;
                            y[0] = b(new Date(y[1]), "yyyy-MM-dd"), y.splice(1, 1)
                        }
                        break;
                    case 8:
                    default:
                        if (!(i = n())) return !1
                }
                var C = angular.copy(e.groupData);
                C.info.groups = i;
                var x = angular.extend(e.newField, {
                    param: C,
                    data_type: "string"
                });
                e.addCalcField(x)
            }, 
            f().then(function () {
                if (k) {
                    e.selected.field = e.fieldList[0];
                    var t = e.selected.field.data_type;
                    "date" == t && (e.selected.dateGroupType = e.dateGroupTypeList[0]), "string" === t ? e.initGroupInfo("condition") : e.initGroupInfo("custom")
                } else {
                    e.groupType = c(w.data_type, w.info.type);
                    for (var a = 0, i = e.fieldList.length; a < i; a++)
                        if (w.fid == e.fieldList[a].fid) {
                            e.selected.field = e.fieldList[a];
                            break
                        }
                    if ("date" == e.selected.field.data_type) {
                        for (var n = 0; n < e.dateGroupTypeList.length; n++)
                            if (e.dateGroupTypeList[n].type == w.info.type) {
                                e.selected.dateGroupType = e.dateGroupTypeList[n];
                                break
                            }
                        var r = w.info.groups;
                        if ("fixed" == w.info.type) {
                            var o = w.info.aggregator,
                                s = w.info.start;
                            if (C = angular.copy(o), "day" !== o && "week" != o) {
                                var l = new Date(s[0] + "-01-01 00:00:00");
                                "quarter" == o ? l.setMonth(3 * s[1] - 1) : "month" == o && l.setMonth(s[1] - 1), s[0] = bdpChart.helper.checkGranularity(o, l.getTime())
                            } else "week" == o ? "zh" == e.lang ? s[0] = s[0] + "年第" + s[1] + "周" : s[0] = "Week " + s[1] + "-" + s[0] : "day" == o && (s[1] = s[0]);
                            x = angular.copy(s)
                        } else if ("group_year" == w.info.type)
                            for (var a = 0; a < r.length; a++) r[a].range[3] = Number(r[a].range[1].substr(2, 2)), r[a].range[2] = Number(r[a].range[1].substr(0, 2)), r[a].range[1] = Number(r[a].range[0].substr(2, 2)), r[a].range[0] = Number(r[a].range[0].substr(0, 2));
                        else if ("group_month" == w.info.type)
                            for (var a = 0; a < r.length; a++) r[a].range[0] = Number(r[a].range[0]), r[a].range[1] = Number(r[a].range[1])
                    }
                    e.initGroupInfo(w.info.type)
                }
            }), 
            e.pickStart = {}, 
            e.pickEnd = {}, 
            e.fixDatePickerPos = function (t, a, i) {
                y(a, i);
                var n = {
                        left: t.clientX,
                        top: t.clientY
                    },
                    r = $(t.target).closest(".J-show-date-picker");
                r.length < 1 && $(t.target).hasClass(".J-show-date-picker") && (r = $(t.target)), r.length && (n.left = r.offset().left + 32, n.top = r.offset().top + 24), e.datePickerPos = {
                    left: n.left,
                    top: n.top
                }
            }, 
            e.groupExpression = {
                setExpression: function (t) {
                    e.groupData.info.groups && e.select.group && (e.select.group.expression = t)
                },
                expressionChanged: function (t, a) {
                    e.expressionChangedFlag = t, e.groupExpression.setExpression(a)
                },
                insertFieldNameToExpression: function (t) {
                    e.expressionChangedFlag = !0, e.$broadcast("insertFieldNameToExpression", t)
                },
                checkFormulaGrammar: function (t, n, r) {
                    "" == t && (t = e.selected.field.name), t = bdp.utils.requote(t);
                    var o = new RegExp("\\[" + t + "\\]", "g");
                    e.select.group.expression = e.select.group.expression.replace(o, "[_field_id_]");
                    var s = {
                        tb_id: e.currentView ? e.currentView.tb_id : e.tb_id,
                        fid: n,
                        expression: e.select.group.expression
                    };
                    return e.expressionChangedFlag = !1, i.post("/api/field/group_expr_verify", s, {
                        errHint: !1
                    }).then(function (t) {
                        return 0 == t.status ? (a(e.tips["filter.checkSuccess"]), e.checkFormulaGrammarFlag = !0, !0) : (a(e.tips["filter.checkFailed"]), e.checkFormulaGrammarFlag = !1, !1)
                    })
                }
            }, 
            e.itemEvent = {
                addItem: function (t) {
                    var i = !1,
                        n = $(".add-manually");
                    return $.inArray(t, e.select.group.conditions) > -1 && (i = !0), i ? void a(e.tips["filter.itemExist"]) : e.select.group.conditions.length >= 1e3 ? (a(e.tips["filter.groupItemOver1000"], {
                        dialog: !0
                    }), !1) : (e.select.group.conditions.push(t), "" === n.val() ? n.val(n.val() + t) : n.val(n.val() + "\n" + t), void d(function () {
                        var e = $(".add-list").find("ul"),
                            t = e[0].scrollHeight;
                        e.animate({
                            scrollTop: t
                        }), n.focus()
                    }, 300))
                },
                delItem: function (t) {
                    e.select.group.conditions.splice(t, 1), e.nosearch_list = [], e.itemEvent.noSearchList()
                },
                addAll: function () {
                    if (e.select.group.conditions.length >= 1e3) return a(e.tips["filter.groupItemOver1000"], {
                        dialog: !0
                    }), !1;
                    angular.forEach(e.searchList, function (t, a) {
                        e.select.group.conditions.indexOf(t) < 0 && e.select.group.conditions.push(t)
                    })
                },
                delAll: function () {
                    e.select.group.conditions.length = 0, e.nosearch_list = []
                },
                search: function (t) {
                    var a = {
                        tb_id: e.currentView ? e.currentView.tb_id : e.tb_id,
                        field: angular.toJson(e.selected.field),
                        rule_id: o.global.rule_id || "",
                        keyword: t
                    };
                    i.post("/api/field/item_search", a).then(function (t) {
                        0 == t.status && (e.searchList = t.result.items, e.show = !0)
                    })
                },
                keyupEvent: function (t, a) {
                    13 === t.keyCode && e.itemEvent.search(a)
                },
                mouseLeave: function () {
                    e.show = !1
                },
                itemEdit: function () {
                    e.selectedlist = !1, e.addmanually = !0, e.selectgroup = !0;
                    var t = e.select.group.conditions,
                        a = $(".add-manually");
                    a.val(""), setTimeout(function () {
                        a.focus()
                    }, 300);
                    var i = a.val(),
                        n = i.split("\n"),
                        r = 0,
                        o = "";
                    if ("" == i) o += t.join("\n");
                    else
                        for (var s = 0; s < t.length; s++) {
                            for (var l = 0; l < n.length; l++) n[l] == t[s] && (r = 1);
                            0 === r && (o += "\n" + t[s])
                        }
                    a.val(i + o)
                },
                addDone: function () {
                    var t = $(".add-manually").val().split("\n");
                    e.select.group.conditions;
                    if (e.select.group.conditions = [], angular.forEach(t, function (a, i) {
                            e.select.group.conditions.indexOf(a) < 0 && "" !== t[i] && e.select.group.conditions.push(a)
                        }), !(e.select.group.conditions.length <= 1e3)) return a(e.tips["filter.groupItemOver1000"], {
                        dialog: !0
                    }), !1;
                    e.itemEvent.noSearchList(), e.selectedlist = !0, e.addmanually = !1
                },
                noSearchList: function () {
                    if (e.nosearch_list = [], "item" === e.groupData.info.type && e.select.group.conditions.length > 0) {
                        if (e.select.group.conditions.length > 1e3) return a(e.tips["filter.groupItemOver1000"], {
                            dialog: !0
                        }), !1;
                        i.post("/api/field/item_validate", {
                            tb_id: e.currentView ? e.currentView.tb_id : e.tb_id,
                            field: angular.toJson(e.selected.field),
                            items: angular.toJson(e.select.group.conditions)
                        }).then(function (t) {
                            var a = t.result;
                            "0" == t.status && angular.forEach(e.select.group.conditions, function (t, i) {
                                a[t] || e.nosearch_list.push(i)
                            })
                        })
                    }
                }
            }, 
            s([//$jsTipTranslate
                "field.numberRangeErr", 
                "field.invalidNumber", 
                "field.mustBeNumber", 
                "field.conditionRequired", 
                "field.nameRequired", 
                "field.stepStartAndEnd", 
                "field.stepValueRequired", 
                "field.atLeastOneGroup", 
                "field.atLeastOneGroupItem", 
                "field.groupConditionRequired", 
                "field.newFieldNameTooLong", 
                "field.plzCommitAfterCheckGroupName", 
                "field.groupNameRepeated", 
                "field.stepValueInvalid1", 
                "field.stepValueInvalid2", 
                "field.stepValueGtOne", 
                "field.plzChooseAStartDate", 
                "field.plzChooseLeastOneOfStart_endDate", 
                "field.endDateGtStartDate", 
                "filter.itemExist", 
                "filter.groupItemOver1000", 
                "error.fieldRepeat"], e)
        }
        angular.module("BC.controllers.chartEdit")
        .controller("FieldGroupController", e), 
        e.$inject = ["$scope", "$stateParams", "errHint", "commonHttp", "commonService", "$translate", "$rootScope", "$jsTipTranslate", "$filter", "$timeout"]
    }(),

    function () {
        angular.module("BC.controllers.chartEdit")
        .controller("enumOrderCtrl", ["$scope", "commonService", "errHint", "alphaOrderType", function (e, t, a, i) {
            function n(e) {
                return "source" === e ? "template" : "filter_template"
            }

            function r(t, a, i) {
                var n;
                "x" === t && (n = a[t][g], a.sort = {
                    type: "custom",
                    fid: i,
                    axis: "x",
                    uniq_id: n.uniq_id
                }), a.is_advanced_sort = 0, a.compare_axis && "compare_axis" === t && (n = a[t][g], a.compare_axis.forEach(function (e) {
                    e.fid === i && (e.compare_sort ? e.compare_sort.type = "custom" : e.compare_sort = {
                        type: "custom",
                        fid: i,
                        axis: "compare_axis",
                        uniq_id: n.uniq_id
                    })
                })), e.onSaveEnumOrder(i)
            }

            function o() {
                var t;
                return e.ngDialogData.items.forEach(function (a) {
                    a.uniq_id === e.ngDialogData.uniqId && (t = a)
                }), t
            }

            function s() {
                var t = n(m);
                return {
                    range: e.viewData[t].range,
                    total: e.viewData[t].total
                }
            }

            function l(e) {
                var t = angular.extend({}, e);
                return 2 == e.type && (t.type = "ascending" == e.alpha_order_type ? 2 : 3, delete t.alpha_order_type), t
            }

            function d(e) {
                var t = angular.extend({}, e);
                return t.alpha_order_type = 3 == e.type ? "descending" : "ascending", t.type = 3 == e.type ? 2 : e.type, t
            }

            function c(t) {
                e.originOrder = t, f && (t.type = 4), e.viewData = d(t), e.viewData.displayTemplate = s()
            }
            var p = e.ngDialogData.fid,
                u = (e.ngDialogData.uniq_id, e.ngDialogData.tb_id),
                h = e.ngDialogData.ct_id,
                f = e.ngDialogData.isCustomOrder,
                g = e.ngDialogData.fieldIndex || 0,
                m = e.ngDialogData.source,
                _ = e.ngDialogData.orderModule,
                v = e.ngDialogData.drillLevel,
                b = e.ngDialogData.meta,
                y = b.chart_type,
                w = g;
            "C200" === y && "compare_axis" === m && b.compare_axis.forEach(function (e, t) {
                "virtual" === e.data_type && t < g && w--
            });
            var C = {
                template: null,
                filter_template: null
            };
            e.alpha_order_types = i, e.sortEnumField = {
                start: function () {},
                stop: function () {
                    var t = e.viewData,
                        a = n(m);
                    C[a] = t.displayTemplate.range
                }
            }, e.incOnePos = function (t) {
                var a = e.viewData.template;
                if (t > 0) {
                    var i = a[t];
                    a[t] = a[t - 1], a[t - 1] = i
                }
            }, e.descOnePos = function (t) {
                var a = e.viewData.template;
                if (t < a.length - 1) {
                    var i = a[t];
                    a[t] = a[t + 1], a[t + 1] = i
                }
            }, e.save = function (i, n) {
                var s = l(e.viewData);
                if ("source" !== m) {
                    if ("advanced_sort" === _) {
                        o().sort_items.filter_sort_list = s.displayTemplate.range, e.closeThisDialog()
                    } else b[m][g].filter_sort_list = s.displayTemplate.range, r(n, b, i);
                    return !1
                }
                var d = {
                        config_list: []
                    },
                    c = {
                        tb_id: u,
                        fid: i,
                        type: s.type,
                        template: s.displayTemplate.range
                    };
                4 != s.type && delete c.template, d.config_list.push(c), d.config_list = angular.toJson(d.config_list), t.enumField.updateOrder(d).then(function (t) {
                    var o = t;
                    0 == o.status ? (r(n, b, i), e.closeThisDialog()) : a(o.errstr, {
                        dialog: !0
                    })
                })
            },
                function (a, i, n, r, s) {
                    if ("source" !== m && "advanced_sort" === _) {
                        var l = o();
                        if (l.sort_items.filter_sort_list && l.sort_items.filter_sort_list.length > 0) {
                            var d = angular.copy(l.sort_items.filter_sort_list);
                            return c({
                                filter_template: {
                                    range: d,
                                    total: d.length
                                }
                            }), void(e.loading = !1)
                        }
                    }
                    e.loading = !0;
                    var p = "source" === m ? "getOrderInfo" : "getFilteredOrderInfo",
                        u = {
                            tb_id: a,
                            fid: i,
                            ct_id: "source" !== m ? h : ""
                        };
                    "source" !== m && (u.index = w || 0, u.drill_level = s || 0, u.axis = m), t.enumField[p](u).then(function (t) {
                        e.loading = !1, t && c(t)
                    }, function () {
                        e.loading = !1
                    })
                }(u, p, 0, 0, v)
        }])
    }(),
    function () {
        angular.module("BC.controllers.authorManageCtrl", [])
        .controller("authorManageCtrl", ["$scope", "ngDialog", "commonService", "errHint", "$jsTipTranslate", function (e, t, a, i, n) {
            e.isInt = function (e) {
                return e % 1 == 0
            }, e.getInfo = function () {
                a.authority.info().then(function (t) {
                    var a = t.result;
                    e.manager = a.manager, e.authorizing = a.authorizing, e.authorized = a.authorized
                })
            }, e.getInfo(), e.checkValue = function (t) {
                if (0 == t.time_type) {
                    if (0 == t.timeLength) {
                        if ("" === t.customizeTimeLength) return i(e.tips["author.err.setHour"]), !1;
                        if (t.customizeTimeLength > 1e4 || t.customizeTimeLength < 0) return i(e.tips["author.err.setHourLimit"]), !1;
                        if (!e.isInt(t.customizeTimeLength)) return i(e.tips["author.err.setHourInt"]), !1
                    }
                } else {
                    new Date;
                    if (!t.byDate) return i(e.tips["author.err.setDate"]), !1;
                    if (t.byHour > 23 || t.byHour < 0) return i(e.tips["author.err.setHourRange"]), !1;
                    if (t.byMinute > 59 || t.byMinute < 0) return i(e.tips["author.err.setMinuteRange"]), !1;
                    if (t.bySecond > 59 || t.bySecond < 0) return i(e.tips["author.err.setSecondRange"]), !1
                }
                return !0
            }, e.addAuthorization = function (a) {
                var i = {
                    name: a.name,
                    time_type: 0,
                    end: 1,
                    timeLength: 1,
                    customizeTimeLength: 0,
                    byHour: 0,
                    byMinute: 0,
                    bySecond: 0,
                    type: "create"
                };
                t.open({
                    template: "/static/partials/dialogTemplates/author-manage-add.html",
                    className: "ngdialog-theme-default ngdialog-width-344 ngdialog-add-authorization",
                    data: i,
                    scope: e,
                    controller: "addAuthorCtrl"
                })
            }, e.changeAuthorizationTime = function (a) {
                var i = {
                    auth_id: a.auth_id,
                    auth_user: a.auth_user,
                    end: a.time_setting.end,
                    time_type: a.time_setting.time_type,
                    byHour: 0,
                    byMinute: 0,
                    bySecond: 0,
                    type: "modify"
                };
                if (0 == i.time_type) switch (i.end) {
                    case 1:
                        i.timeLength = 1;
                        break;
                    case 2:
                        i.timeLength = 2;
                        break;
                    case 3:
                        i.timeLength = 3;
                        break;
                    case 5:
                        i.timeLength = 5;
                        break;
                    default:
                        i.timeLength = 0, i.customizeLength = !0, i.customizeTimeLength = i.end
                } else {
                    var n = new Date(Number(i.end));
                    i.byDate = n.getFullYear() + "-" + (n.getMonth() + 1) + "-" + n.getDate(), i.byHour = n.getHours(), i.byMinute = n.getMinutes(), i.bySecond = n.getSeconds()
                }
                t.open({
                    template: "/static/partials/dialogTemplates/author-manage-add.html",
                    className: "ngdialog-theme-default ngdialog-width-344 ngdialog-add-authorization",
                    data: i,
                    scope: e,
                    controller: "addAuthorCtrl"
                })
            }, e.stopAuthorization = function (a) {
                t.open({
                    template: "/static/partials/dialogTemplates/author-manage-stop.html",
                    className: "ngdialog-theme-default ngdialog-width-344 ngdialog-stop-authorization",
                    data: {
                        auth_id: a.auth_id
                    },
                    scope: e,
                    controller: "stopAuthorCtrl"
                })
            }, e.operationHistory = function (i) {
                a.authority.oplog({
                    auth_id: i.auth_id
                }).then(function (a) {
                    e.operHistory = a.result, t.open({
                        template: "/static/partials/dialogTemplates/author-manage-history.html",
                        className: "ngdialog-theme-default ngDialog-width-520 auth-operation-history",
                        data: {
                            auth_data: i
                        },
                        scope: e,
                        controller: "operationHistoryCtrl"
                    })
                })
            }, n(["author.err.setHour", "author.err.setHourLimit", "author.err.setHourInt", "author.err.setDate", "author.err.setHourRange", "author.err.setMinuteRange", "author.err.setSecondRange", "author.err.setTimeBeforeNow", "custom", "author.fullHour"], e)
        }]).controller("addAuthorCtrl", ["$scope", "commonService", "errHint", function (e, t, a) {
            function i(t) {
                e.addAuthorData.selectedName = t ? t + e.tips["author.fullHour"] : e.tips.custom
            }
            e.needConfirm = !0, e.picker_date = null, e.customizeLength = !1, e.showPicker = !1, e.showTimeLength = !0, e.addAuthorData = {
                showDropdown: !1,
                selectedName: ""
            }, e.setSelectedName = i, i(e.ngDialogData.timeLength), e.toggleTimeLength = function (t) {
                e.showTimeLength = "show" == t
            }, e.switchDate = function (t, a) {
                t.stopPropagation(), a || (e.showPicker = !e.showPicker)
            }, e.showDropdownFunc = function () {
                e.addAuthorData.showDropdown = !e.addAuthorData.showDropdown
            }, e.toggleCustomize = function (t) {
                e.ngDialogData.customizeLength = 0 == t, e.ngDialogData.timeLength = t, i(t)
            }, e.$watch("picker_date", function (t) {
                t && (e.ngDialogData.byDate = Highcharts.dateFormat("%Y-%m-%d", t))
            }), e.addAuthority = function (i) {
                if (1 == e.needConfirm) {
                    if (!e.checkValue(i)) return !1;
                    if (0 == i.time_type) {
                        var n = new Date;
                        i.auth_start_time = Math.floor(n.valueOf() / 1e3), 0 == i.timeLength ? i.end = i.customizeTimeLength : i.end = i.timeLength
                    } else if (1 == i.time_type) {
                        var r = i.byDate.split("-");
                        r[3] = i.byHour, r[4] = i.byMinute, r[5] = i.bySecond;
                        var o = new Date(r[0], r[1] - 1, r[2], r[3], r[4], r[5]),
                            n = new Date;
                        i.endDate = o.valueOf(), i.auth_start_time = Math.floor(n.valueOf() / 1e3), i.end = Math.floor(o.valueOf() / 1e3) - Math.floor(n.valueOf() / 1e3)
                    }
                    if (i.end < 0) return a(e.tips["author.err.setTimeBeforeNow"]), !1;
                    e.needConfirm = !1
                } else {
                    var s = {
                        time_type: i.time_type,
                        end: i.end
                    };
                    "modify" === i.type && (s.auth_id = i.auth_id), t.authority[i.type](s).then(function () {
                        e.getInfo(), e.closeThisDialog()
                    })
                }
            }, e.closeAddAuthority = function () {
                1 == e.needConfirm ? e.closeThisDialog() : e.needConfirm = !0
            }
        }]).controller("stopAuthorCtrl", ["$scope", "commonService", function (e, t) {
            e.stopAuthority = function (a) {
                t.authority.stop({
                    auth_id: a.auth_id
                }).then(function () {
                    e.getInfo(), e.closeThisDialog()
                })
            }
        }]).controller("operationHistoryCtrl", ["$scope", "commonService", function (e, t) {
            e.getList = function (a) {
                var i = e.ngDialogData.auth_data.auth_id;
                t.authority.oplog({
                    auth_id: i,
                    page: a
                }).then(function (t) {
                    e.operHistory = t.result
                })
            }
        }])
    }(),
    function () {
        function e(e, t, a, i, n, r) {
            e.page = {
                dataList: [],
                curpage: 1,
                lastpage: !1
            }, e.warnListLoading = !1, a.show_bdp_header = !1, e.warnOperatorMap = r;
            var o = function (i) {
                e.warnListLoading = !0, t.get("/api/warn/history", {
                    page: i || 1
                }).then(function (t) {
                    e.warnListLoading = !1, a.unread = 0, a.view = "warning";
                    var i = "en" == $.cookie("locale") ? "Untitled Chart" : "未命名图表";
                    if (0 == t.status) {
                        t.result.cur_page == t.result.page_count && (e.page.lastpage = !0), e.page.curpage = t.result.cur_page;
                        var n = t.result.warn_his,
                            r = e.page.dataList;
                        angular.forEach(n, function (e) {
                            e.ct_name || (e.ct_name = i);
                            var t = "";
                            e.parents && angular.forEach(e.parents, function (e, a) {
                                t += e.name + " / "
                            }), e.warnProjPath = t + e.proj_name, 0 == r.length ? r.push({
                                time: bdpChart.helper.checkGranularity("day", new Date(e.ctime)),
                                list: [e]
                            }) : bdpChart.helper.checkGranularity("day", new Date(e.ctime)) == r[r.length - 1].time ? r[r.length - 1].list.push(e) : r.push({
                                time: bdpChart.helper.checkGranularity("day", new Date(e.ctime)),
                                list: [e]
                            })
                        })
                    }
                })
            };
            o(), e.goDash = function (e, t, n, r, o) {
                a.dashSelected = t, a.activeProjId = e, a.warnListSelectedItem = {
                    ct_id: r
                };
                var s = "",
                    l = "",
                    d = "",
                    c = o.category;
                d = n ? "/" + n + "/" : "", n && (d = n), a.wsId ? s = "/dash_edit_ws/" + a.wsId + "/" : 2 == c ? (s = "/dash_edit/", l = "/mode/adv") : s = "/dash_edit/", i.path(s + e + "/" + t + d + l)
            }, e.showMore = function () {
                var t = e.page.curpage + 1;
                o(t)
            }, e.back = function () {
                var t = localStorage.getItem("mc_location_path");
                a.global && a.global.url_before_warn && (t = a.global.url_before_warn, a.global.url_before_warn = null), i.path(t || "/dash_edit"), e.back_guide = !1
            }
        }
        angular.module("BC.controllers.warn", [])
        .controller("WarnController", e), e.$inject = ["$scope", "commonHttp", "$rootScope", "$location", "$timeout", "warnOperatorMap"]
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s, l, d, c) {
            function p(t, i) {
                var n = {
                    purpose: t.typeId,
                    page: i
                };
                e.noticeListModel = void 0, a.pageLoading = !0, o.notice.getListByType(n).then(function (i) {
                    if (0 == i.status) {
                        var n = i.result.new_data;
                        e.noticeListModel = [];
                        for (var r = 0, o = n.length; r < o; r++) e.noticeListModel.push({
                            id: n[r].log_id,
                            type: t.typeId,
                            link: angular.fromJson(n[r].link),
                            content: n[r].htmlStr,
                            releaseTime: n[r].ctime,
                            picList: n[r].img_list,
                            isRead: n[r].is_read
                        });
                        e.initConfig.page.total = i.result.page_count
                    } else s(i.errstr);
                    a.pageLoading = !1
                })
            }

            function u(t) {
                var a = {
                        notice_id_list: []
                    },
                    i = (e.noticeListModel, t.unReadNewsLen);
                a.notice_id_list.push(t.id);
                for (var n = e.tabs.length - 1; n >= 0; n--) e.tabs[n].typeId == t.type && (e.tabs[n].unReadNewsLen -= 1);
                t.isRead = !0, a.notice_id_list.length > 0 && (a.notice_id_list = angular.toJson(a.notice_id_list), o.notice.setNoticeReaded(a).then(function (e) {
                    0 == e.status ? t.is_read = 1 : (t.unReadNewsLen = i, s(e.errstr))
                }))
            }
            a.show_bdp_header = !1, e.noticeListModel = void 0, e.tabs = [], e.initConfig = {
                currentTab: {
                    typeId: c.noticeTpye
                },
                page: {
                    current: 1,
                    total: 1
                }
            }, e.showBigImg = function (e, t) {
                d.open({
                    template: '<div><div class="notice-img-wrap J-close-by-bg" ng-click="closeByBg($event)"><img class="notice-img" ng-src="{{playFlag.currentImgSrc}}"></div>                           <div class="close-btn" ng-click="closeThisDialog()"><i class="bdp-icon ico-cancel-white"></i></div>                           <div class="play-control clearfix">                                <div class="fl play-left" ng-click="changePaly(playFlag.current - 1)"><i class="bdp-icon ico-prev"></i></div>                                <div class="fl play-number">{{playFlag.current + 1}}/{{playFlag.total}}</div>                                <div class="fl play-right" ng-click="changePaly(playFlag.current + 1)"><i class="bdp-icon ico-next"></i></div>                           </div></div>',
                    plain: !0,
                    showClose: !1,
                    closeByDocument: !0,
                    className: "ngdialog-theme-default notice-img-dialog",
                    closeByEscape: !0,
                    data: {
                        imgList: e.picList,
                        currentIndex: t
                    },
                    preCloseCallback: function () {
                        $("body").off("keyup.showBigImg"), $("#MEIQIA-BTN-HOLDER").show()
                    },
                    controller: ["$scope", function (e) {
                        e.init = function () {
                            var t = e.ngDialogData.currentIndex || 0;
                            e.playFlag = {
                                total: e.ngDialogData.imgList.length,
                                current: t,
                                currentImgSrc: e.ngDialogData.imgList[t]
                            }, $("#MEIQIA-BTN-HOLDER").hide()
                        }, e.init(), $("body").on("keyup.showBigImg", function (t) {
                            37 == t.keyCode ? e.changePaly(e.playFlag.current - 1) : 39 == t.keyCode && e.changePaly(e.playFlag.current + 1)
                        }), e.changePaly = function (t) {
                            t < 0 && (t = e.ngDialogData.imgList.length - 1), t > e.ngDialogData.imgList.length - 1 && (t = 0), e.playFlag.current = t, e.playFlag.currentImgSrc = e.ngDialogData.imgList[t], e.$$phase || e.$digest()
                        }, e.closeByBg = function (t) {
                            $(t.target).hasClass("J-close-by-bg") && e.closeThisDialog()
                        }
                    }]
                })
            }, e.changeNoticeType = function (t) {
                for (var a = e.tabs.length - 1; a >= 0; a--) e.tabs[a].active = !1;
                e.initConfig.currentTab = t, t.active = !0;
                var i = localStorage.getItem("noticTipsMol") ? angular.fromJson(localStorage.getItem("noticTipsMol")) : {};
                i[t.typeId].show = !1, localStorage.setItem("noticTipsMol", angular.toJson(i)), e.initConfig.page.current = 1, o.notice.getNoticeType().then(function (t) {
                    if (0 == t.status) {
                        for (var a = t.result, i = 0, n = a.length; i < n; i++)
                            for (var r = e.tabs.length - 1; r >= 0; r--) e.tabs[i].typeId == a[i].purpose && (e.tabs[i].unReadNewsLen = a[i].unread_num);
                        p(e.initConfig.currentTab, 1)
                    }
                })
            }, e.changeNoticePage = function () {
                n(function () {
                    p(e.initConfig.currentTab, e.initConfig.page.current)
                }, 0, !1)
            }, e.back = function () {
                e.$emit("noticeListClose"), a.back()
            }, e.openMessagePage = function (e, t) {
                if ("A" == t.target.tagName) return !1;
                e.isRead || u(e), e.link.href && window.open(e.link.href)
            }, e.init = function () {
                o.notice.getNoticeType().then(function (t) {
                    if (0 == t.status) {
                        for (var a = t.result, i = 0, n = a.length; i < n; i++) e.tabs.push({
                            title: l("noticeTypeMap")(a[i].purpose),
                            active: !1,
                            unReadNewsLen: a[i].unread_num,
                            typeId: a[i].purpose
                        }), c.noticeTpye && c.noticeTpye == a[i].purpose && (e.initConfig.currentTab = e.tabs[e.tabs.length - 1], e.tabs[e.tabs.length - 1].active = !0);
                        c.noticeTpye || (e.initConfig.currentTab = e.tabs[0]), p(e.initConfig.currentTab, e.initConfig.page.current)
                    } else s(t.errstr)
                })
            }, e.init()
        }
        angular.module("BC.controllers.notice", [])
        .controller("noticeCtrl", e)
        .filter("noticeTypeMap", [function () {
            return function (e) {
                switch (e) {
                    case 1:
                        return "产品更新";
                    case 2:
                        return "干货分享";
                    case 3:
                        return "系统消息";
                    case 4:
                        return "预警消息";
                    case "产品更新日志":
                        return 1;
                    case "干货分享":
                        return 2;
                    case "系统消息":
                        return 3;
                    case "预警消息":
                        return 4;
                    default:
                        return "请选择消息类型"
                }
            }
        }]), 
        e.$inject = ["$scope", "commonHttp", "$rootScope", "$location", "$timeout", "warnOperatorMap", "commonService", "errHint", "$filter", "ngDialog", "$stateParams"]
    }(), 
    angular
    .module("BC.directives", ["ngDialog"])
    .directive("bdpLocalQuery", function () {
    function e(e, t) {
        if (t.indexOf(".") < 0) return e[t];
        for (var a = t.split("."), i = e; a.length;) i = i[a.shift()];
        return i
    }

    function t(e, a, i, n, r) {
        n(e);
        var o = [];
        a[0].forEach(function (s, l) {
            var d = e,
                c = e[s.key];
            "" === s.key ? (d = {}, c = e) : c = c || [], "$" === s.flag ? c.forEach(function (e, s) {
                t(e, a, i, n, r), i(e, d), o.push(e)
            }) : "=" === s.flag ? c.forEach(function (e, t) {
                i(e, d, "isLeaf"), o.push(e)
            }) : s.flag || c.forEach(function (e, o) {
                t(e, a.slice(1), i, n, r)
            })
        }), r(e, o)
    }

    function a(e) {
        return e.split(",").map(function (e, t) {
            var a = e.match(/\[([\$=])?\]$/);
            if (!a) throw new Error("struct parse error: [] not found! ");
            return {
                key: e.replace(a[0], ""),
                flag: a[1]
            }
        })
    }
    return {
        restrict: "A",
        scope: {
            tree: "=bdpLocalQuery",
            query: "=?ngModel",
            struct: "=?queryStruct",
            key: "=?queryKey"
        },
        link: function (i, n, r) {
            function o() {
                i.query && "" != i.query ? n.addClass("has-text") : n.removeClass("has-text")
            }
            i.struct = i.struct || ["[]"];
            var s = i.struct.map(a),
                l = s[s.length - 1];
            l[0].flag || (l[0].flag = "=");
            var d = function () {
                function a(t) {
                    var a = e(t, r);
                    return "number" == typeof a && (a = a.toString()), "fuzzy" == o && a.toLowerCase().indexOf(n.toLowerCase()) > -1 || "exactly" == o && a.toLowerCase() == n.toLowerCase()
                }
                var n = void 0 == i.query ? "" : String(i.query),
                    r = i.key || "name",
                    o = "fuzzy";
                "" === n && (a = function () {
                    return !0
                }), t(i.tree, s, function (e, t, i) {
                    i && (e.hide_by_query = !a(e)), t.hide_by_query &= e.hide_by_query
                }, function (e) {
                    e.hide_by_query = !0
                }, function (e, t) {
                    "" === n && 0 === t.length && (e.hide_by_query = !1)
                })
            };
            i.$watch("query", function (e, t) {
                (e || t) && e != t && d()
            }), i.$watch("tree", function (e, t) {
                e && (i.query = "", setTimeout(function () {
                    n.blur()
                }, 10), o(), d())
            }), n.on("keyup.localQuery", function (e) {
                27 == e.which && (i.$apply('query=""'), n.blur()), o()
            }), o()
        }
    }
}).directive("bdpNgRepeatComplete", function () {
    return function (e, t, a) {
        if (e.$first) {
            var i = e.$eval(a.start);
            "[object Function]" === Object.prototype.toString.call(i) && i()
        }
        if (e.$last) {
            var n = e.$eval(a.end);
            "[object Function]" === Object.prototype.toString.call(n) && n()
        }
    }
}).directive("focusMe", ["$timeout", function (e) {
    return {
        link: function (t, a, i) {
            t.$watch(i.focusMe, function (t) {
                t === !0 && e(function () {
                    a[0].focus()
                })
            })
        }
    }
}]).directive("fixMore", [function () {
    return {
        restrict: "A",
        scope: !0,
        link: function (e, t, a) {
            $(t).on("mouseover", function (e) {
                var t = $(this),
                    a = t.next("ul.more-list");
                if (a.length) {
                    var i = e.pageY,
                        n = a.height(),
                        r = $(".chart-right");
                    if (r[0]) {
                        var o = a && a.css("width") ? a.css("width").substr(0, a.css("width").indexOf("px")) : null,
                            s = o || t.outerWidth();
                        r[0].getBoundingClientRect().left - t[0].getBoundingClientRect().right < s - 6 ? a.css("left", "-" + s + "px") : t.parent().parent().hasClass("more-list") ? "-" == t.parent().parent().css("left").substr(0, 1) ? a.css("left", "-" + s + "px") : r[0].getBoundingClientRect().left - t.parent()[0].getBoundingClientRect().right < s ? a.css("left", "-" + s + "px") : a.css("left", "100%") : a.css("left", "100%")
                    }
                    i + n > document.body.clientHeight ? a.css({
                        top: 24 - n
                    }) : a.css({
                        top: 0
                    })
                }
            })
        }
    }
}]).directive("topChart", ["errHint", "$jsTipTranslate", function (e, t) {
    return {
        restrict: "A",
        templateUrl: "/static/js/chart-config/tpl/chart-top-chart.html",
        scope: !0,
        link: function (a, i) {
            function n(e) {
                document.getElementById(e).focus()
            }
            var r;
            a.onToggleTop = function () {
                var e = 0;
                a.global.chartData && (e = a.global.chartData.x[0].data.length);
                var t = a.chart_ops.meta.level[a.drill_level].top;
                t.value || (t.value = e), t && t.value ? a.saveTop() : t.enabled = !0
            }, a.saveTop = function () {
                a.saveChartImmediate()
            }, a.onTopChange = function () {
                var e = a.chart_ops.meta.level[a.drill_level].top;
                void 0 !== e.value && "" !== e.value && a.saveTop()
            }, a.onTopValueKeyup = function (e) {
                13 == e.keyCode && a.onTopValueChange()
            }, a.onTopValueChange = function () {
                var t = a.chart_ops.meta.level[a.drill_level].top;
                if ("" !== t.value) {
                    var i = Number(t.value);
                    if ("percent" == t.type) {
                        if (!(i <= 100 && i >= 0)) return e("请输入0 ~ 100之间的数"), n("topC"), !1
                    } else if (isNaN(i) || i <= 0 || i > 1500) return e(a.tips["chart.topChartRange"]), n("topD"), !1
                }
                a.saveTopCompare()
            }, a.onToggleTopCompare = function () {
                var e = 0;
                if (a.global.chartData) {
                    e = a.global.chartData.y.concat(a.global.chartData.y_optional).length
                }
                var t = a.chart_ops.meta.level[a.drill_level].top_compare;
                t.value || (t.value = e), t && t.value && a.saveTopCompare()
            }, a.saveTopCompare = function () {
                var e = a.chart_ops.meta.level[a.drill_level],
                    t = e.top_compare,
                    i = !1;
                for (var n in t)
                    if (t.hasOwnProperty(n) && r[n] != t[n]) {
                        i = !0;
                        break
                    }
                i && e.sort && e.sort.col_index && delete e.sort.col_index, r = angular.copy(t), a.saveChartImmediate()
            }, a.onTopCompareChange = function () {
                var e = a.chart_ops.meta.level[a.drill_level].top_compare;
                void 0 !== e.value && "" !== e.value && a.saveTopCompare()
            }, a.onTopCompareValueKeyup = function (e) {
                13 == e.keyCode && a.onTopCompareValueChange()
            }, a.onTopCompareValueChange = function () {
                var t = a.chart_ops.meta.level[a.drill_level].top_compare;
                if ("" !== t.value) {
                    var i = Number(t.value);
                    if ("percent" == t.type) {
                        if (!(i <= 100 && i > 0)) return e("请输入0 ~ 100之间的数"), !1
                    } else if (isNaN(i) || i <= 0 || i > 150) return e(a.tips["chart.topChartCompareRange"]), !1
                }
                a.saveTopCompare()
            }, a.$watch("chart_ops.meta.level[drill_level]", function (e) {
                e && ("object" != typeof e.top_compare && (e.top_compare = {
                    enabled: !1,
                    reversed: 0,
                    type: "items"
                }), "object" != typeof e.top && (e.top = {
                    enabled: !1,
                    reversed: 0,
                    value: e.top || "",
                    type: "items"
                }), r = angular.copy(e.top_compare))
            }), bdp.utils.fixedBlur(i.find("input")), t(["chart.topChartRange", "chart.topChartCompareRange", "all"], a)
        }
    }
}]).directive("exportImg", ["$http", "$rootScope", "ngDialog", "errHint", "$jsTipTranslate", function (e, t, a, i, n) {
    return {
        restrict: "A",
        scope: !0,
        link: function (e, r, o) {
            function s(e, t, a) {
                var i = Number(a.type),
                    n = 1;
                return [1, 2, 3, 4].indexOf(i) > -1 ? n = i : 5 === i ? n = a.width_value.div(e) : 6 === i && (n = a.height_value.div(t)), n
            }

            function l(e, t) {
                if (e.find(".chart-canvas").length > 0) {
                    var a = function (e) {
                            for (var t = e.find(".chart-canvas").length, a = [], i = window.devicePixelRatio || 1, n = e.find(".chart-canvas"), r = 0; r < t; r++) {
                                var o = n[r],
                                    s = Canvas2Image.convertToPNG(o, o.width, o.height).src,
                                    l = '<img src="' + s + '" width="' + o.width / i + '" height="' + o.height / i + '" />';
                                a.push(l)
                            }
                            return a
                        }(e),
                        i = new RegExp("<canvas.*chart-canvas.*></canvas>", "gi"),
                        n = 0;
                    t = t.replace(i, function () {
                        return a[n++]
                    })
                }
                return t
            }

            function d(e) {
                var t = "light";
                return 1 == e && (t = "dark"), t
            }
            var c, p = (bdpChart.ChartType, bdpChart.language),
                u = null;
            r.on("click", function () {
                e.mode = o.mode, e.setting = angular.fromJson(o.setting), "dashboard" === e.mode ? c = r.parents(".chart-box").find(".chart").data("chart-data") : "fullscreen" === e.mode && (c = r.parents(".control-pane").siblings(".fs-chart-main").find(".fullscreen-chart.active").data("chart-data")), e.chartType = c.info.chart_type, e.theme = c.theme, e.disableScale = "C340" === e.chartType || "C400" === e.chartType, e.disableCustom = "C400" === e.chartType, e.disableLabel = !0, u = a.open({
                    template: "/static/partials/chart-export-img.html",
                    className: "ngdialog-theme-default export-img-modal",
                    scope: e,
                    data: {
                        type: "fullscreen" === e.mode ? 1 : 2,
                        width_value: 1024,
                        height_value: 1024,
                        show_label: !0
                    }
                })
            }), e.exportImg = function (a) {
                function n() {
                    var a = "";
                    t.global.dshWatermarkImg && (a = "dashboard" == e.mode && 2 == t.usedThemeId || "fullscreen" == e.mode && 2 == e.fullDisplayTheme ? " url(" + t.global.dshWatermarkImg + ")" : " url(" + t.global.fullscreenWatermarkImg + ")", f += "<style>.water-mark-dark, .water-mark-white {background:" + a + ';"}</style>');
                    var i = {
                        type: "item",
                        chartItem: f,
                        scale: v,
                        theme: d(b),
                        filename: o.filename || "chart"
                    };
                    Highcharts.post("/api/chart/export_png_new", i), u.close()
                }
                var h, f, g, m, _, v, b = window.usedThemeId;
                if ("dashboard" === e.mode) g = $(r).parents(".chart-box").find(".J-export-img-elem-chart"), h = $(r.parents(".J-export-img-elem-item")), m = h.width(), _ = h.height(), f = '<ul class="gridster J-export-img-elem-wrap">' + $(h[0]).prop("outerHTML") + "</ul>", f = f.replace(/J-item-chart-title-bd/, "J-item-chart-title-bd text-center"), f = f.replace(/J-export-img-elem-item/, "J-export-img-elem-item J-export-elem-back");
                else if ("fullscreen" === e.mode) {
                    b = e.fullDisplayTheme, g = $(r).parents(".fullscreen-modal").find(".J-export-img-elem-chart"), h = g, f = $($(r.parents(".J-fullscreen-export-wrap").find(".J-export-img-elem-chart"))[0]).prop("outerHTML");
                    m = g.width() + 80, _ = g.height() + 64 + 60, f = '<div class="J-chart-fullscreen-wrap J-export-elem-back ' + $(".J-chart-fullscreen-wrap-export").attr("class") + '" style="width: ' + m + "px;height:" + _ + 'px;padding: 32px 40px;">                                    <div class="J-fullscreen-export-title" style="height: 60px; line-height: 60px;">' + o.filename + '</div>                                    <div style="position: relative;overflow: hidden;width: ' + g.width() + "px;height:" + g.height() + 'px;">' + f + '</div>                                    <div class="water-mark chart-water-mark water-mark-dark"></div>                                </div>'
                }
                if ((v = s(m, _, a)) * m > 16e3 || v * _ > 16e3) return void i(e.tips["chart.chartExportImgMax"]);
                if ("C200 C310".indexOf(e.chartType) > -1) return void alert("zh" == p ? "当前图表不支持导出图片" : "The current chart couldn't export as images");
                if (["C340", "C500"].indexOf(e.chartType) > -1) c.info && c.info.display_in_3d && "C340" == e.chartType || (f = l(h, f));
                else {
                    if ("C400" === e.chartType) {
                        return c.gisMap.exportImage(1).then(function (e) {
                            e[0].style.zIndex = 0, svg = e[0].outerHTML;
                            var t = $(f);
                            t.find(".J-export-img-elem-chart").append(svg), f = t.prop("outerHTML"), n()
                        }), !1
                    }
                    if ("fullscreen" === e.mode && !e.show_data_label) {
                        f = f.replace(/show-datalabels/g, "");
                        f += "<style>.J-chart-fullscreen-wrap .chart .highcharts-data-labels > g, .J-chart-fullscreen-wrap .chart-pie .highcharts-data-label-connector ,.J-chart-fullscreen-wrap .funnel-datalabels, .J-chart-fullscreen-wrap .sunburst-labels {display:none}.J-chart-fullscreen-wrap .bdp-datalabels {opacity:0; visibility:hidden;}</style>"
                    }
                }
                n()
            }, n(["chart.chartExportImgMax"], e)
        }
    }
}]).directive("exportExcel", ["$rootScope", "commonService", "ngDialog", function (e, t, a) {
    return {
        restrict: "A",
        scope: !0,
        link: function (i, n, r) {
            i.openOfflineList = function () {
                e.fireOfflineTaskList = !e.fireOfflineTaskList
            }, n.on("click", function (n) {
                var o, s = r.mode,
                    l = r.charttype,
                    d = $(n.currentTarget).parents(".gridster-item"),
                    c = d.data("custom-chart-data");
                c = c && c.enableExportExcel ? JSON.stringify(c) : {}, "dashboard" === s ? o = i.chartUrl : "fullscreen" === s && (o = i.fullscreen.info);
                var p = bdpChart.helper.params(o.options.optional),
                    u = {
                        ct_id: o.options.ct_id,
                        dsh_id: o.options.dsh_id,
                        access_token: $.cookie("token"),
                        rule_id: o.options.rule_id || ""
                    };
                e.wsId && (u.ws_id = e.wsId), t.chart.exportExcelType(angular.extend(u, p)).then(function (n) {
                    0 == n.status && (1 == n.result || "C300" == l || "C400" == l ? Highcharts.post("/api/chart/export_excel", angular.extend(u, p, {
                        custom_chart_data: c
                    })) : 2 == n.result && t.chart.exportLargeExcel(angular.extend(u, p)).then(function () {
                        var t = e.language,
                            n = "en" == t ? "ngDialog-width-400" : "ngDialog-width-330";
                        a.open({
                            template: "/static/partials/dialogTemplates/export-large-tip.html",
                            className: "ngdialog-theme-default " + n,
                            scope: i
                        })
                    }))
                })
            })
        }
    }
}]).directive("exportWorksheet", ["$http", "$rootScope", "commonService", "ngDialog", "errHint", "$translate", function (e, t, a, i, n, r) {
    return {
        restrict: "A",
        scope: !0,
        link: function (e, o, s) {
            function l(a) {
                var n = a.export_max_num || 0,
                    r = e.previewData.field_data_total;
                t.language;
                e.exportData = r, r > n ? (e.exportData = n, i.open({
                    template: "/static/partials/dialogTemplates/export_worksheet_large_limit_tip.html",
                    className: "ngdialog-theme-default ngDialog-width-400",
                    scope: e
                })) : d()
            }

            function d() {
                var r = e.selected.tb_id,
                    o = e.filterCondition;
                a.tb.exportTbFile({
                    tb_id: r,
                    row_filter: angular.toJson(o)
                }).then(function (a) {
                    t.language;
                    0 == a.status ? i.open({
                        template: "/static/partials/dialogTemplates/export_worksheet_large_tip.html",
                        className: "ngdialog-theme-default ngDialog-width-400",
                        scope: e
                    }) : 27009 == a.status && n(a.errstr)
                })
            }

            function c() {
                var a = "";
                a = 3 == t.enterprise_type ? '<p>该功能只对付费会员开放，<a class="link" href="#/member_upgrade/2" target="_blank">立即升级</a>，即可使用</p>' : "<p>" + r.instant("wb.exportWorksheet.noPermission0"), i.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e,
                    data: {
                        title: "downloadTitleTip",
                        cancelValue: "iKnow",
                        hideConfirm: !0,
                        trustHtmlStr: !0,
                        message: a
                    }
                })
            }
            e.openOfflineList = function () {
                t.fireOfflineTaskList = !t.fireOfflineTaskList
            }, o.on("click", function () {
                var e = t.global.tbExportDataSetting;
                if (!e.is_export) return void c();
                l(e)
            }), e.goOnExport = function () {
                d()
            }
        }
    }
}]).directive("operateMore", ["$rootScope", "$window", "$timeout", "$http", "commonService", "ngDialog", "$stateParams", "commonHttp", "errHint", "$jsTipTranslate", "projectTreeCache", "multipleProService", function (e, t, a, i, n, r, o, s, l, d, c, p) {
    return {
        restrict: "A",
        templateUrl: "/static/js/dashboard/tpl/chart-operate-more.html",
        replace: !0,
        scope: !0,
        link: function (t, i, u) {
            function h(e) {
                for (var a = 0, i = null, n = t.dashStandardItems.length - 1; n >= 0; n--) {
                    var r = t.dashStandardItems[n];
                    if (r.children[0].meta.ct_id === e) {
                        i = r.children[0].meta, a = n;
                        break
                    }
                }
                return {
                    meta: i,
                    index: a
                }
            }

            function f(e, t) {
                var a = angular.copy(e);
                return angular.forEach(a, function (e) {
                    e.children[0].meta = {
                        ct_id: e.children[0].meta.ct_id,
                        dash_setting: e.children[0].meta.dash_setting,
                        html: e.children[0].meta.html || ""
                    }, t || delete e.children[0].meta.dash_setting
                }), a
            }

            function g(e, t) {
                function a() {
                    i = void 0 != t ? bdp.bdpDash.filterProjByQuery(i, {
                        category: t,
                        type: 0
                    }) : bdp.bdpDash.filterProjByQuery(i, {
                        type: 0
                    })
                }
                var i = angular.copy(c.getTreeCache());
                if (i) a(), e(i);
                else {
                    var r = [];
                    bdp.bdpPageStatus.isUnderAdvDash() && (r = [0, 2]), bdp.bdpPageStatus.isUnderDataScreen() && (r = [1]);
                    var o = {
                        categories: angular.toJson(r)
                    };
                    n.project.getTree(o).then(function (t) {
                        if (t) {
                            var i = angular.copy(t.proj);
                            p.initDeep(i, 0), c.setTreeCache(i), a(), e(i)
                        }
                    })
                }
            }

            function m(e) {
                var a = [];
                t.project_list ? (a = bdp.bdpDash.filterProjByQuery(angular.copy(t.project_list), {
                    type: 0
                }), e(a)) : g(e)
            }

            function f(e, t) {
                var a = angular.copy(e);
                return angular.forEach(a, function (e) {
                    e.children[0].meta = {
                        ct_id: e.children[0].meta.ct_id,
                        dash_setting: e.children[0].meta.dash_setting,
                        html: e.children[0].meta.html || ""
                    }, t || delete e.children[0].meta.dash_setting
                }), a
            }

            function _() {
                var e = h(v);
                t.dashStandardItems.splice(e.index, 1), t.getDashboardInfo(t.dashSelected)
            }
            t.$on("fire-mouseleave-item-event", function () {
                t.more_show = !1, t.setOperatorIndex(!1, "all")
            });
            var v = u.ctId;
            t.chartOptMorePermission = {
                copyChart: !e.dashEditMode,
                moveChart: !e.dashEditMode,
                jumpChart: !e.dashEditMode,
                exportingChart: !e.dashEditMode,
                exportingExcel: !e.dashEditMode
            }, [1, 2].indexOf(e.dashCategory) >= 0 && e.dashEditMode && (t.chartOptMorePermission.copyChart = !0, t.chartOptMorePermission.moveChart = !0, t.chartOptMorePermission.jumpChart = !0, t.chartOptMorePermission.exportingChart = !0, t.chartOptMorePermission.exportingExcel = !0), u.origin && u.origin.indexOf("data_screen") > -1 && (t.permision.isDataScreen = !0), t.$watch(u.chartUrl, function (e, a) {
                e && (t.chartUrl = e)
            }), t.del = function () {
                function i() {
                    var i = angular.copy(t.dashStandardItems);
                    i.splice(s.index, 1), t.global.globalDashFilter.forEach(function (e) {
                        e.rela_ct_ids.indexOf(v) >= 0 && (o = !0)
                    });
                    var r = {
                        ct_id: v,
                        ws_id: e.wsId,
                        dsh_meta: {
                            charts: f(i, !0)
                        }
                    };
                    t.pageWrapStyles && (r.dsh_meta.styles = JSON.stringify(t.pageWrapStyles)), n.chart.del(r).success(function (e) {
                        "0" === e.status || "3211" === e.status ? (t.dashStandardItems.splice(s.index, 1), a(function () {
                            2 == s.meta.chart_link.linked_chart_type ? t.getDashboardInfo(t.dashSelected) : o && t.getGlobalFilterItem(t.dashSelected)
                        })) : errorHandle(e)
                    })
                }
                var o = !1,
                    s = h(v);
                2 == s.meta.chart_link.linked_chart_type ? r.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: t,
                    data: {
                        message: t.tips["chart.checkToContinueMove"]
                    }
                }).then(function () {
                    i()
                }) : r.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: t,
                    data: {
                        message: t.tips["chart.confirmDelChart"] + ": " + s.meta.name + "?"
                    }
                }).then(function () {
                    i()
                })
            };
            var b = function (e) {
                var a = h(v);
                r.open({
                    template: "/static/partials/chart-copy.html",
                    className: "ngdialog-theme-default ngDialog-width-360",
                    scope: t,
                    controller: ["$scope", "commonHttp", "errHint", "$location", function (t, i, n, s) {
                        function l() {
                            t.global.clickComplete = !1;
                            var e = t.copyChartData;
                            if (!e.dashId) return n(t.tips["dash.pleaseSelectDash"]), void(t.global.clickComplete = !0);
                            i.get("/api/chart/copy", {
                                ct_id: v,
                                from: angular.toJson({
                                    proj_id: e.curProId,
                                    dsh_id: e.curDshId
                                }),
                                to: angular.toJson({
                                    proj_id: e.projId,
                                    dsh_id: e.dashId
                                }),
                                nearby: e.nearby && e.curDshId == e.dashId
                            }).then(function (e) {
                                if (0 == e.status) {
                                    n(t.tips["chart.copyChartSuccess"]), r.closeAll();
                                    var i = t.copyChartData;
                                    if (i.curProId == i.projId && i.curDshId == i.dashId) {
                                        var o = bdp.utils.createNewGridItem(t.dashStandardItems),
                                            s = t.dashStandardItems[a.index],
                                            l = angular.copy(s);
                                        l.children[0].meta.ct_id = e.result, l.children[0].meta.chart_link = {
                                            link_info: [],
                                            linked_chart_type: 0
                                        }, l.children[0].meta.chart_jump = {};
                                        var d = "id" + o.domId;
                                        if (l.children[0].dom_id = d, i.nearby && i.curDshId === i.dashId)
                                            if (s.col - s.sizeX >= 0 || s.col + 2 * s.sizeX <= 12) {
                                                var u = !1,
                                                    h = !1;
                                                s.col - s.sizeX >= 0 && (u = bdp.utils.dropGrid(t.dashStandardItems, "left", angular.copy(l), s)), u || s.col + 2 * s.sizeX <= 12 && (h = bdp.utils.dropGrid(t.dashStandardItems, "right", angular.copy(l), s)), u ? (l.row = s.row, l.col = s.col - s.sizeX) : h ? (l.row = s.row, l.col = s.col + s.sizeX) : (l.row = s.row + s.sizeY, l.col = s.col)
                                            } else l.row = s.row + s.sizeY, l.col = s.col;
                                        else l.row = o.row, l.col = o.col;
                                        (c || p) && (l.left = 100, l.top = 100), t.dashStandardItems.push(l), t.draw_chart_url[d] = angular.copy(t.draw_chart_url[s.children[0].dom_id]), t.draw_chart_url[d].options.ct_id = e.result, t.draw_chart_url[d].options.optional = {}
                                    }
                                }
                                t.global.clickComplete = !0;
                                var f = document.getElementById("J-export-dashboard-height").offsetHeight,
                                    g = document.getElementById(v),
                                    m = g.offsetTop + g.offsetHeight;
                                BDPLogger.log("duplicate_chart", {
                                    category: "user_interact",
                                    action: "click",
                                    opt_label: JSON.stringify({
                                        db_id_original: i.curDshId,
                                        db_id_destination: i.dashId,
                                        duplicate_mode: i.nearby && i.curDshId == i.dashId,
                                        db_height: f,
                                        original_to_dbtop: m
                                    })
                                })
                            })
                        }
                        t.copyChartData = {
                            curProId: o.projId,
                            curDshId: o.dashId,
                            chartInfo: {
                                chart_id: v,
                                name: a.meta.name
                            },
                            projId: o.projId,
                            dashId: o.dashId,
                            project_list: e,
                            nearby: !1
                        };
                        var d = s.path(),
                            c = (d.indexOf("dash_edit"), d.indexOf("data_screen") > -1),
                            p = bdp.bdpPageStatus.isUnderAdvDash();
                        t.copyChartData.hideNearby = c || p, t.copyChartSave = l,
                            function () {
                                for (var e = t.copyChartData.project_list, a = 0, i = e.length; a < i; a++) e[a].proj_id == t.copyChartData.projId && (t.copyChartData.dash_list = e[a].dsh_list)
                            }()
                    }]
                })
            };
            t.copy_chart = function () {
                m(b)
            }, t.move_chart = function () {
                m(y)
            };
            var y = function (e) {
                t.global.clickComplete = !defined(t.global.clickComplete) || t.global.clickComplete;
                var a = h(v);
                t.moveChartData = {
                    curProId: o.projId,
                    curDshId: o.dashId,
                    chartInfo: {
                        chart_id: v,
                        name: a.meta.name
                    },
                    projId: o.projId,
                    dashId: o.dashId,
                    project_list: e
                }, r.open({
                    template: "/static/partials/chart-move.html",
                    className: "ngdialog-theme-default ngDialog-width-360",
                    scope: t
                });
                for (var i = t.moveChartData.project_list, n = 0, s = i.length; n < s; n++) i[n].proj_id == t.moveChartData.projId && (t.moveChartData.dash_list = i[n].dsh_list)
            };
            t.changeProjectForMove = function () {
                for (var e = t.moveChartData.project_list, a = 0, i = e.length; a < i; a++) e[a].proj_id == t.moveChartData.projId && (t.moveChartData.dash_list = e[a].dsh_list, e[a].dsh_list.length > 0 ? t.moveChartData.dashId = e[a].dsh_list[0].dsh_id : t.moveChartData.dashId = "")
            }, t.moveChartSave = function () {
                var e = t.moveChartData,
                    a = h(v);
                if (t.global.clickComplete = !1, !e.dashId) return l(t.tips["template.selectDash"]), void(t.global.clickComplete = !0);
                if (e.curProId == e.projId && e.curDshId == e.dashId) return l(t.tips["chart.selectOtherPlace"]), void(t.global.clickComplete = !0);
                var i = [].concat(t.dashStandardItems);
                i.splice(a.index, 1), s.post("/api/chart/move", {
                    ct_id: v,
                    from: angular.toJson({
                        proj_id: e.curProId,
                        dsh_id: e.curDshId
                    }),
                    to: angular.toJson({
                        proj_id: e.projId,
                        dsh_id: e.dashId
                    }),
                    check: "do",
                    dsh_meta: angular.toJson({
                        charts: f(i, !0)
                    })
                }).then(function (e) {
                    t.global.clickComplete = !0, e.result.ismoved ? (l(t.tips["chart.moveChartSuccess"]), _(), r.closeAll()) : r.openConfirm({
                        template: "/static/partials/dialogTemplates/confirm-dialog.html",
                        className: "ngdialog-theme-default ngdialog-width-340",
                        scope: t,
                        data: {
                            message: t.tips["chart.checkToContinueMove"]
                        }
                    }).then(function () {
                        var e = t.moveChartData;
                        s.post("/api/chart/move", {
                            ct_id: v,
                            from: angular.toJson({
                                proj_id: e.curProId,
                                dsh_id: e.curDshId
                            }),
                            to: angular.toJson({
                                proj_id: e.projId,
                                dsh_id: e.dashId
                            }),
                            check: "pass",
                            dsh_meta: angular.toJson({
                                charts: f(i, !0)
                            })
                        }).then(function (e) {
                            e.result.ismoved ? (l(t.tips["chart.moveChartSuccess"]), _()) : l(t.tips["chart.moveChartFail"]), r.closeAll()
                        })
                    })
                })
            }, d(["chart.copyChartSuccess", "chart.confirmDelChart", "template.selectDash", "chart.selectOtherPlace", "chart.checkToContinueMove", "chart.moveChartSuccess", "chart.moveChartFail", "dash.pleaseSelectDash"], t)
        },
        controller: ["$scope", function (e) {
            e.setOperatorPos = function (t, a, i) {
                var n = $(t.currentTarget),
                    r = angular.element("body").height(),
                    o = $("#_iframe_" + a);
                if (e.more_show = !e.more_show, e.setOperatorIndex(e.more_show, !1, i), r - t.clientY < 176 ? n.find("ul").css({
                        bottom: 24,
                        top: "inherit"
                    }) : n.find("ul").css({
                        top: 24,
                        bottom: "inherit"
                    }), o.length) {
                    var s = o[0],
                        l = s.contentWindow["iframe_childCustomData_" + a],
                        d = $(t.currentTarget).parents(".gridster-item");
                    l && l.enableExportExcel && (e.customChartEnableExportExcel = !0, d.data("custom-chart-data", l))
                }
            }, e.setOperatorIndex = function (t, a, i) {
                a ? e.dashStandardItems.map(function (e) {
                    e.isTopIndex = !!t
                }) : i.isTopIndex = !!t
            }
        }]
    }
}]).directive("showOnload", function () {
    return {
        restrict: "A",
        link: function (e, t, a) {
            function i() {
                t.hide()
            }
            t.hide(), t.on("loadeddata", function () {
                t[0].readyState >= 2 && (t.show(), t.off("loadeddata"))
            }), $(window).on("beforeunload", i), e.$on("$destroy", function () {
                $(window).off("beforeunload", i)
            })
        }
    }
}),
    function () {
        function e(e, t, a, i, n, r, o, s, l, d, c, p, u) {
            function h(t) {
                t = t || "", e.settingView.href = getMailHref(t), n.open({
                    template: "/static/partials/dialogTemplates/send_email.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e
                })
            }
            t.log_unread = !1, t.noticeStore = {}, t.memberData = {};
            var f = 1;
            BDPLogger.time("feStatistics", {
                category: "performance",
                action: "loading",
                opt_label: "header_in_ctrl"
            }), e.init = function () {
                e.resetDashFilterCache(), e.closeBrowserLogout(), e.passwordWarn(), e.userSetting(), e.getUserInfo(), e.themeInit()
            }, e.getUserInfo = function () {
                1 === f && (f++, BDPLogger.time("feStatistics", {
                    category: "performance",
                    action: "loading",
                    opt_label: "header_start_userinfo"
                })), a.user.getUserInfo().then(function (i) {
                    if (2 === f && (f++, BDPLogger.time("feStatistics", {
                            category: "performance",
                            action: "loading",
                            opt_label: "header_end_userinfo"
                        })), 0 == i.status) {
                        var n = i.result;
                        e.checkThemeChange(n.theme_id), 1 == n.should_complete_profile && (location.href = "/info.html");
                        var r = n.role;
                        t.master_role = r, t.share = 1 == r ? 1 : n.security_info.share_inside_group, t.global.watterMark = n.security_info.watermark_strategy || n.auth_info.name, t.global.exportDataSetting = n.security_info.export_data_setting, t.global.tbExportDataSetting = n.security_info.tb_export_data_setting;
                        var o;
                        if (t.user_id = n.user_id, t.noticeStore = {
                                offlineTaskNewFile: n.has_new_file,
                                showOfflineTip: n.show_export_notification
                            }, t.enterprise_type = o = n.enterprise_type ? +n.enterprise_type : 0, t.role_code = r, t.photo_id = n.photo_id, t.global.domain = n.domain, t.global.username = n.username, t.personalInfo = {}, t.securityStrategy = {
                                closeBrowserTokenFailure: n.security_info.close_browser_token_failure,
                                needMobileBind: !!n.security_info.need_mobile_bind
                            }, 3 == t.enterprise_type && (t.personalInfo = n.personal_info, t.memberData = {
                                vipLevel: n.personal_info.vip_level,
                                lessDay: n.personal_info.less_day,
                                vipDeadline: 1e3 * n.personal_info.vip_deadline,
                                vipShowTip: "1" == $.cookie("vip_show_tip")
                            }, $.cookie("vip_show_tip", null), !$.cookie("domain"))) {
                            $.cookie("domain", n.domain), BDPLogger.log("feStatistics", {
                                category: "user_interact",
                                action: "meiqia",
                                opt_label: "domain_error",
                                opt_value: 1
                            });
                            var l = {
                                funcQueue: [],
                                loadLibInProgress: !1
                            };
                            thirdPluginLoader({
                                initFun: function () {},
                                libSrc: "https://s1.bdp.cn/static/js/personal/meiqia/meiqiaInit_a557882.js",
                                otherSrc: "",
                                libId: window._MEIQIA
                            }, l)
                        }
                        var d = "";
                        switch (r) {
                            case 1:
                                d = "data_admin";
                                break;
                            case 0:
                            case 99:
                                d = "s_admin";
                                break;
                            case 3:
                                d = "user";
                                break;
                            case 2:
                                d = 1 == n.account_permission ? 1 == n.data_permission ? "all_admin" : "account_admin" : 1 == n.data_permission ? "data_admin" : "";
                                break;
                            default:
                                d = "user"
                        }
                        if (t.role = d, t.guideApi = $.extend(!0, t.guideApi, n.new_guide), userGuideFlags.reset(n.guide), 3 == n.enterprise_type) {
                            1 === userGuideFlags.get("origin") ? userGuideFlags.set("origin", 0) : 0 === userGuideFlags.get("origin") && userGuideFlags.set("tplLibrary", 3);
                            var c = userGuideFlags.get("origin"),
                                p = userGuideFlags.get("tplLibrary");
                            (2 == c || p < 3) && (setTimeout(function () {
                                $(".J-noviceGuideBtn").click();
                                var e = window.userGuideFlags.set("tplLibrary", 3);
                                e = window.userGuideFlags.set("origin", 0), a.guide.guideSet({
                                    guide: e
                                })
                            }, 0), t.noviceGuide = 1)
                        }
                        0 != t.enterprise_type && 3 != t.enterprise_type || s(function () {
                            e.checkUnread()
                        }, 1e3);
                        var u = t.workspaceList = n.workspace_list,
                            h = ["zh", "haizhi", "renrenche", "t6_admin", "fangfang", "lbx03", "web", "bdp_autotest", "CZHB", "kangda", "sheldon", "wsem001"],
                            g = t.global.authInfoName = n.auth_info && n.auth_info.name;
                        t.permision = {
                            projEdit: 1 != o && 4 != r && 5 != o && 6 != o,
                            dashEdit: 1 != o && 4 != r && 5 != o && 6 != o,
                            dashOperate: 1 != o && 4 != r && 5 != o && 6 != o,
                            outerShare: 3 == o,
                            innerShare: 3 != o,
                            subTpl: 2 != o,
                            sqlTable: 3 != o,
                            assignWorkTable: 1 != o,
                            canUseCustomChart: ["bdp_dev", "szsaiwei", "Weimeizi", "HNYOUA", "haizhi", "zhytest", "mcyp", "demo", "bdp_autotest", "jodo", "chunyu.me", "renrenche", "CZHB", "gzqixiu", "shiji", "dotcunited", "qdsj", "shiyong", "tujia", "CZHB", "HKCTSHOTELS", "uxintest", "HRXX", "ylzc"].indexOf(t.global.domain) > -1,
                            navDashboard: !0,
                            navDataScreen: ["haizhi", "shiyong", "tujia", "CZHB", "uxintest"].indexOf(t.global.domain) >= 0,
                            navAdvDashboard: !0,
                            navWorktable: 1 != o && 4 != r && 5 != o,
                            navUser: 3 != o && 5 != o && 6 != o && !g,
                            navAccount: 3 != o && 5 != o && 6 != o && !g,
                            navDatabase: 0 == o || 3 == o || 4 == o || 5 === o || 6 === o || 9 === o,
                            navTpl: (0 == o || 1 == o || 4 == o || 9 == o) && !g,
                            navSecurity: (0 == o || 4 == o) && 0 == r,
                            navWorkspace: (0 == r || u && (u.dash.length > 0 || u.worktable.length > 0 || u.template.length > 0)) && $.inArray(t.global.domain, h) >= 0 && !g,
                            newLogShow: 0 == o,
                            modifyPassword: 2 != o,
                            showRelationUser: 3 != o,
                            personalSetIcon: 3 == o,
                            wranPush: 3 != o,
                            userEdit: 2 != o,
                            partner1: (1 == o || 4 == o) && "s_admin" === t.role,
                            userShowOnlyReadOption: 4 == o,
                            userOnlyReadOption: 1 == o,
                            showDeveloper: 3 != o && 4 !== o && 5 !== o && 6 !== o && 9 !== o && (0 == r || 2 == r),
                            isPartner: {
                                shopex: 5 === o || 6 === o,
                                shopexNeedInit: (5 === o || 6 === o) && 0 === n.is_init
                            },
                            baiduSearchIndustry: 1 === n.industry && !g,
                            tableImg: "wanli" == t.global.domain || "haizhi" == t.global.domain || "demo" == t.global.domain || "hofan" == t.global.domain || "szkushang" == t.global.domain,
                            sysSetting: !g,
                            accountSetting: !g && 5 != o && 6 != o,
                            allowExporting: !g,
                            isAuthorized: !!g,
                            isPersonal: 3 == o,
                            isNormalUser: 3 == r,
                            authorizedPrivilege: 0 == o,
                            showAllSetting: !0,
                            showLogout: !0,
                            isSuperAdminInPersonal: "587595a4a8ed0d5cc3a22609cf816c21" === n.user_id,
                            newTraining: [null, "haizhi", "demo", "bdp_autotest", "comjia", "data center", "hofan", "CXJQAS", "tujia", "CZHB", "oBike", "uxintest", "shiyong", "ylzc", "shaks"].indexOf(t.global.domain) > 0 && !g,
                            multiDimensionPermission: ["haizhi", "demo", "mcyp", "bdp_autotest", "maimaiche", "HNYOUA"].indexOf(n.domain) > -1,
                            dashHidden: 3 != o,
                            helpLink: !(3 == o || 9 == o),
                            accountDetailSetting: !(9 == o),
                            newFeatures: !(9 == o),
                            offlineTaskFlag: 0 == o || 4 == o || 9 == o || 3 == o,
                            notificationSettingFlag: 3 != o,
                            showChartJump: !bdp.bdpPageStatus.isUnderDataScreen()
                        };
                        var m = false;
                        m && (m = JSON.parse(m), m.SHOW_MACHINE_LEARNING && (t.permision.newTraining = !0), m.SHOW_DATA_SCREEN && (t.permision.navDataScreen = !0), t.permision.navAdvDashboard = !!m.SHOW_ADV_DASH, t.permision.canUseCustomChart = !!m.USE_CUSTOM_CHART), t.wsId && angular.forEach(t.workspaceList.dash, function (e) {
                            e.ws_id == t.wsId && (t.wsAdmin = e.admin)
                        }), t.$watch("wsAdmin", function (e) {
                            t.permision.projEdit = void 0 !== e ? e : 1 != o && 4 != r && 5 != o && 6 != o
                        }), e.shopexSetTitle(o), e.runOnceAction && (e.runOnceAction = !1, e.user = n, s(function () {
                            e.user.hasPhoto = {
                                show: !!n.image_name,
                                url: "/api/user_image/download?sub_id=" + e.user.user_id + "&hash=" + new Date
                            }, n.image_name || (e.user.hasPhoto.url = "/static/images/default_photo.png")
                        }, 1e3), t.userInfoObj = n, t.is_extrace = n.is_extrace), e.getDomainForPartner(), e.checkNeedMobileBind(), window.bdpa && bdpa.register({
                            user_id: n.user_id
                        }), window.BDP_enterpriseType = n.enterprise_type, window.BDP_isPersonalized = !!t.userInfoObj.is_personalized
                    } else 18 == i.status && (t.securityStrategy = {
                        needMobileBind: !0
                    }, e.checkNeedMobileBind())
                })
            }, e.userSetting = function () {
                e.runOnceAction = !0, e.accountInfoSetting = !1, e.userSystemSetting = !1, e.settingView = {}, e.hideOpt = {
                    editName: !0,
                    modifyPassword: !0,
                    newLogShow: !0
                }, e.isBinding = 0, e.mobile_info = {
                    orig_phone_num: "",
                    phone_num: "",
                    code: "",
                    sending: !1,
                    waitCodeTime: e.tips["user.getVerifyCode"]
                }, e.verifyCodeErrorTooMuch = 0, e.info = {}, e.info.old_pw = "", e.info.new_pw = "", e.info.confirm_pw = "", e.info.pwdStrong = "", e.info.err_hint = "", e.info.hint_pwd = "", e.current_language = "en" == $.cookie("locale") ? "English" : "简体中文", e.select_language_flag = "", e.pics = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], e.isDoubleClickTask = !0, e.offlineTaskData = {
                    taskType: 0,
                    page: 1,
                    totalPages: 1,
                    fileList: [],
                    offlineFileName: null,
                    offlineStatus: 0
                }, t.fireOfflineTaskList = !0,
                    t.$watch("fireOfflineTaskList", function (t, a) {
                        t != a && e.showOfflineTask()
                    });
                e.$on("_websocketChartMessage_", function (a, i) {
                    var n = "string" == typeof i.data ? $.parseJSON(i.data) : i.data;
                    2 == n.type && (e.offlineTaskData.offlineFileName = n.filename, t.noticeStore.showOfflineTip = !0, t.noticeStore.offlineTaskNewFile = !0, e.offlineTaskData.offlineStatus = n.status)
                }), e.generatedCoordinateList = {
                    success: [],
                    failed: []
                }, e.$on("_websocketChartMessage_", function (t, a) {
                    if (8 == a.data.type || 12 == a.data.type) {
                        if (1 == a.data.status) {
                            var i = {
                                tb_name: a.data.name,
                                tb_id: a.data.tb_id
                            };
                            e.generatedCoordinateList.success.push(i)
                        } else if (2 == a.data.status) {
                            var i = {
                                tb_name: a.data.name,
                                tb_id: a.data.tb_id
                            };
                            e.generatedCoordinateList.failed.push(i)
                        }
                        e.$apply()
                    }
                }), e.user = {}, t.userInfoObj = {}
            }, $("body").on("dashboard-scroll-start.setting", function () {
                $(".J_user_setting_layer").addClass("ng-hide"), $(".J_user_setting_account").addClass("ng-hide"), e.userSystemSetting = !1, e.accountInfoSetting = !1
            }), e.getDomainForPartner = function () {
                $.cookie("partner_login", ""), t.userInfoObj.is_personalized ? ($.cookie("domain") || $.cookie("domain", e.userInfoObj.domain, {
                    expire: 31536e4,
                    path: "/"
                }), $.cookie("partner_login", e.userInfoObj.domain), t.userInfoObj.partnerLogoSrc = "/api/domain/download_image?domain=" + e.userInfoObj.domain, angular.element("#logo").children("a.logo-link").removeAttr("href")) : angular.element("#logo").children("a.logo-link").addClass("bdp-logo")
            }, e.showNotificationSetting = function () {
                var a = e.user.push_setting || {
                        warn: {
                            app: 1,
                            email: 0
                        }
                    };
                e.warnNotificationSetting = [{
                    type: e.tips["user.pushSettingApp"],
                    checked: a.warn.app > 0,
                    hideFlag: 9 == t.enterprise_type
                }, {
                    type: e.tips["user.pushSettingEmail"],
                    checked: a.warn.email > 0,
                    hint: e.user.email ? void 0 : e.tips["user.emailUnbind"]
                }], e.notificationSettingDialog = n.open({
                    template: "/static/partials/dialogTemplates/notification-setting.html",
                    className: "ngdialog-theme-default ngDialog-width-330",
                    scope: e
                })
            }, e.saveNotificationSetting = function () {
                var t = {
                    warn: {
                        app: e.warnNotificationSetting[0].checked ? 1 : 0,
                        email: e.warnNotificationSetting[1].checked ? 1 : 0
                    }
                };
                a.user.modifyInfo({
                    push_setting: JSON.stringify(t)
                }).then(function (a) {
                    0 == a.status ? (e.user.push_setting = t, r(e.tips["user.saveSuccess"]), e.notificationSettingDialog.close()) : r(a.errstr)
                })
            }, e.checkThemeChange = function (t) {
                e.changeSelectedTheme(t, !0)
            }, e.resetDashFilterCache = function () {
                window.localStorage.setItem("global_filter_memory", angular.toJson([]))
            }, e.closeBrowserLogout = function () {
                if (window.localStorage.getItem("latestLeaveTime") > 0) {
                    var e = (new Date).getTime(),
                        t = parseInt(window.localStorage.getItem("latestLeaveTime"));
                    if (Math.max(Math.abs(10 - Math.ceil((e - t) / 1e3)), 0) >= 10) {
                        var i = {
                            access_token: $.cookie("token")
                        };
                        a.user.logout(i).then(function (e) {
                            $.cookie("token", "", {
                                expires: -1,
                                path: "/"
                            }), $.cookie("master_role", "", {
                                expires: -1,
                                path: "/"
                            }), $.cookie("is_weak", "", {
                                expires: -1
                            }), window.localStorage.setItem("latestLeaveTime", 0), window.location.href = bdp.bdpLogin.checkPartnerLogin()
                        })
                    }
                } else window.localStorage.setItem("latestLeaveTime", 0)
            }, e.checkUnread = function () {
                a.user.unreadNewFeatures().then(function (e) {
                    0 == e.status && (t.log_unread = 0 === e.result.status)
                })
            }, e.setZhLanguage = function () {
                t.language = "zh", o.use("zh")
            }, e.shopexSetTitle = function (e) {
                5 != e && 6 != e || (angular.element("title").html("生意罗盘"), angular.element("#J_favicon_ico").attr("href", "./static/images/shopex_favicon.ico"))
            }, e.getCapacity = function () {
                a.user.getUserInfo().then(function (e) {
                    if (0 == e.status && 3 == t.enterprise_type) {
                        var a = e.result;
                        t.personalInfo.capacity_info = a.personal_info.capacity_info
                    }
                })
            }, e.routeTo = function (e) {
                l.path(e)
            }, e.checkNeedMobileBind = function () {
                t.securityStrategy && t.securityStrategy.needMobileBind && n.open({
                    template: "/static/partials/dialogTemplates/telephone_warn.html",
                    className: "ngdialog-theme-default ngdialog-width-348",
                    scope: e,
                    showClose: !1,
                    preCloseCallback: function () {
                        t.mobileBinding = 1, e.$$phase || e.$apply()
                    }
                }), 3 == t.enterprise_type && t.memberData && t.memberData.vipLevel > 0 && t.userInfoObj && !t.userInfoObj.mobile && "dashboard" == t.view && n.openConfirm({
                    template: "/static/partials/dialogTemplates/confirm-dialog.html",
                    className: "ngdialog-theme-default ngDialog-width-320",
                    scope: e,
                    data: {
                        trustHtmlStr: !0,
                        message: "<div class='text-center pt8'><img src='static/images/bind_phone.png' width='148'><p class='mg16'>亲爱的会员，您的账号尚未绑定手机号，请及时完成手机号绑定，享受更全面贴心的会员服务哦~~</p></div>",
                        title: "绑定手机号",
                        okValue: "立即绑定",
                        hideCancel: !0
                    }
                }).then(function () {
                    n.closeAll(), e.editPhoneNumber(!0)
                })
            }, e.doBindingNow = function () {
                n.closeAll(), t.mobileBinding = 1, e.accountInfoSetting = !0, e.editPhoneNumber(t.securityStrategy && t.securityStrategy.needMobileBind)
            }, e.passwordWarn = function () {
                var a = Number($.cookie("is_weak")),
                    i = $.cookie("is_weak_hint"),
                    r = t.securityStrategy && t.securityStrategy.needMobileBind;
                !a || i || r || (n.open({
                    template: "/static/partials/dialogTemplates/password_warn.html",
                    className: "ngdialog-theme-default passwordWarn",
                    scope: e,
                    data: {}
                }), $.cookie("is_weak_hint", "1", {
                    expires: 1
                }))
            }, e.modifyNow = function () {
                n.closeAll(), e.editPassword()
            }, e.$on("getUserInfo", function (t, a) {
                e.getUserInfo()
            }), e.$on("getCapacity", function (t, a) {
                e.getCapacity()
            }), e.goWarnList = function () {
                t.global.url_before_warn = l.path(), d.params.wsId ? t.click_show_view("warn", {
                    wsId: d.params.wsId
                }) : t.click_show_view("warn"), t.global.rule_id = ""
            }, e.cancelUserName = function () {
                a.user.getUserInfo().then(function (t) {
                    0 == t.status && (e.user.contact = t.result.contact, n.closeAll())
                })
            }, e.editUserBaseInfo = function () {
                n.open({
                    template: "/static/partials/dialogTemplates/edit-user-base-info.html",
                    className: "ngdialog-theme-default ngDialog-width-320 edit-user-base-info",
                    scope: e,
                    data: {
                        isPersonal: t.permision.personalSetIcon,
                        userInfo: e.user
                    },
                    controller: "editUserBaseInfoCtrl"
                })
            }, e.editPhoneNumber = function (t) {
                $("#phone_num").removeAttr("readonly"), n.open({
                    template: "/static/partials/dialogTemplates/edit_phone.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    showClose: t,
                    scope: e,
                    data: {
                        isBindingNew: t,
                        isBinding: e.user.mobile ? 2 : 1
                    },
                    controller: "editPhoneCtrl"
                })
            }, e.checkPwd = function () {
                e.info.err_hint = "";
                var t = e.info.new_pw;
                if (!t) return e.info.pwdStrong = "empty", void(e.info.hint_pwd = "");
                var a;
                switch (e.info.pwdStrong = verifyHandle.pwdStrong(t)) {
                    case "weaker":
                        a = "低";
                        break;
                    case "weak":
                        a = "中";
                        break;
                    case "strong":
                        a = "高"
                }
                e.info.hint_pwd = a
            }, e.modifyPassword = function () {
                var t = e.info.new_pw,
                    i = e.info.old_pw;
                return i ? t ? t !== e.info.confirm_pw ? (r("两次密码不一致!"), !1) : void(verifyHandle.password(t) ? r("密码强度过低，请重新输入包含字母与数字的并且长度不小于8位的密码") : a.user.modifyPassword({
                    old_password: i,
                    new_password: t,
                    access_token: $.cookie("token")
                }).then(function (e) {
                    0 == e.status && ($.cookie("is_weak", 0), $.cookie("is_weak_hint", 0), r("修改密码成功"), a.user.logout().then(function () {
                        window.location.href = bdp.bdpLogin.checkPartnerLogin()
                    }))
                })) : void r("请输入新密码") : void r("请输入旧密码")
            }, e.readNewFeatures = function () {
                a.user.readNewFeatures().then(function (e) {
                    0 == e.status && (t.log_unread = !1)
                })
            }, e.editPassword = function () {
                n.open({
                    template: "/static/partials/dialogTemplates/edit-password.html",
                    className: "ngdialog-theme-default ngDialog-width-330",
                    scope: e
                })
            }, e.personalMemberInfo = function () {
                n.open({
                    template: "/static/pay/member/view/member_info.html",
                    className: "ngdialog-theme-default ngDialog-width-350",
                    scope: e
                })
            }, e.changeLanguage = function (e) {
                $.cookie("locale", e, {
                    path: "/",
                    expires: 365
                }), p.location.reload()
            }, e.modifyPic = function () {
                e.user.pic = e.user.photo_id, n.open({
                    template: "/static/partials/dialogTemplates/modify_head_pic.html",
                    className: "ngdialog-theme-default ngDialog-width-330",
                    scope: e
                })
            }, e.savePic = function () {
                var i = e.user.pic;
                a.user.modifyPersonal({
                    photo_id: i
                }).then(function (a) {
                    0 == a.status && (t.photo_id = e.user.photo_id = i, n.closeAll())
                })
            }, e.editUsername = function () {
                n.open({
                    template: "/static/partials/dialogTemplates/edit_username.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: e
                })
            }, e.saveUsername = function () {
                var i = e.user.contact;
                if (0 == i.length) return void r(e.tips["user.nameCanNotNull"]);
                (t.permision.isPersonal ? a.user.modifyPersonal : a.user.modifyInfo)({
                    contact: i
                }).then(function (a) {
                    (0 == a.status || !t.permision.personalSetIcon && 23008 == a.status) && (e.user.contact = i, r(e.tips["user.saveSuccess"]), n.closeAll())
                })
            }, e.modifyEmail = function () {
                e.user.old_email = "", e.user.new_email = "", e.modifyEmailDialog = n.open({
                    template: "/static/partials/dialogTemplates/modify_email.html",
                    className: "ngdialog-theme-default ngDialog-width-330",
                    scope: e
                })
            };
            var g = !1;
            e.saveEmail = function () {
                if (!g) {
                    var i = e.user,
                        n = t.permision.isPersonal;
                    if (i.email && !i.old_email && n) return void r("请输入原邮箱");
                    if (i.email && !verifyHandle.email(i.old_email) && n) return void r("原邮箱格式错误");
                    if (!i.new_email) return void r("请输入新邮箱");
                    if (!verifyHandle.email(i.new_email)) return void r("新邮箱格式错误");
                    g = !0, n ? a.user.modifyPersonal({
                        old_email: i.old_email || "",
                        email: i.new_email
                    }).then(function (t) {
                        0 == t.status && (e.modifyEmailDialog.close(), h(i.new_email)), g = !1
                    }) : i.new_email != i.email ? a.user.modifyInfo({
                        email: i.new_email
                    }).then(function (t) {
                        0 == t.status ? (e.modifyEmailDialog.close(), e.user.email = i.new_email, r(e.tips["user.saveSuccess"])) : 1035 == t.status && r(e.tips["user.emailExist"]), g = !1
                    }) : (e.modifyEmailDialog.close(), g = !1)
                }
            }, e.showOfflineTask = function () {
                e.isDoubleClickTask && (e.isDoubleClickTask = !1, t.noticeStore.offlineTaskNewFile = !1, e.offlineTaskData.taskType = 0, a.user.exportFileList().then(function (t) {
                    e.isDoubleClickTask = !0, 0 == t.status && (e.offlineTaskData.fileList = t.result.files, e.offlineTaskData.totalPages = t.result.total_pages, e.offlineTaskData.page = t.result.page, n.open({
                        template: "/static/partials/dialogTemplates/export-large-data.html",
                        className: "ngdialog-theme-default ngDialog-width-844",
                        scope: e,
                        controller: ["$scope", "$window", function (e, t) {
                            e.download = function (e) {
                                t.location.href = e
                            }, e.delTask = function (t) {
                                a.user.exportDelTask({
                                    task_ids: angular.toJson([t])
                                }).then(function (t) {
                                    if (0 == t.status) {
                                        r(e.tips.delSuccess);
                                        var a = Math.min(e.offlineTaskData.page, e.offlineTaskData.totalPages);
                                        1 === e.offlineTaskData.fileList.length && (a = a > 1 ? a - 1 : 1), e.offlineFileListPage(a, e.offlineTaskData.taskType)
                                    }
                                })
                            }, e.delAllTasks = function () {
                                a.user.exportDelTask({
                                    task_type: e.offlineTaskData.taskType
                                }).then(function (t) {
                                    0 == t.status && (r(e.tips.delSuccess), e.offlineFileListPage(1, e.offlineTaskData.taskType))
                                })
                            }
                        }]
                    }))
                }))
            }, e.offlineFileListPage = function (t, i) {
                var n = {};
                t > 0 && t <= e.offlineTaskData.totalPages && (n = {
                    page: t,
                    task_type: i
                }, a.user.exportFileList(n).then(function (t) {
                    0 == t.status && (e.offlineTaskData.fileList = t.result.files, e.offlineTaskData.totalPages = t.result.total_pages, e.offlineTaskData.page = t.result.page)
                }))
            }, e.hideOfflineTipAction = function () {
                t.noticeStore.showOfflineTip && (a.user.hideNotification().then(function (e) {}), t.noticeStore.showOfflineTip = !1)
            }, e.checkTableDetail = function (a) {
                e.generatedCoordinateList.success = e.generatedCoordinateList.success.filter(function (e) {
                    return e.tb_id != a
                }), e.generatedCoordinateList.failed = e.generatedCoordinateList.failed.filter(function (e) {
                    return e.tb_id != a
                }), $.cookie("ds_tb_id", a), t.wsId ? d.go("data_source_ws", {
                    wsId: t.wsId
                }, {
                    reload: !0
                }) : d.go("data_source", {}, {
                    reload: !0
                })
            }, e.closeGeneratedTip = function () {
                e.generatedCoordinateList = {
                    success: [],
                    failed: []
                }
            }, e.themeInit = function () {
                function a() {
                    o(i).then(function (t) {
                        for (var a = 0, i = e.themes.length; a < i; a++) 1 == e.themes[a].id && (e.themes[a].name = t["theme.StarryBlue"]), 2 == e.themes[a].id && (e.themes[a].name = t["theme.ElegantWhite"])
                    })
                }
                e.themes = angular.copy(window.BDPThemes.themes);
                var i = ["theme.StarryBlue", "theme.ElegantWhite"];
                t.$on("$translateChangeSuccess", a)
            }, e.changeSelectedTheme = function (i, n) {
                if (i != window.usedThemeId) {
                    var r = window.usedThemeId,
                        o = e.themes[i - 1],
                        s = $("#" + window.BDPThemes.themeLinkCssId);
                    t.themeChangeFlag = !1, s.attr("href", o.fileUrl), o.svgUrl;
                    var l = document.documentElement.className;
                    if (document.documentElement.className = l.replace(/theme-\w+/, "theme-" + o.filename), window.usedThemeId = t.usedThemeId = i, t.$broadcast("themeChanged", i), n) return;
                    a.global_config.themeModify(i).then(function (a) {
                        0 == a.status ? (t.themeChangeFlag = !t.themeChangeFlag, $.cookie(window.BDPThemes.bdpThemeIdCookieName, i)) : e.changeSelectedTheme(r, "NOSAVE")
                    })
                }
            }, e.changeUserPhotoSrc = function () {
                e.user.image_name = e.user.user_id, e.user.hasPhoto.url = "/api/user_image/download?sub_id=" + e.user.user_id + "&hash=" + new Date, e.user.hasPhoto.show = !0
            }, e.changeUserPhoto = function () {
                n.open({
                    template: "/static/partials/dialogTemplates/changeUserPhoto.html",
                    className: "ngdialog-theme-default ngDialog-width-600 change-user-photo",
                    scope: e,
                    controller: ["$timeout", "$http", "errHint", "ngDialog", "Upload", "$jsTipTranslate", function (t, a, i, n, r, o) {
                        e.userPhotoData = null;
                        var s = function (e) {
                                f(e)
                            },
                            l = function () {
                                angular.element("#upload_photo_btn").click()
                            },
                            d = function (e) {
                                console.log("onChange fired")
                            },
                            c = function () {
                                console.log("onLoadBegin fired")
                            },
                            p = function () {
                                e.userPhotoData.isLoading = !1, console.log("onLoadDone fired")
                            },
                            u = function () {
                                e.userPhotoData.isLoading = !1, console.log("onLoadError fired")
                            },
                            h = function () {
                                if (!e.userPhotoData.imageDataURI) return void i(e.tips["user.choosePhoto"]);
                                var t = $.cookie("user_id");
                                r.upload({
                                    url: "/api/user_image/upload",
                                    data: {
                                        file: r.dataUrltoBlob(e.userPhotoData.resImageDataURI, t + "_photo")
                                    }
                                }).then(function (t) {
                                    var a = t.data;
                                    0 == a.status ? (e.changeUserPhotoSrc(), i(e.tips["user.uploadPhotoSuccess"]), n.closeAll()) : i(+a.status, {
                                        warn_mesg: a.errstr
                                    })
                                })
                            };
                        e.initView = function () {
                            e.userPhotoData = {
                                acceptType: ".jpg, .png, .jpeg, .bmp",
                                isLoading: !1,
                                size: "small",
                                type: "circle",
                                imageDataURI: "",
                                resImageDataURI: "",
                                resImgFormat: "image/png",
                                resImgQuality: .5,
                                areaMinSize: 50,
                                resImgSize: 100,
                                uploadPhoto: s,
                                uploadPhotoAgain: l,
                                onChange: d,
                                onLoadBegin: c,
                                onLoadDone: p,
                                onLoadError: u,
                                savePhoto: h
                            }, e.ableUpload = !0, (navigator.userAgent.indexOf("MSIE") != -1 || "Microsoft Internet Explorer" == navigator.appName || window.ActiveXObject) && ("9." == navigator.appVersion.match(/9./i) && window.addEventListener || 9 == document.documentMode) && (e.ableUpload = !1)
                        }, 
                        e.initView();
                        var f = function (a) {
                            t(function () {
                                e.userPhotoData.isLoading = !0
                            }, 0);
                            var i = a;
                            if (!i) return void(e.userPhotoData.isLoading = !1);
                            var n = new FileReader;
                            n.onload = function (t) {
                                e.$apply(function (e) {
                                    e.userPhotoData.imageDataURI = t.target.result
                                })
                            }, n.readAsDataURL(i), t(function () {
                                var e = angular.element("img-crop"),
                                    t = Number(e.find("canvas").height()),
                                    a = Number(e.height());
                                t < a && e.css({
                                    "padding-top": (a - t) / 2 + "px"
                                })
                            }, 100)
                        };
                        o(["user.choosePhoto", "user.uploadPhotoSuccess"], e)
                    }]
                })
            }, e.hideUserSystemSetting = function () {
                e.userSystemSetting = !1
            }, i(["user.nameCanNotNull", "user.saveSuccess", "user.saveFailed", "user.sendFailed", "user.inputPhoneNumber", "user.verifyCodeError", "user.errorAndGetAgain", "user.nameCanNotTooLog", "user.numberHasChanged", "user.inputOrigPhoneNumber", "user.inputNewPhoneNumber", "user.phoneNumberFormatError", "user.inputVerifyCode", "user.inputPicVerifyCode", "user.phoneNumHasBound", "user.verifyCodeError", "user.nameInvalid", "user.getVerifyCode", "user.pushSettingApp", "user.pushSettingEmail", "user.emailUnbind", "user.choosePhoto", "user.uploadPhotoSuccess", "delSuccess"], e), e.init()
        }
        var t = angular.module("mainNav", []);
        t.directive("toggleImg", [function () {
            return {
                restrict: "A",
                replace: !0,
                scope: {
                    sessionid: "="
                },
                template: '<img ng-src="{{url}}" class="cursor-pointer vt-img" ng-click="toggleImg()"/>',
                controller: ["$scope", "$http", function (e, t) {
                    e.url = "/api/register/pic?session_id=" + e.sessionid, e.toggleImg = function () {
                        e.url = "/api/register/pic?session_id=" + e.sessionid + "&t=" + (new Date).getTime()
                    }, e.$on("changeCode", function () {
                        e.toggleImg()
                    })
                }]
            }
        }]), 
        t.controller("mainNavCtrl", e), 
        e.$inject = [
            "$scope", 
            "$rootScope", 
            "commonService", 
            "$jsTipTranslate", 
            "ngDialog", 
            "errHint", 
            "$translate", 
            "$timeout", 
            "$location", 
            "$state", 
            "$http", 
            "$window", 
            "guideApiConstant"]
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s) {
            function l() {
                function t() {
                    var i = "en" == $.cookie("locale") ? "Try again" : "重试";
                    e.mobile_info.waitCodeTime = a-- + "s " + i, a <= 0 ? ($("#getcode").removeAttr("disabled"), e.sending = !1, e.mobile_info.waitCodeTime = e.tips["user.getVerifyCode"], $("#phone_num").removeAttr("readonly")) : ($("#getcode").attr("disabled", "disabled"), e.waiting = r(function () {
                        t()
                    }, 1e3))
                }
                var a = 60;
                t()
            }
            i(["user.nameCanNotNull", "user.saveSuccess", "user.saveFailed", "user.sendFailed", "user.inputPhoneNumber", "user.verifyCodeError", "user.errorAndGetAgain", "user.nameCanNotTooLog", "user.numberHasChanged", "user.inputOrigPhoneNumber", "user.inputNewPhoneNumber", "user.phoneNumberFormatError", "user.inputVerifyCode", "user.inputPicVerifyCode", "user.phoneNumHasBound", "user.verifyCodeError", "user.nameInvalid", "user.getVerifyCode", "user.pushSettingApp", "user.pushSettingEmail", "user.emailUnbind", "user.choosePhoto", "user.uploadPhotoSuccess"], e), e.mobile_info = {
                orig_phone_num: "",
                phone_num: "",
                code: "",
                sending: !1,
                session_id: bdp.utils.getSessionId(),
                pic_verify_code: "",
                waitCodeTime: e.tips["user.getVerifyCode"]
            }, r(function () {
                e.mobile_info.waitCodeTime = e.tips["user.getVerifyCode"]
            }, 1e3), a.userInfoObj.mobile ? e.isBinding = 2 : e.isBinding = 1, e.getMobileCode = function () {
                var i = {
                    usage: 0,
                    orig_phone_num: "",
                    phone_num: ""
                };
                if (!e.mobile_info.sending) {
                    if (1 == e.isBinding) {
                        if ("" == e.mobile_info.phone_num) return void t(e.tips["user.inputPhoneNumber"]);
                        if (!verifyHandle.mobile(e.mobile_info.phone_num)) return void t(e.tips["user.phoneNumberFormatError"]);
                        i.usage = 1, i.phone_num = e.mobile_info.phone_num
                    } else {
                        if ("" == e.mobile_info.orig_phone_num) return void t(e.tips["user.inputOrigPhoneNumber"]);
                        if (!verifyHandle.mobile(e.mobile_info.orig_phone_num)) return void t(e.tips["user.phoneNumberFormatError"]);
                        if ("" == e.mobile_info.phone_num) return void t(e.tips["user.inputNewPhoneNumber"]);
                        if (!verifyHandle.mobile(e.mobile_info.phone_num)) return void t(e.tips["user.phoneNumberFormatError"]);
                        e.mobile_info.orig_phone_num, e.mobile_info.phone_num, i.usage = 2, i.orig_phone_num = e.mobile_info.orig_phone_num, i.phone_num = e.mobile_info.phone_num
                    }
                    if (!e.mobile_info.pic_verify_code) return void t(e.tips["user.inputPicVerifyCode"]);
                    i.verify_code = e.mobile_info.pic_verify_code, i.session_id = e.mobile_info.session_id, e.mobile_info.sending = !0, $("#getcode").attr("disabled", "disabled"), n.user.getMobileCode(i).then(function (i) {
                        if (0 != i.status) {
                            e.$broadcast("changeCode", "change"), e.mobile_info.sending = !1, $("#getcode").removeAttr("disabled");
                            var n = (Number(i.status), "");
                            a.language;
                            n = i.errstr, t(n)
                        } else e.mobile_info.sending = !0, e.verifyCodeErrorTooMuch = 0, $("#phone_num").attr("readonly", "readonly"), l()
                    })
                }
            }, e.cancelPhone = function () {
                e.isBinding = 0;
                var t = e.mobile_info.sending,
                    a = e.mobile_info.waitCodeTime;
                e.mobile_info = {
                    orig_phone_num: "",
                    phone_num: "",
                    code: "",
                    sending: t,
                    waitCodeTime: a
                }, $("#phone_num").removeAttr("readonly"), s.closeAll()
            }, e.saveNewPhoneNumber = function () {
                if ("" == e.mobile_info.phone_num) return void t(e.tips["user.inputPhoneNumber"]);
                if ("" == e.mobile_info.pic_verify_code) return void t(e.tips["user.inputPicVerifyCode"]);
                if ("" == e.mobile_info.code) return void t(e.tips["user.inputVerifyCode"]);
                if (e.verifyCodeErrorTooMuch) return t(e.tips["user.errorAndGetAgain"]), void(e.mobile_info.code = "");
                var i = {
                    usage: 1,
                    verify_code: e.mobile_info.code
                };
                1 == e.isBinding ? i.usage = 1 : i.usage = 2, o.post("/api/user/verify_captcha", i).success(function (i) {
                    0 == i.status ? (t(e.tips["user.phoneNumHasBound"]), $(".nav-function").css("display", "block"), e.isBinding = 0, a.userInfoObj.mobile = e.mobile_info.phone_num.substr(0, 3) + "****" + e.mobile_info.phone_num.substr(7), e.mobile_info = {
                        orig_phone_num: "",
                        phone_num: "",
                        code: "",
                        sending: !1,
                        waitCodeTime: e.tips["user.getVerifyCode"]
                    }, r.cancel(e.waiting), $("#phone_num").removeAttr("readonly"), e.hideOpt = {
                        editName: !0,
                        modifyPassword: !0,
                        newLogShow: !0
                    }, a.securityStrategy && a.securityStrategy.needMobileBind && (location.href = "/index.html", a.securityStrategy.needMobileBind = !1), s.closeAll()) : 1017 == i.status ? (t(e.tips["user.errorAndGetAgain"]), e.verifyCodeErrorTooMuch = 1, e.mobile_info.code = "") : t(1018 == i.status ? e.tips["user.verifyCodeError"] : e.tips["user.sendFailed"])
                })
            }, e.savePhoneNumber = function () {
                if ("" == e.mobile_info.orig_phone_num) return void t(e.tips["user.inputOrigPhoneNumber"]);
                if ("" == e.mobile_info.phone_num) return void t(e.tips["user.inputNewPhoneNumber"]);
                if ("" == e.mobile_info.pic_verify_code) return void t(e.tips["user.inputPicVerifyCode"]);
                if ("" == e.mobile_info.code) return void t(e.tips["user.inputVerifyCode"]);
                if (e.verifyCodeErrorTooMuch) return t(e.tips["user.errorAndGetAgain"]), void(e.mobile_info.code = "");
                var i = {
                    usage: 2,
                    verify_code: e.mobile_info.code
                };
                1 == e.isBinding ? i.usage = 1 : i.usage = 2, o.post("/api/user/verify_captcha", i).success(function (i) {
                    0 == i.status ? (t(e.tips["user.numberHasChanged"]), e.isBinding = 0, a.userInfoObj.mobile = e.mobile_info.phone_num.substr(0, 3) + "****" + e.mobile_info.phone_num.substr(7), e.mobile_info = {
                        orig_phone_num: "",
                        phone_num: "",
                        code: "",
                        sending: !1,
                        waitCodeTime: e.tips["user.getVerifyCode"]
                    }, r.cancel(e.waiting), $("#phone_num").removeAttr("readonly"), s.closeAll()) : 1017 == i.status ? (t(e.tips["user.errorAndGetAgain"]), e.verifyCodeErrorTooMuch = 1, e.mobile_info.code = "") : t(1018 == i.status ? e.tips["user.verifyCodeError"] : e.tips["user.sendFailed"])
                })
            }
        }
        angular.module("mainNav")
        .controller("editPhoneCtrl", e), 
        e.$inject = ["$scope", "errHint", "$rootScope", "$jsTipTranslate", "commonService", "$timeout", "$http", "ngDialog"]
    }(),
    function () {
        function e(e, t, a, i, n, r, o, s, l) {
            function d() {
                y.viewType = "editPhone", y.viewTitle = t.tips["user.base_info.modifymobile"], t.initPhoneData(), y.userInfo.mobile ? t.phoneData.isBinding = 2 : t.phoneData.isBinding = 1
            }

            function c() {
                y.viewType = "editEmail", y.viewTitle = t.tips["user.base_info.modifyemail"], t.initEmailData()
            }

            function p() {
                function e() {
                    var i = "en" == $.cookie("locale") ? "Try again" : "重试";
                    w.waitCodeTime = a-- + "s " + i, a <= 0 ? ($("#getCode").removeAttr("disabled"), w.sending = !1, w.waitCodeTime = t.tips["user.getVerifyCode"]) : ($("#getCode").attr("disabled", "disabled"), t.waitingFun = s(function () {
                        e()
                    }, 1e3))
                }
                var a = 60;
                e()
            }

            function u() {
                if (!w.sending) {
                    var i = {
                        usage: 0,
                        orig_phone_num: "",
                        phone_num: ""
                    };
                    if (1 == w.isBinding) {
                        if ("" == w.phone_num) return void r(t.tips["user.inputPhoneNumber"]);
                        if (!verifyHandle.mobile(w.phone_num)) return void r(t.tips["user.phoneNumberFormatError"]);
                        i.usage = 1, i.phone_num = w.phone_num
                    } else {
                        if ("" == w.orig_phone_num) return void r(t.tips["user.inputOrigPhoneNumber"]);
                        if (!verifyHandle.mobile(w.orig_phone_num)) return void r(t.tips["user.phoneNumberFormatError"]);
                        if ("" == w.phone_num) return void r(t.tips["user.inputNewPhoneNumber"]);
                        if (!verifyHandle.mobile(w.phone_num)) return void r(t.tips["user.phoneNumberFormatError"]);
                        i.usage = 2, i.orig_phone_num = w.orig_phone_num, i.phone_num = w.phone_num
                    }
                    if (!w.pic_verify_code) return void r(t.tips["user.inputPicVerifyCode"]);
                    i.verify_code = w.pic_verify_code, i.session_id = w.session_id, w.sending = !0, $("#getCode").attr("disabled", "disabled"), a.user.getMobileCode(i).then(function (a) {
                        if (0 != a.status) {
                            w.sending = !1, $("#getCode").removeAttr("disabled"), t.$broadcast("changeCode", "change");
                            var i = Number(a.status),
                                n = "",
                                o = e.language;
                            switch (i) {
                                case 11:
                                    n = "en" == o ? "Parameters error" : "参数错误";
                                    break;
                                case 1018:
                                    n = "en" == o ? "Verification code error" : "验证码错误";
                                    break;
                                case 1020:
                                    n = "en" == o ? "Phone number has been bound" : "该账号已绑定手机";
                                    break;
                                case 1021:
                                    n = "en" == o ? "The phone number has not been bound" : "手机未绑定";
                                    break;
                                case 1022:
                                    n = "en" == o ? "Original phone number is wrong" : "原手机号错误";
                                    break;
                                case 1023:
                                    n = "en" == o ? "The phone number is already bound by another account" : "手机号已被其他账号绑定";
                                    break;
                                case 1024:
                                    n = "en" == o ? "Get code failed" : "发送验证码失败";
                                    break;
                                case 1025:
                                    n = "en" == o ? "Get frequently, please try again after 24 hours" : "获取频繁，请24小时后再试";
                                    break;
                                case 1026:
                                    n = "en" == o ? "You can only get a code three times an hour, please try again later" : "一小时内只可获取三次验证码，请稍后再试";
                                    break;
                                case 23023:
                                    n = "en" == o ? "The account exits" : "该账号已存在", t.show = !0;
                                    break;
                                case 23003:
                                    n = "en" == o ? "The account does not exit" : "该账号不存在", t.show = !0;
                                    break;
                                case 23006:
                                case 23016:
                                    n = "en" == o ? "Get frequently, please try again after 24 hours" : "获取频繁。请24小时后再试";
                                    break;
                                default:
                                    n = "en" == o ? "Send failed" : "发送失败"
                            }
                            r(n)
                        } else t.verifyCodeErrorTooMuch = 0, p(), w.sending = !0
                    })
                }
            }

            function h() {
                if (1 == w.isBinding && "" == w.phone_num) return void r(t.tips["user.inputNewPhoneNumber"]);
                if (2 == w.isBinding && "" == w.phone_num) return void r(t.tips["user.inputPhoneNumber"]);
                if (2 == w.isBinding && "" == w.orig_phone_num) return void r(t.tips["user.inputOrigPhoneNumber"]);
                if ("" == w.pic_verify_code) return void r(t.tips["user.inputPicVerifyCode"]);
                if ("" == w.code) return void r(t.tips["user.inputVerifyCode"]);
                if (t.verifyCodeErrorTooMuch) return r(t.tips["user.errorAndGetAgain"]), void(w.code = "");
                var e = {
                    usage: 1 == w.isBinding ? 1 : 2,
                    verify_code: w.code
                };
                t.isSaving = !0, o.post("/api/user/verify_captcha", e).success(function (e) {
                    t.isSaving = !1, 0 == e.status ? (r(t.tips["user.phoneNumHasBound"]), y.viewType = "base", y.viewTitle = t.tips["user.personalInfo"], y.userInfo.mobile = w.phone_num.substr(0, 3) + "****" + w.phone_num.substr(7), s.cancel(t.waitingFun), $(".nav-function").css("display", "block"), $.cookie("need_mobile_bind", 0)) : 1017 == e.status ? (r(t.tips["user.errorAndGetAgain"]), t.verifyCodeErrorTooMuch = 1, w.code = "") : r(1018 == e.status ? t.tips["user.verifyCodeError"] : t.tips["user.sendFailed"])
                })
            }

            function f(e) {
                e = e || "", t.settingView.href = getMailHref(e), n.open({
                    template: "/static/partials/dialogTemplates/send_email.html",
                    className: "ngdialog-theme-default ngDialog-width-300",
                    scope: t
                })
            }

            function g() {
                if (!t.isSaving) {
                    if (C.email && !C.old_email && y.isPersonal) return void r("请输入原邮箱");
                    if (C.email && !verifyHandle.email(C.old_email) && y.isPersonal) return void r("原邮箱格式错误");
                    if (!C.new_email) return void r("请输入新邮箱");
                    if (!verifyHandle.email(C.new_email)) return void r("新邮箱格式错误");
                    if (C.new_email == C.email) return y.viewType = "base", void(y.viewTitle = t.tips["user.personalInfo"]);
                    t.isSaving = !0, y.isPersonal ? a.user.modifyPersonal({
                        old_email: C.old_email || "",
                        email: C.new_email
                    }).then(function (e) {
                        t.isSaving = !1, 0 == e.status && (r(t.tips["user.saveSuccess"]), y.userInfo.email = C.new_email, y.viewType = "base", y.viewTitle = t.tips["user.personalInfo"], f(C.new_email))
                    }) : a.user.modifyInfo({
                        email: C.new_email
                    }).then(function (e) {
                        t.isSaving = !1, 0 == e.status ? (r(t.tips["user.saveSuccess"]), y.userInfo.email = C.new_email, y.viewType = "base", y.viewTitle = t.tips["user.personalInfo"]) : 1035 == e.status && r(t.tips["user.emailExist"])
                    })
                }
            }

            function m() {
                return "editPhone" == y.viewType ? (y.viewType = "base", y.viewTitle = t.tips["user.personalInfo"], void(t.phoneData.session_id = "")) : "editEmail" == y.viewType ? (y.viewType = "base", void(y.viewTitle = t.tips["user.personalInfo"])) : void n.closeAll()
            }

            function _(e) {
                for (var t = 0, a = 0; a < e.length; a++) {
                    var i = e.charCodeAt(a);
                    t += i >= 0 && i <= 128 ? 1 : 2
                }
                return t
            }

            function v() {
                if (!t.isSaving) {
                    var e = {},
                        i = t.editInfoData.userInfo;
                    if (!i.contact) return void r(t.tips["user.base_info.user_name"] + t.tips["user.notFilled"]);
                    if (!i.sex) return void r(t.tips["user.base_info.sex"] + t.tips["user.notFilled"]);
                    if (i.position && _(i.position) >= 50) return void r(t.tips["account.positionLimit50"]);
                    e = {
                        contact: i.contact,
                        sex: i.sex,
                        position: i.position
                    }, t.isSaving = !0, y.isPersonal ? (x.contact == i.contact && delete e.contact, a.user.modifyPersonal(e).then(function (e) {
                        t.isSaving = !1, 0 == e.status && (r(t.tips["user.saveSuccess"]), b(), n.closeAll())
                    })) : a.user.modifyInfo(e).then(function (e) {
                        t.isSaving = !1, 0 == e.status && (r(t.tips["user.saveSuccess"]), b(), n.closeAll())
                    })
                }
            }

            function b() {
                t.ngDialogData.userInfo.contact = y.userInfo.contact, t.ngDialogData.userInfo.mobile = y.userInfo.mobile, t.ngDialogData.userInfo.email = y.userInfo.email, t.ngDialogData.userInfo.position = y.userInfo.position, t.ngDialogData.userInfo.sex = y.userInfo.sex
            }
            var y = null,
                w = null,
                C = null,
                x = null;
            t.isSaving = !1, t.initPhoneData = function () {
                t.phoneData = {
                    isBinding: 0,
                    orig_phone_num: "",
                    phone_num: "",
                    code: "",
                    sending: !1,
                    session_id: bdp.utils.getSessionId(),
                    pic_verify_code: "",
                    waitCodeTime: t.tips["user.getVerifyCode"],
                    getMobileCode: u,
                    savePhoneFun: h
                }, w = t.phoneData
            }, t.initEmailData = function () {
                t.emailData = {
                    old_email: "",
                    new_email: "",
                    saveEmailFun: g
                }, C = t.emailData
            }, t.initView = function () {
                t.verifyCodeErrorTooMuch = 0, t.editInfoData = {
                    viewType: "base",
                    viewTitle: t.tips["user.personalInfo"],
                    isPersonal: t.ngDialogData.isPersonal,
                    userInfo: angular.copy(t.ngDialogData.userInfo),
                    saveFun: v,
                    changeMobile: d,
                    changeEmail: c,
                    closeDialog: m
                }, x = angular.copy(t.ngDialogData.userInfo), y = t.editInfoData
            }, t.initView(), l(["user.saveSuccess", "user.personalInfo", "user.base_info.user_name", "user.base_info.position", "user.base_info.sex", "user.base_info.modifyemail", "user.base_info.modifymobile", "user.nameCanNotNull", "user.emailExist", "user.sendFailed", "user.verifyCodeError", "user.errorAndGetAgain", "user.phoneNumHasBound", "user.inputVerifyCode", "user.inputOrigPhoneNumber", "user.inputPhoneNumber", "user.inputNewPhoneNumber", "user.notFilled", "account.positionLimit50"], t)
        }
        angular.module("mainNav")
        .controller("editUserBaseInfoCtrl", e), 
        e.$inject = ["$rootScope", "$scope", "commonService", "commonHttp", "ngDialog", "errHint", "$http", "$timeout", "$jsTipTranslate"]
    }(),
    function () {
        function e(e, t, a, i, n, r, o) {
            function s() {
                p.commpleted = !1, a.post("/api/partner/upgrade", {
                    update_type: c.updateType,
                    activation: c.code
                }).then(function (e) {
                    p.commpleted = !0, 0 == e.status && (l(e.result), t.$emit("userInfoChange", "change"))
                })
            }

            function l(e) {
                r.open({
                    template: "/static/partials/dialogTemplates/upgradeAccountInfo.html",
                    className: "ngdialog-theme-default ngDialog-width-356",
                    scope: t,
                    data: {
                        allPremission: e.used_all_permission,
                        onlyRead: e.used_only_read,
                        onlyReadLimit: e.staff_limit - e.all_permission,
                        allLimit: e.all_permission,
                        failureTime: e.failure_time.split(" ")[0],
                        enterprise_type: e.enterprise_type
                    }
                })
            }
            e.view = "upgrade", e.show_bdp_header = !1;
            var d = e.language || "zh";
            t.upgradeData = {}, t.view = {};
            var c = t.upgradeData,
                p = t.view;
            p.activated = !1, p.commpleted = !1, t.verifyCode = function () {
                var e = c.activationCode;
                if (!e) return n("zh" === d ? "激活码不能为空" : "Activation code couldn't be empty"), i(function () {
                    p.activated = !0
                }, 0), !1;
                a.post("/api/partner/code_verity", {
                    invitation_code: e
                }).then(function (t) {
                    0 == t.status ? (c.type = t.result.type, c.updateType = 3 == c.type ? 1 : 2, c.code = e) : c.type = null, p.activated = !0
                })
            }, t.upgrade = function () {
                p.commpleted = !0, s()
            }
        }
        angular.module("mainNav")
        .controller("partnerUpgradeCtrl", e), 
        e.$inject = ["$rootScope", "$scope", "commonHttp", "$timeout", "errHint", "ngDialog", "$location"]
    }(),
    function () {
        angular.module("BC.directives").constant("formulaDocument", {
            SUM: {
                usage: "SUM(表达式/数值字段)",
                description: "返回表达式或数值字段所有值的合计，只适用于数值字段，空值不会计算",
                example: 'SUM(销售额)，返回"销售额"字段对应的所有非空值的总和',
                type: "SUM",
                aggregate: 1
            },
            AVG: {
                usage: "AVG(表达式/数值字段)",
                description: "返回表达式或数值字段所有值的平均值，只适用于数值字段，空值不会计算",
                example: 'AVG(销售额)，返回"销售额"字段对应的所有非空值的平均值',
                type: "AVG",
                aggregate: 1
            },
            MAX: {
                usage: "MAX(表达式/数值字段)",
                description: "返回表达式或数值字段中的最大值，只适用于数值字段",
                example: 'MAX(销售额)，返回"销售额"字段对应值的最大值',
                type: "MAX",
                aggregate: 1
            },
            MIN: {
                usage: "MIN(表达式/数值字段)",
                description: "返回表达式或数值字段中的最小值，只适用于数值字段",
                example: 'MIN(销售额)，返回"销售额"字段对应值的最小值',
                type: "MIN",
                aggregate: 1
            },
            COUNT: {
                usage: "COUNT(表达式/字段)",
                description: "返回表达式所有有效字段的数据条目数，空值不会计算",
                example: 'COUNT(销售额)，返回"销售额"字段对应的所有非空值的数据条目数',
                type: "COUNT",
                aggregate: 1
            },
            COUNT_DISTINCT: {
                usage: "COUNT(DISTINCT(表达式/字段))",
                description: "去重计数，返回表达式所有有效字段的不同数据条目数，空值不会计算",
                example: 'COUNT(DISTINCT(销售额))，返回"销售额"字段对应的所有非空值的不同数据条目数',
                type: "COUNT_DISTINCT",
                aggregate: 1
            },
            ROUND: {
                usage: "ROUND(表达式／数值字段,自然数)",
                description: "按指定的位数对数值进行四舍五入",
                example: "ROUND([销售额],1) 将销售额四舍五入至小数点后一位",
                type: "ROUND",
                aggregate: 0
            },
            FLOOR: {
                usage: "FLOOR(表达式／数值字段)",
                description: "对指定数值向下取整数",
                example: "FLOOR([销售额]) 将销售额向下取整数",
                type: "FLOOR",
                aggregate: 0
            },
            CEIL: {
                usage: "CEIL(表达式／数值字段)",
                description: "对指定数值向上取整数",
                example: "CEIL([销售额]) 将销售额向下取整数",
                type: "CEIL",
                aggregate: 0
            },
            ABS: {
                usage: "ABS（表达式／数值字段）",
                description: "对指定数值取绝对值",
                example: "ABS(利润)取利润的绝对值",
                type: "ABS",
                aggregate: 0
            },
            PMOD: {
                usage: "PMOD(表达式1／数值字段1,表达式2／数值字段2)",
                description: "取数值1除数值2的余数的绝对值",
                example: "PMOD([销售额],[员工数])取销售额除员工数的的余数的绝对值",
                type: "PMOD",
                aggregate: 0
            },
            UNIX_TIMESTAMP: {
                usage: "UNIX_TIMESTAMP(日期字段)",
                description: "返回‘1970-01-01 00:00:00’到日期字段的秒数",
                example: "UNIX_TIMESTAMP([数据获取日期])，返回‘1970-01-01 00:00:00’到[数据获取日期]的秒数",
                type: "UNIX_TIMESTAMP",
                aggregate: 0
            },
            ROW_MAX: {
                usage: "ROW_MAX(表达式1/字段1,表达式2/字段2……)",
                description: "对比同行中各列的值，返回值最大的，可传入2～8个数值型参数",
                example: "ROW_MAX([部门1销售额],[部门2销售额])，返回该行中部门1销售额与部门1销售额两个字段中的最大值",
                type: "ROW_MAX",
                aggregate: 0
            },
            ROW_MIN: {
                usage: "ROW_MIN(表达式1/字段1,表达式2/字段2……)",
                description: "对比同行中各列的值，返回值最小的，可传入2～8个数值型参数",
                example: "ROW_MIN([部门1销售额],[部门2销售额],345)，返回该行中部门1销售额、部门1销售额两个字段以及值345中的最大值",
                type: "ROW_MIN",
                aggregate: 0
            },
            MAX_DATE: {
                type: "MAX_DATE",
                usage: "MAX_DATE(日期字段)",
                description: "返回该字段所有日期数据中最大值",
                example: "MAX_DATE([登陆时间])，返回该字段中最大的日期",
                aggregate: 1
            },
            MIN_DATE: {
                type: "MIN_DATE",
                usage: "MIN_DATE(日期字段)",
                description: "返回该字段所有日期数据中最小值",
                example: "MIN_DATE([登陆时间])，返回该字段中离当前时间最远的日期",
                aggregate: 1
            },
            HOUR_DIFF: {
                type: "HOUR_DIFF",
                usage: "HOUR_DIFF(日期字段1，日期字段2)",
                description: "返回两个日期相差的小时数，只允许传入日期型字段",
                example: "HOUR_DIFF([登陆时间],[离线时间] )，返回同一行上“登陆时间”至“离线时间”间隔小时数",
                aggregate: 0
            },
            MINUTE_DIFF: {
                type: "MINUTE_DIFF",
                usage: "MINUTE_DIFF(日期字段1，日期字段2)",
                description: "返回两个日期相差的分钟数，只允许传入日期型字段",
                example: "MINUTE_DIFF([登陆时间],[离线时间] )，返回同一行上“登陆时间”至“离线时间”间隔分钟数",
                aggregate: 0
            },
            SECOND_DIFF: {
                type: "SECOND_DIFF",
                usage: "SECOND_DIFF(日期字段1，日期字段2)",
                description: "返回两个日期相差的秒钟数，只允许传入日期型字段",
                example: "SECOND_DIFF([登陆时间],[离线时间] )，返回同一行上“登陆时间”至“离线时间”间隔秒钟数",
                aggregate: 0
            },
            DAY_DIFF: {
                usage: "DAY_DIFF(日期字段1,日期字段2)",
                description: "返回两个日期相差的天数，只允许传入日期型字段",
                example: 'DAY_DIFF([离职日期],[入职日期] )，返回同一行上"离职日期"至"入职日期"间隔天数',
                type: "DAY_DIFF",
                aggregate: 0
            },
            MONTH_DIFF: {
                usage: "MONTH_DIFF(日期字段1,日期字段2)",
                description: "返回两个日期相差的月数，只允许传入日期型字段",
                example: 'MONTH_DIFF([离职日期],[入职日期] )，返回同一行上"离职日期"至"入职日期"间隔月数',
                type: "MONTH_DIFF",
                aggregate: 0
            },
            YEAR_DIFF: {
                usage: "YEAR_DIFF(日期字段1,日期字段2)",
                description: "返回两个日期相差的年数，只允许传入日期型字段",
                example: 'YEAR_DIFF([离职日期],[入职日期] )，返回同一行上"离职日期"至"入职日期"间隔年数',
                type: "YEAR_DIFF",
                aggregate: 0
            },
            WEEK: {
                usage: "WEEK(日期字段)",
                description: "返回该日期在当年的第几周，只允许传入日期型字段",
                example: "WEEK([入职日期])，返回入职日期为该年的第几周",
                type: "WEEK",
                aggregate: 0
            },
            QUARTER: {
                usage: "QUARTER(日期字段)",
                description: "返回该日期在当年的第几个季度，只允许传入日期型字段",
                example: "QUARTER([入职日期])，返回入职日期为该年的第几个季度",
                type: "QUARTER",
                aggregate: 0
            },
            NOW: {
                usage: "NOW()",
                description: "返回当前系统时间，无需参数",
                type: "NOW",
                aggregate: 0
            },
            FIRST_DAY_OF_MONTH: {
                usage: "FIRST_DAY_OF_MONTH(表达式1/字段1,表达式2/字段2)",
                description: "返回某月第一天，函数参数为数值型字段，依次代表年，月",
                example: 'FIRST_DAY_OF_MONTH(2015,1)，返回"2015年1月1日 00:00:00"',
                type: "FIRST_DAY_OF_MONTH",
                aggregate: 0
            },
            LAST_DAY_OF_MONTH: {
                usage: "LAST_DAY_OF_MONTH(表达式1/字段1,表达式2/字段2)",
                description: "返回某月最后一天，函数参数为数值型字段，依次代表年，月",
                example: 'LAST_DAY_OF_MONTH(2015,1)，返回"2015年1月31日 00:00:00"',
                type: "LAST_DAY_OF_MONTH",
                aggregate: 0
            },
            WORK_DAY_OF_MONTH: {
                usage: "WORK_DAY_OF_MONTH(表达式1/字段1,表达式2/字段2)",
                description: "返回某月工作天数，函数参数为数值型字段，依次代表年，月",
                example: "WORK_DAY_OF_MONTH(2015,1)，返回2015年1月工作日天数",
                type: "WORK_DAY_OF_MONTH"
            },
            DAY_OF_WEEK: {
                usage: "DAY_OF_WEEK(日期字段)",
                description: "返回该日期对应该周的天数",
                example: "DAY_OF_WEEK([下单时间])",
                type: "DAY_OF_WEEK",
                aggregate: 0
            },
            IF: {
                usage: "IF(表达式，结果1，结果2)",
                description: 'IF为判断函数，表达式为比较型或计算型语句。若表达式的计算结果正确，则返回"结果1"，否则，返回"结果2"',
                example: 'IF([订单数]  > 500, "合格", "不合格")。结果为若该行"订单数"字段对应值大于500，则返回"合格"，否则返回"不合格"',
                type: "IF",
                aggregate: 0
            },
            YEAR: {
                usage: "YEAR(日期字段)",
                description: "返回该日期对应的年份。只允许传入日期型字段",
                example: 'YEAR([下单时间])，返回该行"下单时间"字段对应的年份',
                type: "YEAR",
                aggregate: 0
            },
            MONTH: {
                usage: "MONTH(日期字段)",
                description: "返回该日期对应的月份。只允许传入日期型字段",
                example: 'MONTH([下单时间])，返回该行"下单时间"字段对应的年份',
                type: "MONTH",
                aggregate: 0
            },
            DAY: {
                usage: "DAY(日期字段)",
                description: "返回该日期对应的日的值。只允许传入日期型字段",
                example: 'DAY([下单时间])，返回该行"下单时间"字段对应的日的值',
                type: "DAY",
                aggregate: 0
            },
            HOUR: {
                usage: "HOUR(日期字段)",
                description: "返回该日期对应的小时的值。只允许传入日期型字段",
                example: 'HOUR([下单时间])，返回该行"下单时间"字段对应的小时的值',
                type: "HOUR",
                aggregate: 0
            },
            MINUTE: {
                usage: "MINUTE([时间字段])",
                description: "返回该日期对应的分钟的值。只允许传入日期型字段",
                example: "MINUTE([下单时间])，返回该行下单时间字段对应的分钟的值",
                type: "MINUTE",
                aggregate: 0
            },
            SECOND: {
                usage: "SECOND([时间字段])",
                description: "返回该日期对应的秒的值。只允许传入日期型字段",
                example: "SECOND([下单时间])，返回该行下单时间字段对应的秒的值",
                type: "SECOND",
                aggregate: 0
            },
            TO_DATE: {
                type: "TO_DATE",
                usage: "TO_DATE(日期字段)",
                description: "返回日期字段的年月日部分",
                example: "TO_DATE([入库日期])，返回入库日期的年月日时间",
                aggregate: 0
            },
            DATE_ADD: {
                type: "DATE_ADD",
                usage: "DATE_ADD(起始日期, 数值字段)",
                description: "返回从起始日期算起，数值字段对应天数之后的日期",
                example: "DATE_ADD([入库日期], 1)，返回货品入库第二天的日期",
                aggregate: 0
            },
            DATE_SUB: {
                type: "DATE_SUB",
                usage: "DATE_SUB(起始日期, 数值字段)",
                description: "返回从起始日期算起，数值字段对应天数之前的日期",
                example: "DATE_SUB([出库日期], 1)，返回货品出库前一天的日期",
                aggregate: 0
            },
            CONCAT: {
                type: "CONCAT",
                usage: "CONCAT(字段1, 字段2...)",
                description: "返回顺序联结各参数的字符串",
                example: "CONCAT([货品编号], [类型编号])，返回货品编号和类型编号联结后的字符串",
                aggregate: 0
            },
            INSTRING: {
                type: "INSTRING",
                usage: "INSTRING(字符串1, 字符串2[, 起始位置])",
                description: "返回字符串2在字符串1的起始位置后第一次出现时的位置，其中起始位置可选",
                example: 'INSTRING([名字],"尔”)，返回“尔”在名字字段中第一次出现时的位置',
                aggregate: 0
            },
            LENGTH: {
                type: "LENGTH",
                usage: "LENGTH(字符串)",
                description: "返回字符串的长度",
                example: "LENGTH([货品名])，返回货品名的长度",
                aggregate: 0
            },
            REPEAT: {
                type: "REPEAT",
                usage: "REPEAT(字符串, 数值)",
                description: "返回字符串重复对应数值次数后的新字符串结果",
                example: "REPEAT([货品名], 2)，返回货品名重复2次得到字符串",
                aggregate: 0
            },
            REVERSE: {
                type: "REVERSE",
                usage: "REVERSE(字符串)",
                description: "返回字符串倒转后的新字符串结果",
                example: "REVERSE([类型编号])，返回类型编号倒转后的字符串",
                aggregate: 0
            },
            SUBSTR: {
                type: "SUBSTR",
                usage: "SUBSTR(字符串, 起始位置[, 长度])",
                description: "返回从起始位置起对应长度的字符串的子字符串，长度为可选项",
                example: "SUBSTR([商品类型], 4)，返回商品类型的索引为4起至末尾的子字符串",
                aggregate: 0
            },
            REGEXP_EXTRACT: {
                type: "REGEXP_EXTRACT",
                usage: "REGEXP_EXTRACT(字符串, 正则表达式[, 索引])",
                description: "返回字符串正则表达式解析结果,需要注意的是正则表达式的\\需要使用\\进行转义，即\\\\d)，'索引'是返回结果(0表示返回全部结果，1表示返回正则表达式中第一个() 对应的结果)",
                example: "REGEXP_EXTRACT([货品ID],'[\\\\d+\\\\-]+', 0)，返回货品ID中的数字部分",
                aggregate: 0
            },
            REGEXP_REPLACE: {
                type: "REGEXP_REPLACE",
                usage: "REGEXP_REPLACE(字符串A, 正则表达式, 字符串B)",
                description: "返回将字符串A中符合正则表达式的部分替换成字符串B后的结果",
                example: "REGEXP_REPLACE([货品名], '[\\\\d＋]+', '')，返回将货品名中数字部分替换成空字符串后的结果",
                aggregate: 0
            },
            TIME_CONVERT: {
                type: "TIME_CONVERT",
                usage: "TIME_CONVERT(时间戳字段[, 类型])",
                description: "UNIX时间戳转日期，支持秒级，毫秒级，传入参数为unix时间戳，如果时间戳精确到毫秒级，第二个参数传1",
                example: "TIME_CONVERT([时间戳字段])；TIME_CONVERT(1441509383)；TIME_CONVERT([时间戳字段]，1)；TIME_CONVERT(1441509383000，1)",
                aggregate: 0
            },
            PERCENT: {
                type: "PERCENT",
                usage: "PERCENT([数值字段], 百分位)",
                description: "求数值类型字段的中位数及百分位数, 传入参数为数值字段;第二个参数范围是0<p<1,例如0.1，0.25，0.75，0.95",
                example: "PERCENT([数学考试分数], 0.5)，返回考试分数的中位数",
                aggregate: 1
            },
            IP_LOCATION: {
                type: "IP_LOCATION",
                usage: "IP_LOCATION([IP字段], 位置类型)",
                description: "返回IP对应的地理信息，第一个参数为ip字段或者具体ip，第二个参数为返回类型，0代表国家，1代表地区，2代表城市",
                example: 'IP_LOCATION("111.207.151.66", 2)，返回北京市',
                aggregate: 0
            },
            COALESCE: {
                type: "COALESCE",
                usage: "COALESCE([字段1], [字段2], '默认')",
                description: "返回参数中的第一个非空值；如果所有值都为NULL，那么返回NULL",
                example: "COALESCE(null, '100', '50')",
                aggregate: 0
            },
            TLD: {
                type: "TLD",
                usage: "TLD(合法的URL链接/字段)",
                description: "返回合法URL链接的一级域名，注意需带有协议部分，如http。对于不合法的链接均范围null",
                example: "TLD('https://www.bdp.cn'), 返回'bdp.cn",
                aggregate: 0
            }
        }).directive("bdpFormula", ["formulaDocument", function (e) {
            return {
                restrict: "A",
                link: function (t, a, i) {
                    function n(t) {
                        return t = t.toUpperCase(), "WHEN" == t ? t = "CASE_WHEN" : "DISTINCT" == t && (t = "COUNT_DISTINCT"), e[t]
                    }

                    function r() {
                        o = CodeMirror.fromTextArea(a[0], {
                            mode: "text/x-bdp-formula",
                            indentWithTabs: !0,
                            smartIndent: !0,
                            lineWrapping: !0,
                            matchBrackets: !0,
                            theme: "paraiso-light",
                            fields: t.fields,
                            placeholder: i.p ? "" : "SUM([A]) + SUM([B])"
                        }), o.on("change", function () {
                            t.newField.aggregator = o.getValue().replace(/0xa0/, "")
                        }), s = bdp.utils.throttle(function () {
                            for (var e = o.getCursor(), a = e.ch, i = 0, r = a; r > -1;) {
                                var s = o.getTokenAt({
                                    line: e.line,
                                    ch: r
                                });
                                if (!s.string) break;
                                if (null == s.type)
                                    for (var l = s.string.length; --l > -1;) ")" == s.string.charAt(l) && i++;
                                else if ("keyword" == s.type) {
                                    if (0 == i) {
                                        var d = s.string;
                                        t.currFunc = n(d), t.$$phase || t.$digest();
                                        break
                                    }
                                    i--
                                }
                                r -= s.string.length
                            }
                        }, 300), o.on("cursorActivity", s)
                    }
                    var o, s;
                    setTimeout(function () {
                        var e = {
                            funcQueue: [],
                            loadLibInProgress: !1
                        };
                        thirdPluginLoader({
                            initFun: r,
                            libSrc: "https://s1.bdp.cn/static/js/lib/bdpFormula/bdp-codemirror_1fb68f2.js",
                            otherSrc: "",
                            libId: window.CodeMirror && window.CM_bdpFormulaPlugin
                        }, e)
                    }, 200), t.add_func_to_formula = function (e) {
                        var t = o.getCursor(),
                            a = "COUNT_DISTINCT" === e.type ? "COUNT(DISTINCT())" : e.type + "()",
                            i = t.ch + a.length - ("COUNT_DISTINCT" == e.type ? 2 : 1);
                        o.replaceSelection(a), o.setCursor(t.line, i), o.focus()
                    }, t.add_field_to_formula = function (e) {
                        o.replaceSelection("[" + e.name + "]"), o.focus()
                    }, t.isClassify = !0, t.search_formula = function (e) {
                        if (t.isClassify = !1, t.formula_query) {
                            var a = [];
                            angular.forEach(t.func_list[0], function (e) {
                                e.type.indexOf(t.formula_query) >= 0 || e.type.indexOf(t.formula_query.toUpperCase()) >= 0 ? a.push(e) : (e.description.indexOf(t.formula_query) >= 0 || e.description.indexOf(t.formula_query.toUpperCase()) >= 0) && a.push(e)
                            }), t.func_list_result = a
                        } else t.func_list_result = angular.copy(t.func_list[0]);
                        t.$$phase || t.$digest()
                    }, t.formula_query = "en" == $.cookie("locale") ? "All" : "全部", t.show_classify_list = !1, t.inputQuery = function () {
                        t.show_classify_list = !1, t.show_top = !1, angular.element("#function_query").addClass("long")
                    }, t.clearContent = function () {
                        t.isClassify && (t.formula_query = "", t.isClassify = !1)
                    }, t.cancelQuery = function () {
                        angular.element("#function_query").removeClass("long"), "" == t.formula_query && (t.formula_query = "en" == $.cookie("locale") ? "All" : "全部", t.isClassify = !0, t.func_list_result = t.func_list[0])
                    }, t.showClassify = function (e) {
                        t.show_classify_list = !t.show_classify_list, t.show_top = !t.show_top, t.show_classify_list ? angular.element("#function_query").focus() : angular.element("#function_query").blur()
                    }, t.selectClassifyItem = function (e) {
                        switch (t.isClassify = !0, t.show_classify_list = !1, t.show_top = !1, e) {
                            case 0:
                                t.formula_query = "en" == $.cookie("locale") ? "All" : "全部";
                                break;
                            case 1:
                                t.formula_query = "en" == $.cookie("locale") ? "Aggregate" : "聚合统计";
                                break;
                            case 2:
                                t.formula_query = "en" == $.cookie("locale") ? "Not Aggregate" : "非聚合统计";
                                break;
                            case 3:
                                t.formula_query = "en" == $.cookie("locale") ? "Date and Time" : "日期和时间";
                                break;
                            case 4:
                                t.formula_query = "en" == $.cookie("locale") ? "String" : "字符串";
                                break;
                            case 5:
                                t.formula_query = "en" == $.cookie("locale") ? "Logic" : "逻辑";
                                break;
                            case 6:
                                t.formula_query = "en" == $.cookie("locale") ? "Number" : "数值"
                        }
                        t.func_list_result = t.func_list[e]
                    }, t.cancelSearch = function () {
                        t.show_classify_list = !1, t.show_top = !1, angular.element("#function_query").blur()
                    }, t.search_field = function (e) {
                        if (t.field_query) {
                            var a = [];
                            angular.forEach(t.field_list, function (e) {
                                (e.name.indexOf(t.field_query) >= 0 || e.name.indexOf(t.field_query.toUpperCase()) >= 0) && a.push(e)
                            }), t.fieldListResult = a
                        } else t.fieldListResult = angular.copy(t.field_list);
                        t.fieldListResult = bdp.utils.addSpecParamsToFields(t.fieldListResult), t.$$phase || t.$digest()
                    }
                }
            }
        }]).directive("funcTip", [function () {
            return {
                restrict: "A",
                link: function (e, t, a) {
                    var i = a.funcTip ? t.closest(a.funcTip)[0] : t.parent().parent()[0];
                    t.hover(function () {
                        if (i) {
                            var e = t[0].offsetTop,
                                a = i.scrollTop,
                                n = $(this).find(".func-tip");
                            n.css({
                                top: e - a - n.outerHeight() / 2 + 14
                            })
                        }
                    })
                }
            }
        }])
    }(),
    function () {
        angular.module("BC.controllers.chartEdit")
        .controller("FormulaEditController", ["$scope", "formulaDocument", "dataTypeList", "commonHttp", function (e, t, a, i) {
            e.func_list = [];
            e.typeList = a;
            var n = e.field_list = e.ngDialogData.fieldList;
            e.fieldListResult = angular.copy(e.ngDialogData.fieldList), e.fieldListResult = bdp.utils.addSpecParamsToFields(e.fieldListResult), e.fields = [];
            for (var r = 0, o = n.length; r < o; r++) n[r].name && (e.fields[r] = n[r].name);
            e.showLoading = !0, i.get("/api/function/list").then(function (t) {
                if ("0" === t.status) {
                    var a = t.result.classification;
                    e.func_list_result = angular.copy(a[0]), e.func_list = angular.copy(a);
                    var i = {};
                    angular.forEach(a, function (e, t) {
                        i[t] = [], angular.forEach(a[t], function (e, a) {
                            i[t].push({
                                usage: e.usage,
                                description: e.desc,
                                example: e.demo,
                                type: e.name
                            })
                        })
                    }), 
                    "wb" == e.newField.module && (i[1] = [], i[0] = [], i[0] = i[0].concat(i[2]).concat(i[3]).concat(i[4]).concat(i[5]).concat(i[6])), 
                    e.func_list_result = angular.copy(i[0]), 
                    e.func_list = angular.copy(i), 
                    e.showLoading = !1
                }
            })
        }])
    }(), 
    angular
    .module("BC.directives")
    .controller("bubbleTabCtrl", ["$scope", function (e) {
    e.tab = {
        index: 0
    }, 
    e.onDropToColor = function (e, t) {
        $.$broadcast("onDropToColor", {
            originEvent: e,
            ui: t
        })
    }, 
    e.onDropToSize = function (e, t) {
        $.$broadcast("onDropToSize", {
            originEvent: e,
            ui: t
        })
    }
}]),
    function () {
        function e(e, t, a, i, n, r, o, s, l) {
            function d(e, t, a) {
                function i(e, o, s) {
                    (e || []).forEach(function (e, l) {
                        "dashboard" === e.attribute && (!t || t && e.check) ? (n[s] || (n[s] = {
                            attribute: "project",
                            name: o.name,
                            proj_id: o.proj_id
                        }, n[s][a] = []), n[s][a].push({
                            dsh_id: e.dsh_id,
                            name: e.name,
                            attribute: "dashboard"
                        })) : "project" === e.attribute && (r++, i(e.subs, e, r))
                    })
                }
                var n = [],
                    r = 0;
                return i(e, null, r), _.compact(n)
            }

            function c(e) {
                angular.forEach(M.worktableList, function (t, a) {
                    angular.forEach(t.tb_list, function (i, n) {
                        i.tb_id == e && (t.tb_list.splice(n, 1), 0 == t.tb_list.length && M.worktableList.splice(a, 1))
                    })
                })
            }

            function p(e) {
                angular.forEach(M.dashList, function (t, a) {
                    angular.forEach(t.subs, function (i, n) {
                        i.dsh_id == e && t.subs.splice(n, 1), 0 == t.subs.length && M.dashList.splice(a, 1)
                    })
                })
            }

            function u(e, t, a, i) {
                var i = "folderList" == i ? "folderList" : "projList",
                    n = "folderList" == i ? "tb_list" : "subs",
                    r = F[i][t],
                    o = r[n];
                if ("folderList" == i ? void 0 !== o.selected ? o[a].selected = e : e ? o[a].add = !0 : (c(o[a].tb_id), delete o[a].add) : e || p(o[a].dsh_id), e) {
                    var s = 0;
                    angular.forEach(o, function (e) {
                        e.check && s++
                    }), s == o.length && (r.check = e)
                } else {
                    if (!r.check) return;
                    r.check = e
                }
            }

            function h(e, t, a) {
                var i = "folderList" == a ? "tb_list" : "subs";
                angular.forEach(F[a][t][i], function (t) {
                    t.disable || (t.check = e, t.check ? t.add = !0 : t.add && ("folderList" == a ? c(t.tb_id) : p(t.dsh_id), delete t.add))
                })
            }

            function f() {
                function t(t) {
                    r.open({
                        template: "/static/partials/dialogTemplates/add-dashboard.html",
                        className: "ngdialog-theme-default ngDialog-width-700",
                        scope: e
                    })
                }
                F.projList ? t() : C().then(function (e) {
                    var a = [];
                    angular.forEach(e.proj, function (e) {
                        0 == e.type && 0 == e.property && a.push(e)
                    }), F.projList = angular.copy(a), l.initDeep(F.projList, 0), t()
                })
            }

            function g() {
                function t(t) {
                    r.open({
                        template: "/static/partials/dialogTemplates/add-worktable.html",
                        className: "ngdialog-theme-default ngDialog-width-700",
                        scope: e,
                        data: {
                            init: !!t
                        },
                        controller: "addWorktableCtrl"
                    })
                }
                F.originFolderList ? (F.folderList = angular.copy(F.originFolderList), t()) : x().then(function (e) {
                    0 == e.status && (e.result.map(function (e) {
                        e.name || (e.name = "根目录")
                    }), F.folderList = function (e) {
                        function t(e, i, n) {
                            e.sub_folders && e.sub_folders.length > 0 && a(e.sub_folders, t), 0 != e.tb_list.length || e.sub_folders && 0 != e.sub_folders.length || n.splice(i, 1)
                        }
                        var a = bdp.utils.descMap;
                        return a(e, t), e
                    }(e.result), F.originFolderList = angular.copy(F.folderList), t("initData"))
                })
            }

            function m(t, a) {
                if ("create" == t) return F.list.push(a), void e.$emit("userInfoChange", "change");
                for (var i = F.list, n = 0, r = i.length; n < r; n++) i[n].ws_id == a.ws_id && (i[n].name = a.name);
                e.$emit("userInfoChange", "change")
            }

            function v() {
                function e(i) {
                    angular.forEach(i, function (i) {
                        i.checked && (t.push(i.group_id), a.push(i)), i.group_list && i.group_list.length > 0 && e(i.group_list)
                    })
                }
                var t = [],
                    a = [];
                return e(F.groupTree), {
                    groupIds: t,
                    groupList: a
                }
            }

            function b() {
                C().then(function (e) {
                    F.projAllList = angular.copy(e.proj)
                })
            }

            function y(a) {
                e.getInfoLoading = !0, i("正在请求信息，请稍等"), F.curWorkspace = a, F.projAllList || b(), o.workspace.info({
                    ws_id: a
                }).then(function (a) {
                    if (e.getInfoLoading = !1, e.pageLoading = !1, 0 == a.status) {
                        t.global.hint = "";
                        var i = a.result;
                        l.initDeep(i.proj_list, 0), M.dashList = i.proj_list, M.worktableList = i.folder_list, M.originalworktableList = angular.copy(i.folder_list), M.groupList = i.group_list.list, M.groupListAll = i.group_list.is_all, w(), angular.forEach(i.authority_info, function (e) {
                            e.admin && (e.admin = !0), e.rule && (e.rule = !0), (e.dash_list.is_all || e.dash_list.proj_list && e.dash_list.proj_list.length > 0) && (e.dash_list.check = !0), (e.tb_list.is_all || e.tb_list.tb_list && e.tb_list.tb_list.leghth > 0) && (e.tb_list.check = !0)
                        }), M.authorityInfo = i.authority_info, F.showTitle = a.result.name || "", F.authority = {}
                    }
                })
            }

            function w() {
                var e = {};
                M.worktableList.map(function (t, a) {
                    var i = {
                        index: a
                    };
                    t.sub_folders && t.sub_folders.length > 0 && (i.sub_folders = {}, t.sub_folders.map(function (e, n) {
                        i.sub_folders[e.name] = {
                            subIndex: n,
                            parentFolder: t.name,
                            parentIndex: a
                        }
                    })), e[t.name ? t.name : "根目录"] = i
                }), M.folderInfo = e
            }

            function C() {
                var e = {
                    categories: angular.toJson([0, 2])
                };
                return o.project.getTree(e)
            }

            function x(e) {
                var t = {
                    ws_id: F.curWorkspace
                };
                return "preview" !== e && (t.is_all = !0), o.workspace.tbListPreview(t)
            }

            function k(t) {
                e.pageLoading = !0, o.workspace.workspaceLog(t).then(function (t) {
                    0 == t.status ? (e.pageLoading = !1, e.operateLogView.logData = t.result.log, angular.forEach(e.operateLogView.logData, function (e) {
                        e.c_time = s("date")(e.c_time, "yyyy-MM-dd HH:mm:ss")
                    }), e.operateLogView.count = t.result.count, e.operateLogView.total_page = parseInt(e.operateLogView.count / 100), e.operateLogView.count % O > 0 && e.operateLogView.total_page++) : i(Number(t.status))
                })
            }

            function D(e) {
                return o.workspace.delete({
                    ws_id: e
                })
            }

            function S(e) {
                return o.workspace.modifyDashList(e)
            }

            function T(e) {
                return o.workspace.modifyTableList(e)
            }

            function I() {
                return o.user.groupList()
            }

            function L(e) {
                return o.workspace.modifyGroupList(e)
            }

            function A(e) {
                return o.workspace.modifyAuthority(e)
            }

            function E(e) {
                return o.workspace.userList(e)
            }
            t.view = "workspace", t.show_bdp_header = !0, e.workspaceTab = "workspaceSetting", e.workspaceView = {
                view: "cat",
                projList: null,
                list: [],
                curWorkspace: "",
                showPermisionUserList: !1,
                authority: {},
                showTitle: "",
                initView: !0
            }, e.workspaceData = {
                projList: null,
                worktableList: null
            };
            var F = e.workspaceView,
                M = e.workspaceData;
            ! function () {
                o.workspace.list().then(function (t) {
                    if (0 == t.status && (F.initView = !1, F.list = t.result, F.list.length > 0)) {
                        var a = j.getItem("current_workspace_id") || "",
                            i = {},
                            n = !1;
                        if (a ? angular.forEach(F.list, function (e) {
                                e.ws_id == a && (n = !0, i = e)
                            }) : n = !1, n) F.curWorkspace = i.ws_id, F.admin = i.admin;
                        else {
                            var r = t.result[0];
                            F.curWorkspace = r.ws_id, F.admin = r.admin
                        }
                        e.pageLoading = !0, y(F.curWorkspace)
                    }
                })
            }(), e.changeTab = function (t) {
                "workspaceSetting" == t ? (e.workspaceTab = "workspaceSetting", F.view = "cat", y(F.curWorkspace)) : "operateLog" == t && (e.workspaceTab = "operateLog", e.operateLog.info(F.curWorkspace))
            };
            var j = window.localStorage;
            e.workspace = {
                info: function (t) {
                    F.folderList = null, F.admin = t.admin, F.view = "cat", e.workspaceTab = "workspaceSetting", e.pageLoading = !0, j.setItem("current_workspace_id", t.ws_id), y(t.ws_id)
                },
                addWorkspace: function () {
                    F.mode = "create", F.workspaceName = "", r.open({
                        templateUrl: "/static/partials/dialogTemplates/create_workspace.html",
                        scope: e,
                        className: "ngdialog-theme-default ngdialog-small"
                    })
                },
                createWorkspace: function (e) {
                    if (!e) return void i("请输入名称");
                    var t = !1;
                    if (angular.forEach(F.list, function (a) {
                            a.name.toLocaleLowerCase() == e.toLocaleLowerCase() && (t = !0)
                        }), t) return void i("该名称的工作区已存在，请重新输入");
                    o.workspace.create({
                        name: e
                    }).then(function (t) {
                        if (0 == t.status) {
                            var a = t.result,
                                i = {
                                    ws_id: a,
                                    name: e,
                                    admin: 0
                                };
                            m("create", i), F.curWorkspace = i.ws_id, y(i.ws_id), F.mode = "cat", F.admin = 0, r.closeAll()
                        }
                    })
                },
                modifyWorkspace: function (t, a) {
                    var n = !1;
                    if (angular.forEach(F.list, function (e) {
                            e.ws_id != t && e.name == a && (n = !0)
                        }), n) return void i("该名称的工作区已存在，请重新输入");
                    var r = {
                        ws_id: t,
                        name: a
                    };
                    return o.workspace.modify(r).then(function (t) {
                        0 == t.status && (i("修改成功"), e.workspaceView.showTitle = a, m("update", r))
                    }), a
                },
                deleteWorkspace: function (a) {
                    confirm("确定要删除改工作区？") && (e.pageLoading = !0, D(a).then(function (n) {
                        if (0 == n.status) {
                            i("删除成功");
                            for (var r, o = 0, s = F.list.length; o < s; o++)
                                if (F.list[o].ws_id == a) {
                                    r = o;
                                    break
                                }
                            F.list.splice(r, 1), a == F.curWorkspace && F.list.length > 0 && y(F.list[0].ws_id), e.$emit("userInfoChange", "change"), t.last_dash_path && t.last_dash_path.indexOf(a) >= 0 && (t.last_dash_path = ""), t.last_worktable_path && t.last_worktable_path.indexOf(a) >= 0 && (t.last_worktable_path = ""), t.last_template_path && t.last_template_path.indexOf(a) >= 0 && (t.last_template_path = ""), t.wsId == a && (t.wsId = "")
                        } else i(Number(n.status));
                        e.pageLoading = !1
                    }))
                }
            }, e.dash = {
                add: function () {
                    f()
                },
                cancel: function () {
                    y(F.curWorkspace), F.view = "cat"
                },
                projChange: function (e) {
                    h(F.projList[e].check, e, "projList")
                },
                del: function (e, t, a) {
                    M.dashList[t].subs.splice(a, 1), angular.forEach(F.projList, function (t) {
                        angular.forEach(t.subs, function (a) {
                            a.dsh_id == e && (a.check = !1, t.check = !1)
                        })
                    })
                },
                dshChange: function (e, t) {
                    var a = F.projList[e].subs[t].check;
                    F.projList[e].subs[t];
                    u(a, e, t, "projList")
                },
                confirmAdd: function () {
                    e.newAddList = d(F.projList, !0, "subs"), e.chooseDashObj = [].concat(M.dashList, e.newAddList), M.dashList = angular.copy(e.chooseDashObj), l.initDeep(M.dashList, 0), r.closeAll()
                },
                save: function () {
                    if (!e.chooseDashObj) return e.dash.cancel(), !1;
                    if (0 == M.dashList.length) return void i("请选择至少一个仪表盘");
                    if (confirm("移入此工作区的仪表盘将从超级管理员的仪表盘中移除，是否继续？")) {
                        e.pageLoading = !0;
                        var a = d(e.chooseDashObj, !1, "dsh_list");
                        S({
                            ws_id: F.curWorkspace,
                            proj_list: angular.toJson(a)
                        }).then(function (a) {
                            e.pageLoading = !1, 0 == a.status && (F.projList = null, x("preview").then(function (e) {
                                if (0 == e.status) {
                                    if (t.last_dash_path) var a = t.last_dash_path.replace(/\/dash.*\//, "");
                                    if (a) {
                                        var n = !1;
                                        angular.forEach(M.dashList, function (e) {
                                            angular.forEach(e.subs, function (e) {
                                                e.dsh_id == a && (n = !0)
                                            })
                                        }), n && (t.last_dash_path = "")
                                    }
                                    i("保存成功"), y(F.curWorkspace), F.view = "cat"
                                }
                            }))
                        })
                    }
                }
            }, e.worktable = {
                add: function () {
                    g()
                },
                cancel: function () {
                    y(F.curWorkspace), F.view = "cat", F.folderList = null
                },
                save: function () {
                    e.pageLoading = !0, T({
                        ws_id: F.curWorkspace,
                        folder_list: angular.toJson(M.worktableList)
                    }).then(function (t) {
                        e.pageLoading = !1, 0 == t.status && (i("修改成功"), F.view = "cat", y(F.curWorkspace))
                    }), F.folderList = null
                },
                folderChange: function (e) {
                    h(F.folderList[e].check, e, "folderList")
                },
                tbChange: function (e, t) {
                    u(F.folderList[e].tb_list[t].check, e, t, "folderList")
                }
            }, e.user = {
                checkAll: function () {
                    var e = F.groupListAll;
                    angular.forEach(F.groupList, function (t) {
                        t.check = e
                    })
                },
                groupChange: function (e) {
                    if (e) {
                        var t = 0;
                        angular.forEach(F.groupList, function (e) {
                            e.check && t++
                        }), t == F.groupList.length ? F.groupListAll = !0 : F.groupListAll = !1
                    } else F.groupListAll = !1
                },
                modify: function () {
                    var e = M.groupList;
                    I().then(function (t) {
                        function a(e) {
                            angular.forEach(e, function (e) {
                                i.indexOf(e.group_id) >= 0 && (e.checked = !0), e.group_list && e.group_list.length > 0 && a(e.group_list)
                            })
                        }
                        if (0 == t.status) {
                            F.view = "users", F.groupTree = t.result;
                            var i = [];
                            angular.forEach(e, function (e) {
                                i.push(e.group_id)
                            }), a(F.groupTree), F.groupRange = M.groupListAll
                        }
                    })
                },
                save: function () {
                    var t = F.groupRange;
                    if (0 == t) {
                        var a = v();
                        if (0 == a.groupIds.length) return void i("请至少选择一个分组")
                    }
                    var n = {
                        ws_id: F.curWorkspace
                    };
                    1 == t ? n.is_all = 1 : n.group_list = angular.toJson(a.groupIds), e.pageLoading = !0, L(n).then(function (n) {
                        e.pageLoading = !1, 0 == n.status && (M.groupList = 1 == t ? [] : a.groupList, F.view = "cat", F.userList = null, y(F.curWorkspace), i("保存成功"))
                    })
                },
                cancel: function () {
                    y(F.curWorkspace), F.view = "cat"
                }
            }, e.authority = {
                checkGroupList: function () {
                    M.groupListAll || 0 != M.groupList.length ? F.view = "authorityInfo" : i("请优先添加需要管理的用户组")
                },
                showUserList: function () {
                    F.showPermisionUserList = !0, F.userList || (e.showLoading = !0, E({
                        ws_id: F.curWorkspace
                    }).then(function (t) {
                        0 == t.status && (F.userList = t.result, e.showLoading = !1)
                    }))
                },
                addUser: function (e) {
                    if (M.authorityInfo || (M.authorityInfo = []), M.authorityInfo.length > 0) {
                        var t = !1;
                        if (angular.forEach(M.authorityInfo, function (a) {
                                a.user_id == e.user_id && (t = !0)
                            }), t) return i("该用户已添加"), void(F.showPermisionUserList = !1)
                    }
                    M.authorityInfo.push({
                        user_id: e.user_id,
                        name: e.name,
                        dash_list: {
                            is_all: 0,
                            check: !1
                        },
                        tb_list: {
                            is_all: 0,
                            check: !1
                        },
                        rule: 0,
                        admin: 0
                    }), F.showPermisionUserList = !1
                },
                del: function (e) {
                    M.authorityInfo.splice(e, 1)
                },
                modify: function () {
                    F.view = "cat"
                },
                dashChange: function (e) {
                    var t = M.authorityInfo[e],
                        a = t.dash_list.check;
                    t.dash_list.is_all = a ? 1 : 0, a ? t.dash_list.proj_list = [] : t.admin = !1
                },
                tbChange: function (e) {
                    var t = M.authorityInfo[e],
                        a = t.tb_list.check;
                    t.tb_list.is_all = a ? 1 : 0, t.tb_list.tb_list = [], a || (t.admin = !1)
                },
                setAdmin: function (e) {
                    var t = this;
                    t._index = e;
                    var a = M.authorityInfo[t._index],
                        i = a.admin;
                    a.dash_list.is_all = i ? 1 : 0, a.dash_list.check = i, a.dash_list.proj_list = [], a.tb_list.is_all = i ? 1 : 0, a.tb_list.check = i, a.tb_list.tb_list = [], a.rule = i
                },
                ruleChange: function (e) {
                    var t = this;
                    t._index = e;
                    var a = M.authorityInfo[t._index];
                    a.rule || (a.admin = !1)
                },
                _index: 0,
                userId: "",
                showDashDialog: function (t, a, i, n) {
                    i.stopPropagation();
                    var o = this;
                    o._index = a, o.userId = t.user_id;
                    var s = F.authority,
                        l = function (e) {
                            function t(e, t) {
                                angular.forEach(n, function (a) {
                                    a.proj_id == e && (a.show = !0, "number" == typeof t ? a.is_all = 1 : (a.is_all = 0, angular.forEach(a.subs, function (e) {
                                        $.inArray(e.dsh_id, t) > -1 && (e.check = !0)
                                    })))
                                })
                            }
                            var a = M.authorityInfo[o._index],
                                i = a.dash_list,
                                n = angular.copy(e);
                            return $.isEmptyObject(i) || 1 == i.is_all && (!i.proj_list || 0 == i.proj_list.length) ? (angular.forEach(n, function (e) {
                                e.is_all = 0
                            }), n) : 0 == i.is_all ? (i.proj_list.length > 0 && angular.forEach(i.proj_list, function (e) {
                                1 != e.is_all ? t(e.proj_id, e.dash_list) : t(e.proj_id, 1)
                            }), angular.forEach(n, function (e) {
                                e.hasOwnProperty("is_all") || (e.is_all = 0)
                            }), n) : n
                        }(d(M.dashList, !1, "subs"));
                    s[o.userId] ? s[o.userId].dash || (s[o.userId].dash = l) : (s[o.userId] = {}, s[o.userId].dash = l),
                        function () {
                            r.open({
                                template: "/static/partials/dialogTemplates/ws-choose-dashboard.html",
                                className: "ngdialog-theme-default ngDialog-width-700",
                                scope: e,
                                data: {
                                    user_id: o.userId,
                                    index: o._index,
                                    mode: "cat" == n ? "cat" : "modify"
                                }
                            })
                        }()
                },
                chooseDash: function (e) {
                    if ("cat" == e) return void r.closeAll();
                    var t = this,
                        a = t._index,
                        n = t.userId,
                        o = F.authority[n].dash,
                        s = [];
                    angular.forEach(o, function (e) {
                        if (Number(e.is_all)) s.push({
                            is_all: 1,
                            proj_id: e.proj_id
                        });
                        else {
                            s.push({
                                is_all: 0,
                                proj_id: e.proj_id
                            });
                            var t = s.length;
                            angular.forEach(e.subs, function (e) {
                                e.check && (s[t - 1].dash_list || (s[t - 1].dash_list = []), s[t - 1].dash_list.push(e.dsh_id))
                            })
                        }
                    });
                    for (var l = s.length - 1; l >= 0;) 0 != s[l].is_all || s[l].dash_list || s.splice(l, 1), l--;
                    if ("cat" != e && 1 != M.authorityInfo[a].dash_list.is_all && 0 == s.length) return void i("未选择仪表盘");
                    M.authorityInfo[a].dash_list.proj_list = s, r.closeAll()
                },
                showTbDialog: function (t, a, i, n) {
                    i.stopPropagation();
                    var o = this;
                    o._index = a, o.userId = t.user_id,
                        function () {
                            r.open({
                                template: "/static/partials/dialogTemplates/ws-choose-worktable.html",
                                className: "ngdialog-theme-default ngDialog-width-700",
                                scope: e,
                                data: {
                                    user_id: o.userId,
                                    index: o._index,
                                    mode: "cat" == n ? "cat" : "modify"
                                },
                                controller: "authorityWorkTableCtrl"
                            })
                        }()
                },
                save: function () {
                    if (e.pageLoading) return !1;
                    e.pageLoading = !0;
                    var t = function () {
                        var e = [];
                        return angular.forEach(M.authorityInfo, function (t) {
                            if (t.dash_list.check || t.tb_list.check || t.admin || t.rule) {
                                var a = {
                                    dash_list: {},
                                    tb_list: {}
                                };
                                a.user_id = t.user_id, a.admin = t.admin ? 1 : 0, a.rule = t.rule ? 1 : 0, a.dash_list.is_all = t.dash_list.is_all, t.dash_list.check ? 0 == a.dash_list.is_all && (a.dash_list.proj_list = t.dash_list.proj_list || []) : a.dash_list.proj_list = [], a.tb_list.is_all = t.tb_list.is_all, a.tb_list.is_all = t.tb_list.is_all, t.tb_list.check ? a.tb_list.is_all && (a.tb_list.tb_list = t.tb_list.tb_list || []) : a.tb_list.tb_list = [], e.push(a)
                            }
                        }), e
                    }();
                    A({
                        ws_id: F.curWorkspace,
                        authority_info: angular.toJson(t)
                    }).then(function (t) {
                        e.pageLoading = !1, 0 == t.status && (i("保存成功"), F.view = "cat", y(F.curWorkspace))
                    })
                },
                cancel: function () {
                    y(F.curWorkspace), F.view = "cat"
                }
            };
            var O = 100;
            e.operateLogView = {
                logData: {},
                count: 0,
                total_page: 1,
                current_page: 1,
                show_change_page: !1
            }, e.operateLog = {
                logData: {},
                total: 0,
                info: function (e) {
                    k({
                        ws_id: e,
                        page: 1
                    })
                },
                page: function () {},
                goPrevPage: function () {
                    if (1 != e.operateLogView.current_page) {
                        k({
                            ws_id: F.curWorkspace,
                            page: --e.operateLogView.current_page
                        })
                    }
                },
                goNextPage: function () {
                    if (e.operateLogView.current_page != e.operateLogView.total_page) {
                        k({
                            ws_id: F.curWorkspace,
                            page: ++e.operateLogView.current_page
                        })
                    }
                },
                goFirstPage: function () {
                    if (1 != e.operateLogView.current_page) {
                        var t = {
                            ws_id: F.curWorkspace,
                            page: 1
                        };
                        e.operateLogView.current_page = 1, k(t)
                    }
                },
                goLastPage: function () {
                    if (e.operateLogView.current_page != e.operateLogView.total_page) {
                        var t = {
                            ws_id: F.curWorkspace,
                            page: e.operateLogView.total_page
                        };
                        e.operateLogView.current_page = e.operateLogView.total_page, k(t)
                    }
                },
                setPageListPos: function (e) {
                    var t = $(e.target).offset(),
                        a = $(window).height(),
                        i = 30;
                    a - t.top < 110 && (i = -80), $(".page-list").css({
                        top: i
                    }), e.stopPropagation()
                }
            }, n(["saveSuccess"], e)
        }

        function t(e, t, a) {
            function i(e, t) {
                function a(e, t) {
                    t.map(function (t) {
                        t.choose = e, t.selected || (e ? t.add = !0 : delete t.add)
                    })
                }
                var i, n = [];
                n = void 0 === t ? s[e] : s[e].sub_folders[t], i = n.choose, a(i, n.tb_list), void 0 === t && n.sub_folders && n.sub_folders.length > 0 && n.sub_folders.map(function (e) {
                    e.check = i, a(i, e.tb_list)
                })
            }

            function n() {
                function e(a) {
                    a.tb_list.map(t), a.sub_folders && a.sub_folders.length > 0 && a.sub_folders.map(e), a.name || (a.name = "根目录")
                }

                function t(e) {
                    a.push(e.dstb_id)
                }
                var a = [];
                return o.worktableList.map(e), a
            }

            function r(e, t) {
                function a(e, t) {
                    var a = {
                        tb_id: e.tb_id,
                        name: e.name,
                        type: e.type
                    };
                    if (1 == t.level) {
                        var i = n[t.folderName];
                        i ? r[i.index].tb_list.push(a) : (r.push({
                            name: t.folderName,
                            tb_list: [a]
                        }), n[t.folderName] = {
                            index: r.length - 1
                        })
                    } else {
                        var i = n[t.folderName];
                        if (i) {
                            var o = i.sub_folders;
                            if (o && o[t.subFolderName]) {
                                var s = o[t.subFolderName];
                                r[s.parentIndex].sub_folders[s.subIndex].tb_list.push(a)
                            } else {
                                o || (r[i.index].sub_folders = []);
                                var l = r[i.index];
                                l.sub_folders.push({
                                    name: t.subFolderName,
                                    tb_list: [a]
                                }), i.sub_folders || (i.sub_folders = {}), i.sub_folders[t.subFolderName] = {
                                    subIndex: l.sub_folders.length - 1,
                                    parentIndex: i.index
                                }
                            }
                        } else r.push({
                            name: t.folderName,
                            tb_list: [],
                            sub_folders: [{
                                name: t.subFolderName,
                                tb_list: [a]
                            }]
                        }), n[t.folderName] = {
                            index: r.length - 1,
                            sub_folders: {}
                        }, n[t.folderName].sub_folders[t.subFolderName] = {
                            parentIndex: r.length - 1,
                            subIndex: 0
                        }
                    }
                }

                function i(e, t) {
                    e.map(function (e) {
                        e.add && a(e, t)
                    })
                }
                var n = angular.copy(o.folderInfo),
                    r = angular.copy(o.originalworktableList);
                s.map(function (e, t) {
                    i(e.tb_list, {
                        level: 1,
                        folderName: e.name
                    }), e.sub_folders && e.sub_folders.length > 0 && e.sub_folders.map(function (t, a) {
                        i(t.tb_list, {
                            level: 2,
                            folderName: e.name,
                            subFolderName: t.name
                        })
                    })
                }), o.worktableList = angular.copy(r)
            }
            var o = e.workspaceData,
                s = e.workspaceView.folderList;
            e.curFolder = {}, e.setCurFolder = function (t, a) {
                var i = e.curFolder;
                i.index = t, i.subIndex = a;
                var n;
                n = void 0 === a ? s[t] : s[t].sub_folders[a], e.curFolderItem = n
            }, e.ngDialogData.init && (s = function (e) {
                var t = [];
                return o.worktableList && (t = n()),
                    function () {
                        function a(e, t) {
                            e.sub_folders && e.sub_folders.length > 0 && e.sub_folders.map(a);
                            var r = n(e.tb_list);
                            !r || e.sub_folders && 0 != e.sub_folders.length ? r && i(e.sub_folders) && (e.choose = !0, e.disable = !0) : (e.choose = !0, e.disable = !0)
                        }

                        function i(e) {
                            var t = 0;
                            return 0 != e.length && (e.map(function (e) {
                                    e.choose && e.disable && t++
                                }), t == e.length)
                        }

                        function n(e) {
                            var a = 0;
                            return 0 != e.length && (e.map(function (e) {
                                    (e.should_select || $.inArray(e.tb_id, t) > -1) && (e.choose = !0, e.selected = !0, e.disable = !0, a++)
                                }), a == e.length)
                        }
                        e.map(a)
                    }(), e
            }(s)), e.setCurFolder(0), e.openFolder = function (t, a) {
                e.setCurFolder(t, a)
            }, e.checkone = function (t, a) {
                var i = t.choose;
                t.selected || (i ? t.add = !0 : delete t.add), bdp.bdpTables.initFolderListChoose(e.workspaceView.folderList, a)
            }, e.checkAll = function (t, a) {
                i(t, a), bdp.bdpTables.initFolderListChoose(e.workspaceView.folderList, t)
            }, e.confirmAdd = function () {
                r(), a.closeAll()
            }
        }

        function a(e, t, a) {
            function i(e) {
                function t(e, n) {
                    e.sub_folders && e.sub_folders.length > 0 && e.sub_folders.map(t), i(e.tb_list) && (e.show = !0), e.sub_folders && a(e.sub_folders) && (e.show = !0)
                }

                function a(e) {
                    var t = !1;
                    return e.map(function (e) {
                        e.show && (t = !0)
                    }), t
                }

                function i(e) {
                    var t = !1;
                    return e.map(function (e) {
                        $.inArray(e.tb_id, n.tb_list.tb_list) > -1 && (e.choose = !0, t = !0)
                    }), t
                }
                var n = d.authorityInfo[s],
                    r = angular.copy(e);
                return $.isEmptyObject(n.tb_list) || 0 == n.tb_list.is_all && 0 == n.tb_list.tb_list.length ? r : 0 == n.tb_list.is_all ? (n.tb_list.tb_list.length > 0 && r.map(t), r) : r
            }
            var n = e.workspaceView,
                r = e.ngDialogData,
                o = r.user_id,
                s = r.index,
                l = r.mode,
                d = e.workspaceData;
            n.authority[o] ? n.authority[o].tb || (n.authority[o].tb = i(d.worktableList)) : (n.authority[o] = {}, n.authority[o].tb = i(d.worktableList));
            var c = n.authority[o].tb;
            e.curFolder = {}, e.setCurFolder = function (t, a) {
                var i = e.curFolder;
                i.index = t, i.subIndex = a;
                var n;
                n = void 0 === a ? c[t] : c[t].sub_folders[a], e.curFolderItem = n
            }, e.setCurFolder(0), e.openFolder = function (t, a) {
                e.setCurFolder(t, a)
            }, e.chooseWorktable = function () {
                if ("cat" == l) return void a.closeAll();
                var e = n.authority[o].tb,
                    i = [];
                if (0 == d.authorityInfo[s].tb_list.is_all && (function () {
                        function t(e) {
                            a(e.tb_list), e.sub_folders && e.sub_folders.length > 0 && e.sub_folders.map(t)
                        }

                        function a(e) {
                            e.map(function (e) {
                                e.choose && i.push(e.tb_id)
                            })
                        }
                        e.map(t)
                    }(), 0 == i.length)) return void t("未选择工作表");
                d.authorityInfo[s].tb_list.tb_list = i, a.closeAll()
            }
        }
        angular.module("BC.controllers.workspace", [])
        .controller("workspaceCtrl", e)
        .controller("addWorktableCtrl", t)
        .controller("authorityWorkTableCtrl", a), 
        e.$inject = ["$scope", "$rootScope", "commonHttp", "errHint", "$jsTipTranslate", "ngDialog", "commonService", "$filter", "multipleProService"], 
        t.$inject = ["$scope", "$timeout", "ngDialog"], 
        a.$inject = ["$scope", "errHint", "ngDialog"]
    }(),
    function () {
        window.console.err = window.console.error, window.console.error = function () {
            if (console.err.apply(console, arguments), arguments[0] && "string" == typeof arguments[0]) {
                var e = window.location.href,
                    t = "string" == typeof arguments[0] ? arguments[0].split(" at ") : [JSON.stringify(arguments[0])],
                    a = $.cookie("user"),
                    i = $.cookie("domain"),
                    n = e.split("dash_edit/")[1] ? e.split("dash_edit/")[1].split("/") : [],
                    r = {
                        user: a,
                        domain: i,
                        proj_id: n[0] || "",
                        dsh_id: n[1] || "",
                        ct_id: n[2] || "",
                        intro: t[0],
                        detail: t[1]
                    };
                $.ajax({
                    type: "POST",
                    url: "/api/front_stat/web_error",
                    data: r
                })
            }
        }
    }();
var __inline = function (e) {
    document.write('<script src="/static/pay/' + e + ' "></script>')
};
! function () {
    angular.module("BC.controllers.pay", [])
}(),
    function () {
        angular.module("BC.controllers.pay")
        .directive("invoiceBtn", ["ngDialog", "$rootScope", function (e, t) {
            return {
                restrict: "A",
                replace: !1,
                scope: !0,
                link: function (t, a, i) {
                    a.on("click.invoice", function (a) {
                        a.preventDefault(), e.open({
                            template: "/static/pay/member/invoice/invoice.html",
                            className: "ngdialog-theme-default invoice-dialog",
                            scope: t
                        })
                    })
                }
            }
        }])
    }(),
    function () {
        function e(e, t, a, i) {
            function n(e) {
                var t = i("filter")(s.orderInfo.list, {
                    select: !0
                });
                if ("form" == e && 0 == t.length) return a("至少选择一项订单哦~"), !1;
                s.view.currentDialog = e
            }

            function r(e) {
                e.select ? s.form.invoiceInfo.price += e.cost : s.form.invoiceInfo.price -= e.cost
            }

            function o(e) {
                if (s.form.invoiceInfo.title.length > 100 || !s.form.invoiceInfo.title) return a("发票抬头过长或为空！"), !1;
                if (s.form.invoiceInfo.identifier.length > 50 || !s.form.invoiceInfo.identifier) return a("纳税人识别号过长或为空！"), !1;
                if (s.form.invoiceInfo.remark.length > 100) return a("备注过长！"), !1;
                if (s.form.addresseeInfo.recipient.length > 100 || !s.form.addresseeInfo.recipient) return a("收件人过长或为空！"), !1;
                if (s.form.addresseeInfo.address.length > 200 || !s.form.addresseeInfo.address) return a("收件地址过长或为空！"), !1;
                if (s.form.addresseeInfo.contact.length > 20 || !s.form.addresseeInfo.contact) return a("联系电话过长或为空！"), !1;
                for (var n = i("filter")(s.orderInfo.list, {
                    select: !0
                }), r = [], o = 0, l = n.length; o < l; o++) r.push(n[o].order_id);
                var d = {
                    order_ids: r.join(","),
                    address: s.form.addresseeInfo.address,
                    contact: s.form.addresseeInfo.contact,
                    recipient: s.form.addresseeInfo.recipient,
                    title: s.form.invoiceInfo.title,
                    tax_no: s.form.invoiceInfo.identifier,
                    remark: s.form.invoiceInfo.remark
                };
                t.pay.personalInvoice(d).then(function (e) {
                    0 == e.status && s.changeStep("success")
                })
            }
            var s = this;
            s.form = {
                invoiceInfo: {
                    header: "",
                    identifier: "",
                    price: 0,
                    remark: ""
                },
                addresseeInfo: {
                    recipient: "",
                    address: "",
                    contact: ""
                }
            }, s.view = {
                currentDialog: "order",
                loading: !1
            }, s.orderInfo = {
                list: []
            }, s.changeStep = n, s.submitInvoice = o, s.selectOrder = r,
                function () {
                    s.view.loading = !0, t.pay.personalOrderHistory().then(function (e) {
                        0 == e.status && (s.orderInfo.list = e.result.order_list, angular.forEach(s.orderInfo.list, function (e) {
                            e.receipt_status || 0 == e.cost || (e.select = !0, s.selectOrder(e))
                        })), s.view.loading = !1
                    })
                }()
        }
        angular.module("BC.controllers.pay")
        .controller("invoiceCtrl", e)
        .filter("canFreePostage", ["$rootScope", function (e) {
            return function (e) {
                return e >= 200 ? "（已免运费）" : "（满￥200免运费）"
            }
        }]), 
        e.$inject = ["$scope", "commonService", "errHint", "$filter"]
    }(),
    function () {
        function e(e, t, a) {
            a.member_personal = !0, e.init = function () {
                e.memberData = {
                    vipLevel: 0
                }, 
                a.personalInfo && a.personalInfo.new_version && (a.personalInfo.new_version = 0), 
                e.personalVipInfo(), 
                window._BDP_TIME_LOGGER && BDPLogger.log("feStatistics", {
                    category: "member",
                    action: "memberPv",
                    opt_label: e.memberData.vipLevel,
                    opt_value: 1
                })
            }, 
            e.personalVipInfo = function () {
                t.pay.personalVipInfo().then(function (t) {
                    0 == t.status && (e.memberData.vipLevel = t.result.vip_level)
                })
            }, 
            e.init()
        }
        angular
        .module("BC.controllers.pay")
        .controller("memberCtrl", e), 
        e.$inject = ["$scope", "commonService", "$rootScope"]
    }(),
    function () {
        function e(e, t, a, i, n) {
            var r = {
                1: {
                    12: 690,
                    3: 207,
                    1: 69
                },
                2: {
                    12: 2990,
                    3: 897,
                    1: 299
                }
            };
            a.pay.getMemberRightData().then(function (t) {
                e.memberRight = t
            }), t.member_personal = !0, e.init = function () {
                var t = n.upgradeId ? n.upgradeId : 1;
                e.upgradeResultData = {}, e.memberUpgradeData = {
                    username: null,
                    vipLevel: 0,
                    vipDeadline: null,
                    selectedLevel: t,
                    openData: null,
                    discount: null,
                    showDiscounttip: !1
                }, e.memberList = {}, e.personalVipInfo(), window._BDP_TIME_LOGGER && BDPLogger.log("feStatistics", {
                    category: "member",
                    action: "memberUpgradePv",
                    opt_label: t,
                    opt_value: 1
                })
            };
            e.$on("_websocketChartMessage_", function (a, i) {
                var n = "string" == typeof i.data ? $.parseJSON(i.data) : i.data;
                3 == n.type && (e.upgradeResultData = {
                    vipLevel: n.pay_result.vip_level,
                    vipDeadline: n.pay_result.vip_deadline
                }, t.memberData.vipLevel = n.pay_result.vip_level, t.memberData.vipDeadline = e.upgradeResultData.vipDeadline, e.memberUpgradeData.vipLevel = n.pay_result.vip_level, e.memberUpgradeData.openData.vipDeadline = e.upgradeResultData.vipDeadline, e.memberUpgradeData.vipDeadline = e.upgradeResultData.vipDeadline, e.upgradeResult(), e.changeQrCode())
            }), e.personalVipInfo = function () {
                a.pay.personalVipInfo().then(function (t) {
                    0 == t.status && e.processMemData(t.result)
                })
            }, e.processMemData = function (t) {
                var a = e.memberUpgradeData.selectedLevel,
                    i = {
                        vipDuration: null,
                        payMoney: 0,
                        vipDeadline: null,
                        payType: null,
                        payQr: null
                    };
                e.memberList[1] = angular.copy(i), e.memberList[1].vipDuration = 12, e.memberList[1].payMoney = 690, e.memberList[1].payType = "wechat", e.memberList[2] = angular.copy(i), e.memberList[2].vipDuration = 12, e.memberList[2].payMoney = 2990, e.memberList[2].payType = "wechat", e.memberUpgradeData.username = t.username, e.memberUpgradeData.vipLevel = t.vip_level, e.memberUpgradeData.vipDeadline = t.vip_deadline, e.memberUpgradeData.openData = e.memberList[a], (0 == e.memberUpgradeData.vipLevel || a >= e.memberUpgradeData.vipLevel) && e.changeQrCode()
            }, e.changeQrCode = function () {
                var t = "";
                t += "vip_level=" + e.memberUpgradeData.selectedLevel, t += "&vip_duration=" + e.memberUpgradeData.openData.vipDuration, t += "&pay_type=" + e.memberUpgradeData.openData.payType, t += "&t=" + (new Date).getTime(), e.memberList[e.memberUpgradeData.selectedLevel].payQr = "/api/pay/qrcode?" + t
            }, e.changeVipLevelTab = function (t) {
                e.memberUpgradeData.selectedLevel = t, e.memberUpgradeData.openData = e.memberList[t], e.changeQrCode()
            }, e.changeVipDuration = function (t) {
                e.memberUpgradeData.openData.vipDuration = t, e.memberUpgradeData.openData.payMoney = r[e.memberUpgradeData.selectedLevel][t], e.changeQrCode()
            }, e.changePayType = function (t) {
                e.memberUpgradeData.openData.payType = t, e.changeQrCode()
            }, e.upgradeResult = function () {
                i.open({
                    template: "/static/pay/member/view/upgrade_result.html",
                    className: "ngdialog-theme-default ngDialog-width-360",
                    scope: e
                })
            }, e.init()
        }
        angular
        .module("BC.controllers.pay")
        .controller("memberUpgradeCtrl", e), 
        e.$inject = ["$scope", "$rootScope", "commonService", "ngDialog", "$stateParams"]
    }(),
    function () {
        function e(e, t, a, i) {
            function n() {
                e.vm.needReflashInvoice && t.pay.personalInvoiceHistory().then(function (t) {
                    e.invoiceHistory = t.result || [], e.vm.needReflashInvoice = !1
                })
            }

            function r(t) {
                e.currentInvoice = t, a.open({
                    template: "/static/pay/member/invoice/invoice-detail.html",
                    className: "ngdialog-theme-default invoice-dialog",
                    scope: e
                })
            }

            function o() {
                e.vm.showInvoiceHistory = !1, e.vm.needReflashInvoice = !0
            }
            e.memberOrderHistory = {
                vipLevel: i.memberData.vipLevel,
                vipDeadline: i.memberData.vipDeadline,
                orderList: []
            }, e.vm = {
                showInvoiceHistory: !1,
                orderLoading: !1,
                needReflashInvoice: !0
            }, e.getInvoiceHistory = n, e.showInvoiceDetail = r, e.applyInvoice = o,
                function () {
                    e.vm.orderLoading = !0, t.pay.personalOrderHistory().then(function (t) {
                        0 == t.status && (e.memberOrderHistory.orderList = t.result.order_list, e.memberOrderHistory.vipLevel = t.result.cur_vip_info.vip_level, e.memberOrderHistory.vipDeadline = t.result.cur_vip_info.vip_deadline), e.vm.orderLoading = !1
                    }), e.getInvoiceHistory()
                }()
        }
        angular.module("BC.controllers.pay").controller("memberInfoCtrl", e), e.$inject = ["$scope", "commonService", "ngDialog", "$rootScope"]
    }(),
    function () {
        function e(e, t) {
            var a = 0,
                i = 0;
            try {
                a = e.toString().split(".")[1].length
            } catch (e) {}
            try {
                i = t.toString().split(".")[1].length
            } catch (e) {}
            var n = Math.pow(10, Math.max(a + 1, i + 1));
            return (e * n + t * n) / n
        }

        function t(e, t) {
            var a = 0,
                i = 0;
            try {
                a = e.toString().split(".")[1].length
            } catch (e) {}
            try {
                i = t.toString().split(".")[1].length
            } catch (e) {}
            return e * Math.pow(10, a + 1) * (t * Math.pow(10, i + 1)) / Math.pow(10, a + i + 2)
        }

        function a(e, t) {
            var a = 0,
                i = 0;
            try {
                a = e.toString().split(".")[1].length
            } catch (e) {}
            try {
                i = t.toString().split(".")[1].length
            } catch (e) {}
            var n = Math.pow(10, Math.max(a, i));
            return e * n / (t * n)
        }
        Number.prototype.add = function (t) {
            return e.call(this, this, t)
        }, Number.prototype.sub = function (e) {
            return this.add(-e)
        }, Number.prototype.mul = function (e) {
            return t.call(this, this, e)
        }, Number.prototype.div = function (e) {
            return a.call(this, this, e)
        }
    }(),
    function () {
        Highcharts.dateFormats = {
            Q: function (e) {
                var t = new Date(e),
                    a = t.getMonth() + 1;
                return Math.ceil(a / 3)
            }
        },
            function (e) {
                "object" == typeof module && module.exports ? module.exports = e : e(Highcharts)
            }(function (e) {
                ! function (e) {
                    "use strict";

                    function t() {
                        return !!this.points.length
                    }

                    function a() {
                        var e = this;
                        e.hasData() ? e.hideNoData() : e.showNoData()
                    }
                    var i = e.seriesTypes,
                        n = e.Chart.prototype,
                        r = e.getOptions(),
                        o = e.extend,
                        s = e.each;
                    o(r.lang, {
                        noData: "No data to display"
                    }), r.noData = {
                        position: {
                            x: 0,
                            y: 0,
                            align: "center",
                            verticalAlign: "middle"
                        }
                    }, r.noData.style = {
                        fontWeight: "bold",
                        fontSize: "12px",
                        color: "#666666"
                    }, s(["pie", "gauge", "waterfall", "bubble", "treemap"], function (e) {
                        i[e] && (i[e].prototype.hasData = t)
                    }), e.Series.prototype.hasData = function () {
                        return this.visible && void 0 !== this.dataMax && void 0 !== this.dataMin
                    }, n.showNoData = function (e) {
                        var t = this,
                            a = t.options,
                            i = e || a.lang.noData,
                            n = a.noData;
                        t.noDataLabel || (t.noDataLabel = t.renderer.label(i, 0, 0, null, null, null, n.useHTML, null, "no-data"), t.noDataLabel.attr(n.attr).css(n.style), t.noDataLabel.add(), t.noDataLabel.align(o(t.noDataLabel.getBBox(), n.position), !1, "plotBox"))
                    }, n.hideNoData = function () {
                        var e = this;
                        e.noDataLabel && (e.noDataLabel = e.noDataLabel.destroy())
                    }, n.hasData = function () {
                        for (var e = this, t = e.series, a = t.length, i = t[0] && "treemap" == t[0].userOptions.type; a--;)
                            if (t[a].hasData() && !t[a].options.isInternal || i) return !0;
                        return !1
                    }, n.callbacks.push(function (t) {
                        e.addEvent(t, "load", a), e.addEvent(t, "redraw", a)
                    })
                }(e)
            }),
            function (e) {
                e.wrap(e.seriesTypes.pie.prototype, "drawPoints", function (t) {
                    0 == this.options.borderWidth && e.each(this.points, function (e) {
                        e.pointAttr[""] && (e.pointAttr[""]["stroke-width"] = 1, e.pointAttr[""].stroke = e.pointAttr[""].fill, e.pointAttr.hover["stroke-width"] = 1, e.pointAttr.hover.stroke = e.pointAttr.hover.fill, e.pointAttr.select["stroke-width"] = 1, e.pointAttr.select.stroke = e.pointAttr.select.fill)
                    }), t.apply(this)
                })
            }(Highcharts),
            function (e) {
                var t = e.each;
                e.wrap(e.Legend.prototype, "renderItem", function (e, a) {
                    function i(e, a, i) {
                        t(a, function (e) {
                            t(["group", "markerGroup"], function (t) {
                                e[t].attr("opacity", i)
                            })
                        }), t(["group", "markerGroup"], function (t) {
                            e[t].attr("opacity", 1), e.linkedSeries.forEach(function (e) {
                                e[t].attr("opacity", 1), e.linkedSeries.forEach(function (e) {
                                    e[t].attr("opacity", 1)
                                })
                            })
                        })
                    }
                    e.call(this, a);
                    var n = this.chart,
                        r = n.series,
                        o = (this.options.useHTML ? a.legendItem : a.legendGroup).element,
                        s = n.userOptions.chart && n.userOptions.chart.type || "";
                    if ("pie" == s) o.onmouseover = function () {
                        n.tooltip.refresh(n.series[0].data[$(o).parents(".highcharts-legend-item").index()])
                    }, o.onmouseout = function () {
                        n.tooltip.hide()
                    };
                    else {
                        if ("map" == s) return !1;
                        o.onmouseover = function () {
                            i(a, r, .25)
                        }, o.onmouseout = function () {
                            i(a, r, 1)
                        }
                    }
                })
            }(Highcharts),
            function (e) {
                e.wrap(e.Axis.prototype, "normalizeTimeTickInterval", function (e) {
                    var t = e.apply(this, [].slice.call(arguments, 1));
                    return t.count < arguments[1] / t.unitRange && t.unitRange <= 6048e5 && t.count++, t
                })
            }(Highcharts),
            function (e) {
                e.wrap(e.seriesTypes.column.prototype, "translate", function (t) {
                    var a = this.options,
                        i = a.borderRadiusTopLeft || 0,
                        n = a.borderRadiusTopRight || 0,
                        r = a.borderRadiusBottomRight || 0,
                        o = a.borderRadiusBottomLeft || 0,
                        s = a.topMargin || 0,
                        l = a.bottomMargin || 0;
                    t.call(this), (i || n || r || o) && e.each(this.points, function (t) {
                        var a = t.shapeArgs,
                            d = a.width,
                            c = a.height,
                            p = a.x,
                            u = a.y;
                        t.dlBox = t.shapeArgs, t.shapeType = "path", t.originShapeArgs = e.extend({}, t.shapeArgs), t.shapeArgs = {
                            d: ["M", p + i, u + s, "L", p + d - n, u + s, "C", p + d - n / 2, u, p + d, u + n / 2, p + d, u + n, "L", p + d, u + c - r, "C", p + d, u + c - r / 2, p + d - r / 2, u + c, p + d - r, u + c + l, "L", p + o, u + c + l, "C", p + o / 2, u + c, p, u + c - o / 2, p, u + c - o, "L", p, u + i, "C", p, u + i / 2, p + i / 2, u, p + i, u, "Z"]
                        }
                    })
                })
            }(Highcharts),
            function (e) {
                var t = e;
                t.map, t.each, t.stableSort;
                attrLabel2Style = function (e, a, i, n, r) {
                    var o = i[0],
                        s = i[1],
                        l = i[2],
                        d = i[3],
                        c = n.text && n.text.textStr || n,
                        p = c.length,
                        u = i[4];
                    if (!r) {
                        var h = c.substring(p - 5, 0) + "...";
                        i[4].destroy(), u = e.dataLabel2 = e.series.chart.renderer.label(h, 0, 99, o.shape, null, null, o.useHTML, null, "data-label").attr(s), u.addClass("highcharts-data-label-color-" + e.colorIndex + " " + (o.className || "")), u.css(t.extend(a, l)), u.add(d), i[4] = u
                    }
                    return u
                }, containerWidth = function (e) {
                    var t = e[1],
                        a = e[0];
                    return e[2] - Math.abs(a.label2Pos[2] - t)
                }, sliceLabelStr = function (e, t, a, i, n) {
                    var r = n.text && n.text.textStr || n;
                    if (containerWidth(e) < a + 3) {
                        var o = 0;
                        do {
                            o++
                        } while (r.substr(0, o) != r && attrLabel2Style(e[0], t, i, r.substr(0, o)).getBBox().width < containerWidth(e));
                        return r.substr(0, o)
                    }
                    return attrLabel2Style(e[0], t, i, r, !0)
                }, makeSuitableDataLabel2 = function (e, t, a, i, n, r, o) {
                    var s, l = t.text && t.text.element.getBoundingClientRect().width;
                    s = a > 300 ? .45 * a : a > 150 && a <= 300 ? 200 : a > 110 && a <= 150 ? a : 1.35 * a;
                    var d = Math.min(n / 2 - a - 15, s),
                        c = [e, i[0], a + d];
                    return sliceLabelStr(c, r, l, o, t)
                }, drawPieDataLabels = function (e) {
                    var a, i, n, r, o, s = e.options,
                        l = s.dataLabels,
                        d = e.points,
                        c = e.hasRendered || 0,
                        p = t.pick(l.defer, !0),
                        u = e.chart.renderer;
                    (l.enabled || e._hasPointLabels) && (e.dlProcessOptions && e.dlProcessOptions(l), o = e.plotGroup("dataLabelsGroup", "data-labels", p && !c ? "hidden" : "visible", l.zIndex || 6), p && (o.attr({
                        opacity: +c
                    }), c || t.addEvent(e, "afterAnimate", function () {
                        e.visible && o.show(!0), o[s.animation ? "animate" : "attr"]({
                            opacity: 1
                        }, {
                            duration: 200
                        })
                    })), i = l, t.each(d, function (d) {
                        var c, p, h, f, g, m, _ = t.extend,
                            v = d.connector,
                            b = !0,
                            y = {};
                        a = d.dlOptions || d.options && d.options.dataLabels;
                        var w, C = d.dataLabel,
                            x = d.dataLabel2,
                            k = d.shapeArgs;
                        if (c = t.pick(a && a.enabled, i.enabled) && null !== d.y, C && !c) d.dataLabel = C.destroy(), x && (d.dataLabel2 = x.destroy());
                        else {
                            if (l = t.merge(i, a), m = l.style, w = l.style2, g = l.rotation, p = d.getLabelConfig(), n = l.format ? format(l.format, p) : l.formatter.call(p, l, "showPercentage"), w && (r = l.format ? format(l.format, p) : l.formatter.call(p, l, "showConnectorLabel")), d.str2 = r, m.color = t.pick(l.color, m.color, e.color, "#000000"), w && (w.color = t.pick(l.color, w.color, e.color, "#000000")), C)
                                if (defined(n) ? (C.attr({
                                        text: n
                                    }), b = !1) : d.dataLabel = C = C.destroy(), defined(r)) {
                                    x.attr({
                                        text: r
                                    });
                                    var D = [l, h, y, o, x];
                                    makeSuitableDataLabel2(d, x, k.r, e.center, e.chart.plotWidth, w, D), b = !1
                                } else x && (d.dataLabel2 = x = x.destroy());
                            else if (defined(n)) {
                                h = {
                                    fill: l.backgroundColor,
                                    stroke: l.borderColor,
                                    "stroke-width": l.borderWidth,
                                    r: l.borderRadius || 0,
                                    rotation: g,
                                    padding: l.padding,
                                    zIndex: 1
                                }, "contrast" === m.color && (y.color = l.inside || l.distance < 0 || s.stacking ? u.getContrast(d.color || e.color) : "#000000"), s.cursor && (y.cursor = s.cursor);
                                for (f in h) void 0 === h[f] && delete h[f];
                                if (C = d.dataLabel = u[g ? "text" : "label"](n, 0, -9999, l.shape, null, null, l.useHTML, null, "data-label").attr(h), C.addClass("highcharts-data-label-color-" + d.colorIndex + " " + (l.className || "")), C.css(t.extend(m, y)), C.add(o), C.shadow(l.shadow), r) {
                                    x = d.dataLabel2 = u[g ? "text" : "label"](r, 0, 99, l.shape, null, null, l.useHTML, null, "data-label").attr(h), x.addClass("highcharts-data-label-color-" + d.colorIndex + " " + (l.className || "")), x.css(t.extend(w, y)), x.add(o);
                                    var D = [l, h, y, o, x];
                                    makeSuitableDataLabel2(d, x, k.r, e.center, e.chart.plotWidth, w, D), x.shadow(l.shadow)
                                }
                            }
                            if (x) defined(r) ? (x.attr({
                                text: r
                            }), b = !1) : (d.dataLabel2 = x = x.destroy(), v && (d.connector = v.destroy()));
                            else if (defined(r)) {
                                h = {
                                    fill: l.backgroundColor,
                                    stroke: l.borderColor,
                                    "stroke-width": l.borderWidth,
                                    r: l.borderRadius || 0,
                                    rotation: g,
                                    padding: l.padding,
                                    zIndex: 1
                                }, "contrast" === w.color && (y.color = l.inside || l.distance < 0 || s.stacking ? u.getContrast(d.color || e.color) : "#000000"), s.cursor && (y.cursor = s.cursor);
                                for (f in h) void 0 === h[f] && delete h[f];
                                x = d.dataLabel2 = u[g ? "text" : "label"](n, 0, -9999, l.shape, null, null, l.useHTML, null, "data-label").attr(h), x.addClass("highcharts-data-label-color-" + d.colorIndex + " " + (l.className || "")), x.css(_(w, y)), x.add(o), x.shadow(l.shadow), r && (x = d.dataLabel2 = u[g ? "text" : "label"](r, 0, 99, l.shape, null, null, l.useHTML, null, "data-label").attr(h), x.addClass("highcharts-data-label-color-" + d.colorIndex + " " + (l.className || "")), x.css(_(w, y)), x.add(o), x.shadow(l.shadow))
                            }
                            C && e.alignDataLabel(d, C, l, null, b), x && e.alignDataLabel(d, x, l, null, b)
                        }
                    }))
                }, t.wrap(t.seriesTypes.pie.prototype, "drawDataLabels", function (e) {
                    var a, i, n, r, o, s, l, d, c, p, u, h = (t.addEvent, t.arrayMax),
                        f = (t.defined, t.each),
                        g = (t.extend, t.format, t.map),
                        m = (t.merge, t.noop, t.pick),
                        _ = (t.relativeLength, t.Series, t.seriesTypes, t.stableSort, this),
                        m = t.pick,
                        v = _.data,
                        b = _.chart,
                        y = _.options.dataLabels,
                        w = m(y.connectorPadding, 10),
                        C = m(y.connectorWidth, 1),
                        x = b.plotWidth,
                        k = b.plotHeight,
                        D = y.distance,
                        S = (y.pieTextPadding, _.center),
                        T = S[2] / 2,
                        I = S[1],
                        L = [
                            [],
                            []
                        ],
                        $ = [
                            [],
                            []
                        ],
                        A = [0, 0, 0, 0];
                    _.visible && (y.enabled || _._hasPointLabels) && (drawPieDataLabels(_), sortPosList = function (e, t, i, h, f, g) {
                        if (a = e[t], o = a.labelPos, n = a.dataLabel, dataLabel2 = a.dataLabel2, u = p = a.visible === !1 ? "hidden" : "inherit", naturalY = o[1], dataLabel2)
                            if (i && void 0 === i[t].pos) u = "hidden";
                            else {
                                var m = a.dataLabel2.text && a.dataLabel2.text.element.getBoundingClientRect().height;
                                c = Math.round(a.label2Pos[3] - m / 5);
                                var v = f ? h[f][h[f].length - 1] - c > m : c - h[f][h[f].length - 1] > m;
                                0 == h[f].length || v ? h[f].push(c) : u = "hidden"
                            }
                        if (n && (d = naturalY), dataLabel2) {
                            var C, D = a.dataLabel2.text && a.dataLabel2.text.element.getBoundingClientRect().width;
                            C = T > 300 ? .45 * T : T > 150 && T <= 300 ? 200 : T > 110 && T <= 150 ? T : 1.35 * T;
                            var I = Math.min(b.plotWidth / 2 - T - 15, C);
                            l = S[0] + (f ? -1 : 1) * (T + I - D / 2)
                        }
                        n && (s = _.getX(d > g - 2 ? naturalY : d, f, a)), n._attr = {
                            visibility: p,
                            align: o[6]
                        }, n._pos = {
                            x: s + y.x + ({
                                left: w,
                                right: -w
                            }[o[6]] || 0),
                            y: d + y.y - 10
                        }, o.x = s, o.y = d, dataLabel2 && (dataLabel2._attr = {
                            visibility: u,
                            align: o[6]
                        }, dataLabel2._pos = {
                            x: l + y.x + ({
                                left: w,
                                right: -w
                            }[o[6]] || 0),
                            y: c + y.y - 10
                        }, o.x2 = l, o.y2 = c), null === _.options.size && (r = n.width, s - r < w ? A[3] = Math.max(Math.round(r - s + w), A[3]) : s + r > x - w && (A[1] = Math.max(Math.round(s + r - x + w), A[1])), d - NaN < 0 ? A[0] = Math.max(Math.round(-d + NaN), A[0]) : d + NaN > k && (A[2] = Math.max(Math.round(d + NaN - k), A[2])))
                    }, f(v, function (e) {
                        e.dataLabel && e.visible && ($[e.half].push(e), e.dataLabel._pos = null)
                    }), f($, function (e, a) {
                        var i, n, r, o, s = e.length;
                        if (s)
                            if (_.sortByAngle(e, a - .5), e[0].dataLabel2 && (D = _.adjustDistance(e[0]), i = Math.max(0, I - T - D), n = Math.min(I + T + D, b.plotHeight), r = g(e, function (e) {
                                    if (e.dataLabel2) return o = 1, {
                                        target: e.labelPos[1] - i + o / 2,
                                        size: o,
                                        rank: e.y
                                    }
                                }), t.distribute(r, n + o - i)), a)
                                for (var l = s - 1; l >= 0; l--) sortPosList(e, l, r, L, a, n);
                            else
                                for (var d = 0; d < s; d++) sortPosList(e, d, r, L, a, n)
                    }), (0 === h(A) || this.verifyDataLabelOverflow(A)) && (this.placeDataLabels(_), f(this.points, function (e) {
                        var t;
                        i = e.connector, dataLabel2 = e.dataLabel2, dataLabel2 && (u = dataLabel2._attr.visibility, dataLabel2 && dataLabel2._pos && e.visible && "" !== dataLabel2.text.textStr && "hidden" !== u ? (t = !i, t && (e.connector = i = b.renderer.path().addClass("highcharts-data-label-connector highcharts-color-" + e.colorIndex).add(_.dataLabelsGroup), i.attr({
                            "stroke-width": C,
                            stroke: y.connectorColor || e.color || "#666666"
                        })), i[t ? "attr" : "animate"]({
                            d: _.connectorPath(e)
                        }), i.attr("visibility", u)) : i && (e.connector = i.destroy()))
                    })))
                }), t.wrap(t.seriesTypes.pie.prototype, "connectorPath", function (e) {
                    e.apply(this, [].slice.call(arguments, 1));
                    var t, a = arguments[1],
                        i = a.labelPos,
                        n = a.label2Pos,
                        r = a.dataLabel2.text.element,
                        o = r.getBoundingClientRect().width,
                        s = r.style,
                        l = i.x2,
                        d = (i.y2, i.x, i.y, r.textContent && r.textContent.length > 0 && "..." !== r.textContent);
                    return d ? (s.opacity = 1, t = ["M", n[0], n[1], "L", n[2], n[3], "H", l + (a.half ? 1 : -1) * (o / 2 + 2)]) : (s.opacity = 0, t = ""), t
                }), t.wrap(t.seriesTypes.pie.prototype, "placeDataLabels", function (e) {
                    e.apply(this, [].slice.call(arguments, 1)), t.each(this.points, function (e) {
                        var t, a = e.dataLabel,
                            i = e.dataLabel2;
                        if (a && e.visible && (t = a._pos, t ? (a.attr(a._attr), a[a.moved ? "animate" : "attr"](t), a.moved = !0) : a && a.attr({
                                y: -9999
                            })), i && e.visible)
                            if (t = i._pos) {
                                if (i.attr(i._attr), i[i.moved ? "animate" : "attr"](t), i.moved) {
                                    arguments[0].series
                                }
                                i.moved = !0
                            } else i && i.attr({
                                y: -9999
                            })
                    })
                })
            }(Highcharts),
            function (e) {
                e.wrap(e.Series.prototype, "justifyDataLabel", function (e, t, a, i, n, r, o) {
                    var s, l, d = this.chart,
                        c = a.align,
                        p = a.verticalAlign,
                        u = t.box ? 0 : t.padding || 0;
                    s = i.x + u, s < 0 && ("right" === c ? a.align = "left" : a.x = -s, l = !0), s = i.x + n.width - u;
                    var h = d.options.compareBar,
                        f = h ? d.yAxis[0].width : d.plotWidth;
                    s > f && ("left" === c ? a.align = "right" : a.x = f - s, l = !0), s = i.y + u, s < 0 && ("bottom" === p ? a.verticalAlign = "top" : a.y = -s, l = !0), s = i.y + n.height - u, s > d.plotHeight && ("top" === p ? a.verticalAlign = "bottom" : a.y = d.plotHeight - s, l = !0), l && (t.placed = !o, t.align(a, null, r))
                })
            }(Highcharts),
            function (e) {
                var t = (e.addEvent, e.attr, e.charts),
                    a = e.color,
                    i = e.css,
                    n = e.defined,
                    r = (e.doc, e.each),
                    o = e.extend,
                    s = e.fireEvent;
                e.offset, e.pick, e.removeEvent, e.splat, e.Tooltip, e.win;
                e.wrap(e.Pointer.prototype, "onContainerMouseMove", function (a, i) {
                    var r = this.chart;
                    if (n(e.hoverChartIndex) && t[e.hoverChartIndex] && t[e.hoverChartIndex].mouseIsDown || (e.hoverChartIndex = r.index), i = this.normalize(i), i.returnValue = !1, this.lastPos = {
                            x: i.chartX,
                            y: i.chartY
                        }, "mousedown" !== r.mouseIsDown || r.options.disableSelection) {
                        if (!this.dragging)
                            if (r.inverted) i.chartY > r.plotTop + r.plotHeight ? this.isInsideYAxisArea || (this.isInsideYAxisArea = !0, s(r, "mouseenterYAxisArea", i)) : this.isInsideYAxisArea && (this.isInsideYAxisArea = !1, s(r, "mouseoutYAxisArea", i));
                            else {
                                var o = r.yAxis.length > 1;
                                i.chartX < r.plotLeft || o && i.chartX > r.plotLeft + r.plotWidth ? this.isInsideYAxisArea || (this.isInsideYAxisArea = !0, s(r, "mouseenterYAxisArea", i)) : this.isInsideYAxisArea && (this.isInsideYAxisArea = !1, s(r, "mouseoutYAxisArea", i))
                            }!this.inClass(i.target, "highcharts-tracker") && !r.isInsidePlot(i.chartX - r.plotLeft, i.chartY - r.plotTop) || r.openMenu || this.runPointActions(i)
                    } else this.draging(i), t[e.hoverChartIndex] && t[e.hoverChartIndex].pointer.droping(i)
                }), e.wrap(e.Pointer.prototype, "onContainerMouseLeave", function (t, a) {
                    var i = e.charts[e.hoverChartIndex];
                    i && (a.relatedTarget || a.toElement) && (i.pointer.reset(), i.pointer.chartPosition = null, a = i.pointer.normalize(a), (a.chartX < 0 || a.chartX > i.chartWidth || a.chartY > i.chartHeight) && i.pointer.isInsideYAxisArea && (i.pointer.isInsideYAxisArea = !1, s(i, "mouseoutYAxisArea", a)))
                }), e.wrap(e.Pointer.prototype, "onDocumentMouseMove", function (e, t) {
                    var a = this.chart,
                        i = this.chartPosition;
                    t = this.normalize(t, i), !i || this.inClass(t.target, "highcharts-tracker") || a.isInsidePlot(t.chartX - a.plotLeft, t.chartY - a.plotTop) || this.reset(), this.dragging && this.onContainerMouseMove(t)
                }), e.wrap(e.Pointer.prototype, "onDocumentMouseUp", function (a, i) {
                    this.selectionMarker && (this.selectionMarker = this.selectionMarker.destroy()), t[e.hoverChartIndex] && t[e.hoverChartIndex].pointer.droping(i, "mouseUp")
                }), e.wrap(e.Pointer.prototype, "onContainerClick", function (e, t) {
                    var a = this.chart,
                        i = a.hoverPoint,
                        n = a.plotLeft,
                        r = a.plotTop;
                    t = this.normalize(t), a.cancelClick ? window.event ? window.event.cancelBubble = !0 : t.stopPropagation() : i && this.inClass(t.target, "highcharts-tracker") ? (s(i.series, "click", o(t, {
                        point: i
                    })), a.hoverPoint && i.firePointEvent("click", t)) : (o(t, this.getCoordinates(t)), a.isInsidePlot(t.chartX - n, t.chartY - r) && s(a, "click", t))
                }), e.extend(e.Pointer.prototype, {
                    draging: function (e) {
                        var t, i, n = this.chart,
                            r = n.options.chart,
                            o = this.zoomHor,
                            l = this.zoomVert,
                            d = n.plotLeft,
                            c = n.plotTop,
                            p = n.plotWidth,
                            u = n.plotHeight,
                            h = Math.max(Math.min(e.chartX, d + p), d),
                            f = Math.max(Math.min(e.chartY, c + u), 0),
                            g = this.selectionMarker,
                            m = this.mouseDownX,
                            _ = this.mouseDownY,
                            v = r.panKey && e[r.panKey + "Key"];
                        if (!(g && g.touch || n.navigator && n.navigator.top < _ || (this.hasDragged = Math.sqrt(Math.pow(m - h, 2) + Math.pow(_ - f, 2)), !(this.hasDragged > 10)))) {
                            if (t = !0, n.hasCartesianSeries && (this.zoomX || this.zoomY) && t && !v && !g) {
                                if (!n.isInsidePlot(m - d, _ - c)) return;
                                this.selectionMarker = g = n.renderer.rect(d, c, o ? 1 : p, l ? 1 : u, 0).attr({
                                    stroke: a("#5182E4").get(),
                                    fill: r.selectionMarkerFill || a("#5182E4").setOpacity(.1).get(),
                                    class: "highcharts-selection-marker",
                                    zIndex: 7
                                }).add(), this.dragging = !0, s(n, "dragStart", e)
                            }
                            g && o && (i = h - m, g.attr({
                                width: Math.abs(i),
                                x: (i > 0 ? 0 : i) + m
                            })), g && l && (i = f - _, g.attr({
                                height: Math.abs(i),
                                y: (i > 0 ? 0 : i) + _
                            })), t && !g && r.panning && n.pan(e, r.panning)
                        }
                    },
                    droping: function (e, t) {
                        var a = this,
                            l = this.chart,
                            d = this.hasPinched;
                        if (t) {
                            if (this.selectionMarker) {
                                var c = this.selectionMarker.element.getBoundingClientRect();
                                this.selectionMarker = this.selectionMarker.destroy(), d && this.scaleGroups(), s(l, "dragOver", {
                                    originalEvent: this.normalize(e),
                                    selectionBounding: c
                                }), this.dragging = !1
                            }
                            l && (i(l.container, {
                                cursor: l._cursor
                            }), l.cancelClick = this.hasDragged > 10, l.mouseIsDown = this.hasDragged = this.hasPinched = !1, this.pinchDown = [])
                        } else if (this.selectionMarker) {
                            var p, u = {
                                    originalEvent: e,
                                    xAxis: [],
                                    yAxis: []
                                },
                                h = this.selectionMarker,
                                f = h.attr ? h.attr("x") : h.x,
                                g = h.attr ? h.attr("y") : h.y,
                                m = h.attr ? h.attr("width") : h.width,
                                _ = h.attr ? h.attr("height") : h.height;
                            (this.hasDragged || d) && (r(l.axes, function (t) {
                                if (t.zoomEnabled && n(t.min) && (d || a[{
                                        xAxis: "zoomX",
                                        yAxis: "zoomY"
                                    }[t.coll]])) {
                                    var i = t.horiz,
                                        r = "touchend" === e.type ? t.minPixelPadding : 0,
                                        o = t.toValue((i ? f : g) + r),
                                        s = t.toValue((i ? f + m : g + _) - r);
                                    u[t.coll].push({
                                        axis: t,
                                        min: Math.min(o, s),
                                        max: Math.max(o, s)
                                    }), p = !0
                                }
                            }), p && s(l, "selection", u, function (e) {
                                l.zoom(o(e, d ? {
                                    animation: !1
                                } : null))
                            }))
                        }
                    }
                })
            }(Highcharts),
            function (t) {
                var a = {}.hasOwnProperty,
                    i = i || 2,
                    n = {
                        getMapMeta: function (e) {
                            $.ajax({
                                type: "GET",
                                async: !1,
                                url: "/static/js/mapData/geoJson/" + e + ".js",
                                dataType: "script"
                            })
                        },
                        mapType: ["中国", "广东", "青海", "四川", "海南", "陕西", "甘肃", "云南", "湖南", "湖北", "黑龙江", "贵州", "山东", "江西", "河南", "河北", "山西", "安徽", "福建", "浙江", "江苏", "吉林", "辽宁", "台湾", "新疆", "广西", "宁夏", "内蒙古", "西藏", "北京", "天津", "上海", "重庆", "香港", "澳门", "广东省", "青海省", "四川省", "海南省", "陕西省", "甘肃省", "云南省", "湖南省", "湖北省", "黑龙江省", "贵州省", "山东省", "江西省", "河南省", "河北省", "山西省", "安徽省", "福建省", "浙江省", "江苏省", "吉林省", "辽宁省", "台湾", "新疆维吾尔自治区", "广西壮族自治区", "宁夏回族自治区", "内蒙古自治区", "西藏自治区", "北京市", "天津市", "上海市", "重庆市", "香港特别行政区", "澳门特别行政区", "台湾省", "宁夏回族"],
                        cityMap: {
                            "安徽": "an_hui",
                            "澳门": "ao_men",
                            "北京": "bei_jing",
                            "重庆": "chong_qing",
                            "福建": "fu_jian",
                            "甘肃": "gan_su",
                            "广东": "guang_dong",
                            "广西": "guang_xi",
                            "贵州": "gui_zhou",
                            "海南": "hai_nan",
                            "河北": "he_bei",
                            "河南": "he_nan",
                            "黑龙江": "hei_long_jiang",
                            "湖北": "hu_bei",
                            "湖南": "hu_nan",
                            "吉林": "ji_lin",
                            "江苏": "jiang_su",
                            "江西": "jiang_xi",
                            "辽宁": "liao_ning",
                            "内蒙古": "nei_meng_gu",
                            "宁夏": "ning_xia",
                            "青海": "qing_hai",
                            "山东": "shan_dong",
                            "山西": "shan_xi_2",
                            "陕西": "shan_xi_1",
                            "上海": "shang_hai",
                            "四川": "si_chuan",
                            "台湾": "tai_wan",
                            "天津": "tian_jin",
                            "西藏": "xi_zang",
                            "香港": "xiang_gang",
                            "新疆": "xin_jiang",
                            "云南": "yun_nan",
                            "浙江": "zhe_jiang",
                            "世界": "world",
                            "中国": "china",
                            "安徽省": "an_hui",
                            "澳门特别行政区": "ao_men",
                            "北京市": "bei_jing",
                            "重庆市": "chong_qing",
                            "福建省": "fu_jian",
                            "甘肃省": "gan_su",
                            "广东省": "guang_dong",
                            "广西省": "guang_xi",
                            "贵州省": "gui_zhou",
                            "海南省": "hai_nan",
                            "河北省": "he_bei",
                            "河南省": "he_nan",
                            "黑龙江省": "hei_long_jiang",
                            "湖北省": "hu_bei",
                            "湖南省": "hu_nan",
                            "吉林省": "ji_lin",
                            "江苏省": "jiang_su",
                            "江西省": "jiang_xi",
                            "辽宁省": "liao_ning",
                            "内蒙古自治区": "nei_meng_gu",
                            "宁夏回族自治区": "ning_xia",
                            "青海省": "qing_hai",
                            "山东省": "shan_dong",
                            "山西省": "shan_xi_2",
                            "陕西省": "shan_xi_1",
                            "上海市": "shang_hai",
                            "四川省": "si_chuan",
                            "台湾省": "tai_wan",
                            "天津市": "tian_jin",
                            "西藏自治区": "xi_zang",
                            "香港特别行政区": "xiang_gang",
                            "新疆维吾尔自治区": "xin_jiang",
                            "云南省": "yun_nan",
                            "浙江省": "zhe_jiang",
                            "宁夏回族": "ning_xia",
                            "广西壮族自治区": "guang_xi"
                        },
                        inherit: function (e, t) {
                            function i() {
                                this.constructor = e
                            }
                            for (var n in t) a.call(t, n) && (e[n] = t[n]);
                            return i.prototype = t.prototype, e.prototype = new i, e.__super__ = t.prototype, e
                        },
                        getTimeZoneOffset: function () {
                            return (new Date).getTimezoneOffset() / 60
                        },
                        params: function (e) {
                            var t = {};
                            return $.each(e, function (e, a) {
                                angular.isObject(a) ? t[e] = angular.toJson(a) : t[e] = a
                            }), t
                        },
                        checkIsAllDataNull: function (e, t) {
                            if (!e[t][0]) return !0;
                            var a = 0;
                            return e[t].forEach(function (e) {
                                e.data.forEach(function (e) {
                                    null !== e && "null" !== e || a++
                                })
                            }), a === e[t][0].data.length * e[t].length
                        },
                        isDrillChart: function (e) {
                            return e && e.drill_level > 0
                        },
                        getGranularity: function (e, t, a) {
                            a = void 0 === a ? 0 : a;
                            var i, n = e.x[a],
                                r = {
                                    year: bdp.utils.isLeapYear(n.data[n.data.length - 1]) ? 316224e5 : 31536e6,
                                    quarter: 7776e6,
                                    month: 26784e5,
                                    week: 6048e5,
                                    day: 864e5,
                                    hour: 36e5,
                                    minute: 6e4,
                                    second: 1e3
                                },
                                o = n.granularity || "day",
                                s = n.granularity_name || "";
                            return o = r[o] ? o : "day", i = r[o], "day" == o && t > 20 && (i = r.week), {
                                tickInterval: i,
                                granularity: o,
                                granularity_name: s
                            }
                        },
                        subDateFormat: function (e, t) {
                            var a, i = $.cookie("locale") || "zh";
                            if (i && "zh" != i) {
                                a = {
                                    year: "{{v}}",
                                    quarter: "Q{{v}}",
                                    week: "Week {{v}}",
                                    day: "Day {{v}}",
                                    hour: "{{v}}H",
                                    minute: "{{v}}min",
                                    second: "{{v}}s"
                                };
                                var n = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
                                return "month" == e ? n[t] : (a[e] || "").replace("{{v}}", t)
                            }
                            return a = {
                                year: "年",
                                quarter: "季度",
                                month: "月",
                                week: "周",
                                day: "日",
                                hour: "时",
                                minute: "分",
                                second: "秒"
                            }, t + (a[e] || "")
                        },
                        setGranularityByDate: function (e, t) {
                            return "hour" === e ? t <= 2592e5 ? "c_hour" : "day" : "minute" === e ? t <= 108e5 ? "c_minute" : t <= 2592e5 ? "c_hour" : "day" : "second" === e ? t <= 18e4 ? "c_second" : t <= 36e5 ? "c_minute" : t <= 864e5 ? "c_hour" : "day" : e
                        },
                        checkGranularity: function (e, t, a, i, r) {
                            if (t = +t, isNaN(t)) return "Invalid Date";
                            r = r || $.cookie("locale") || "zh";
                            var o;
                            o = r && "zh" != r ? "abb" == r ? {
                                year: "%Y",
                                quarter: "%Y-Q%Q",
                                month: "%Y/%b",
                                day: "%Y/%b/%d",
                                hour: "%d %HH",
                                minute: "%H:%M",
                                second: "%M'%S''",
                                c_hour: "%d %HH",
                                c_minute: "%H:%M",
                                c_second: "%M'%S''",
                                g_hour: "%Y/%b/%d %H:00",
                                g_minute: "%Y/%b/%d %H:%M",
                                g_second: "%Y/%b/%d %H:%M:%S"
                            } : {
                                year: "%Y",
                                quarter: "Q%Q-%Y",
                                month: "%m-%Y",
                                day: "%m/%d/%Y",
                                hour: "%d %HH",
                                minute: "%H:%M",
                                second: "%M'%S''",
                                c_hour: "%d %HH",
                                c_minute: "%H:%M",
                                c_second: "%M'%S''",
                                g_hour: "%m/%d/%Y %HH",
                                g_minute: "%m/%d/%Y %H:%M",
                                g_second: "%m/%d/%Y %H:%M:%S"
                            } : {
                                year: "%Y年",
                                quarter: "%Y年第%Q季度",
                                month: "%Y年%m月",
                                day: "%Y年%m月%d日",
                                hour: "%d日%H时",
                                minute: "%H时%M分",
                                second: "%M分%S秒",
                                c_hour: "%d日%H时",
                                c_minute: "%H时%M分",
                                c_second: "%M分%S秒",
                                g_hour: "%Y年%m月%d日%H时",
                                g_minute: "%Y年%m月%d日 %H时%M分",
                                g_second: "%Y年%m月%d日 %H时%M分%S秒"
                            };
                            var s = "",
                                l = new Date(t);
                            if ("month" === e && a) {
                                i !== new Date(t).getDate() && (l = new Date(t - 3456e5))
                            }
                            return e in o ? (Highcharts.setOptions({
                                global: {
                                    useUTC: !1
                                }
                            }), s = Highcharts.dateFormat(o[e], l, !1)) : "week" === e && "number" == typeof t && (s = n.getWeekWithOffset(t, i)), s
                        },
                        getWeekNumber: function (e, t) {
                            for (var t = t || 1, a = new Date(e), i = new Date(a.getFullYear(), 0, 1), r = 1, o = 0 === i.getDay() ? 7 : i.getDay(); o !== t;) i = new Date(i.getTime() + 864e5), o = 0 === i.getDay() ? 7 : i.getDay();
                            return e < i.getTime() ? n.getWeekNumber(new Date(a.getFullYear(), 0, 1).getTime() - 864e5, t) : (r = Math.ceil((a - i) / 6048e5) + 1, {
                                week: r,
                                year: a.getFullYear()
                            })
                        },
                        getWeekWithOffset: function (e, t) {
                            var a = $.cookie("locale") || "zh",
                                i = n.getWeekNumber(e, t),
                                r = i.year;
                            return text = a && "zh" != a ? "Week " + i.week + "-" + r : r + "年第" + i.week + "周", text
                        },
                        checkPercentLabel: function (e, t, a, i, n) {
                            var r, o, s = "",
                                l = angular.copy(t);
                            if ("C243" == a && "left" == i) {
                                if (e.value = -e.value, i = "", l.y = [].concat(t.y[0]), e.isLast && n) return ""
                            } else "C243" == a && (l.y = t.y.length > 1 ? [].concat(t.y[1]) : [].concat(t.y[0]), i = "");
                            i = i ? "y_optional" : "y", "C280" === a && (l[i] = [].concat(t.y[1]));
                            for (var d = 0; d < l[i].length; d++) {
                                var c = l[i][d].formatter;
                                if (c && "num" == c.check && c.num.unit) {
                                    s = "num", c, r = l[i][d].aggregator;
                                    break
                                }
                                if (c && "percent" == c.check) {
                                    s = "percent", o = c.percent.digit;
                                    break
                                }
                            }
                            if ("C212" === a || "C242" === a || "C352" === a) return this.numericSymbols(e.value) + "%";
                            if ("percent" == s) {
                                var p = e.value;
                                p.toString().split(".")[1];
                                return Highcharts.numberFormat(Number(p).mul(100), Math.max(0, o)) + "%"
                            }
                            return "num" == s ? this.dataLabelFormatter(c, e.value, r) : this.numericSymbols(e.value)
                        },
                        getPositiveOrNegative: function (e, t, a) {
                            function i(e) {
                                e = Number(e), e < 0 ? o++ : e >= 0 && r++
                            }
                            a = a || [];
                            for (var n, r = 0, o = 0, s = 0; s < e[t].length; s++)
                                if (!(a.indexOf(s) > -1))
                                    for (var l = 0; l < e[t][s].data.length; l++) {
                                        if ($.isArray(e[t][s].data[l])) {
                                            n = e[t][s].data[l];
                                            for (var d = 0; d < n.length; d++) i(n[d])
                                        } else i(e[t][s].data[l]);
                                        if (o > 0 && r > 0) return "mix"
                                    }
                            return o > 0 ? "negative" : "positive"
                        },
                        getSumByColumnFromMultiArray: function (e, t, a, i) {
                            i = i || [];
                            for (var n, r = [], o = 0; o < e[t][0].data.length; o++) {
                                r[o] = 0;
                                for (var s = 0; s < e[t].length; s++) i.indexOf(s) < 0 && (n = 1 * e[t][s].data[o], r[o] = "max" === a ? r[o] + (n > 0 ? n : 0) : r[o] + (n < 0 ? n : 0))
                            }
                            return Math[a].apply(null, r)
                        },
                        getEdgeValueFromMultiArray: function (e, t, a, i, n) {
                            n = n || [];
                            var r = +e[t][0].data[0];
                            if ("C320" === i) {
                                var o = [];
                                e.x.length ? angular.forEach(e[t][0].data, function (e, t) {
                                    o.push((o[t - 1] || 0) + Number(e))
                                }) : angular.forEach(e[t], function (e, t) {
                                    o.push((o[t - 1] || 0) + Number(e.data[0]))
                                }), r = Math[a](Math[a].apply(null, o), o[0])
                            } else
                                for (var s = 0; s < e[t].length; s++)
                                    if (n.indexOf(s) < 0) {
                                        var l = e[t][s].data;
                                        l[0] && $.isArray(l[0]) && (l = l.join(",").split(",")), r = Math[a](Math[a].apply(null, l), r)
                                    } return r !== Number.MIN_VALUE && r !== Number.MAX_VALUE || (r = 0), r
                        },
                        numericSymbols: function (e, t) {
                            var a = Math.abs(e),
                                i = t || 2,
                                n = e >= 0 ? "" : "-";
                            if (a <= 1) return e;
                            var r = ["", "K", "M", "B", "T", "P", "E"],
                                o = Math.floor(Math.log(a).div(Math.log(1e3)));
                            o = o > r.length ? r.length : o;
                            var s = n + Highcharts.numberFormat(a.div(Math.pow(1e3, o)).toFixed(i), -1) + r[o];
                            return s.indexOf("undefined") > -1 && (s = e), s
                        },
                        numericSymbolsWithDigit: function (e) {
                            var t = Math.abs(e),
                                a = e >= 0 ? "" : "-",
                                i = ["", "K", "M", "B", "T", "P", "E"],
                                n = Math.floor(Math.log(t).div(Math.log(1e3)));
                            n = n < 0 ? 0 : n, n = n > i.length ? i.length : n;
                            var r = Highcharts.numberFormat(t.div(Math.pow(1e3, n)), -1),
                                o = isInteger(r) ? 0 : r.toString().split(".")[1].length;
                            return a + Number(r).toFixed(Math.min(4, o)) + i[n]
                        },
                        formatNumber: function (e, t) {
                            var a = t || 4,
                                i = e < 0;
                            e = "number" == typeof e ? Math.abs(e) : Math.abs(Number(e));
                            var r, o, s;
                            if (0 == e || 1 == e) return e * (i ? -1 : 1);
                            if (e < 1) return s = e.toString().split(".")[1].length, o = e * Math.pow(10, s), n.formatNumber(i ? -1 * o : o, a) / Math.pow(10, s);
                            if (e < 4) {
                                if (t) return s = e !== Math.ceil(e) ? e.toString().split(".")[1].length : 1, o = e * Math.pow(10, s), n.formatNumber(i ? -1 * o : o, t) / Math.pow(10, s);
                                r = Math.ceil(e)
                            } else s = Math.floor(e).toString().length, o = s > 1 ? a * Math.pow(10, s - 2) : a, r = o * Math.pow(10, s) * Math.ceil(e / o) / Math.pow(10, s);
                            return r * (i ? -1 : 1)
                        },
                        formatMapNum: function (e, t, a) {
                            var i = t || 4,
                                r = e < 0;
                            e = "number" == typeof e ? Math.abs(e) : Math.abs(Number(e));
                            var o, s, l;
                            if (0 == e || 1 == e) return e * (r ? -1 : 1);
                            if (e < 1) {
                                if (l = e.toString().split(".")[1].length, s = e * Math.pow(10, l), "ceil" === a) return n.formatNumber(r ? -1 * s : s) / Math.pow(10, l);
                                if ("floor" === a) return n.formatMapNum(r ? -1 * s : s, i, "floor") / Math.pow(10, l)
                            } else e < 4 ? "ceil" === a ? o = Math.ceil(e) : "floor" === a && (o = Math.floor(e)) : (l = Math.floor(e).toString().length, s = l > 1 ? i * Math.pow(10, l - 2) : i,
                                "ceil" === a ? o = s * Math.pow(10, l) * Math.ceil(e / s) / Math.pow(10, l) : "floor" === a && (o = s * Math.pow(10, l) * Math.floor(e / s) / Math.pow(10, l)));
                            return o * (r ? -1 : 1)
                        },
                        dataLabelFormatter: function (e, t, a) {
                            var i = 2;
                            if (e) {
                                if ("percent" != e.check) switch ("en" == r.language && ("10000" == e.num.unit ? e.num.unit = "1000" : "100000000" == e.num.unit && (e.num.unit = "1000000")), e.num.unit) {
                                    case "10000":
                                        t /= 1e4;
                                        break;
                                    case "100000000":
                                        t /= 1e8;
                                        break;
                                    case "1000":
                                        t /= 1e3;
                                        break;
                                    case "1000000":
                                        t /= 1e6;
                                        break;
                                    case "1000000000":
                                        t /= 1e9
                                }
                                if ("" !== e[e.check].digit && (i = e[e.check].digit), t = "num" == e.check && e.num.millesimal ? Highcharts.numberFormat(t, i, ".", ",") : "num" == e.check ? Highcharts.numberFormat(t, i, ".", "") : Highcharts.numberFormat(100 * t, i, ".", "") + "%", "percent" != e.check) switch (e.num.unit) {
                                    case "10000":
                                        t += "万";
                                        break;
                                    case "100000000":
                                        t += "亿";
                                        break;
                                    case "1000":
                                        t += "k";
                                        break;
                                    case "1000000":
                                        t += "M";
                                        break;
                                    case "1000000000":
                                        t += "G"
                                }
                            } else "COUNT" != a && "COUNT_DISTINCT" != a || (i = 0), t = Highcharts.numberFormat(t, i);
                            return t
                        },
                        pointAbsPosInPlotArea: function (t, a, i, n, o) {
                            var s = r.ChartType,
                                l = 0,
                                d = 0,
                                c = 0,
                                p = 0;
                            if (a == s.Biax) {
                                var u = t.series.options.type;
                                "column" == u ? a = t.stackTotal ? s.NStackColumn : s.Column : ["line", "spline"].indexOf(u) > -1 && (a = s.Line)
                            }
                            if (self.info && self.info.chart_type == s.ComparisonBar && "pos_side" == self.info.comparison_xaxis_pos) {
                                var h = $(e.target.container)[0].getBoundingClientRect(),
                                    f = i.left - h.left,
                                    g = i.width + f,
                                    m = i.right + f;
                                i = {
                                    left: i.left,
                                    right: m,
                                    bottom: i.bottom,
                                    top: i.top,
                                    width: g,
                                    height: i.height
                                }
                            }
                            switch (a) {
                                case s.Line:
                                    l = d = o ? t.plotX : t.x, c = p = o ? t.plotY : t.y;
                                    break;
                                case s.Area:
                                case s.NStackArea:
                                case s.PStackArea:
                                    l = d = o ? t.plotX : t.x, c = p = o ? t.plotY : t.y;
                                    break;
                                case s.Column:
                                    l = t.barX, d = l + (t.shapeArgs ? t.shapeArgs.width || 0 : 0), c = t.negative ? (t.plotY || 0) - (t.shapeArgs ? t.shapeArgs.height || 0 : 0) : t.plotY || 0, p = t.negative ? t.plotY || 0 : c + (t.shapeArgs ? t.shapeArgs.height || 0 : 0);
                                    break;
                                case s.Waterfall:
                                    l = t.barX, d = l + (t.shapeArgs ? t.shapeArgs.width || 0 : 0), c = t.plotY || 0, p = c + (t.shapeArgs ? t.shapeArgs.height || 0 : 0);
                                    break;
                                case s.NStackColumn:
                                case s.PStackColumn:
                                    l = t.barX, d = l + t.pointWidth, c = t.negative ? t.shapeArgs && t.shapeArgs.height ? t.plotY - t.shapeArgs.height : t.yBottom : t.plotY || 0, p = t.negative ? t.plotY || 0 : t.shapeArgs && t.shapeArgs.height ? c + t.shapeArgs.height : t.yBottom;
                                    break;
                                case s.Bar:
                                    d = i.width - t.shapeArgs.y, l = d - t.shapeArgs.height, p = i.height - t.shapeArgs.x, c = p - t.shapeArgs.width;
                                    break;
                                case s.NStackBar:
                                case s.PStackBar:
                                    d = i.width - (t.plotY || 0), l = i.width - t.yBottom, p = i.height - t.barX, c = p - t.pointWidth;
                                    break;
                                case s.ComparisonBar:
                                    d = t.negative ? i.width / 2 : i.width - t.shapeArgs.y, l = t.negative ? i.width / 2 - t.shapeArgs.height : d - t.shapeArgs.height, p = i.height - t.shapeArgs.x, c = p - t.shapeArgs.width
                            }
                            return pointTop = Math.min(c, p), pointBottom = Math.max(c, p), pointLeft = Math.min(l, d), pointRight = Math.max(l, d), {
                                pointTopY: pointTop,
                                pointBottomY: pointBottom,
                                pointLeftX: pointLeft,
                                pointRightX: pointRight
                            }
                        },
                        mobileHelper: {
                            tooltipFormatter: function (e, t, a, o, s) {
                                var l, d = r.ChartType,
                                    c = s.unit_left || "",
                                    p = "",
                                    u = !1,
                                    h = r.language || "zh",
                                    f = e.points ? e.points[0].point : e.point,
                                    g = e.points ? e.points[0].key : e.key;
                                if ("C370" === t) {
                                    var m = e.point.parent;
                                    if (m) {
                                        var _ = g;
                                        g = e.series.nodeMap[m].name + " - " + _
                                    } else l = g
                                }
                                if ("C320" === t && (0 === e.points[0].point.index && 0 === e.points[0].point.category, u = e.points[0].point.isSum), 1 === a.x.length && "date" === a.x[0].data_type && "C370" !== t) {
                                    var v = o.xAxis[0],
                                        b = v.granularity || "day",
                                        y = v.granularity_name || "",
                                        w = v.month_start_day || 0;
                                    if ("C230" === t && (g = f.x), "week" === b ? (y && (g += 864e5 * (v.week_start_day_of_week - 1)), w = v.week_start_day_of_week) : "hour" !== b && "minute" !== b && "second" !== b || (b = "g_" + b), "C230" === t) {
                                        var C = f.index || 0,
                                            x = f.series.data && f.series.data[C];
                                        l = ["其它", "Else"].indexOf(x.options.x) >= 0 ? x.options.x : n.checkGranularity(b, g, y, w)
                                    } else l = u ? "" : n.checkGranularity(b, g, y, w), "week" === b && (l += "（" + Highcharts.dateFormat("%m/%d", new Date(g)) + "~" + Highcharts.dateFormat("%m/%d", new Date(g + 5184e5)) + "）")
                                } else if (1 === a.x.length && "sub_date" === a.x[0].data_type && "C370" !== t) {
                                    var k = a.x[0].fid.split("_")[1];
                                    l = n.subDateFormat(k, g)
                                } else {
                                    var D = [d.Column, d.NStackColumn, d.PStackColumn, d.Bar, d.NStackBar, d.PStackBar, d.Line, d.Waterfall, d.TreeMap, d.Biax].indexOf(t) > -1;
                                    l = 2 === a.x.length && D && !u && e.x && e.x.parent ? e.x.parent.name + " - " + e.x.name : g
                                }
                                if (u) l = o.waterfall_setting ? o.waterfall_setting.sum_name : "en" === h ? "Sum" : "累计值";
                                else if ("C280" === t) {
                                    "scatter" == f.series.type || "bubble" == f.series.type ? angular.forEach(a.x, function (e, t) {
                                        l = bdp.utils.encodeHTML(e.nick_name || e.name) + "：" + l
                                    }) : "line" == f.series.type && (l = "y=" + a.scatter_setting.linear_model.a + "* x " + (a.scatter_setting.linear_model.b < 0 ? "-" : "+") + " " + Math.abs(a.scatter_setting.linear_model.b))
                                } else "C261" === t && (l = "");
                                "" !== l && (p = 0 === a.x.length && 0 === g ? "" : '<p class="text-left tooltips-title">' + n.escapeHtml(l) + "</p>");
                                var S = !a.x.length && !o.compare_axis.length && ["C261", "C290"].indexOf(t) < 0;
                                p += '<div class="tooltips-point-wrap' + (S ? " no-dimension" : "") + ("" == l ? " pt10" : "") + '"><div class="tooltips-table">';
                                var T;
                                if ("C230" === t) p += this.tooltipFormatterForPie(e, t, a, o, s);
                                else if ("C280" === t) p += this.tooltipFormatterForScatter(e, t, a, o, s);
                                else if ("C370" === t) {
                                    var I = (1 == i || e.color, "en" == r.language ? "count" : "数值"),
                                        L = a.y[0] && a.y[0].nick_name || a.y[0] && a.y[0].name || I,
                                        A = a.y[0] && n.dataLabelFormatter(a.y[0].formatter, e.point.value, a.y[0].aggregator) || e.point.value,
                                        E = e.point.sum || e.point.series.nodeMap[""].val,
                                        F = e.point.value / E * 100;
                                    p += '<div class="tooltips-item"><div class="tooltips-val" style="color:' + e.color + '">' + A + "（" + F.toFixed(2) + '%）</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(L)) + "</div></div>"
                                } else if (["C271", "C272"].indexOf(t) > -1) {
                                    var M, j, O = a.y[0].formatter,
                                        L = a.y[0].nick_name || a.y[0].name;
                                    "C271" === t ? (M = f.value, T = f.color || "#72AFD9") : "C272" === t && (M = f.z, T = f.color);
                                    var P = "";
                                    a.y[0].hasOwnProperty("unit_adv") && (j = a.y[0].unit_adv), P = "" != j ? j : c, p += '<div class="tooltips-item"><div class="tooltips-val" style="color:' + T + '">' + n.dataLabelFormatter(O, M) + P + '</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(L)) + "</div></div>"
                                } else $.each(e.points, function (e) {
                                    var r, l = this,
                                        d = 1 == i ? "#FFF" : l.series.color,
                                        u = l.series._i;
                                    r = "C320" === t ? 1 === a.x.length ? a.y[0].nick_name || a.y[0].name : "" : "C261" === t ? a.y[0].nick_name || a.y[0].name : a.x.length > 0 || o.compare_axis.length || "C290" === t ? l.series.options.nick_name || l.series.options.name : "";
                                    var h, f = l.series.options.formatter,
                                        g = l.series.options.aggregator,
                                        m = l.y,
                                        _ = "",
                                        v = "";
                                    if (l.series.options.hasOwnProperty("unit_adv") && (v = l.series.options.unit_adv), ["C212", "C242", "C352"].indexOf(t) > -1) {
                                        var b = "";
                                        b = "" != v ? v : c, m = n.dataLabelFormatter(f, m, g), p += '<div class="tooltips-item"><div class="tooltips-val" style="color:' + d + '">' + m + b + "（" + l.percentage.toFixed(1) + '%）</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(r)) + "</div></div>"
                                    } else {
                                        var y = a.y_optional ? a.y.concat(a.y_optional) : a.y,
                                            w = y[u] || y[e];
                                        if (["C211", "C241", "C351"].indexOf(t) > -1 && (w = y[y.length - 1 - (u || e)]), m = "C243" === t ? n.dataLabelFormatter(w.formatter, Math.abs(m), g) : n.timePredicted.checkType(l.series.options, "enable", "area") ? n.dataLabelFormatter(w.formatter, l.low || l.point.low, g) + " ~ " + n.dataLabelFormatter(w.formatter, l.high || l.point.high, g) : n.dataLabelFormatter(w.formatter, m, g), "C250" === t) {
                                            var C = o.type_optional;
                                            l.series.options.yAxis && (c = o.zero_aligned ? s.unit_left || "" : s.unit_right || "");
                                            var x = C[l.series.options.yAxis];
                                            "column" === l.series.options.type && "C212" === x && (_ = "（" + l.percentage.toFixed(1) + "%）")
                                        } else "C290" === t ? c = "" : "C230" === t && (_ = "（" + l.percentage.toFixed(1) + "%）");
                                        h = "" != v ? m + v + _ : m + c + _, T = l.point.color || l.series.color, d = 1 == i ? "#FFF" : T, p += '<div class="tooltips-item"><div class="tooltips-val" style="color:' + d + '">' + h + '</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(r)) + "</div></div>"
                                    }
                                });
                                return p += "</div></div>"
                            },
                            tooltipFormatterForPie: function (e, t, a, i, r) {
                                var o = i.xAxis.length,
                                    s = ($.cookie("locale"), e.points ? e.points[0] : e.point),
                                    l = s.y,
                                    d = s.formatter,
                                    c = s.aggregator,
                                    p = "",
                                    u = o || i.compare_axis.length ? 0 : s.point ? s.point.index : s.index;
                                p = o ? $.trim(a.y[0].nick_name || a.y[0].name) : $.trim(a.y[u].nick_name || a.y[u].name);
                                var h = "";
                                return a.y[u].hasOwnProperty("unit_adv") && "" != a.y[u].unit_adv && (h = a.y[u].unit_adv), l = n.dataLabelFormatter(d, l, c), '<div class="tooltips-item"><div class="tooltips-val" style="color:' + s.color + '">' + l + h + "（" + s.percentage.toFixed(2) + '%）</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(p)) + "</div>"
                            },
                            tooltipFormatterForScatter: function (e, t, a, i, r) {
                                var o;
                                o = e.points ? e.points[0].point : e.point;
                                var s = o.color,
                                    l = a.y[0].nick_name || a.y[0].name,
                                    d = a.y[1].nick_name || a.y[1].name,
                                    c = "",
                                    p = "";
                                c = a.y[0].hasOwnProperty("unit_adv") && "" != a.y[0].unit_adv ? a.y[0].unit_adv : i.xaxis_unit || "", p = a.y[1].hasOwnProperty("unit_adv") && "" != a.y[1].unit_adv ? a.y[1].unit_adv : r.unit_left || "";
                                var u = n.dataLabelFormatter(a.y[0].formatter, o.x) + c,
                                    h = n.dataLabelFormatter(a.y[1].formatter, o.y) + p;
                                return '<div class="tooltips-item"><div class="tooltips-val" style="color:' + s + '">' + u + '</div><div class="tooltips-label">' + bdp.utils.encodeHTML(l) + '（X）</div></div><div class="tooltips-item"><div class="tooltips-val" style="color:' + s + '">' + h + '</div><div class="tooltips-label">' + bdp.utils.encodeHTML(d) + "（Y）</div></div>"
                            }
                        },
                        legendFormatter: function (e, t) {
                            var a = e.options.nick_name || e.options.name;
                            a = a.replace(/^\s+/, "");
                            var i = a.length > 10 ? a.substring(0, 9) + "..." : a;
                            return '<div class="legend-content" title="' + bdp.utils.encodeHTML(a) + '">' + bdp.utils.encodeHTML(i) + "</div>"
                        },
                        generateTitle: function (e, t, a) {
                            var i, o, s = "",
                                l = t.summary.supply_summary || [],
                                d = t.y;
                            if (1 == a.yAxis.length && a && n.timePredicted.isOpen(e, a.yAxis) && (d = t.y.slice(0, 1)), ["C230", "C250", "C243"].indexOf(e) < 0 && 1 == d.length && 1 === l.length)
                                for (var c = 0, p = l.length; c < p; c++) {
                                    for (var u = l[c], h = null === u.s_ori_value || "--" === u.s_ori_value ? "--" : Number(u.s_ori_value), f = void 0, g = void 0, m = void 0, _ = void 0, c = 0; c < d.length; c++) i = d[c], o = i.formatter, (void 0 == f || Number(i.formatter.num.unit) < f) && (o.num && (f = o.num.unit, g = o.num.digit), o.percent && (m = o.percent.digit), _ = "percent" == o.check);
                                    if (null !== u.s_ori_value && "--" !== u.s_ori_value)
                                        if (0 == _) {
                                            switch ("en" == r.language && ("10000" == f ? f = "1000" : "100000000" == f && (f = "1000000")), f) {
                                                case "10000":
                                                    h /= 1e4;
                                                    break;
                                                case "100000000":
                                                    h /= 1e8;
                                                    break;
                                                case "1000":
                                                    h /= 1e3;
                                                    break;
                                                case "1000000":
                                                    h /= 1e6;
                                                    break;
                                                case "1000000000":
                                                    h /= 1e9
                                            }
                                            switch (h = Highcharts.numberFormat(h, g), f) {
                                                case "10000":
                                                    h += "万";
                                                    break;
                                                case "100000000":
                                                    h += "亿";
                                                    break;
                                                case "1000":
                                                    h += "k";
                                                    break;
                                                case "1000000":
                                                    h += "M";
                                                    break;
                                                case "1000000000":
                                                    h += "G"
                                            }
                                        } else h = Number(100 * h).toFixed(m), h += "%";
                                    h += u.unit, s = s + '<div class="hz-chart-title-wrap nowrap"><span class="hz-chart-title-text" title="' + h + '">' + h + '</span><span class="hz-chart-title-default">' + u.s_title + "  </span></div>"
                                }
                            return a.hasOwnProperty("show_total") && !a.show_total && (s = ""), s
                        },
                        getAdjustValue: function (e, t) {
                            var a, i, n = Math.abs(e.sub(t)),
                                r = 0;
                            if (n < 1)
                                for (; n < 1;) n = n.mul(10), r++;
                            var o = 1..div(Math.pow(10, r));
                            return r - 1 > 0 ? (a = Math.ceil(e.mul(Math.pow(10, r))).div(Math.pow(10, r)), i = Math.floor(t.mul(Math.pow(10, r))).div(Math.pow(10, r))) : r - 1 < 0 ? (a = e, i = t) : (a = Math.ceil(e.mul(Math.pow(10, r))).div(Math.pow(10, r)), i = Math.floor(t)), {
                                max: a,
                                min: i,
                                increment: o
                            }
                        },
                        linearRangeColor: function (e, t) {
                            var a = d3.color(e),
                                i = d3.color(t);
                            return d3.interpolate(a, i)
                        },
                        createLinearScale: function (e, t) {
                            var a, i;
                            a = defined(e.max) && !e.disable_max ? e.max : d3.max(t), i = defined(e.min) && !e.disable_min ? e.min : d3.min(t);
                            var n = d3.scale.linear().domain([i, a]).range([0, 1]);
                            return function (e) {
                                var t = n(e);
                                return isNaN(t) ? t = 0 : (t = Math.max(t, 0), t = Math.min(t, 1)), t
                            }
                        },
                        renderLinearGradient: function (e, t, a, i) {
                            var n = d3.interpolate(t, a),
                                r = {
                                    moz: "-moz",
                                    webkit: "-webkit",
                                    ms: "-ms",
                                    o: "-o"
                                },
                                o = "-linear-gradient(left, " + t + ", ",
                                s = a + ")",
                                l = "";
                            if (i > 1)
                                for (var d = 1, c = i; d < c; d++) {
                                    var p = n((d - 1) / (c - 1)),
                                        u = n(d / (c - 1));
                                    l += p + " " + d / c * 100 + "%, " + u + " " + d / c * 100 + "%, "
                                }
                            angular.forEach(r, function (t) {
                                e.css({
                                    background: t + o + l + s
                                })
                            })
                        },
                        createLinearGradientCss: function (e, t, a) {
                            var i = d3.interpolate(e, t),
                                n = {
                                    moz: "-moz",
                                    webkit: "-webkit",
                                    ms: "-ms",
                                    o: "-o"
                                },
                                r = "-linear-gradient(left, " + e + ", ",
                                o = t + ")",
                                s = "";
                            if (a > 1)
                                for (var l = 1, d = a; l < d; l++) {
                                    var c = i((l - 1) / (d - 1)),
                                        p = i(l / (d - 1));
                                    s += c + " " + l / d * 100 + "%, " + p + " " + l / d * 100 + "%, "
                                }
                            var u = "";
                            return angular.forEach(n, function (e) {
                                u += "background: " + e + r + s + o + ";"
                            }), u
                        },
                        polynomial: function (e) {
                            return function (t) {
                                for (var a = 0, i = e.length, n = 0; n < i;) a += e[n] * Math.pow(t, n), n++;
                                return a
                            }
                        },
                        isMobile: function () {
                            if (void 0 === n._isMobile) {
                                var e = function () {
                                    var e = navigator.userAgent,
                                        t = /(?:Windows Phone)/.test(e),
                                        a = /(?:SymbianOS)/.test(e) || t,
                                        i = /(?:Android)/.test(e),
                                        n = /(?:Firefox)/.test(e),
                                        r = (/(?:Chrome|CriOS)/.test(e), /(?:iPad|PlayBook)/.test(e) || i && !/(?:Mobile)/.test(e) || n && /(?:Tablet)/.test(e)),
                                        o = /(?:iPhone)/.test(e) && !r;
                                    return {
                                        isTablet: r,
                                        isIPhone: o,
                                        isAndroid: i,
                                        isMobile: o || i || t || a,
                                        isPc: !o && !i && !a
                                    }
                                }();
                                n._isMobile = e.isMobile && $("body").width() <= 667
                            }
                            return n._isMobile
                        },
                        getPixelRatio: function (e) {
                            var a = e.backingStorePixelRatio || e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;
                            return (t.devicePixelRatio || 1) / a
                        },
                        initLoadingStatus: function (e) {
                            var e = e || "";
                            return $('<div class="base-loading-layer"><div class="loader-outer ' + e + '"><div class="loader-inner line-scale-pulse-out-rapid"><div></div><div></div><div></div><div></div><div></div></div></div></div>')
                        },
                        escapeHtml: function (e) {
                            if (e && e.length > 0) {
                                var t = {
                                    "&": "&amp;",
                                    "<": "&lt;",
                                    ">": "&gt;",
                                    '"': "&quot;",
                                    "'": "&#39;",
                                    "/": "&#x2F;"
                                };
                                return String(e).replace(/[&<>"'\/]/g, function (e) {
                                    return t[e]
                                })
                            }
                            return e
                        },
                        filterNullVal: function (e) {
                            for (var t = e.y[0].data, a = t.length, i = [], n = [], r = 0; r < a; r++) null !== t[r] && (i.push(e.x[0].data[r]), n.push(t[r]));
                            return e.x[0].data = i, e.y[0].data = n, e
                        },
                        canSetAdvancedSort: function (e, t) {
                            var a = ["C200", "C220", "C210", "C211", "C212", "C320", "C240", "C241", "C242", "C243", "C350", "C351", "C352", "C250"].indexOf(t) > -1,
                                i = ["C310", "C261"].indexOf(t) > -1 && e.compare_axis && e.compare_axis.length > 0;
                            return t && (a || i)
                        },
                        canSetZoom: function (e) {
                            return ["C210", "C220", "C240", "C243", "C250", "C350"].indexOf(e) > -1
                        },
                        canSetLegend: function (e) {
                            if (!e) return !1;
                            var t = e.chart_type,
                                a = t && ["C210", "C211", "C212", "C220", "C230", "C240", "C241", "C242", "C250", "C290", "C350", "C351", "C352"].indexOf(t) >= 0,
                                i = e.compare_axis && e.compare_axis.length > 0;
                            if (a) {
                                if (a = !!i || a, !i && e.x.length > 1) return a = !1;
                                if (!i && e.y.length < 2 && ["C230", "C250"].indexOf(t) < 0) return a = !1;
                                var n = e.color_setting;
                                "C230" != t && n && n.field && e.x && e.x.length > 0 && n.field.map(function (t) {
                                    t.fid == e.x[0].fid && (a = !1)
                                })
                            }
                            return a
                        },
                        drawGridPlotLine: function (e, t, a, i, n) {
                            var r = a.style,
                                o = axis_max = 0;
                            if ("x" == n || "x_date" == n) {
                                if (!a.hasOwnProperty("xAxisRange") || !a.style) return;
                                if (!(r.gridPlotLine && r.gridPlotLine.xAxis && r.gridPlotLine.xAxis.enabled)) return;
                                if (!("C320" == i || t.canSetAxisExtend()) || "x_date" != n && "C280" != i) return void delete a.xAxisRange;
                                if (a.xAxisRange.indexOf(e.value) < 0 && a.xAxisRange.push(e.value), e.isLast) {
                                    var s = o,
                                        l = r.gridPlotLine.xAxis.splitNum;
                                    axis_max = e.axis.max, o = e.axis.min, splitStep = Math.abs(axis_max - o) / l, s = o, "x_date" == n && (splitStep = Math.abs(axis_max - o + 2 * e.axis.minPointOffset) / l, s = o - e.axis.minPointOffset), t.options.xAxis.plotLines = t.options.xAxis.plotLines || [];
                                    for (var d = 1; d <= l; d++) t.options.xAxis.plotLines.push({
                                        className: "highcharts-grid-plot-line",
                                        color: r.gridPlotLine.xAxis.color,
                                        dashStyle: r.gridPlotLine.xAxis.dashStyle,
                                        value: s + splitStep * d,
                                        width: r.gridPlotLine.xAxis.width,
                                        zIndex: 0
                                    });
                                    delete a.xAxisRange
                                }
                            } else {
                                if (!a.hasOwnProperty("yAxisRange") || !a.style) return;
                                if (!(r.gridPlotLine && r.gridPlotLine.yAxis && r.gridPlotLine.yAxis.enabled)) return;
                                if (!t.canSetAxisExtend() || "C280" != i) return void delete a.yAxisRange;
                                a.yAxisRange.indexOf(e.value) < 0 && a.yAxisRange.push(e.value), e.isLast && (axis_max = e.axis.max, o = e.axis.min, r.gridPlotLine.yAxis.enabled && (l = r.gridPlotLine.yAxis.splitNum, t.options.yAxis.map(function (e) {
                                    a.yAxisRange.map(function (e) {
                                        axis_max = Math.max(axis_max, Number(e)), o = Math.min(o, Number(e))
                                    }), splitStep = Math.abs(axis_max - o) / l;
                                    for (var t = 1; t <= l; t++) e.plotLines = e.plotLines || [], e.plotLines.push({
                                        className: "highcharts-grid-plot-line",
                                        color: r.gridPlotLine.yAxis.color,
                                        dashStyle: r.gridPlotLine.yAxis.dashStyle,
                                        value: o + splitStep * t,
                                        width: r.gridPlotLine.yAxis.width,
                                        zIndex: 0
                                    })
                                }), delete a.yAxisRange))
                            }
                        },
                        transferAxisOldStyle: function (e) {
                            if (!bdp.bdpPageStatus.isUnderAdvDash() || !bdp.bdpPageStatus.isUnderDataScreen()) return !1;
                            e.labels && (e.xAxis && (e.xAxis.labels = $.extend(!0, e.xAxis.labels, e.labels)), e.yAxis && (e.yAxis.labels = $.extend(!0, e.yAxis.labels, e.labels)), e.yOptionalAxis && (e.yOptionalAxis.labels = $.extend(!0, e.yOptionalAxis.labels, e.labels)), delete e.labels)
                        }
                    },
                    r = t.bdpChart || {};
                t.bdpChart = r, r.helper = n
            }(window),
            function (e) {
                function t() {}

                function a(e, t, a) {
                    if (e) {
                        var i = 0,
                            n = e.length,
                            r = t[0],
                            o = t[1],
                            s = t[2],
                            l = !0;
                        switch (t.length) {
                            case 0:
                                for (; i < n; i += 2) l = e[i].call(e[i + 1] || a) !== !1 && l;
                                break;
                            case 1:
                                for (; i < n; i += 2) l = e[i].call(e[i + 1] || a, r) !== !1 && l;
                                break;
                            case 2:
                                for (; i < n; i += 2) l = e[i].call(e[i + 1] || a, r, o) !== !1 && l;
                                break;
                            case 3:
                                for (; i < n; i += 2) l = e[i].call(e[i + 1] || a, r, o, s) !== !1 && l;
                                break;
                            default:
                                for (; i < n; i += 2) l = e[i].apply(e[i + 1] || a, t) !== !1 && l
                        }
                    }
                    return l
                }

                function i(e) {
                    return "[object Function]" === Object.prototype.toString.call(e)
                }
                t.prototype.on = function (e, t, a) {
                    var i, n, r;
                    if (!t) return this;
                    for (i = this.__events || (this.__events = {}), e = e.split(/\s+/); n = e.shift();) r = i[n] || (i[n] = []), r.push(t, a);
                    return this
                }, t.prototype.once = function (e, t, a) {
                    var i = this,
                        n = function () {
                            i.off(e, n), t.apply(this, arguments)
                        };
                    this.on(e, n, a)
                }, t.prototype.off = function (e, t, a) {
                    var i, r, o, s;
                    if (!(i = this.__events)) return this;
                    if (!(e || t || a)) return delete this.__events, this;
                    for (e = e ? e.split(/\s+/) : n(i); r = e.shift();)
                        if (o = i[r])
                            if (t || a)
                                for (s = o.length - 2; s >= 0; s -= 2) t && o[s] !== t || a && o[s + 1] !== a || o.splice(s, 2);
                            else delete i[r];
                    return this
                }, t.prototype.trigger = function (e) {
                    var t, i, n, r, o, s, l = [],
                        d = !0;
                    if (!(t = this.__events)) return this;
                    for (e = e.split(/\s+/), o = 1, s = arguments.length; o < s; o++) l[o - 1] = arguments[o];
                    for (; i = e.shift();)(n = t.all) && (n = n.slice()), (r = t[i]) && (r = r.slice()), d = a(r, l, this) && d, d = a(n, [i].concat(l), this) && d;
                    return d
                }, t.prototype.emit = t.prototype.trigger, t.mixTo = function (e) {
                    e = i(e) ? e.prototype : e;
                    var a = t.prototype;
                    for (var n in a) a.hasOwnProperty(n) && (e[n] = a[n])
                };
                var n = Object.keys;
                n || (n = function (e) {
                    var t = [];
                    for (var a in e) e.hasOwnProperty(a) && t.push(a);
                    return t
                }), e.Events = t
            }(window.bdpChart),
            function (e, t) {
                function a(e, t) {
                    switch (e) {
                        case o.Column:
                            return {
                                type: "column"
                            };
                        case o.NStackColumn:
                            return {
                                type: "column",
                                plotOptions: {
                                    column: {
                                        stacking: "normal"
                                    }
                                }
                            };
                        case o.PStackColumn:
                            return {
                                type: "column",
                                plotOptions: {
                                    column: {
                                        stacking: "percent"
                                    }
                                }
                            };
                        case o.Line:
                            return {
                                type: +t.use_spline ? "spline" : "line"
                            };
                        default:
                            return {}
                    }
                }
                var i = {
                        1: {
                            states: {
                                select: {
                                    borderWidth: 2,
                                    borderColor: "#fff",
                                    color: null
                                }
                            }
                        },
                        2: {
                            states: {
                                select: {
                                    borderWidth: 2,
                                    borderColor: "#5e5e5e",
                                    color: null
                                }
                            }
                        }
                    },
                    n = {
                        1: {
                            enabled: !0,
                            fillColor: "pointColor",
                            lineWidth: 2,
                            lineColor: "#fff",
                            radius: 4
                        },
                        2: {
                            enabled: !0,
                            fillColor: "pointColor",
                            lineWidth: 2,
                            lineColor: "#5e5e5e",
                            radius: 4
                        }
                    },
                    r = {
                        1: {
                            marker: {
                                enabled: !0,
                                symbol: "circle",
                                lineColor: null,
                                lineWidth: 2,
                                radius: 3,
                                fillColor: "rgba(255,255,255,0)",
                                states: {
                                    hover: {
                                        enabled: !0,
                                        lineColor: "#FFF",
                                        lineWidth: 3,
                                        radius: 3,
                                        fillColor: "rgba(255,255,255,0)"
                                    },
                                    select: n[1]
                                }
                            },
                            halo: {
                                opacity: 1,
                                size: 8,
                                attributes: {
                                    zIndex: 2,
                                    fill: "rgba(255,255,255,0.15)",
                                    "stroke-width": 6,
                                    stroke: "rgba(255,255,255,0.05)"
                                }
                            }
                        },
                        2: {
                            marker: {
                                enabled: !0,
                                symbol: "circle",
                                lineColor: null,
                                lineWidth: 2,
                                radius: 3,
                                fillColor: "#FFF",
                                states: {
                                    hover: {
                                        enabled: !0,
                                        lineColor: null,
                                        lineWidth: 3,
                                        radius: 3,
                                        fillColor: "#FFF"
                                    },
                                    select: n[2]
                                }
                            },
                            halo: {
                                opacity: .3,
                                size: 8,
                                attributes: {
                                    zIndex: 2,
                                    "stroke-width": 6
                                }
                            }
                        }
                    },
                    o = {
                        Table: "C200",
                        Column: "C210",
                        NStackColumn: "C211",
                        PStackColumn: "C212",
                        Line: "C220",
                        Pie: "C230",
                        Bar: "C240",
                        NStackBar: "C241",
                        PStackBar: "C242",
                        ComparisonBar: "C243",
                        Biax: "C250",
                        Gauge: "C261",
                        AreaMap: "C271",
                        BubbleMap: "C272",
                        Scatter: "C280",
                        Radar: "C290",
                        Sankey: "C300",
                        KPICard: "C310",
                        Waterfall: "C320",
                        Funnel: "C330",
                        WordCloud: "C340",
                        Area: "C350",
                        NStackArea: "C351",
                        PStackArea: "C352",
                        Sunburst: "C360",
                        TreeMap: "C370",
                        GIS: "C400",
                        Custom: "C500"
                    };
                t.ChartType = o;
                var s = {},
                    l = t.helper,
                    d = function (e, t) {
                        s[e] = t
                    };
                d(o.Column, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: "column"
                        },
                        plotOptions: {
                            column: {
                                borderRadius: 1.7,
                                states: i[t].states
                            }
                        }
                    }
                }), d(o.NStackColumn, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: "column"
                        },
                        plotOptions: {
                            column: {
                                stacking: "normal",
                                states: i[t].states,
                                dataLabels: {
                                    inside: !0,
                                    verticalAlign: "middle"
                                }
                            }
                        }
                    }
                }), d(o.PStackColumn, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: "column"
                        },
                        plotOptions: {
                            column: {
                                stacking: "percent",
                                states: i[t].states,
                                dataLabels: {
                                    inside: !0,
                                    verticalAlign: "middle"
                                }
                            }
                        }
                    }
                }), d(o.Line, function (e) {
                    var t = +e.info.use_spline ? "spline" : "line",
                        a = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: t,
                            spacingRight: 5
                        },
                        plotOptions: {
                            line: {
                                lineWidth: 2,
                                marker: $.extend(r[a].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[a].halo
                                    }
                                }
                            },
                            spline: {
                                lineWidth: 2,
                                marker: $.extend(r[a].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[a].halo
                                    }
                                }
                            }
                        }
                    }
                }), d(o.Pie, function (e) {
                    e.$elem.addClass("chart-pie");
                    var t = e.info,
                        a = e.data,
                        i = "",
                        n = "",
                        r = t.xAxis.length,
                        o = "fullscreen" !== e.mode || e.isMobileMode ? 10 : 30,
                        s = "dark" === e.theme ? "#fff" : "#777";
                    return r && "date" === t.xAxis[0].data_type && (i = t.xAxis[0].granularity, n = t.xAxis[0].granularity_name, gConfig = t.xAxis[0].month_start_day || 0), {
                        chart: {
                            type: "pie"
                        },
                        legend: {
                            labelFormatter: function () {
                                var e = r || t.compare_axis.length ? 0 : this.index,
                                    s = (this.series.options.formatter, this.series.options.aggregator, this.percentage.toFixed(2), ""),
                                    d = "";
                                if (i) {
                                    var c = this.x;
                                    "week" === i && n && (c += 864e5 * (t.xAxis[0].week_start_day_of_week - 1), gConfig = t.xAxis[0].week_start_day_of_week), d = s = ["其它", "Else"].indexOf(this.options.x) >= 0 ? this.options.x : l.checkGranularity(i, c, n, gConfig)
                                } else d = r ? this.name : $.trim(a.y[e].nick_name || a.y[e].name), d = d.toString().replace(/^\s+/, ""), s = d.length > o ? d.substring(0, o - 1) + "..." : d;
                                return '<div title="' + d + '">' + bdp.utils.encodeHTML(s) + "</div>"
                            }
                        },
                        tooltip: {
                            crosshairs: null,
                            formatter: function () {
                                var e = ($.cookie("locale"), this.y),
                                    o = this.series.options.formatter,
                                    d = this.series.options.aggregator,
                                    c = "",
                                    p = r || t.compare_axis.length ? 0 : this.point.index;
                                if (i) {
                                    var u = this.point.x;
                                    "week" === i ? n && (u += 864e5 * (t.xAxis[0].week_start_day_of_week - 1), gConfig = t.xAxis[0].week_start_day_of_week) : "hour" !== i && "minute" !== i && "second" !== i || (i = "g_" + i);
                                    var h = this.point.index || 0,
                                        f = this.series.data && this.series.data[h];
                                    c = ["其它", "Else"].indexOf(f.options.x) >= 0 ? f.options.x : l.checkGranularity(i, u, n, gConfig)
                                } else c = r ? this.point.name : $.trim(a.y[p].nick_name || a.y[p].name);
                                var g = "";
                                a.y[p].hasOwnProperty("unit_adv") && "" != a.y[p].unit_adv && (g = a.y[p].unit_adv), e = l.dataLabelFormatter(o, e, d);
                                var m = '<table class="tooltips-table">';
                                return m += '<tr><td style="text-align:right;color:' + this.point.color + '">' + c + '</td><td style="text-align: left; color:' + this.point.color + '">：' + e + g + "</td></tr>", m += '<tr><td style="text-align: right;color:' + s + '">占比</td><td style="text-align: left;color:' + s + '">：' + this.percentage.toFixed(2) + "%</td></tr>"
                            }
                        }
                    }
                }), d(o.Bar, function (e) {
                    var t = (e.options, "dark" === e.theme ? 1 : 2);
                    return {
                        chart: {
                            type: "bar"
                        },
                        plotOptions: {
                            bar: {
                                borderRadius: 1.7,
                                states: i[t].states
                            }
                        }
                    }
                }), d(o.NStackBar, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: "bar"
                        },
                        plotOptions: {
                            bar: {
                                stacking: "normal",
                                states: i[t].states,
                                dataLabels: {
                                    inside: !0,
                                    verticalAlign: "middle"
                                }
                            }
                        }
                    }
                }), d(o.PStackBar, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: "bar"
                        },
                        plotOptions: {
                            bar: {
                                stacking: "percent",
                                states: i[t].states,
                                dataLabels: {
                                    inside: !0,
                                    verticalAlign: "middle"
                                }
                            }
                        }
                    }
                }), d(o.ComparisonBar, function (e) {
                    var t = (e.options, "dark" === e.theme ? 1 : 2);
                    return {
                        chart: {
                            type: "bar"
                        },
                        plotOptions: {
                            bar: {
                                stacking: "normal",
                                states: i[t].states
                            }
                        }
                    }
                }), d(o.Biax, function (e) {
                    var t = e.info,
                        o = e.chartData,
                        s = e.options,
                        l = a(t.type_optional[0], t),
                        d = a(t.type_optional[1], t);
                    (o.y.length > 0 || o.y_optional.length > 0) && (o.y.forEach(function (e) {
                        e.type = l.type, e.yAxis = 0
                    }), o.y_optional.forEach(function (e) {
                        e.type = d.type, e.yAxis = 1
                    }));
                    var c = "dark" === e.theme ? 1 : 2,
                        p = {
                            marker: $.extend({
                                symbol: "circle",
                                lineColor: null,
                                lineWidth: 2,
                                radius: 0,
                                fillColor: "rgba(255,255,255,0)",
                                states: {
                                    hover: r[c].marker.states.hover,
                                    select: n[c]
                                }
                            }, {
                                fillColor: "rgba(0, 0, 0, 0)",
                                lineWidth: 0,
                                radius: 3
                            }),
                            states: {
                                hover: {
                                    halo: r[c].halo
                                }
                            }
                        };
                    if (s.series.length > 0 && (["C211", "C212"].indexOf(t.type_optional[0]) > -1 && (s.series[0].borderRadiusTopLeft = 1.7, s.series[0].borderRadiusTopRight = 1.7, o.y.length > 0 && (s.series[o.y.length - 1].borderRadiusBottomLeft = 1.7, s.series[o.y.length - 1].borderRadiusBottomRight = 1.7)), ["C211", "C212"].indexOf(t.type_optional[1]) > -1 && (o.y_optional.length > 0 && (s.series[o.y.length].borderRadiusTopLeft = 1.7, s.series[o.y.length].borderRadiusTopRight = 1.7), s.series[s.series.length - 1].borderRadiusBottomLeft = 1.7, s.series[s.series.length - 1].borderRadiusBottomRight = 1.7)), s.chart.marginRight = void 0, t.yAxis.length) {
                        var u = "function" == typeof s.yAxis[0].tickPositioner ? s.yAxis[0].tickPositioner() : [0, 1, 2, 3, 4],
                            h = u.indexOf(0),
                            f = h > 0 ? Math.abs(u[h - 1]) : u[1] - u[0];
                        if (h < 0)
                            for (var g = 0; g < u.length; g++) {
                                if (u[g] >= 0) {
                                    h = g;
                                    break
                                }
                                h = g
                            }
                        if (t.yAxisOptional.length) {
                            var m = "function" == typeof s.yAxis[1].tickPositioner ? s.yAxis[1].tickPositioner() : [0, 1, 2, 3, 4],
                                _ = m.indexOf(0),
                                v = _ > 0 ? Math.abs(m[_ - 1]) : m[1] - m[0];
                            if (_ < 0)
                                for (var g = 0; g < m.length; g++) {
                                    if (m[g] >= 0) {
                                        _ = g;
                                        break
                                    }
                                    _ = g
                                }
                            if (h !== _ && t.yaxis_max_disabled && t.yaxis_min_disabled && (t.yaxis_max_disabled_right && t.yaxis_min_disabled_right || (!t.yaxis_max_disabled_right || !t.yaxis_min_disabled_right) && t.zero_aligned) && (2 !== h && (s.yAxis[0].tickPositions = [f.mul(-4), f.mul(-2), 0, f.mul(2), f.mul(4)]), 2 !== _ && (s.yAxis[1].tickPositions = [v.mul(-4), v.mul(-2), 0, v.mul(2), v.mul(4)])), t.zero_aligned) {
                                if (t.yaxis_max_disabled && t.yaxis_min_disabled) {
                                    if (h === _ && h <= 0) {
                                        f >= v ? (f = u[u.length - 1] / 4, u = 0 === h ? [0, f, f.mul(2), f.mul(3), f.mul(4)] : [f.mul(-4), f.mul(-3), f.mul(-2), f.mul(-1), 0]) : (v = m[m.length - 1] / 4, m = 0 === h ? [0, v, v.mul(2), v.mul(3), v.mul(4)] : [v.mul(-4), v.mul(-3), v.mul(-2), v.mul(-1), 0])
                                    }
                                    f >= v ? s.yAxis[1].tickPositions = h != _ ? s.yAxis[0].tickPositions : u : s.yAxis[0].tickPositions = h != _ ? s.yAxis[1].tickPositions : m
                                } else s.yAxis[1].tickPositions = u;
                                s.yAxis[1].labels.enabled = !1, s.yAxis[1].title.text = ""
                            }
                        }
                    }
                    return {
                        plotOptions: $.extend({
                            line: p,
                            spline: p,
                            series: {
                                connectNulls: !1,
                                states: i[c].states
                            }
                        }, l.plotOptions, d.plotOptions)
                    }
                }), d(o.Scatter, function (e) {
                    var t = e.data.y[0],
                        a = e.info.xaxis_name,
                        i = e.info.xaxis_unit,
                        r = "dark" === e.theme ? 1 : 2;
                    a || (a = t.name), i && (a += "(" + i + ")"), $.extend(!0, e.options, {
                        chart: {
                            type: e.options.chart.type || "scatter"
                        },
                        xAxis: {
                            title: {
                                enabled: !0,
                                text: a
                            }
                        },
                        plotOptions: {
                            line: {
                                lineWidth: 1,
                                dashStyle: "fullscreen" !== e.mode || e.isMobileMode ? "ShortDash" : "Dash",
                                enableMouseTracking: !1,
                                marker: {
                                    enabled: !1,
                                    states: {
                                        hover: {
                                            enabled: !1
                                        }
                                    }
                                }
                            },
                            spline: {
                                lineWidth: 1,
                                dashStyle: "fullscreen" !== e.mode || e.isMobileMode ? "ShortDash" : "Dash",
                                enableMouseTracking: !1,
                                marker: {
                                    enabled: !1,
                                    states: {
                                        hover: {
                                            enabled: !1
                                        }
                                    }
                                }
                            },
                            bubble: {
                                dataLabels: {
                                    enabled: e.info.show_datalabels,
                                    allowOverlap: e.info.show_all_datalabels,
                                    y: -8,
                                    formatter: function () {
                                        var t = this.points ? this.points[0].point : this.point,
                                            a = t.index,
                                            i = [],
                                            n = e.info;
                                        return angular.forEach([e.data.x[0]], function (e, t) {
                                            var r = e.data[a];
                                            if ("date" == e.data_type) {
                                                var o = n.xAxis[t].granularity || "day",
                                                    s = n.xAxis[t].granularity_name || "",
                                                    d = n.xAxis[t].month_start_day || 0;
                                                "week" === o && (d = n.xAxis[t].week_start_day_of_week), r = l.checkGranularity(o, r, s, d), "week" === o && (r += "（" + Highcharts.dateFormat("%b/%e", new Date(r)) + "~" + Highcharts.dateFormat("%b/%e", new Date(r + 5184e5)) + "）"), (e.data[a].toString().length < 10 || "Invalid date" === r) && (r = e.data[a])
                                            } else "sub_date" == e.data_type && (r = l.subDateFormat(e.fid.split("_")[1], e.data[a]));
                                            i.push(r)
                                        }), i.join("_")
                                    }
                                },
                                marker: {
                                    states: {
                                        hover: {
                                            radiusPlus: 0
                                        },
                                        select: n[r]
                                    }
                                }
                            },
                            scatter: {
                                dataLabels: {
                                    enabled: e.info.show_datalabels,
                                    allowOverlap: e.info.show_all_datalabels,
                                    formatter: function () {
                                        var t = this.points ? this.points[0].point : this.point,
                                            a = t.index,
                                            i = [],
                                            n = e.info;
                                        return angular.forEach([e.data.x[0]], function (e, t) {
                                            var r = e.data[a];
                                            if ("date" == e.data_type) {
                                                var o = n.xAxis[t].granularity || "day",
                                                    s = n.xAxis[t].granularity_name || "",
                                                    d = n.xAxis[t].month_start_day || 0;
                                                "week" === o && (d = n.xAxis[t].week_start_day_of_week), r = l.checkGranularity(o, r, s, d), "week" === o && (r += "（" + Highcharts.dateFormat("%b/%e", new Date(r)) + "~" + Highcharts.dateFormat("%b/%e", new Date(r + 5184e5)) + "）"), (e.data[a].toString().length < 10 || "Invalid date" === r) && (r = e.data[a])
                                            } else "sub_date" == e.data_type && (r = l.subDateFormat(e.fid.split("_")[1], e.data[a]));
                                            i.push(r)
                                        }), i.join("_")
                                    }
                                },
                                marker: {
                                    states: {
                                        hover: {
                                            radiusPlus: 0
                                        },
                                        select: n[r]
                                    }
                                }
                            },
                            series: {
                                states: {
                                    hover: {
                                        halo: {
                                            size: 6
                                        }
                                    }
                                },
                                color: "rgba(114,175,217,0.6)",
                                turboThreshold: 10001
                            }
                        },
                        tooltip: {
                            formatter: function () {
                                var t = e.data,
                                    a = e.info,
                                    i = e._getUnit().unit_left || "",
                                    n = e.info.xaxis_unit || "";
                                return function (e, r) {
                                    if (!r || $(".selected-tooltip").length > 0) return !1;
                                    var o, s;
                                    s = this.points ? this.points[0].point : this.point;
                                    var d = s.index,
                                        c = "",
                                        p = s.color,
                                        u = t.y[0].nick_name || t.y[0].name,
                                        h = t.y[1].nick_name || t.y[1].name,
                                        f = "",
                                        g = "";
                                    f = t.y[0].hasOwnProperty("unit_adv") && "" != t.y[0].unit_adv ? t.y[0].unit_adv : n, g = t.y[1].hasOwnProperty("unit_adv") && "" != t.y[1].unit_adv ? t.y[1].unit_adv : i;
                                    var m = l.dataLabelFormatter(t.y[0].formatter, s.x) + f,
                                        _ = l.dataLabelFormatter(t.y[1].formatter, s.y) + g;
                                    if ("scatter" == s.series.type || "bubble" == s.series.type) c += '<table class="tooltips-table">', angular.forEach(t.x, function (e, t) {
                                        var i = o = e.data[d],
                                            n = e.nick_name || e.name;
                                        if ("date" == e.data_type) {
                                            var r = a.xAxis[t].granularity || "day",
                                                s = a.xAxis[t].granularity_name || "",
                                                p = a.xAxis[t].month_start_day || 0;
                                            "week" === r && (p = a.xAxis[t].week_start_day_of_week), i = l.checkGranularity(r, o, s, p), "week" === r && (i += "（" + Highcharts.dateFormat("%b/%e", new Date(o)) + "~" + Highcharts.dateFormat("%b/%e", new Date(o + 5184e5)) + "）"), (o.toString().length < 10 || "Invalid date" === i) && (i = o)
                                        } else "sub_date" == e.data_type && (i = l.subDateFormat(e.fid.split("_")[1], o));
                                        c += '<tr = class="tooltips-title"><td style="text-align:right;">' + bdp.utils.encodeHTML(n) + '</td><td style="text-align: left;">： ' + i + "</td></tr>"
                                    });
                                    else if ("line" == s.series.type) {
                                        var v = "y=" + t.scatter_setting.linear_model.a + "* x " + (t.scatter_setting.linear_model.b < 0 ? "-" : "+") + " " + Math.abs(t.scatter_setting.linear_model.b);
                                        c += '<p class="tooltips-title text-center">' + v + "</p>", c += '<table class="tooltips-table">'
                                    }
                                    if (c += '<tr><td style="text-align:right;color:' + p + '">' + bdp.utils.encodeHTML(u) + '</td><td style="text-align: left; color:' + p + '">：' + m + "</td></tr>", c += '<tr><td style="text-align:right;color:' + p + '">' + bdp.utils.encodeHTML(h) + '</td><td style="text-align: left; color:' + p + '">：' + _ + "</td></tr>", void 0 !== s._z) {
                                        var b = s._z;
                                        c += '<tr><td style="text-align:right;color:' + p + '">' + a.bubble_setting.field.name + '</td><td style="text-align: left; color:' + p + '">：' + b + "</td></tr>"
                                    }
                                    return c += "</table>"
                                }
                            }()
                        },
                        legend: {
                            enabled: !1
                        }
                    })
                }), d(o.Radar, function (e) {
                    var t, a = e.options.series[0].data.length > 3 ? "polygon" : "circle",
                        i = "dark" === e.theme ? 1 : 2;
                    t = "dark" === e.theme ? "fullscreen" == e.mode ? "rgba(255,255,255,0.2)" : "rgba(255,255,255,0.12)" : "fullscreen" == e.mode ? "rgba(0, 0, 0, .2)" : "rgba(0, 0, 0, .12)", $.extend(!0, e.options, {
                        chart: {
                            type: "line",
                            polar: !0,
                            backgroundColor: null,
                            spacingBottom: 15
                        },
                        plotOptions: {
                            line: {
                                lineWidth: 2,
                                marker: $.extend(!0, r[i].marker, {
                                    enabled: !0,
                                    radius: "fullscreen" == e.mode ? 5 : 3,
                                    fillColor: null
                                }),
                                states: {
                                    hover: {
                                        halo: $.extend(!0, r[i].halo, {
                                            radiusPlus: "fullscreen" == e.mode ? 1 : 0
                                        })
                                    }
                                }
                            }
                        },
                        pane: {
                            size: "90%",
                            background: {
                                borderColor: null,
                                backgroundColor: null
                            }
                        },
                        xAxis: {
                            tickmarkPlacement: "on",
                            lineWidth: 0,
                            gridLineWidth: "fullscreen" != e.mode || e.isMobileMode ? 1 : 2,
                            gridLineColor: t
                        },
                        yAxis: [{
                            title: {
                                enabled: !1,
                                text: ""
                            },
                            gridLineWidth: "fullscreen" != e.mode || e.isMobileMode ? 1 : 2,
                            gridLineColor: t,
                            tickColor: t,
                            lineWidth: 0,
                            gridLineInterpolation: a
                        }]
                    }), e.data.x.length && "date" == e.data.x[0].data_type && (e.options.xAxis.showLastLabel = !0)
                }), d(o.Gauge, function (e) {
                    t.setGaugeSpecialOption(e)
                }), d(o.Waterfall, function (e) {
                    var a = "dark" === e.theme ? 1 : 2,
                        n = t.setWaterfallSpecialOption(e);
                    return $.extend(!0, n.plotOptions, {
                        waterfall: {
                            states: $.extend(!0, {}, i[a].states, {
                                select: {
                                    borderWdith: 1
                                }
                            })
                        }
                    }), n
                }), d(o.Area, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: +e.info.use_spline ? "areaspline" : "area"
                        },
                        plotOptions: {
                            area: {
                                fillOpacity: .6,
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    }
                                }
                            },
                            areaspline: {
                                fillOpacity: .6,
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    },
                                    states: i[t].states
                                }
                            },
                            series: {
                                connectNulls: !1
                            }
                        }
                    }
                }), d(o.NStackArea, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: +e.info.use_spline ? "areaspline" : "area"
                        },
                        plotOptions: {
                            area: {
                                fillOpacity: .6,
                                stacking: "normal",
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    }
                                }
                            },
                            areaspline: {
                                fillOpacity: .6,
                                stacking: "normal",
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    },
                                    states: i[t].states
                                }
                            },
                            series: {
                                connectNulls: !1
                            }
                        }
                    }
                }), d(o.PStackArea, function (e) {
                    var t = "dark" === e.theme ? 1 : 2;
                    return {
                        chart: {
                            type: +e.info.use_spline ? "areaspline" : "area"
                        },
                        plotOptions: {
                            area: {
                                stacking: "percent",
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    }
                                }
                            },
                            areaspline: {
                                stacking: "percent",
                                lineWidth: 2,
                                marker: $.extend(r[t].marker, {
                                    fillColor: "rgba(0, 0, 0, 0)",
                                    lineWidth: 0
                                }),
                                states: {
                                    hover: {
                                        halo: r[t].halo
                                    },
                                    states: i[t].states
                                }
                            },
                            series: {
                                connectNulls: !1
                            }
                        }
                    }
                }), d(o.TreeMap, function (e) {
                    return {
                        chart: {
                            type: "treemap"
                        },
                        plotOptions: {
                            treemap: {
                                layoutAlgorithm: "squarified",
                                dataLabels: {
                                    enabled: !0,
                                    allowOverlap: !!e.info.show_all_datalabels,
                                    crop: !e.info.show_all_datalabels,
                                    style: {
                                        color: "#fff",
                                        fontSize: "12px",
                                        shadow: null,
                                        textOutline: null
                                    }
                                },
                                levels: [{
                                    level: 1,
                                    dataLabels: {
                                        enabled: !0,
                                        align: "left",
                                        verticalAlign: "top",
                                        style: {
                                            fontSize: "14px"
                                        }
                                    }
                                }]
                            }
                        }
                    }
                }), t.definedChartType = d, t.chartTypeDelegate = {
                    getChartTypeOption: function (e, t) {
                        if (e.$elem.removeClass("chart-pie"), "function" == typeof s[t]) return s[t](e);
                        throw t + " is not defined"
                    }
                }
            }(window, window.bdpChart),
            function (e) {
                var t = e.bdpChart.ChartType,
                    a = {
                        canEditSankeySpec: function (e, t) {
                            return !!e && "C300" === e
                        },
                        canEditGaugeSpec: function (e, t) {
                            return !!e && "C261" === e
                        },
                        canEditMapSpec: function (e, t) {
                            return !!e && ["C271", "C272"].indexOf(e) >= 0
                        },
                        canEditWordcloudSpec: function (e, t) {
                            return !!e && "C340" === e
                        },
                        canEditTableSpec: function (e, t) {
                            return !!e && "C200" === e
                        },
                        canEditWarnLine: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info && t.info.drill_level || 0;
                            return ["C212", "C230", "C242", "C271", "C290", "C300", "C310", "C320", "C330", "C340", "C352", "C360", "C370"].indexOf(e) < 0 && a < 1
                        },
                        canEditPlotLine: function (e, t) {
                            return !!e && ["C230", "C200", "C271", "C272", "C290", "C300", "C310", "C320", "C330", "C340", "C360", "C370"].indexOf(e) < 0
                        },
                        canEditConditionFormat: function (e, t) {
                            return !!e && ["C261", "C200", "C310"].indexOf(e) >= 0
                        },
                        canEditTopChart: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info.x.length || t.info.compare_axis.length;
                            return ["C220", "C261", "C271", "C272", "C300", "C310", "C320", "C330", "C340"].indexOf(e) < 0 && a
                        },
                        canEditMarkPoint: function (e, t) {
                            if (!t || !e) return !1;
                            var a = 1 === t.info.x.length && (!t.info.compare_axis || 0 === t.info.compare_axis.length);
                            return ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C320", "C350", "C351", "C352", "C360"].indexOf(e) >= 0 && a
                        },
                        canEditTrendLine: function (e, t) {
                            return !!e && "C280" === e
                        },
                        canEditCumulative: function (e, t) {
                            return !!e && "C320" === e
                        },
                        canEditChartSummary: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info,
                                i = !1;
                            if (a) {
                                var n = a.xAxis.length || 0,
                                    r = a.yAxis.length || 0,
                                    o = a.compare_axis.length || 0;
                                i = !a.split_compare && (1 == n || 0 == n) && 1 == r && 0 == o
                            }
                            return "C200 C230 C243 C250 C261 C271 C272 C300 C310 C330".indexOf(e) < 0 && i
                        },
                        canEditXAxis: function (e, t) {
                            return !!e && ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C250", "C280", "C290", "C320", "C350", "C351", "C352"].indexOf(e) >= 0
                        },
                        canEditLeftAxis: function (e, t) {
                            return !!e && ["C200", "C230", "C261", "C271", "C272", "C290", "C300", "C310", "C330", "C340", "C360", "C370"].indexOf(e) < 0
                        },
                        canEditRightAxis: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info;
                            return "C250" === e && !a.zero_aligned
                        },
                        canEditZeroAligneds: function (e, t) {
                            return !!e && "C250" === e
                        },
                        canEditNavigator: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info,
                                n = t.data,
                                r = i.ChartType,
                                o = !1;
                            return a && (o = a.x.length > 0 && !a.split_compare && n.y[0] && n.y[0].data.length > 1), [r.Line, r.Column, r.NStackColumn, r.PStackColumn, r.Area, r.NStackArea, r.PStackArea, r.Biax].indexOf(e) >= 0 && o
                        },
                        canSetSelectionAnalysis: function (e, t) {
                            return !(!t || !e) && t.supportSelect()
                        },
                        canSetHoverMode: function (e, a) {
                            if (!a || !e) return !1;
                            var i = [t.Line, t.Column, t.NStackColumn, t.PStackColumn, t.Area, t.NStackArea, t.PStackArea, t.Biax, t.ComparisonBar, t.Bar, t.NStackBar, t.PStackBar, t.TreeMap],
                                n = a && a.isSplitChart(),
                                r = t.TreeMap !== e && a.data.y.length > 1 || t.TreeMap == e && a.data.x.length > 1;
                            return i.indexOf(e) > -1 && !n && r
                        },
                        canEditSplitCompare: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info,
                                n = i.ChartType,
                                r = !1;
                            return a && (r = a.compare_axis && a.compare_axis.length > 0), [n.Line, n.Area, n.Column, n.Bar, n.KPICard, n.Gauge].indexOf(e) >= 0 && r
                        },
                        canEditLineStyle: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info;
                            return ["C220", "C350", "C351", "C352", "C220"].indexOf(e) >= 0 || "C250" === e && a.type_optional.indexOf("C220") > -1
                        },
                        canEditPieStyle: function (e, t) {
                            return !!e && "C230" === e
                        },
                        canEditFunnelLayout: function (e, t) {
                            return !!e && "C330" === e
                        },
                        canEditWordcloud3D: function (e, t) {
                            return !!e && "C340" === e
                        },
                        canEditComparisonBarAxis: function (e, t) {
                            return !!e && "C243" === e
                        },
                        canEditChartDataLabels: function (e, t) {
                            return !!e && ["C101", "C102", "C103", "C104", "C105", "C200", "C261", "C300", "C310", "C340", "C400", "C500"].indexOf(e) < 0
                        },
                        canEditGridPlotLine: function (e, t) {
                            return !!e && ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C280", "C320", "C350", "C351", "C352"].indexOf(e) >= 0
                        },
                        canEditChartLegend: function (e, t) {
                            if (!t || !e) return !1;
                            var a = t.info,
                                i = ["C210", "C211", "C212", "C220", "C230", "C240", "C241", "C242", "C250", "C290", "C350", "C351", "C352"].indexOf(e) >= 0;
                            if (i && a) {
                                var n = a.compare_axis && a.compare_axis.length > 0;
                                if (i = !!n || i, !n && a.x.length > 1 && a.y.length < 2 && ["C250"].indexOf(e) < 0) return i = !1;
                                if (!n && a.y.length < 2 && ["C230", "C250"].indexOf(e) < 0) return i = !1;
                                var r = a.color_setting;
                                "C230" != e && r && r.field && a.x && a.x.length > 1 && r.field.map(function (e) {
                                    e.fid == a.x[0].fid && (i = !1)
                                })
                            }
                            return i
                        }
                    },
                    i = e.bdpChart || {};
                e.bdpChart = i, i.configurable = a
            }(window),
            function (e) {
                var t = e.helper,
                    a = e.ChartType,
                    i = {
                        getModeOption: function (e, i, n, r) {
                            var o = {
                                showDataLabel: {
                                    dataLabels: {
                                        enabled: !0,
                                        allowOverlap: r.info.show_all_datalabels,
                                        color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                        style: {
                                            fontSize: "14px",
                                            textOutline: "none"
                                        },
                                        padding: 5
                                    }
                                },
                                label: {
                                    color: "dark" === r.theme ? "rgba(255, 255, 255, .6) " : "#666",
                                    fontSize: "13px"
                                }
                            };
                            "C320" !== e && "C280" !== e && (o.showDataLabel.dataLabels.formatter = function () {
                                var a = this.series.options.formatter,
                                    i = this.series.options.aggregator;
                                return "C243" == e ? t.dataLabelFormatter(a, Math.abs(this.y), i) : t.dataLabelFormatter(a, this.y, i)
                            });
                            var s = i.summary.supply_summary && i.summary.supply_summary.length,
                                l = {
                                    noData: {
                                        style: {
                                            color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                            fontSize: "14px"
                                        }
                                    },
                                    legend: {
                                        layout: "vertical",
                                        align: "right",
                                        verticalAlign: "top",
                                        navigation: {
                                            activeColor: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                            style: o.label
                                        },
                                        itemStyle: o.label,
                                        itemHoverStyle: {
                                            color: "dark" === r.theme ? "#eee " : "#666"
                                        },
                                        margin: 40,
                                        y: 30
                                    },
                                    chart: {
                                        spacingTop: s ? 10 : 50
                                    },
                                    title: {
                                        style: o.label
                                    },
                                    xAxis: {
                                        labels: {
                                            style: o.label
                                        },
                                        title: {
                                            style: o.label
                                        }
                                    },
                                    yAxis: [{
                                        title: {
                                            style: o.label
                                        },
                                        labels: {
                                            style: e !== a.Gauge ? o.label : {
                                                fontSize: "20px",
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666"
                                            }
                                        }
                                    }],
                                    tooltip: {
                                        style: {
                                            fontSize: "14px"
                                        }
                                    },
                                    plotOptions: {
                                        series: {
                                            animation: {
                                                duration: 1e3,
                                                easing: "swing"
                                            }
                                        },
                                        bar: angular.copy(o.showDataLabel),
                                        column: angular.copy(o.showDataLabel),
                                        waterfall: angular.copy(o.showDataLabel),
                                        line: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5,
                                                formatter: function () {
                                                    var e = this.series.options.formatter,
                                                        a = this.series.options.aggregator;
                                                    return t.dataLabelFormatter(e, this.y, a)
                                                }
                                            },
                                            lineWidth: 3,
                                            state: {
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            }
                                        },
                                        spline: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5,
                                                formatter: function () {
                                                    var e = this.series.options.formatter,
                                                        a = this.series.options.aggregator;
                                                    return t.dataLabelFormatter(e, this.y, a)
                                                }
                                            },
                                            lineWidth: 3,
                                            state: {
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            }
                                        },
                                        area: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5,
                                                formatter: function () {
                                                    var e = this.series.options.formatter,
                                                        a = this.series.options.aggregator;
                                                    return t.dataLabelFormatter(e, this.y, a)
                                                }
                                            },
                                            lineWidth: 3,
                                            state: {
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            }
                                        },
                                        areaspline: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5,
                                                formatter: function () {
                                                    var e = this.series.options.formatter,
                                                        a = this.series.options.aggregator;
                                                    return t.dataLabelFormatter(e, this.y, a)
                                                }
                                            },
                                            lineWidth: 3,
                                            state: {
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            }
                                        },
                                        bubble: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5
                                            }
                                        },
                                        scatter: {
                                            dataLabels: {
                                                enabled: !0,
                                                allowOverlap: r.info.show_all_datalabels,
                                                color: "dark" === r.theme ? "rgba(255, 255, 255, 1) " : "#666",
                                                style: {
                                                    fontSize: "14px",
                                                    textOutline: "none"
                                                },
                                                padding: 5
                                            }
                                        }
                                    },
                                    pane: {
                                        size: "95%"
                                    }
                                };
                            switch (e === a.Gauge && r.isSplitChart() && delete l.yAxis, l = $.extend(!0, r.options, l), e) {
                                case a.Biax:
                                    l.yAxis[1] && (l.yAxis[1].title.style = o.label, l.yAxis[1].title.offset = 70, l.yAxis[1].labels.style = o.label);
                                    break;
                                case a.ComparisonBar:
                                    l.yAxis[1] && (l.yAxis[1].title.style = o.label, l.yAxis[1].title.offset = -18, l.yAxis[1].labels.style = o.label)
                            }
                            l.title.text || (l.chart.spacingTop = 50), r.isMobileMode || (l.title.margin = 30, l.yAxis[0].title.offset = 70, l.yAxis[0].labels.y = 6)
                        }
                    },
                    n = {
                        getModeOption: function (e, a, i, n) {
                            var r = {
                                dataLabels: {
                                    enabled: !0,
                                    allowOverlap: n.info.show_all_datalabels,
                                    color: "dark" === n.theme ? "rgba(255, 255, 255, 0.6) " : "#666",
                                    style: {
                                        fontSize: "12px",
                                        textOutline: "none"
                                    },
                                    padding: 5
                                }
                            };
                            return "C320" !== e && "C280" !== e && (r.dataLabels.formatter = function () {
                                var a = this.series.options.formatter,
                                    i = this.series.options.aggregator;
                                return "C243" == e ? t.dataLabelFormatter(a, Math.abs(this.y), i) : t.dataLabelFormatter(a, this.y, i)
                            }), {
                                plotOptions: {
                                    bar: angular.copy(r),
                                    column: angular.copy(r),
                                    waterfall: angular.copy(r),
                                    line: {
                                        dataLabels: angular.copy(r.dataLabels),
                                        lineWidth: 3,
                                        state: {
                                            hover: {
                                                lineWidth: 4
                                            }
                                        }
                                    },
                                    spline: {
                                        dataLabels: angular.copy(r.dataLabels),
                                        lineWidth: 3,
                                        state: {
                                            hover: {
                                                lineWidth: 4
                                            }
                                        }
                                    },
                                    scatter: {
                                        dataLabels: angular.copy(r.dataLabels)
                                    },
                                    bubble: {
                                        dataLabels: angular.copy(r.dataLabels)
                                    },
                                    area: {
                                        dataLabels: angular.copy(r.dataLabels),
                                        lineWidth: 3,
                                        state: {
                                            hover: {
                                                lineWidth: 4
                                            }
                                        }
                                    },
                                    areaspline: {
                                        dataLabels: angular.copy(r.dataLabels),
                                        lineWidth: 3,
                                        state: {
                                            hover: {
                                                lineWidth: 4
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    r = {
                        getModeOption: function (e) {
                            var a = e.getChartType(),
                                i = (e.data, e.mode),
                                n = i.split("*");
                            blockWidth = n[0] >>> 0, blockHeight = n[1] >>> 0;
                            var r = {
                                dataLabels: {
                                    enabled: !0,
                                    allowOverlap: e.info.show_all_datalabels,
                                    color: "dark" === e.theme ? "rgba(255, 255, 255, .6) " : "#666",
                                    style: {
                                        fontSize: "10px",
                                        fontWeight: "normal",
                                        textOutline: "none"
                                    },
                                    padding: 5
                                }
                            };
                            "C320" !== a && "C280" !== a && (r.dataLabels.formatter = function () {
                                var e = this.series.options.formatter,
                                    i = this.series.options.aggregator;
                                return "C243" == a ? t.dataLabelFormatter(e, Math.abs(this.y), i) : t.dataLabelFormatter(e, this.y, i)
                            });
                            var o = {
                                plotOptions: {
                                    bar: angular.copy(r),
                                    column: angular.copy(r),
                                    waterfall: angular.copy(r),
                                    line: angular.copy(r),
                                    spline: angular.copy(r),
                                    area: angular.copy(r),
                                    areaspline: angular.copy(r),
                                    bubble: angular.copy(r),
                                    scatter: angular.copy(r)
                                }
                            };
                            if (!bdp.bdpPageStatus.isUnderAdvDash() && !bdp.bdpPageStatus.isUnderDataScreen()) switch (blockHeight < 4 && blockWidth < 4 && $.extend(!0, o, {
                                legend: {
                                    enabled: !1
                                }
                            }), blockWidth) {
                                case 1:
                                case 2:
                                case 3:
                                    o = $.extend(!0, o, {
                                        chart: {},
                                        legend: {
                                            enabled: !1
                                        }
                                    }), o.labels = o.labels || {}, o.labels.style = o.labels.style || {}, o.labels.style.fontSize = "8px";
                                    break;
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                default:
                                    o = $.extend(!0, o, {
                                        plotOptions: {
                                            line: {
                                                lineWidth: 3,
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            },
                                            spline: {
                                                lineWidth: 3,
                                                hover: {
                                                    lineWidth: 4
                                                }
                                            }
                                        }
                                    })
                            }
                            return e.isMobileMode && (e.mode = e.originMode, e.isDashboardMode = "fullscreen" !== e.originMode), o
                        }
                    };
                e.modeDelegate = {
                    getModeOption: function (e) {
                        var t = e.getChartType();
                        switch (e.isMobileMode && (e.originMode = e.mode, e.mode = "4*4", e.isDashboardMode = !0), e.mode) {
                            case "fullscreen":
                                return i.getModeOption(t, e.data, e.mode, e);
                            case "edit":
                                return n.getModeOption(t, e.data, e.mode, e);
                            default:
                                return e.isDashboardMode ? r.getModeOption(e) : {}
                        }
                    }
                }
            }(bdpChart),
            function () {
                bdpChart.setPieSpecialOption = function (e) {
                    var t, a, i = e.info,
                        n = (e.dash_setting, e.data),
                        r = bdpChart.getColorsByType("C230", "bdp"),
                        o = e.$elem.height(),
                        s = e.$elem.width(),
                        l = e.gridWidth,
                        d = e.gridHeight,
                        c = Math.min(o, s),
                        p = e.optional.drill_level ? 180 * .7 : 140,
                        u = "10px",
                        h = d > 3 && d < l && l != d || !l && !d && o > 250 && o < s,
                        f = {};
                    (bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash()) && (h = o > 250 && o < s), "dark" == e.theme || e.mode, a = "pie" == i.shape ? c > 500 ? 4 : 5 : c > 350 ? 3.5 : 4.7, u = l > 3 ? c < 250 ? "10px" : c >= 250 && c < 300 ? s > o ? "11px" : "10px" : c >= 300 && c < 400 ? s > o ? "12px" : "11px" : c >= 400 && c < 500 ? s > o ? "15px" : "13px" : s > o ? "18px" : "16px" : c < 250 ? "10px" : c >= 250 && c < 300 ? "12px" : c >= 300 && c < 350 ? "14px" : c >= 350 && c < 400 ? "16px" : "18px", i && i.style && i.style.labels && (f = i.style.labels.style, u = f.fontSize), i.pieContent && "text" === i.pieContent.showProportion && (i.show_connector_label = !0, delete i.pieContent);
                    var g = +u.split("px")[0];
                    t = c < 500 ? -(c - 12 - g) / (9.5 - (c - 250) / 100 * .5) : -(c - 12 - g) / 7;
                    var m = {
                        cursor: i.is_drill || "2" == e.optional.linked_chart_type ? "pointer" : "default",
                        borderWidth: 1,
                        borderColor: "dark" === e.theme ? "#24273E" : "#fff",
                        dataLabels: {
                            enabled: !0,
                            allowOverlap: i.show_all_datalabels,
                            distance: t,
                            style: {
                                fontSize: u,
                                textOutline: "none"
                            },
                            useHTML: !0,
                            formatter: function (e, t) {
                                if ("showPercentage" == t) {
                                    var n = [],
                                        r = this.y,
                                        o = this.series.options.formatter,
                                        s = this.series.options.aggregator,
                                        l = i.style && i.style.labelsForPieValue && i.style.labelsForPieValue.style || {},
                                        d = i.style && i.style.labels && i.style.labels.style || {};
                                    return !i.show_all_datalabels && this.point.percentage < a ? n = [] : (n.push('<p class="bdp-datalabels datalabels-pie-rate text-center" '), i.style && i.style.labels && (n.push(' style="'), n.push("color:" + d.color + ";"), n.push("font-size:" + d.fontSize + ";"), n.push("font-family:" + d.fontFamily + ";"), n.push('"')), n.push(">"), n.push(this.point.percentage.toFixed(1) + "%"), n.push("</p>"), i.show_real_value && "donut" !== i.shape && (r = bdpChart.helper.dataLabelFormatter(o, r, s), n.push('<p class="bdp-datalabels datalabels-pie-value text-center" '), i.style && i.style.labelsForPieValue && (n.push(' style="'), n.push("color:" + l.color + ";"), n.push("font-size:" + l.fontSize + ";"), n.push("font-family:" + l.fontFamily + ";"), n.push('"')), n.push(">"), n.push(r), n.push("</p>"))), n.join("")
                                }
                            }
                        }
                    };
                    if (c < p) i.show_all_datalabels || (m.dataLabels = {
                        enabled: !1
                    });
                    else if (!e.isMobileMode && i.show_connector_label) {
                        var _ = {
                            fontSize: "fullscreen" === e.mode ? "14px" : "11px",
                            color: "dark" === e.theme ? "#fff" : "rgba(11,19,32)",
                            opacity: "dark" === e.theme ? "0.7 !important" : "0.5 !important"
                        };
                        $.extend(!0, m.dataLabels, {
                            connectorColor: "dark" === e.theme ? "rgba(255, 255, 255, .12)" : "rgba(0, 0, 0, .12)",
                            connectorWidth: 1,
                            size: "80%",
                            style2: _,
                            fontSize: "10px",
                            softConnector: !1,
                            formatter: function (t, n) {
                                if ("showPercentage" == n) {
                                    var r = [],
                                        o = this.y,
                                        s = this.series.options.formatter,
                                        l = this.series.options.aggregator,
                                        d = i.style && i.style.labelsForPieValue && i.style.labelsForPieValue.style || {},
                                        c = i.style && i.style.labels && i.style.labels.style || {};
                                    return !i.show_all_datalabels && this.point.percentage < a ? r = [] : (r.push('<p class="bdp-datalabels datalabels-pie-rate text-center" '), i.style && i.style.labels && (r.push(' style="'), r.push("color:" + c.color + ";"), r.push("font-size:" + c.fontSize + ";"), r.push("font-family:" + c.fontFamily + ";"), r.push('"')), r.push(">"), r.push(this.point.percentage.toFixed(1) + "%"), r.push("</p>"), i.show_real_value && "donut" !== i.shape && (o = bdpChart.helper.dataLabelFormatter(s, o, l), r.push('<p class="bdp-datalabels datalabels-pie-value text-center" '), i.style && i.style.labelsForPieValue && (r.push(' style="'), r.push("color:" + d.color + ";"), r.push("font-size:" + d.fontSize + ";"), r.push("font-family:" + d.fontFamily + ";"), r.push('"')), r.push(">"), r.push(o), r.push("</p>"))), r.join("")
                                }
                                if ("showConnectorLabel" == n && h) {
                                    if (0 == this.point.percentage) return "";
                                    var p = this.point.index || 0,
                                        u = this.point.series.data[p],
                                        f = this.percentage > 33 ? .33 : this.percentage / 100,
                                        r = (Math.abs(this.point.shapeArgs.r * Math.sin(.5 * Math.PI * f) * 1.9), []),
                                        g = i.style && i.style.labelsForPieConnector && i.style.labelsForPieConnector.style || {};
                                    if (r.push('<span class="bdp-datalabels"'), i.style && i.style.labelsForPieConnector && (r.push(' style="'), r.push("color:" + g.color + ";"), r.push("font-size:" + g.fontSize + ";"), r.push("font-family:" + g.fontFamily + ";"), r.push('"')), r.push(">"), u && "Slice" === u.name) {
                                        var m = "";
                                        m = ["其它", "Else"].indexOf(u.options.x) >= 0 ? u.options.x : e._formatXAxisLabel(u.x, 0), r.push(m)
                                    } else r.push(this.key);
                                    return r.push("</span>"), r.join("")
                                }
                            }
                        })
                    }
                    if (!i.xAxis.length && i.yAxis.length) {
                        var v = [];
                        angular.forEach(n.y, function (e, t) {
                            var a = e.nick_name || e.name;
                            v.push({
                                color: e.series_color ? e.series_color : r[t % r.length],
                                name: a.substr(0, 5),
                                y: 1 * e.data[0]
                            })
                        }), $.extend(!0, e.options, {
                            xAxis: {
                                type: "category"
                            },
                            series: [{
                                data: v,
                                formatter: n.y[0].formatter
                            }]
                        })
                    }
                    if ("donut" === i.shape) {
                        var b = -.14 * c / 2,
                            y = !0;
                        y = bdp.bdpPageStatus.isUnderAdvDash() || bdp.bdpPageStatus.isUnderDataScreen() ? o > 250 && o < s : l > 4 && d > 3 || "edit" == e.mode || "fullscreen" == e.mode, i.show_datalabels && i.show_all_datalabels && (y = !0), $.extend(!0, m, {
                            innerSize: "68%",
                            dataLabels: {
                                enabled: y,
                                allowOverlap: i.show_all_datalabels,
                                distance: b
                            }
                        })
                    }
                    $.extend(!0, e.options, {
                        plotOptions: {
                            pie: m
                        }
                    })
                }
            }(),
            function () {
                function e(e, t) {
                    if (e && !t[1]) {
                        var a = angular.copy(e);
                        a.forEach(function (e, t) {
                            e.y = null
                        }), t[1] = angular.copy(t[0]), t[1].data = a
                    }
                    return t[1]
                }

                function t(e, t, a) {
                    t = a[1].data, e.forEach(function (e, t) {
                        e.y < 0 ? e.y = null : e.y > 0 && (e.y = -e.y)
                    }), t.forEach(function (e, t) {
                        e.y < 0 && (e.y = null)
                    });
                    for (var i = e.length - 1; i >= 0; i--) {
                        var n = t[i] && t[i].y;
                        void 0 == e[i].y && void 0 == n && (e.splice(i, 1), t.splice(i, 1))
                    }
                }

                function a(e, t, a) {
                    e.forEach(function (e) {
                        var i = e.name || e.x,
                            n = a._formatXAxisLabel(i, 0),
                            r = n.length > 25 ? n.substring(0, 25) + "..." : n;
                        t.push(r)
                    })
                }
                bdpChart.setComparisonSpecialOption = function (i) {
                    var n = i.data,
                        r = i.info,
                        o = bdpChart.helper,
                        s = i.getChartType(),
                        l = r.comparison_xaxis_pos,
                        d = i.options.series;
                    d.splice(2);
                    var c, p = i.options.xAxis,
                        u = angular.copy(p),
                        h = angular.copy(p),
                        f = d[0].data,
                        g = [],
                        m = [],
                        _ = "dark" === i.theme ? 0 : 1,
                        v = "fullscreen" == i.mode ? -81 : -25,
                        b = o.getEdgeValueFromMultiArray(n, "y", "max");
                    if (e(f, d), t(f, g, d), !f.length) return void i._displayEmptyChart();
                    $.extend(!0, d[1], {
                        yAxis: 1
                    }), a(f, m, i);
                    var y, w, C, x, k = "fullscreen" !== i.mode || i.isMobileMode ? 0 : 10,
                        D = i._getXAxisLabelMaxWidth(m) + k;
                    switch (l) {
                        case "pos_side":
                            y = i.$elem.width() - 2 * D, w = y / 2, x = D, C = x + w, $.extend(!0, u, {
                                offset: 0,
                                labels: {
                                    enabled: !0
                                },
                                lineWidth: _
                            }), $.extend(!0, h, {
                                offset: D,
                                opposite: !0,
                                categories: m,
                                linkedTo: 0,
                                labels: {
                                    enabled: !0,
                                    align: "left",
                                    x: 5,
                                    y: 4
                                },
                                tickPixelInterval: 10,
                                lineWidth: _
                            }), c = [u, h];
                            break;
                        case "pos_right":
                            y = i.$elem.width() - D - 2, w = y / 2, x = 1, C = x + w, $.extend(!0, u, {
                                lineWidth: 0,
                                labels: {
                                    enabled: !1
                                },
                                lineWidth: 0
                            }), $.extend(!0, h, {
                                offset: 0,
                                opposite: !0,
                                categories: m,
                                linkedTo: 0,
                                labels: {
                                    enabled: !0,
                                    align: "left",
                                    x: 5,
                                    y: 4
                                },
                                tickPixelInterval: 10,
                                lineWidth: _
                            }), c = [u, h];
                            break;
                        case "pos_middle":
                            y = i.$elem.width() - 2 - 4, w = (y - D) / 2, x = 1, C = x + w + D + 2, $.extend(!0, u, {
                                offset: 0,
                                lineWidth: 0,
                                labels: {
                                    x: w + .5 * D + x,
                                    enabled: !0,
                                    align: "center"
                                }
                            }), i.options.yAxis[0].plotLines[0].value = -1e-4, c = u;
                            break;
                        default:
                            y = i.$elem.width() - D - 2, w = y / 2, x = D + 1, C = x + w, u.lineWidth = _, u.offset = 0, c = u
                    }
                    "sub_date" === n.x[0].data_type && ["pos_right", "pos_side"].indexOf(l) > -1 && delete c[1].labels.formatter, $.extend(!0, i.options.yAxis[0], {
                        labels: {
                            formatter: function () {
                                var e = "pos_middle" !== l;
                                return label = o.checkPercentLabel(this, n, s, "left", e)
                            }
                        },
                        left: x,
                        width: w,
                        min: -b,
                        max: -0
                    }), $.extend(!0, i.options.yAxis[1], {
                        labels: {
                            y: v
                        },
                        left: C,
                        width: w,
                        min: 0,
                        max: b
                    }), $.extend(!0, i.options, {
                        xAxis: c,
                        compareBar: !0
                    })
                }
            }(),
            function (e) {
                e.setScatterSpecialOption = function (t) {
                    ! function () {
                        for (var e = t.data, a = (t.info, 0), i = 0; i < e.y.length; i++) a = Math.max(a, e.y[i].data.length)
                    }(),
                        function (t) {
                            var a = t.data.x.length ? t.data.x[0].data : [],
                                i = t.data.y;
                            if (2 != i.length || i[0].data.length != i[1].data.length) return !1;
                            var n, r, o, s, l = [],
                                d = i[0].data,
                                c = i[1].data,
                                p = 0,
                                u = d.length;
                            for (n = r = Number(d[p]), o = s = Number(c[p]), u = d.length; p < u; p++) {
                                var h = Number(d[p]),
                                    f = Number(c[p]);
                                h < n && (n = h), h > r && (r = h), f < o && (o = f), f > s && (s = f);
                                var g = {
                                    name: a[p],
                                    x: h,
                                    y: f
                                };
                                l.push(g)
                            }
                            var m = [{
                                    type: "scatter",
                                    marker: {
                                        symbol: "circle"
                                    },
                                    data: l
                                }],
                                _ = t.data.scatter_setting,
                                v = {
                                    color: "rgba(0,0,0,.24)",
                                    type: "spline"
                                };
                            if ("dark" === t.theme && (v.color = "rgba(81,129,228,0.5)"), _.enable_trend_line && _.trend_line_type) {
                                var b, y, w = [];
                                _.trend_line_type = +_.trend_line_type;
                                var C = angular.copy(d).sort(function (e, t) {
                                        return e - t
                                    }),
                                    x = {
                                        1: "linear_model",
                                        2: "logarithm_model",
                                        3: "exponential_model",
                                        4: "poly_model"
                                    },
                                    k = x[_.trend_line_type],
                                    D = _[k];
                                if (D) {
                                    switch (_.trend_line_type) {
                                        case 1:
                                            var S = D.a,
                                                T = D.b,
                                                I = [n, S * n + T],
                                                L = [r, S * r + T];
                                            v.type = "line", w = [I, L];
                                            break;
                                        case 2:
                                            for (p = 0; p < u; p++)
                                                if ((0 == p || C[p] != C[p - 1]) && (b = Number(C[p])) > 0) {
                                                    y = D.a * Math.log(b) + D.b;
                                                    var T = -0;
                                                    D.b < T && (y = 0), isFinite(y) && w.push([b, y])
                                                }
                                            break;
                                        case 3:
                                            for (p = 0; p < u; p++) 0 != p && C[p] == C[p - 1] || (b = Number(C[p]), y = Math.exp(b * D.a + D.b), isFinite(y) && w.push([b, y]));
                                            break;
                                        case 4:
                                            var A = e.helper.polynomial(D.coeffs);
                                            for (p = 0; p < u; p++) 0 != p && C[p] == C[p - 1] || (b = Number(C[p]), y = A(b), w.push([b, y]))
                                    }
                                    v.data = w, $.extend(!0, v, {
                                        lineWidth: "fullscreen" !== t.mode || t.isMobileMode ? 1 : 2,
                                        dataLabels: {
                                            enabled: !1
                                        }
                                    }), m.push(v)
                                }
                            }
                            t.options.series = m
                        }(t),
                        function (e) {
                            function t(e, t, a) {
                                if (e = Number(e), isNaN(e)) return 1;
                                var i, n = t.length,
                                    r = n - 1;
                                for (i = 0, n = t.length; i < n; i++) {
                                    var o = t[i];
                                    if (e < o[0]) {
                                        r = i;
                                        break
                                    }
                                    if (o[0] <= e && e < o[1]) {
                                        r = i;
                                        break
                                    }
                                }
                                return a ? n - r : r + 1
                            }
                            if ($.isEmptyObject(e.info.bubble_setting)) return !1;
                            var a = e.data.bubble_sizes,
                                i = e.data.bubble_size_groups,
                                n = e.options.series[0],
                                r = n.data,
                                o = e.info.bubble_setting.reverse,
                                s = e.info.bubble_setting.size_range;
                            angular.forEach(a, function (e, a) {
                                r[a]._z = e, r[a].z = t(e, i, o)
                            }), n.type = "bubble", $.extend(!0, e.options, {
                                chart: {
                                    type: "bubble"
                                },
                                plotOptions: {
                                    bubble: {
                                        sizeBy: "width",
                                        minSize: 3 * s[0],
                                        maxSize: 3 * s[1]
                                    }
                                }
                            })
                        }(t),
                        function (t) {
                            if (t.options.series && t.options.series[0]) {
                                var a, i = t.options.series[0].data,
                                    n = 0,
                                    r = t.info.color_setting;
                                if (delete r.is_series, r)
                                    if (0 != r.mode || $.isEmptyObject(r.enum_color_map) || 0 == t.data.x.length) {
                                        if (!$.isEmptyObject(t.data.colors) && 1 === r.mode) {
                                            var o = t.data.colors.map(function (e) {
                                                    return Number(e)
                                                }),
                                                s = e.helper.linearRangeColor(r.range_color.start_color, r.range_color.end_color),
                                                l = e.helper.createLinearScale(r.range_color, o),
                                                d = [],
                                                c = r.range_color.step;
                                            if (c > 1) {
                                                for (n = 0; n < c - 1; n++) d.push(s(n / (c - 1)));
                                                d.push(s(1))
                                            }
                                            angular.forEach(i, function (e, t) {
                                                var a, i = o[t],
                                                    n = l(i);
                                                if (c) {
                                                    var r = Math.floor(c * n);
                                                    r = Math.min(r, c - 1), a = d[r]
                                                } else a = s(n);
                                                e.color = Highcharts.Color(a).setOpacity(.8).get()
                                            })
                                        }
                                    } else {
                                        a = e.colors[r.theme];
                                        var p, u = a.length,
                                            h = [],
                                            f = r.enum_color_map || null,
                                            g = null === f ? [] : Object.keys(f).map(function (e) {
                                                return e.split("_")
                                            });
                                        angular.forEach(i, function (e, i) {
                                            if (h = t.data.x.map(function (e, t) {
                                                    return e.data[i]
                                                }), f) {
                                                for (var n = 0; n < g.length; n++)
                                                    if (bdp.utils.isContain(h, g[n])) {
                                                        p = f[g[n].join("_")].color;
                                                        break
                                                    }
                                                p || (p = a[i % u])
                                            } else p = a[i % u];
                                            e.color = Highcharts.Color(p).setOpacity(.8).get()
                                        })
                                    }
                            }
                        }(t)
                }
            }(bdpChart),
            function (e) {
                function t(e) {
                    var t = e.info,
                        a = {
                            plotOptions: {
                                treemap: {
                                    allowDrillToNode: !0,
                                    dataLabels: {
                                        useHTML: !0,
                                        formatter: function () {
                                            if (this.point.shapeArgs) {
                                                var e = this.point.shapeArgs.height,
                                                    a = this.point.node.parent == this.series.rootNode && e < 42 || this.series.nodeMap[this.point.node.parent].parent == this.series.rootNode && e < 36;
                                                t.show_all_datalabels && (a = !1);
                                                var i = this.point.dlOptions.align,
                                                    n = t.data_label_setting && t.data_label_setting.show_percent,
                                                    r = this.point.dlOptions.style.cursor,
                                                    o = this.point.dlOptions.style.fontSize;
                                                if (t && t.style && t.style.labels) {
                                                    o = t.style.labels.style.fontSize
                                                }
                                                var s = n && !a ? '<p class="bdp-datalabels datalabels-treemap" style="opacity: 0.7;font-size:' + o + ";font-weight:lighter; cursor:" + r + "; text-align:" + i + '">' + (this.point.value / this.point.sum * 100).toFixed(2) + "%</p>" : "";
                                                return '<p class="bdp-datalabels datalabels-treemap" style="font-weight:bold; font-size:' + o + "; cursor:" + r + "; text-align:" + i + ';">' + (this.point.name || this.point.id) + "</p>" + s
                                            }
                                            return ""
                                        }
                                    },
                                    events: {
                                        onDrillToNode: function (a, i, n) {
                                            e.hideHoverTooltip();
                                            for (var r = e.$elem, o = t.xAxis[0].nick_name || t.xAxis[0].name, s = r.parent(), l = [], d = a;
                                                 "" !== d;) {
                                                var c = i[d];
                                                l.push(d), d = c.parent
                                            }
                                            l.push(""), l = l.reverse(), "fullscreen" !== e.mode || e.isMobileMode || (s = $(".fullscreen-modal"));
                                            var p = s.find(".treemap-drill-crumbs");
                                            p.length || (p = $('<div class="drill-crumbs treemap-drill-crumbs"></div>'), p.on("click", ".drill-point", function () {
                                                var t = $(this).data("nodeid");
                                                n.drillToNode(t), e.isMobileMode && (e.selectedPoint = e.findTreeMapFirstNode(t, i, n) || e.selectedPoint, e.refreshTooltip(e.chartInstance))
                                            }), s.find(".drill-crumbs-wrap").append(p));
                                            var u = "";
                                            l.length > 1 && l.forEach(function (e) {
                                                var t = "" == e ? o : i[e].name;
                                                "" != e && (u += '<i class="bdp-icon ico-slicesnav-arrow"></i>'), u += '<span class="drill-point" data-nodeid="%nodeId%" title="%nodeName%">%nodeName%</span>'.replace("%nodeId%", e).replace(/%nodeName%/g, t)
                                            }), p.html(u), e.isMobileMode || r.css({
                                                bottom: 22
                                            })
                                        }
                                    }
                                }
                            }
                        };
                    "fullscreen" != e.mode || e.isMobileMode || (a.chart = {
                        spacingTop: 10
                    }, a.title = {
                        margin: 0
                    }), $.extend(!0, e.options, a), delete e.options.xAxis, delete e.options.yAxis
                }

                function a(t) {
                    var a = e.language,
                        i = "zh" === a ? "当前图表无数据" : "No data to display";
                    t.html('<div class="chart-error"><p>' + i + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                }

                function i(t) {
                    var i = t.data.y[0] && t.data.y[0].data,
                        n = [],
                        r = e.language || "zh";
                    i && i.forEach(function (e, a) {
                        if ("" == e || e <= 0) {
                            for (var i = t.data.x[0].data[a], r = t._formatXAxisLabel(i, 0, !0), o = 1; o < t.data.x.length; o++) r += "-" + t._formatXAxisLabel(t.data.x[o].data[a], o, !0);
                            n.push(r)
                        }
                    }), t.once("load", function () {
                        if (t.data.x[0].data.length == n.length && a(t.$elem), n.length && "edit" === t.mode) {
                            var e = "";
                            e = "zh" === r ? "有" + n.length + "项负值或空值数据" : "There are " + n.length + " negative or null values.";
                            var i = '<div class="map-mismatch-text pa guide"><p><a class="cursor-pointer">' + e + '</a></p><div class="guide-tip dropdown-wrap">' + bdp.utils.encodeHTML(n.join("、")) + "</div></div>";
                            t.$elem.append(i)
                        }
                    })
                }

                function n(t) {
                    var a = {},
                        i = [],
                        n = t.data.x,
                        d = t.data.y[0] && t.data.y[0].data;
                    colors = r(t) || e.getColorsByType(l.TreeMap), colorIdx = 0, nodeId = 1;
                    for (var c = 0; c < (d && d.length || n[0].data.length); c++)
                        for (var p = a, u = 0; u < n.length; u++) {
                            var h = n[u].data[c],
                                f = t._formatXAxisLabel(h, u);
                            p[f] || (p[f] = {
                                name: f
                            }, 0 === u && (p[f].color = colors[h] && colors[h].color || colors[colorIdx % colors.length], colorIdx++), u === n.length - 1 ? p[f].value = d ? +d[c] : 1 : (p[f].children = {}, p[f].id = "" + nodeId++)), p = p[f].children
                        }
                    o(a, function (e, t) {
                        var a = {};
                        a.name = e.name, s(e, a, "id"), s(e, a, "color"), s(e, a, "value"), t && (a.parent = t.id), i.push(a)
                    }), t.options.series = [{
                        turboThreshold: 0,
                        isBDP: !0,
                        isMobileMode: t.isMobileMode,
                        data: i,
                        animation: !1,
                        borderColor: "default" === t.theme ? "#fff" : "#292D47",
                        dataLabels: {
                            allowOverlap: t.info.show_all_datalabels,
                            enabled: t.info.show_datalabels
                        }
                    }]
                }

                function r(t) {
                    var a = [],
                        i = t.data.x,
                        n = t.info,
                        r = n.color_setting,
                        o = {},
                        s = e.getColorsByType(l.TreeMap),
                        d = s.length;
                    return i[0].data.forEach(function (e, t) {
                        "" !== e && ["(空白)", "(Blank)"].indexOf(e) < 0 && a.indexOf(e) < 0 && a.push(null === e ? null : e.toString())
                    }), r.enum_color_map ? o = r.enum_color_map : a.forEach(function (e, t) {
                        "" !== e && ["(空白)", "(Blank)"].indexOf(e) < 0 && (o[e] = {
                            name: e,
                            color: s[t % d]
                        })
                    }), o
                }

                function o(e, t, a) {
                    for (var i in e) t(e[i], a), e[i].children && o(e[i].children, t, e[i])
                }

                function s(e, t, a) {
                    void 0 !== e[a] && (t[a] = e[a])
                }
                var l = e.ChartType;
                e.setTreemapSpecialOption = function (e) {
                    n(e), i(e), t(e)
                }
            }(bdpChart),
            function () {
                function e(e) {
                    function t(e, t, n) {
                        var r = null,
                            o = $("#" + a);
                        o.length > 0 ? (o.text(e), o.show()) : (r = i("div", e, a), r.setAttribute("id", a), $(document.body).append(r), o = $("#" + a));
                        var s = o.outerWidth(),
                            l = o.height();
                        $("#" + a).css({
                            top: t.top - l - 25 + "px",
                            left: t.left + n / 2 - s / 2
                        })
                    }
                    var a = "tbTipBox";
                    e.find("span").hover(function () {
                        if (desc = $(this).attr("description"), desc) {
                            var e = $(this);
                            t(desc, e.offset(), e.outerWidth())
                        }
                    }, function () {
                        $("#" + a).hide()
                    })
                }

                function t(e) {
                    function t(e, t, n) {
                        var r = null,
                            o = $("#" + a);
                        o.length > 0 ? (o.attr("src", e), o.show()) : (r = i("img", "", "table-data-show-type-img"), r.setAttribute("id", a), r.setAttribute("src", e), $(document.body).append(r), o = $("#" + a));
                        var s = (o.outerWidth(), o.height());
                        $("#" + a).css({
                            top: t.top - s / 2 + "px",
                            left: t.left + n + 5
                        })
                    }
                    var a = "J_data_show_type_img";
                    e.find(".J-hz-table-show-img").off("mouseenter mouseleave").on({
                        mouseenter: function () {
                            var e = $(this).attr("data-src");
                            if (e) {
                                var a = $(this);
                                t(e, a.offset(), a.outerWidth())
                            }
                        },
                        mouseleave: function () {
                            $("#" + a).hide()
                        }
                    }), $("#" + a).hide()
                }

                function a(e) {
                    for (var t = 0, a = e.length; t < a; t++)
                        if (1 === Number(e[t])) return !0;
                    return !1
                }

                function i(e, t, a) {
                    var i = document.createElement(e);
                    if (t) {
                        var n = document.createTextNode(t);
                        i.appendChild(n)
                    }
                    return a && (i.className = a), i
                }
                var n = {},
                    r = {},
                    o = {},
                    s = {};
                $.fn.scrollEnd = function (e, t, a) {
                    $(this).scroll(function () {
                        var i = $(this);
                        i.data("scrollTimeout") && clearTimeout(i.data("scrollTimeout")), i.data("scrollTimeout", setTimeout(function () {
                            e.call(i)
                        }, t)), a.attr("data-scrolling", "true")
                    })
                };
                var l = {
                    center: " text-center",
                    left: " text-left",
                    right: " text-right"
                };
                bdpChart.setTableSpecialOption = function (d, c) {
                    function p(e) {
                        var t = 0;
                        return e.x.length ? t = e.x[0].data.length : e.y.length ? t = e.y[0].data.length : e.y_optional.length && (t = e.y_optional[0].data.length), t
                    }

                    function u(e) {
                        var t = e.find(".fht-fixed-column .fht-thead"),
                            a = e.find(".fht-thead .hz-table-header"),
                            i = e.find(".fht-tbody .hz-table-header"),
                            n = i.find("tr"),
                            r = n.eq(0).find("th"),
                            o = n.last().find("th"),
                            s = t.clone(),
                            l = a.clone(),
                            d = i.clone(),
                            c = d.find("tr"),
                            p = l.find("tr:first").find("th"),
                            u = l.find("tr:last").find("th"),
                            h = s.find("tr:first").find("th"),
                            f = s.find("tr:last").find("th"),
                            g = 0;
                        c.eq(0).find("th").each(function (e) {
                            g = r.eq(e).width() + 1, p.eq(e).find(".fht-cell").css({
                                width: g
                            }), h.eq(e).find(".fht-cell").css({
                                width: g
                            })
                        }), c.last().find("th").each(function (e) {
                            g = o.eq(e).width() + 1, $(this).append($('<div class="fht-cell" style="width:' + g + 'px;"></div>')), u.eq(e).append($('<div class="fht-cell" style="width:' + g + 'px;"></div>')), f.eq(e).append($('<div class="fht-cell" style="width:' + g + 'px;"></div>'))
                        }), t[0] && (t[0] = bdp.utils.replaceHtml(t[0], s.html())), a[0] && (a[0] = bdp.utils.replaceHtml(a[0], l.html())), i[0] && (i[0] = bdp.utils.replaceHtml(i[0], d.html()))
                    }
                    var h, f, m, _, v = d.$elem,
                        b = "default",
                        y = d.info.chart_id,
                        w = d.info.tb_flip,
                        C = !1,
                        x = d.info.tb_pinned_index || 0,
                        k = void 0 === d.info.tb_merge_cell || d.info.tb_merge_cell,
                        D = "bottom",
                        S = "right",
                        T = bdpChart.language || "zh",
                        I = "zh" === T ? "当前图表无数据" : "No data to display";
                    if (c && c.length > 0) {
                        var L = null;
                        angular.forEach(c, function (e, t) {
                            e.ctId == y && (L = e.pointData)
                        }), d.pointData = L
                    }
                    "zh" == T ? (h = "加载更多...", f = "表格数据超过100条不支持行列转置", m = "总计", _ = "小计", CONST_ROW_SUMMARY = "行总计") : (h = "Load more...", f = "Table data more than 100 do not support transpose", m = "Summary", _ = "Subtotal", CONST_ROW_SUMMARY = "Row Summary");
                    var A = d.info;
                    A.tb_statistic && (!A.tb_statistic.col_pos && (A.tb_statistic.col_pos = "bottom"), D = A.tb_statistic.col_pos, !A.tb_statistic.row_pos && (A.tb_statistic.row_pos = S), S = A.tb_statistic.row_pos), $(".table-flip").off().on("click", function () {
                        if (p(d.data) > 100) return alert(f), !1;
                        window.bdpa && bdpa.track("track_table_flip", {
                            table_flip: 1
                        }), d.emit("saveWithOpt", d.info.drill_level, {
                            tb_flip: !w
                        })
                    });
                    var E = {
                            compareLevel: 1,
                            getRowHeight: function () {
                                return 35
                            },
                            init: function () {
                                var e = d.data.x.length;
                                if (v.html(""), E.totalData = p(d.data), E.linkInfo = d.optional && d.optional.link_info, E.jumpInfo = d.optional && d.optional.chart_jump_info, E.pointData = d.pointData || new Array(e), E.dimensionsName = d.dimensionsName || new Array(e), d.pointData = E.pointData, 0 === E.totalData) return void v.append('<div class="chart-error"><p class="no-data" style="font-size: 12px; font-weight: bold; color: #60606a;">' + I + "</p></div>");
                                var t;
                                if (t = "fullscreen" === d.mode ? $('<div class="chart-table"><table class="hz-table"><thead class="hz-table-header"></thead><tbody class="hz-table-body"></tbody></table></div>') : $('<table class="hz-table"><thead class="hz-table-header"></thead><tbody class="hz-table-body"></tbody></table>'), v.append(t), v.find(".hz-table-header")[0].appendChild(E.initHead()), v.find(".hz-table-body").append(E.initBody("y")), v.find(".hz-table-body").append(E.initBody("y_optional")), E.addId = (v[0].className.split(" ")[1] + d.ct_id).toUpperCase(), v.find(".hz-table").attr("id", E.addId), C || "edit" == d.mode || "fullscreen" == d.mode || "chartTpl" == d.mode) E.fixHeader();
                                else {
                                    var a = $("#" + E.addId),
                                        i = a.parents(".J_item_chart");
                                    a.wrap('<div style="width:100%; height: 100%; overflow: hidden"></div>'), a.wrap('<div class="no-fix-header J_no_fix"></div>'), a.css({
                                        width: "100%"
                                    }), i.hasClass("noscroll") || i.addClass("noscroll").removeClass("toggle-scroll")
                                }
                                E.mergeCell(), v.find(".fht-empty-cell").addClass("hidden"), E.bindEvents(d)
                            },
                            initHead: function () {
                                var e, t, a, n, r = d.data,
                                    o = d.info,
                                    s = r.x || [],
                                    c = E.linkInfo,
                                    p = [],
                                    u = E.jumpInfo;
                                c && c.length > 0 && angular.forEach(c[0].field_map, function (e) {
                                    p.push(e.index)
                                }),
                                    r.y.length ? r.y[0].name == CONST_ROW_SUMMARY && r.y[1].compare_names ? E.compareLevel = r.y[1].compare_names.length : r.y[0].compare_names && (E.compareLevel = r.y[0].compare_names.length || E.compareLevel) : r.y_optional.length && r.y_optional[0].compare_names && (E.compareLevel = r.y_optional[0].compare_names.length), E.compareLevel = E.compareLevel || 1;
                                for (var h = document.createDocumentFragment(), f = 0; f < s.length; f++) {
                                    t = s[f].data_type;
                                    for (var g, m, _, v = (o.xAxis[f].granularity, o.xAxis[f].granularity_name, o.xAxis[f].month_start_day, document.createElement("tr", "", a)), b = /^(http:|https:|ftp:)[\S]+\.(jpg|jpeg|bmp|gif|png)$/i, y = 0; y < E.compareLevel; y++) {
                                        var w = s[f].name;
                                        g = i("th", "", "th"), m = i("div", "", "td-wrap"), _ = o.xAxis[f] ? o.xAxis[f].description : void 0;
                                        var C = i("span", s[f].nick_name || w, "");
                                        _ && (C.setAttribute("description", _), C.className += " description"), m.appendChild(C), g.appendChild(m), v.appendChild(g)
                                    }
                                    o.tb_statistic.col && "top" === D && this.drawColSummary(v, f);
                                    for (var x = 0; x < s[f].data.length; x++) {
                                        if (e = s[f].data[x], n = o.xAxis[f].alignment_method ? o.xAxis[f].alignment_method : "right", a = l[n], null === e || "" === e) g = i("th", "", a), m = i("div", "", "td-wrap");
                                        else {
                                            if (showData = "date" === t ? F.handleXaxisDate(e, o.xAxis[f]) : e, o.is_drill && s[f].fid === o.level_fields[o.drill_level].fid) {
                                                g = i("th", "", a), m = i("div", "", "td-wrap");
                                                var k = "";
                                                if ("string" == t && "img" == o.xAxis[f].data_show_type && b.test(showData)) {
                                                    k = i("img", "", "cursor-pointer chart-table-type-img J-hz-table-show-img drilldown"), k.setAttribute("src", showData), k.setAttribute("data-src", showData), k.setAttribute("data-drill-value", e), k.setAttribute("data-text", showData);
                                                    var S = i("i", showData, "chart-table-type-img J-hz-table-show-img hidden");
                                                    S.setAttribute("data-src", showData), S.setAttribute("data-text", showData), S.appendChild(k)
                                                } else k = i("a", showData, "drilldown"), k.setAttribute("data-drill-value", e);
                                                m.appendChild(k), g.appendChild(m)
                                            } else {
                                                g = i("th", "", a);
                                                var T = i("div", "", "td-wrap");
                                                if ("string" == t && "img" == o.xAxis[f].data_show_type && b.test(showData)) {
                                                    var I = i("img", "", "chart-table-type-img J-hz-table-show-img");
                                                    I.setAttribute("src", showData), I.setAttribute("data-src", showData), I.setAttribute("data-text", showData), T.appendChild(I);
                                                    var S = i("i", showData, "chart-table-type-img J-hz-table-show-img hidden");
                                                    S.setAttribute("data-src", showData), S.setAttribute("data-text", showData), T.appendChild(S)
                                                } else if ($.inArray(f, p) > -1) {
                                                    var L = "td-wrap point-status J-link" + f;
                                                    e == E.pointData[f] && (L += " cur-link-item"), T = i("div", showData, L), T.setAttribute("data-current", e)
                                                } else if (u && u.fid && u.f_index == f) {
                                                    var L = "td-wrap point-status J-jump";
                                                    T = i("div", showData, L), T.setAttribute("data-current", e)
                                                } else T = i("div", showData, "td-wrap");
                                                g.appendChild(T)
                                            }
                                            if (!("http://" !== e.toString().substr(0, 7) && "https://" !== e.toString().substr(0, 8) || "string" == t && "img" == o.xAxis[f].data_show_type && b.test(showData))) {
                                                var A = document.createTextNode("  "),
                                                    M = i("a"),
                                                    j = i("span", e, "");
                                                g = i("th", ""), m = i("div", "", "td-wrap"), M.setAttribute("href", e), M.setAttribute("target", "_blank"), M.appendChild(i("i", "", "bdp-icon ico-href")), m.appendChild(A), m.appendChild(j), m.appendChild(M), g.appendChild(m)
                                            }
                                        }
                                        v.appendChild(g)
                                    }
                                    o.tb_statistic.col && "bottom" === D && this.drawColSummary(v, f), h.appendChild(v)
                                }
                                return h
                            },
                            drawColSummary: function (e, t) {
                                var a, n, r = d.info;
                                if (0 === t) {
                                    a = i("th", "", "th"), n = i("div", m, "td-wrap"), a.appendChild(n);
                                    var o = E.compareLevel;
                                    o = Math.max(o, r.xAxis.length), a.setAttribute("rowspan", o)
                                } else a = i("th", "", "hidden"), n = i("div", m, "td-wrap"), a.appendChild(n);
                                e.appendChild(a)
                            },
                            initBody: function (e) {
                                var t, n, r, o, s, c, p = d.data,
                                    u = d.info,
                                    h = p[e] || [],
                                    f = u.warn,
                                    g = [],
                                    m = !1,
                                    _ = {},
                                    v = document.createDocumentFragment();
                                if (!u.drill_level && 1 === f && u.warn_info.length && d.info.compare_axis.length > 0) {
                                    var b = d.data[e];
                                    angular.forEach(b, function (e) {
                                        e.hasOwnProperty("warn_data") && a(e.warn_data) && (_[e.uniq_id] = !0)
                                    })
                                }
                                for (var y = 0; y < h.length; y++) {
                                    var w = h[y];
                                    r = w.formatter, o = w.aggregator, t = w.compare_names || [w.nick_name || w.name];
                                    var C = "";
                                    p[e][y].hasOwnProperty("unit_adv") && p[e][y].unit_adv && (C = "(" + p[e][y].unit_adv + ")");
                                    var x, k, S = document.createElement("tr"),
                                        T = i("i", "", "warn-label-left");
                                    if (m = !1, !u.drill_level && 1 === f && u.warn_info.length) {
                                        var w = d.data[e][y];
                                        g = w, w.hasOwnProperty("warn_data") && (m = a(w.warn_data))
                                    }
                                    for (var I = 0; I < t.length; I++) {
                                        if (I > 0 && (C = ""), "virtual" === w.data_type && 1 === t.length) x = i("td", "", "th"), k = i("div", t[0], "td-wrap"), x.appendChild(k), x.setAttribute("colspan", E.compareLevel);
                                        else {
                                            x = i("td", void 0, "th"), k = i("div", "", "td-wrap"), 0 === I && _[p[e][y].uniq_id] ? k.appendChild(T.cloneNode()) : g && g.fid === p[e][y].fid && m && k.appendChild(T.cloneNode());
                                            var L = i("span", t[I] + C);
                                            if (0 === I || void 0 == t.length && w.name == CONST_ROW_SUMMARY) {
                                                var $ = w.description;
                                                $ && (L.setAttribute("description", $), L.className += " description")
                                            }
                                            k.appendChild(L), x.appendChild(k)
                                        }
                                        S.appendChild(x)
                                    }
                                    u.tb_statistic.col && "top" === D && this.drawColSummaryData(S, w.col_summary, o, r, c);
                                    for (var A = 0; A < w.data.length; A++) {
                                        s = p.y[y] && p.y[y].alignment_method ? p[[e]][y].alignment_method : "right", "left" === u.tb_statistic.row_pos && "true" === u.tb_statistic.row && u[e][y].alignment_method ? p[e][0].alignment_method = u.tb_statistic.row_setting.alignment_method : "right" === u.tb_statistic.row_pos && "true" === u.tb_statistic.row && u[e][y].alignment_method && (p[e][length - 1].alignment_method = u.tb_statistic.row_setting.alignment_method), c = l[s], n = w.data[A];
                                        var L, F = w.cell_styles ? w.cell_styles[A] : null,
                                            M = !1;
                                        1 === f && w.hasOwnProperty("warn_data") && angular.forEach(w.warn_data, function (e) {
                                            1 === e && (M = !0)
                                        }), null !== n && !u.drill_level && M ? (x = i("td", "", 1 === f && 1 === w.warn_data[A] ? "cr" : c), k = i("div", "", "td-wrap"), L = i("span", bdpChart.helper.dataLabelFormatter(r, w.data[A], o))) : (x = i("td", "", c), k = i("div", "", "td-wrap"), null === n || "" === n ? L = i("span", "--") : (L = i("span", bdpChart.helper.dataLabelFormatter(r, w.data[A], o)), F && F.hasOwnProperty("color") && (x.style.color = F.color), F && F.hasOwnProperty("backgroundColor") && (x.style.backgroundColor = F.backgroundColor))), k.appendChild(L), x.appendChild(k), S.appendChild(x)
                                    }
                                    u.tb_statistic.col && "bottom" === D && this.drawColSummaryData(S, w.col_summary, o, r, c), v.appendChild(S)
                                }
                                return v
                            },
                            drawColSummaryData: function (e, t, a, n, r) {
                                var o = null === t ? "--" : bdpChart.helper.dataLabelFormatter(n, t, a),
                                    s = i("span", o),
                                    l = i("td", void 0, "th"),
                                    d = i("div", "", "td-wrap " + r);
                                d.appendChild(s), l.appendChild(d), e.appendChild(l)
                            },
                            mergeCell: function () {
                                var e, t = this.getRowHeight(),
                                    a = F.data.info.compare_axis.length,
                                    i = v.find(".fht-fixed-column .fht-thead"),
                                    n = v.find(".fht-fixed-column .fht-tbody"),
                                    r = v.find(".hz-table-body");
                                e = E.pinnedIndex > 0 ? v.find(".fht-fixed-body .fht-thead .hz-table-header") : v.find(".fht-thead .hz-table-header");
                                var o = (n.clone(), r.clone());
                                e.clone(), i.clone();
                                if (a > 0) {
                                    for (var s = 0; s < E.compareLevel - 1; s++) o.mergeCol(s, t);
                                    r[0] && (r[0] = bdp.utils.replaceHtml(r[0], o.html()))
                                }
                            },
                            fixHeader: function () {
                                var e = {
                                    borderCollapse: !1,
                                    fixedColumn: !1
                                };
                                if ("fullscreen" === d.mode) {
                                    var t = $("#" + E.addId);
                                    t.fixedHeaderTable("destroy"), t.fixedHeaderTable(e)
                                } else(C || "edit" == d.mode || "fullscreen" == d.mode) && v.find(".hz-table").fixedHeaderTable(e);
                                E.hoverDesc(), (E.compareLevel > 1 || d.data.x.length > 1) && u(v)
                            },
                            hoverDesc: function () {
                                e(v)
                            },
                            handleLink: function (e, t, a, i, n) {
                                for (var r = (E.linkInfo, t.attr("data-current")), o = v.find("." + a), s = 0, l = o.length; s < l; s++) {
                                    var d = $(o[s]);
                                    d.attr("data-current") == r ? d.hasClass("cur-link-item") ? (d.removeClass("cur-link-item"), delete E.pointData[i]) : (d.addClass("cur-link-item"), E.pointData[i] = r) : d.removeClass("cur-link-item")
                                }
                                e.pointData = E.pointData, e.emit("refreshLinkedCharts", n, e)
                            },
                            handleJump: function (e) {
                                d.emit("jumpToOtherDash", e, d)
                            },
                            bindEvents: function () {
                                v.off().on("click", function (e) {
                                    C || (C = !0, E.init(), v.parents(".item-chart").removeClass("noscroll").addClass("toggle-scroll"));
                                    var t = e.target;
                                    t.className.indexOf("drilldown") > -1 && d.emit("drilldown", t, d);
                                    var a = $(t),
                                        i = a[0] && a[0].className.match(/J-link(\d+)/);
                                    if (i) {
                                        var n = i && i[0],
                                            r = i && i[1];
                                        E.handleLink(d, a, n, r, e)
                                    }
                                    a.hasClass("J-jump") && E.handleJump(a.attr("data-current"))
                                }), E.hoverDesc(), t(v)
                            }
                        },
                        F = {
                            data: d,
                            pageNum: 1,
                            perPageNum: 50,
                            compareLevel: 1,
                            isPinned: !!x,
                            pinnedIndex: x,
                            scrollXNum: 0,
                            destroy: function () {
                                s = {}, v.html("")
                            },
                            getRowHeight: function () {
                                return 35
                            },
                            sort: function (e) {
                                var t, a = e[0] && e[0].className,
                                    i = e.data("axis"),
                                    n = e.data("fid"),
                                    r = e.data("uniq-id"),
                                    o = "";
                                switch (/(?:^|\s*)(desc|asc)(?:\s*|$)/.test(a) && (o = RegExp.$1), o) {
                                    case "desc":
                                        t = "asc";
                                        break;
                                    case "asc":
                                        t = "";
                                        break;
                                    default:
                                        t = "desc"
                                }
                                var s = {
                                    axis: "y_optional" == i ? "y" : i,
                                    type: t,
                                    fid: n,
                                    uniq_id: r,
                                    col_index: e.index()
                                };
                                if (r && (s.uniq_id = r), "edit" === d.mode) {
                                    var l = F.data.info.drill_level;
                                    d.emit("saveWithOpt", l, {
                                        sort: s,
                                        is_advanced_sort: 0
                                    })
                                } else {
                                    var c = {
                                        sort: JSON.stringify(s),
                                        is_advanced_sort: 0
                                    };
                                    d.requestData(c).then(function (e) {
                                        "0" == e.status ? (F.init(e.result), d.emit("data-loaded")) : errorHandle(e)
                                    }), d.emit("dashboard_click_sort")
                                }
                            },
                            mergeCell: function (e, t) {
                                var a, i = F.data.info,
                                    n = F.data.data,
                                    o = F.isPinned || r[y],
                                    s = this.getRowHeight(),
                                    l = F.data.info.compare_axis.length,
                                    c = v.find(".fht-fixed-column .fht-thead"),
                                    p = v.find(".fht-fixed-column .fht-tbody"),
                                    u = v.find(".hz-table-body"),
                                    h = i.x.length,
                                    f = i.tb_statistic,
                                    g = n.x.length + n.y.length;
                                f && f.row && "right" === f.row_pos && g--, a = t ? v.find(".hz-table .hz-table-header") : F.pinnedIndex > 0 && o ? v.find(".fht-fixed-body .fht-thead .hz-table-header") : v.find(".fht-thead .hz-table-header");
                                var m = p.clone(),
                                    _ = u.clone(),
                                    b = a.clone(),
                                    w = c.clone();
                                if (k)
                                    for (var C = 0; C < e - 1; C++) m.mergeCol(C, s), (F.pinnedIndex < 1 || !o || o && F.pinnedIndex < e - 1 || t) && _.mergeCol(C, s);
                                p[0] && (p[0] = bdp.utils.replaceHtml(p[0], m.html())), u[0] && (u[0] = bdp.utils.replaceHtml(u[0], _.html()));
                                var x = function (e) {
                                    for (var t, a = "fullscreen" === d.mode ? 49 * F.compareLevel : 33 * F.compareLevel, i = 0; i < l + 1; i++) t = e.eq(i).find(".th-xaxis"), 0 === i ? t.attr("rowspan", l + 1).height(a + 1) : t.addClass("hidden")
                                };
                                if (l > 0) {
                                    for (var D = this.getPinnedIndex(), S = 0; S < l; S++) D < h ? b.mergeRow(S, h, g) : b.mergeRow(S, o ? D : h, g), w.mergeRow(S, h, g, !0);
                                    x(w.find("tr")), x(b.find("tr")), a[0] && (a[0] = bdp.utils.replaceHtml(a[0], b.html())), c[0] && (c[0] = bdp.utils.replaceHtml(c[0], w.html()))
                                }
                            },
                            hoverCell: function () {
                                var e = v.find(".hz-table tbody tr");
                                v.find("td").hover(function () {
                                    var t, a, i = $(this),
                                        n = i.parent(),
                                        r = i.siblings(),
                                        o = Number(i.attr("rowspan") || 0),
                                        s = 0,
                                        l = 0;
                                    if (o > 0)
                                        if (s = n.index(), l = i.index(), o < Number(i.prev().attr("rowspan") || 0))
                                            for (t = s; t < s + o; t++) {
                                                var d = e.eq(t).find("td");
                                                for (a = l; a < r.length + 1; a++) d.eq(a).addClass("hover")
                                            } else
                                            for (t = s; t < s + o; t++) e.eq(t).addClass("hover");
                                    else if ($.each(r, function () {
                                            $(this).attr("rowspan") && (l = $(this).index())
                                        }), r.length && (l || r.eq(l).attr("rowspan")))
                                        for (a = l + 1; a < r.length + 1; a++) i.parent().find("td").eq(a).addClass("hover");
                                    else n.addClass("hover")
                                }, function () {
                                    v.find(".hover").removeClass("hover")
                                })
                            },
                            initHead: function () {
                                var e = F.data.data,
                                    t = F.data.info,
                                    a = t.sort,
                                    n = t.is_advanced_sort;
                                if (e.y.length) {
                                    var r = e.y[0].nick_name;
                                    (r === m || !r && e.y[0].name === m) && (e.y[0].nick_name = CONST_ROW_SUMMARY, e.y[0].name = CONST_ROW_SUMMARY), [CONST_ROW_SUMMARY].indexOf(e.y[0].name) > -1 && e.y[1] && e.y[1].compare_names ? F.compareLevel = e.y[1].compare_names.length : e.y[0].compare_names && (F.compareLevel = e.y[0].compare_names.length || F.compareLevel)
                                } else e.y_optional.length && e.y_optional[0].compare_names && (F.compareLevel = e.y_optional[0].compare_names.length);
                                F.compareLevel = F.compareLevel || 1;
                                for (var o, s = document.createDocumentFragment(), l = 0; l < F.compareLevel; l++) {
                                    var d, c, p, u, h, f, g = i("tr");
                                    if (0 === l)
                                        for (var _ = 0; _ < F.xaxisAmount; _++) b = e.x[_].uniq_id ? a && "x" === a.axis && a.uniq_id === e.x[_].uniq_id ? a.type : "" : a && "x" === a.axis && a.fid === e.x[_].fid ? a.type : "", b = b || "default", o = e.x[_].nick_name || e.x[_].name, d = i("th", void 0, "th-xaxis th table-sort " + b), c = i("div", "", "td-wrap trigger-col-sort"), f = i("span", o, "trigger-col-sort"), h = t.x[_] ? t.x[_].description : void 0, h && (f.setAttribute("description", h), f.className += " description"), d.setAttribute("data-axis", "x"), d.setAttribute("data-fid", e.x[_].fid), d.setAttribute("data-uniq-id", e.x[_].uniq_id), u = i("i", "", "trigger-col-sort bdp-icon ico-" + b + "-sort-arrow"), 1 == n && (u = i("i", "", "trigger-col-sort bdp-icon")), f.appendChild(u), c.appendChild(f), d.appendChild(c), g.appendChild(d);
                                    else
                                        for (var y = 0; y < F.xaxisAmount; y++) o = e.x[y].name, d = i("th", "", "th-xaxis th"), c = i("div", "", "td-wrap trigger-col-sort"), p = i("span", o, "trigger-col-sort"), c.appendChild(p), d.appendChild(c), g.appendChild(d);
                                    g.appendChild(j("y", F.yaxisAmount, l)), g.appendChild(j("y_optional", F.yaxisOptionalAmount, l)), s.appendChild(g)
                                }
                                v.find(".hz-table-header")[0].appendChild(s)
                            },
                            initBody: function (e) {
                                var t = F.data.info,
                                    a = F.data.data,
                                    n = F.linkInfo,
                                    r = F.jumpInfo,
                                    o = [];
                                n && n.length > 0 && angular.forEach(n[0].field_map, function (e) {
                                    o.push(e.index)
                                });
                                var s, l, d, c, p, u = e * F.perPageNum > F.totalData ? F.totalData : e * F.perPageNum,
                                    h = document.createDocumentFragment();
                                if (F.xaxisAmount > 0)
                                    for (var f = 0, g = a.subtotal, m = 0; m < u; m++) {
                                        s = document.createElement("tr");
                                        for (var _, b, y, w, C, x = /^(http:|https:|ftp:)[\S]+\.(jpg|jpeg|bmp|gif|png)$/i, k = m + ("top" === D), S = 0; S < F.xaxisAmount; S++) {
                                            if (l = t.xAxis[S].data_type, p = t.xAxis[S].alignment_method ? t.xAxis[S].alignment_method : "right", d = a.x[S].data[m], "string" !== l || t.xAxis[S].alignment_method ? t.xAxis[S].alignment_method || (p = "right") : p = "left", "center" === p ? c = "text-center" : "left" === p ? c = "text-left" : "right" === p && (c = "text-right"), y = i("span"), null === d || "" === d) y.innerHTML = "", C = "";
                                            else {
                                                C = F.handleXaxisDate(d, t.xAxis[S]);
                                                var w = t.xAxis[S].granularity || "day";
                                                "week" === w && (c = "text-left")
                                            }
                                            if (t.is_drill && t.xAxis[S].fid === t.level_fields[t.drill_level].fid) {
                                                var T = "";
                                                if ("string" == l && "img" == t.xAxis[S].data_show_type && x.test(C)) {
                                                    T = i("img", "", "cursor-pointer chart-table-type-img J-hz-table-show-img drilldown"), T.setAttribute("src", C), T.setAttribute("data-src", C), T.setAttribute("data-drill-value", d), T.setAttribute("data-text", C);
                                                    var I = i("i", C, "chart-table-type-img J-hz-table-show-img hidden");
                                                    I.setAttribute("data-src", C), I.setAttribute("data-text", C), y.appendChild(I)
                                                } else T = i("a", C, "drilldown"), T.setAttribute("data-drill-value", d);
                                                y.appendChild(T)
                                            } else if ("string" == l && "img" == t.xAxis[S].data_show_type && x.test(C)) {
                                                var L = i("img", "", "chart-table-type-img J-hz-table-show-img");
                                                L.setAttribute("src", C), L.setAttribute("data-src", C), L.setAttribute("data-text", C), y.appendChild(L);
                                                var I = i("i", C, "chart-table-type-img J-hz-table-show-img hidden");
                                                I.setAttribute("data-src", C), I.setAttribute("data-text", C), y.appendChild(I)
                                            } else y.innerHTML = "" !== C ? bdp.utils.encodeHTML(C) : "";
                                            if (d = d || "", !("http://" !== d.toString().substr(0, 7) && "https://" !== d.toString().substr(0, 8) || "string" == l && "img" == t.xAxis[S].data_show_type && x.test(C))) {
                                                var A = document.createTextNode("  "),
                                                    E = i("a");
                                                C = d, E.setAttribute("href", d), E.setAttribute("target", "_blank"), E.appendChild(i("i", "", "bdp-icon ico-href")), y.appendChild(A), y.appendChild(E)
                                            }
                                            if (!t.is_drill && $.inArray(S, o) > -1) {
                                                var j = c + " point-status J-link" + S;
                                                d == F.pointData[S] && (j += " cur-link-item"), _ = i("td", "", j), _.setAttribute("data-current", d)
                                            } else if (!t.is_drill && r && r.fid && r.f_index == S) {
                                                var j = c + " point-status J-jump";
                                                _ = i("td", "", j), _.setAttribute("data-current", d)
                                            } else _ = i("td", "", c);
                                            b = i("div", "", "td-wrap"), b.appendChild(y), _.appendChild(b), s.appendChild(_)
                                        }
                                        s.className += " r" + (f + k);
                                        var O = M("y", F.yaxisAmount, m),
                                            P = M("y_optional", F.yaxisOptionalAmount, m);
                                        if (s.appendChild(O), s.appendChild(P), h.appendChild(s), function (e, a) {
                                                return t.tb_statistic.col && t.tb_statistic.subtotal && !$.isEmptyObject(e) && $.isArray(e[a])
                                            }(g, m))
                                            for (var N = 0, B = g[m].length; N < B; N++) {
                                                var z = g[m][N];
                                                f++, F.drawColSubTotal(h, z, "bottom", "r" + (f + k))
                                            }
                                    } else
                                    for (var B = a.y.length && a.y[0].data.length || a.y_optional.length && a.y_optional[0].data.length || 0, R = 0; R < B; R++) s = i("tr"), s.appendChild(M("y", F.yaxisAmount, R)), s.appendChild(M("y_optional", F.yaxisOptionalAmount, R)), h.appendChild(s);
                                t.tb_statistic.col && this.drawColSummary(h, D), v.find(".hz-table-body").append(h)
                            },
                            mergeSummary: function (e) {
                                v.find(".summary-td").each(function (t, a) {
                                    if (F.isPinned) {
                                        var i = Math.min(F.xaxisAmount, F.pinnedIndex);
                                        e ? 0 === t ? $(this).attr("colspan", F.xaxisAmount) : $(this).addClass("hidden") : 0 === t ? $(this).attr("colspan", i) : t === i ? $(this).attr("colspan", F.xaxisAmount) : $(this).addClass("hidden")
                                    } else t % F.xaxisAmount == 0 ? $(this).attr("colspan", F.xaxisAmount) : $(this).addClass("hidden")
                                })
                            },
                            drawColSubTotal: function (e, t, a, n) {
                                for (var r, o, s, d, c, p, u, h, f = null, g = "subtotal-td-" + n, m = " summary-td-value " + g, v = F.data.data, b = F.data.info, y = F.xaxisAmount, w = F.yaxisAmount, C = F.isPinned, x = F.pinnedIndex, k = " ", D = i("tr", "", a + " summary bdp-merge-row " + n), S = 0, T = t.length; S < T; S++) {
                                    var I = t[S];
                                    if (S < y) f = i("td", "", m + k), "[__subtotal__]" === I ? (I = _, tdDiv = i("div", I, "td-wrap"), f.appendChild(tdDiv), s = S, d = y - s, c = C && x - s, p = C && x > s && x <= y, p ? $(f).attr("colspan", c) : $(f).attr("colspan", d)) : (I = F.handleXaxisDate(I, b.xAxis[S]), tdDiv = i("div", I, "td-wrap"), f.appendChild(tdDiv), void 0 !== s && (p ? S == x ? $(f).attr("colspan", y - x) : (S < x || S > x) && $(f).addClass("hidden") : $(f).addClass("hidden"))), D.appendChild(f);
                                    else {
                                        var L = S - y,
                                            A = S - y - w,
                                            E = {};
                                        S >= y + w ? (h = "y_optional", E = v[h][A]) : (h = "y", E = v[h][L]), u = E.alignment_method ? E.alignment_method : "right", k = l[u], r = E.formatter, o = E.aggregator, $.isArray(I) && (I = I[0]), null === I || "--" == I ? (tdclassname = m + k, tdText = "" == E.statistic_method ? "" : "--") : (tdText = "" == E.statistic_method ? "" : bdpChart.helper.dataLabelFormatter(r, I, o), tdclassname = k), f = i("td", "", tdclassname), tdDiv = i("div", tdText, "td-wrap"), f.appendChild(tdDiv), D.appendChild(f)
                                    }
                                }
                                "bottom" === a && e.appendChild(D)
                            },
                            handleXaxisDate: function (e, t) {
                                var a, i = t.data_type;
                                if ("date" === i) {
                                    g = t.granularity || "day";
                                    var n = t.granularity_name || "",
                                        r = t.month_start_day || 0;
                                    "hour" !== g && "minute" !== g && "second" !== g || (g = "g_" + g), "week" === g && (r = t.week_start_day_of_week || 1, currentClass = "text-left"), ["(空白)", "(Blank)"].indexOf(e) > -1 ? a = e : (a = bdpChart.helper.checkGranularity(g, e, n, r), "week" === g && (a += "（" + Highcharts.dateFormat("%b/%e", new Date(e)) + "~" + Highcharts.dateFormat("%b/%e", new Date(e + 5184e5)) + "）"))
                                } else "sub_date" == i ? (g = t.fid.split("_")[1], a = bdpChart.helper.subDateFormat(g, e)) : a = e;
                                return a = a ? a.toString() : ""
                            },
                            drawColSummary: function (e, t) {
                                if (F.xaxisAmount) {
                                    var a, n, r, o, s, d, c, p, u = F.data.data;
                                    F.data.info;
                                    a = i("tr", "", "summary bdp-merge-row " + t), "top" === t && (a.className += " r0");
                                    for (var h = 0; h < F.xaxisAmount; h++) n = i("td", "", "summary-td summary-td-value text-left"), r = i("div", m, "td-wrap"), n.appendChild(r), a.appendChild(n);
                                    for (var f = 0; f < F.yaxisAmount; f++) o = u.y[f].col_summary, s = u.y[f].formatter, d = u.y[f].aggregator, c = u.y[f].alignment_method ? u.y[f].alignment_method : "right", p = l[c], null === o ? (n = i("td", "", p), r = "" == u.y[f].statistic_method ? i("div", "", "td-wrap") : i("div", "--", "td-wrap"), n.appendChild(r)) : (n = i("td", "", p), r = "" == u.y[f].statistic_method ? i("div", "", "td-wrap") : i("div", bdpChart.helper.dataLabelFormatter(s, o, d), "td-wrap"), n.appendChild(r)), a.appendChild(n);
                                    for (var g = 0; g < F.yaxisOptionalAmount; g++) o = u.y_optional[g].col_summary, s = u.y_optional[g].formatter, d = u.y_optional[g].aggregator, c = u.y_optional[g].alignment_method ? u.y_optional[g].alignment_method : "right", p = l[c], null === o ? (n = i("td", "", p), r = i("div", "--", "td-wrap"), n.appendChild(r)) : (n = i("td", "", p), r = i("div", bdpChart.helper.dataLabelFormatter(s, o, d), "td-wrap"), n.appendChild(r)), a.appendChild(n);
                                    "bottom" === t ? e.appendChild(a) : "top" === t && e.firstChild && e.insertBefore(a, e.firstChild)
                                }
                            },
                            initLoadMore: function () {
                                F.pageNum * F.perPageNum >= F.totalData || v.find(".load-more").length || v.find(".fht-tbody").append('<button class="load-more J-table-load-more">' + h + "</button>")
                            },
                            init: function (e, t) {
                                F.destroy(), F.data = e, F.linkInfo = d.optional && d.optional.link_info, F.jumpInfo = d.optional && d.optional.chart_jump_info, F.pageNum = t || 1;
                                var a = e.data;
                                if (F.xaxisAmount = a.x.length, F.yaxisAmount = a.y.length, F.yaxisOptionalAmount = a.y_optional.length, F.pointData = d.pointData || new Array(F.xaxisAmount), d.pointData = F.pointData, F.totalData = a.x[0] && a.x[0].data.length || a.y[0] && a.y[0].data.length || a.y_optional[0] && a.y_optional[0].data.length || 0, 0 === F.totalData) return void v.append('<div class="chart-error"><p class="no-data" style="font-size: 12px; font-weight: bold; color: #60606a;">' + I + "</p></div>");
                                var i;
                                i = "fullscreen" == d.mode ? $('<div class="chart-table"><table class="hz-table"><thead class="hz-table-header"></thead><tbody class="hz-table-body"></tbody></table></div>') : $('<table class="hz-table"><thead class="hz-table-header"></thead><tbody class="hz-table-body"></tbody></table>'), v.append(i), F.initHead(), F.initBody(F.pageNum), F.addId = (v[0].className.split(" ")[1] + y).toUpperCase(), v.find(".hz-table").attr("id", F.addId);
                                if (v.find("th > .td-wrap").prepend('<i class="pin bdp-icon ico-pin-gray"></i>'), "true" == v.attr("data-drill") || "true" == v.attr("data-drill-status") || C || "edit" == d.mode || "fullscreen" == d.mode || "chartTpl" == d.mode || d.mobileSingleChart) F.fixHeader(), F.mergeCell(F.xaxisAmount), this.mergeSummary();
                                else {
                                    var n = $("#" + F.addId),
                                        r = n.parents(".J_item_chart");
                                    n.wrap('<div style="width:100%; height: 100%; overflow: hidden" class="J_no_fix_wrap"></div>'), n.wrap('<div class="no-fix-header J_no_fix"></div>'), n.css({
                                        width: "100%"
                                    }), r.hasClass("noscroll") || r.addClass("noscroll").removeClass("toggle-scroll"), F.mergeCell(F.xaxisAmount, !0), this.mergeSummary(!0)
                                }
                                v.find(".fht-empty-cell").addClass("hidden"), this.changePinIcon(), F.initLoadMore(), F.bindEvents($.extend(d, e)), F.scrollToPosition()
                            },
                            scrollToPosition: function () {
                                for (var e = v.find(".fht-tbody .hz-table-body"), t = 0, a = v.find(".fht-tbody .hz-table .hz-table-body").find("tr"), i = 0; i < (F.pageNum - 1) * F.perPageNum; i++) t += a.eq(i).height();
                                t = t - v.find(".fht-tbody").height() + v.find(".load-more").height(), e.find(".summary").length && (t += e.find(".summary").height()), F.isPinned ? v.find(".fht-fixed-body .fht-tbody").scrollTop(t) : v.find(".fht-tbody").scrollTop(t), F.scrollXNum > 0 && F.pageNum > 1 && v.find(".fht-tbody").scrollLeft(F.scrollXNum)
                            },
                            getPinnedIndex: function () {
                                var e = n[y] || F.pinnedIndex;
                                return "edit" === d.mode && (e = F.pinnedIndex || o[y]), e
                            },
                            changePinIcon: function () {
                                var e = F.data.data,
                                    t = this.getRowHeight();
                                if (F.isPinned || r[y]) {
                                    var a = F.data.info.tb_statistic.row,
                                        i = [].concat(e.x, e.y, e.y_optional || []).length,
                                        n = e.y.length && e.y[0].fid,
                                        o = this.getPinnedIndex(),
                                        s = $("#" + F.addId).parents(".chart-table").find(".fht-fixed-column thead"),
                                        l = s.clone();
                                    l.find("tr").each(function (r, s) {
                                        if (a && (o === i && 0 === r || o !== i) || !a || "row_summary" == n) {
                                            var l = $(this).find("th"),
                                                d = l.last().find(".pin"),
                                                c = $(this).find('[data-fid="row_summary"]').attr("rowspan"),
                                                p = $(l[o - 1]).attr("data-fid");
                                            l.height();
                                            d.removeClass("ico-pin-gray").addClass("ico-pinned-blue"), 0 == e.x.length && c && "row_summary" == p && "row_summary" == n && l.height((t - 1) * c - 1)
                                        }
                                    }), s[0] && (s[0] = bdp.utils.replaceHtml(s[0], l.html()))
                                }
                            },
                            fixHeader: function () {
                                var e = F.isPinned || r[y],
                                    t = F.data.data,
                                    a = t.x.length + t.y.length + t.y_optional.length,
                                    i = n[y] || F.pinnedIndex;
                                i > a && (e = !1), "edit" === d.mode && (i = F.pinnedIndex || o[y], r[y] = !1);
                                var s = e ? {
                                        borderCollapse: !1,
                                        fixedColumn: !0,
                                        fixedColumns: i,
                                        $elem: v
                                    } : {},
                                    l = $("#" + F.addId);
                                if (l.fixedHeaderTable("destroy"), l.fixedHeaderTable(s), F.pageNum * F.perPageNum < F.totalData) {
                                    var c = v.find(".fht-fixed-column .fht-tbody");
                                    l.parent().append('<button class="load-more J-table-load-more">' + h + "</button>"), c.append('<button class="load-more J-table-load-more"></button>')
                                }
                                if ("edit" === d.mode) {
                                    var p = F.data.info.drill_level;
                                    F.isPinned || (F.pinnedIndex = 0), d.emit("saveWithOpt", p, {
                                        tb_pinned_index: F.pinnedIndex
                                    }, {
                                        not_need_redraw: !0
                                    }), o[y] = F.isPinned ? d.info.tb_pinned_index : 0
                                }
                                F.hoverDesc(), (F.compareLevel > 1 || F.xaxisAmount > 1) && u(v)
                            },
                            hoverDesc: function () {
                                e(v)
                            },
                            bindEvents: function (e) {
                                v.off().on("click", function (t) {
                                    var a = t.target,
                                        i = a.className,
                                        o = $(a).closest("td"),
                                        s = o[0] && o[0].className.match(/J-link(\d+)/);
                                    if (s) {
                                        var l = $(a).closest("tr").find("td:first-child"),
                                            d = l.find("span:first-child").html(),
                                            c = s && s[0],
                                            p = s && s[1];
                                        F.handleLink(e, o, c, p, d)
                                    }
                                    if (i.indexOf("load-more") > -1) {
                                        var u = v.find(".fht-fixed-body .fht-thead .fht-table");
                                        u.length <= 0 && (u = v.find(".fht-thead .fht-table")), F.scrollXNum = u.css("marginLeft").replace(/(px)|-/g, ""), F.pageNum * F.perPageNum < F.totalData ? setTimeout(function () {
                                            new Date;
                                            F.init(e, ++F.pageNum);
                                            new Date
                                        }, 100) : $(a).text("数据已经全部加载").fadeOut()
                                    } else if (i.indexOf("drilldown") > -1) v.attr("data-drill", "true"), e.emit("drilldown", a, e);
                                    else if (i.indexOf("pin") > -1) {
                                        F.isPinned = i.indexOf("ico-pinned") < 0, r[y] = F.isPinned;
                                        var h = $(a).parents(".td-wrap").parent();
                                        F.pinnedIndex = h.index() + +(h.attr("colspan") || 1), n[y] = F.pinnedIndex, v.find(".added-watch-scroll").each(function () {
                                            $(this).prev().show(), $(this).remove()
                                        });
                                        new Date;
                                        F.init(e, F.pageNum);
                                        var t = new Date
                                    } else i.indexOf("table-sort") > -1 ? F.sort($(a)) : i.indexOf("trigger-col-sort") > -1 ? F.sort($(a).parents(".table-sort")) : o[0] && o[0].className.indexOf("J-jump") > -1 && F.handleJump(o.attr("data-current"));
                                    C || "edit" == e.mode || "fullscreen" == e.mode || (C = !0, F.init(e, F.pageNum), v.parents(".item-chart").removeClass("noscroll").addClass("toggle-scroll"))
                                }), F.bindFixedEvent(), "fullscreen" === e.mode && F.hoverCell(), ("true" == v.attr("data-drill") || C || "edit" == e.mode || "fullscreen" == e.mode || e.mobileSingleChart) && F.addScrollEvent(e), F.hoverDesc(), t(v)
                            },
                            bindFixedEvent: function () {
                                var e = d.$elem;
                                if (F.isPinned) {
                                    var t = v.find(".fht-fixed-column .fht-tbody"),
                                        a = v.find(".fht-fixed-body .fht-tbody");
                                    t.bind("scroll", function (i) {
                                        e.attr("data-scrolling-fixed", "true"), e.attr("data-scrolling-right", "false"), e && "true" === e.attr("data-scrolling-right") || a.scrollTop(t.scrollTop())
                                    })
                                }
                            },
                            handleLink: function (e, t, a, i, n) {
                                for (var r = (F.linkInfo, t.attr("data-current")), o = v.find("." + a), s = 0, l = o.length; s < l; s++) {
                                    var d = $(o[s]);
                                    d.attr("data-current") == r ? d.hasClass("cur-link-item") ? (d.removeClass("cur-link-item"), delete F.pointData[i]) : (d.addClass("cur-link-item"), F.pointData[i] = r) : d.removeClass("cur-link-item")
                                }
                                e.pointData = F.pointData, e.emit("refreshLinkedCharts", t, e)
                            },
                            handleJump: function (e) {
                                F.jumpInfo;
                                d.emit("jumpToOtherDash", e, d)
                            },
                            addScrollEvent: function (e) {
                                var a, i = v.find(".r0").find("td").last().outerHeight(),
                                    n = this.getPinnedIndex();
                                if (v.find(".fht-tbody").length > 1) {
                                    var a = v.find(".fht-fixed-column .fht-tbody table");
                                    a.css({
                                        position: "relative"
                                    })
                                }
                                var r = v.find(".hz-table-body"),
                                    o = v.find(".summary").hasClass("top");
                                v.find(".fht-tbody").scrollEnd(function () {
                                    var s = $(this),
                                        l = e.$elem,
                                        d = s[0].scrollTop,
                                        c = s[0].getBoundingClientRect(),
                                        p = s[0].scrollLeft,
                                        u = parseInt(d / i, 10),
                                        h = "r" + u,
                                        f = $(this).find("." + h)[0];
                                    l && l.attr("data-scrolling", "false"), l && l.attr("data-scrolling-fixed", "false"), l && l.attr("data-scrolling-right", "false");
                                    var g = v.find(".fht-fixed-column .fht-tbody");
                                    v.find(".fht-fixed-body .fht-tbody").scrollTop(g.scrollTop());
                                    var m, _, b, y, w, C, x, k, D, S = function (a, n, r) {
                                        if (_ = $(a).next().find(n), b = v.find(n).find(".added-watch-scroll"), b.siblings().find("span").show(), b.remove(), !_.length && (y = $(a).prevAll().find(n), w = $(a).find(n), y.length || w.length)) {
                                            if (y.length && (C = $(y)[y.length - 1]), w.length && (C = $(w)[0]), $(a).next().find("td").eq($(C).index()).is(":visible")) return;
                                            if (x = $(C).find("span"), k = C.getBoundingClientRect(), D = $(C).find(".added-watch-scroll"), !$(D).length) {
                                                var s = o ? (Math.floor(d / i) + 1) * i + 6 : Math.ceil(d / i) * i + 6;
                                                $(x).clone().addClass("added-watch-scroll").css({
                                                    position: "absolute",
                                                    left: k.left - c.left + (r ? p : 0) + 16,
                                                    top: s
                                                }).appendTo(C);
                                                var l = e.info.xAxis[T];
                                                (["number", "sub_date"].indexOf(l.data_type) > -1 || "date" === l.data_type && "week" !== l.granularity) && $(x).parent(".td-wrap").next().css({
                                                    left: k.left - c.left + (r ? p : 0) + k.width - $(x).width() - 16
                                                }), $(x).hide(), $(C).find(".J-hz-table-show-img").length > 0 && t($(C))
                                            }
                                        }
                                    };
                                    if (a)
                                        for (var T = 0; T <= n; T++) {
                                            m = a.find($("tr :nth-child(" + (T + 1) + ")").filter(function () {
                                                return this.rowSpan > 1
                                            }));
                                            var I = a.find("tr").eq(u);
                                            S(I, m, !1)
                                        }
                                    for (var T = F.isPinned ? n : 0; T < F.xaxisAmount; T++) m = r.find($("tr :nth-child(" + (T + 1) + ")").filter(function () {
                                        return this.rowSpan > 1
                                    })), S(f, m, !0)
                                }, 300, v)
                            }
                        },
                        M = function (e, t, a) {
                            var n, r, o, s, d, c, p = F.data.data,
                                u = F.data.info,
                                h = u.warn,
                                f = "text-right",
                                t = p[e].length,
                                g = document.createDocumentFragment();
                            1 === h && u.warn_info.length && u.warn_info.forEach(function (t, a) {
                                (0 === t.axis_type && "y" === e || 1 === t.axis_type && "y_optional" === e) && (d = t)
                            });
                            for (var m = 0; m < t; m++) {
                                c = p[e][m] && p[e][m].alignment_method ? p[e][m].alignment_method : "right", "left" === u.tb_statistic.row_pos && "true" === u.tb_statistic.row && u[e][m].alignment_method ? p[e][0].alignment_method = u.tb_statistic.row_setting.alignment_method : "right" === u.tb_statistic.row_pos && "true" === u.tb_statistic.row && u[e][m].alignment_method && (p[e][t - 1].alignment_method = u.tb_statistic.row_setting.alignment_method), f = l[c], r = p[e][m].formatter, o = p[e][m].aggregator, n = p[e][m].data[a];
                                var _, v, b, y = p[e][m].cell_styles ? p[e][m].cell_styles[a] : null,
                                    w = !1;
                                p[e][m].hasOwnProperty("warn_data") && angular.forEach(p[e][m].warn_data, function (e) {
                                    1 === e && (w = !0)
                                }), null !== n && !u.drill_level && w ? (s = "cr " + f, _ = i("td", "", f), b = bdpChart.helper.dataLabelFormatter(r, p[e][m].data[a], o), v = i("div", b, "td-wrap"), 1 == h && 1 == p[e][m].warn_data[a] && (_.className = s)) : null === n ? (_ = i("td", "", f), b = "--", v = i("div", b, "td-wrap")) : (_ = i("td", "", f), b = bdpChart.helper.dataLabelFormatter(r, p[e][m].data[a], o), v = i("div", b, "td-wrap"), y && angular.forEach(y, function (e, t) {
                                    _.style[t] = e
                                })), _.appendChild(v), g.appendChild(_)
                            }
                            return g
                        },
                        j = function (e, t, n) {
                            var r, o, s, l = F.data.data,
                                c = F.data.info,
                                p = c.sort,
                                u = c.warn,
                                h = [],
                                f = !1,
                                g = document.createDocumentFragment(),
                                m = c.is_advanced_sort,
                                _ = c.compare_setting && c.compare_setting.sort.index || 0,
                                t = l[e].length,
                                v = {};
                            if (!c.drill_level && 1 === u && c.warn_info.length && F.data.info.compare_axis.length > 0 && 0 === n) {
                                var y = d.data[e];
                                angular.forEach(y, function (e) {
                                    e.hasOwnProperty("warn_data") && a(e.warn_data) && (v[e.uniq_id] = !0)
                                })
                            }
                            for (var w = 0; w < t; w++) {
                                r = "y" === e ? l.x.length + w : l.x.length + l.y.length + w, b = "default";
                                var C = "y_optional" == e ? "y" == p.axis : e == p.axis,
                                    x = defined(p.uniq_id) && p.uniq_id == l[e][w].uniq_id || !defined(p.uniq_id);
                                p && C && p.fid === l[e][w].fid && x && (defined(p.uniq_id) && 0 == n ? b = p.type : defined(p.col_index) ? b = p.col_index === r ? p.type : "" : 0 === n && (b = p.type), b = b || "default"), o = l[e][w].compare_names || [l[e][w].nick_name || l[e][w].name], 1 != o.length || "virtual" != l[e][w].data_type && l[e][w].data_type || (s = w, o[n] = o[0]);
                                var k = "";
                                if (l[e][w].hasOwnProperty("unit_adv") && l[e][w].unit_adv && n === _ && (k = "(" + l[e][w].unit_adv + ")"), f = !1, !c.drill_level && 1 === u && c.warn_info.length) {
                                    var D = d.data[e][w];
                                    h = D, D.hasOwnProperty("warn_data") && (f = a(D.warn_data))
                                }
                                var S, T;
                                if (c.yAxisOptional.length && "y_optional" !== e || !c.tb_statistic.row && !c.tb_statistic.number_row || w != s) {
                                    S = i("th", "", "th table-sort " + b), S.setAttribute("data-axis", e), S.setAttribute("data-fid", l[e][w].fid), S.setAttribute("data-uniq-id", l[e][w].uniq_id), T = i("div", "", "td-wrap trigger-col-sort"), 0 === n && v[l[e][w].uniq_id] ? T.appendChild(i("i", "", "warn-label-left")) : h && h.fid === l[e][w].fid && f && T.appendChild(i("i", "", "warn-label-left"));
                                    var I = i("span", o[n] + k, "trigger-col-sort"),
                                        L = i("i", "", "trigger-col-sort bdp-icon ico-" + b + "-sort-arrow");
                                    1 == m && (L = i("i", "", "trigger-col-sort bdp-icon")), I.appendChild(L);
                                    var $;
                                    n === _ && ($ = l[e][w] ? l[e][w].description : void 0) && (I.setAttribute("description", $), I.className += " description"), T.appendChild(I), S.appendChild(T)
                                } else {
                                    if (w == s) {
                                        S = i("th", "", "th table-sort " + b), T = i("div", "", "td-wrap trigger-col-sort");
                                        var A = i("span", o[n] + k, "trigger-col-sort"),
                                            L = i("i", "", "trigger-col-sort bdp-icon ico-" + b + "-sort-arrow");
                                        1 == m && (L = i("i", "", "trigger-col-sort bdp-icon")), A.appendChild(L);
                                        var $;
                                        n === _ && ($ = l[e][w] ? l[e][w].description : void 0) && (A.setAttribute("description", $), A.className += " description"), T.appendChild(A)
                                    } else S = i("th", "", "cursor-default th"), T = i("div", "", "td-wrap");
                                    S.setAttribute("data-axis", e), S.setAttribute("data-fid", l[e][w].fid), S.setAttribute("data-uniq-id", l[e][w].uniq_id), h && h.fid === l[e][w].fid && f && T.appendChild(i("i", "", "warn-label-left")), 0 !== n ? S.className += " hidden" : S.setAttribute("rowSpan", F.compareLevel), w != s && T.appendChild(document.createTextNode(o[n])), S.appendChild(T)
                                }
                                g.appendChild(S)
                            }
                            return g
                        };
                    w ? E.init() : F.init(d)
                }
            }(),
            function () {
                bdpChart.setCanvasTableOpts = function (e, t, a) {
                    var n, r, o, s, l, d, c, p, u, h, f, _, v, b, y, w, C, x, k, D, S, T = "default",
                        I = "blue",
                        L = "grey",
                        A = "row_summary",
                        E = "[__subtotal__]",
                        F = "",
                        M = /^(http:|https:|ftp:)[\S]+\.(jpg|jpeg|bmp|gif|png)$/i,
                        j = "0 16 0 16",
                        O = "rgba(81,130,227,0.20)",
                        P = {},
                        N = $.extend({
                            iconCount: 3
                        }, a),
                        B = e.$elem,
                        z = bdpChart.language || "zh",
                        R = e.theme == T ? "LIGHT" : "DARK",
                        q = "LIGHT" == R,
                        H = "edit" === e.mode,
                        G = "fullscreen" === e.mode,
                        W = window.location.href.indexOf("/dash_fullscreen/") > -1,
                        J = window.location.href.indexOf("/embed/") > -1,
                        V = window.location.href.indexOf("/share/") > -1,
                        U = (e.isMobileMode, B.width(), B.height(), 24 * N.iconCount),
                        Y = {
                            objs: {
                                pageNum: 1,
                                perPageNum: 30,
                                descTipEle: null,
                                imgPreviewEle: null,
                                linkDimensionIndexCache: [],
                                autoWordwrapCellCache: [],
                                init: function () {
                                    var e = Y.objs.spread;
                                    Y.objs.initThemeProps(), Y.objs.initLangProps(), Y.objs.initModeProps(), e.suspendPaint(),
                                        Y.objs.config(), Y.objs.customCell.init(), Y.objs.draw(), Y.objs.setStyles(), e.resumePaint(), Y.objs.autoFitLastColumn(), Y.objs.guide.widthChangeGuide(), Y.objs.guide.wordWrapGuide(), Y.objs.exportDashConfig(), Y.objs.menu.init()
                                },
                                initThemeProps: function () {
                                    q ? (n = "#F7F8F9", r = "#ECEFF1", o = "#DFE4E7", s = "rgba(0, 0, 0, .82)", l = "rgba(0, 0, 0, .6)", p = "#E3E8EC", warnHitColor = "#E45151", v = "#FFF", C = "#FFF") : (n = "#2B2E44", r = "#1E2033", o = "#24273E", s = "#FFF", l = "rgba(255, 255, 255, .5)", p = "#2E324D", warnHitColor = "#E45151", v = "#313449", C = "#313449"), Y.objs.initCornerTheme(o)
                                },
                                initLangProps: function () {
                                    if ("zh" === z) return d = "行总计", c = "列总计", u = "小计", h = "表格数据超过100条不支持行列转置", f = "加载更多", noDataText = "当前图表无数据", _ = "复制", D = "您可以单击鼠标右键进行复制", void(S = "列宽恢复自适应");
                                    d = "Row Summary", c = "Col Summary", u = "Subtotal", h = "Table data more than 100 do not support transpose", f = "Load more...", noDataText = "No data to display", _ = "copy", D = "You can right-click and copy", S = "Restore to Auto-Width"
                                },
                                initModeProps: function () {
                                    if (G) return b = 48, y = "14px Arial", void(w = "16px Arial");
                                    b = 34, y = "12px Arial", w = "12px Arial"
                                },
                                config: function () {
                                    var e = Y.objs.spread,
                                        t = Y.objs.sheet,
                                        a = Y.objs.spreadNS,
                                        i = null;
                                    e.options.backColor = C, e.options.grayAreaBackColor = "transparent", t.options.gridline.color = o, e.options.scrollbarMaxAlign = !0, e.options.scrollbarShowMax = !0, e.options.tabEditable = !1, e.options.tabStripVisible = !1, e.options.allowUserZoom = !1, e.options.tabNavigationVisible = !1, e.options.newTabVisible = !1, e.options.allowUserDragFill = !1, e.options.allowUserDragDrop = !1, e.options.cutCopyIndicatorVisible = !1, e.options.autoFitType = a.AutoFitType.cellWithHeader, t.options.selectionBorderColor = "rgb(81,130,228)", t.options.selectionBackColor = "rgba(81,130,228,0.06)", t.clearSelection(), t.options.frozenlineColor = "transparent", t.options.isProtected = !0, i = {
                                        allowFilter: !1,
                                        allowSort: !1,
                                        allowResizeRows: !1,
                                        allowResizeColumns: !0,
                                        allowEditObjects: !1
                                    }, t.options.protectionOptions = i, t.defaults.rowHeight = 34, t.defaults.colHeaderRowHeight = b
                                },
                                setStyles: function (t) {
                                    var a = Y.objs.sheet,
                                        i = Y.objs.spread,
                                        d = Y.objs.spreadNS,
                                        c = Y.objs.lineStyle,
                                        u = Y.objs.sheetStyles = new d.Style,
                                        h = (Y.objs.headerRowStyle = new d.Style, Y.objs.lineBorder = Y.objs.lineBorder || new d.LineBorder(o, c)),
                                        f = Y.objs.viewport,
                                        g = Y.objs.colHeader,
                                        m = Y.objs.rowHeader,
                                        _ = Y.objs.isFlipped,
                                        v = (e && e.isMobileMode, Y.objs.viewportCompareRange),
                                        b = Y.objs.headerValueRange,
                                        x = a.getRowCount(),
                                        k = a.getColumnCount(),
                                        D = Y.objs.colHeaderCount,
                                        S = Y.objs.colHeaderRealCount,
                                        T = Y.objs.headerRowRange,
                                        I = Y.objs.viewportRange,
                                        L = Y.objs.rowHeaderRange,
                                        A = 0,
                                        E = "bold " + w,
                                        F = Y.objs.colSummaryRange,
                                        M = Y.objs.flipColSummaryRange,
                                        j = Y.objs.subtotalRanges || [],
                                        O = Y.objs.warnHitSpan || [],
                                        P = Y.objs.cellStyleHitSpan || [],
                                        N = Y.objs.info,
                                        B = Y.objs.xLen,
                                        z = N.tb_statistic,
                                        R = z.col && B > 0,
                                        H = $.extend({}, t),
                                        G = H.lazyLoad,
                                        W = H.range,
                                        J = $(Y.objs.canvas).height(),
                                        V = ($(Y.objs.canvas).width(), Y.objs.autoWordwrapCellCache);
                                    u.foreColor = s;
                                    for (var U = 0; U < x; U++) {
                                        var X = a.getRange(U, -1, 1, -1, f);
                                        (U + 1) % 2 == 0 ? X.backColor(n) : q ? X.backColor(C) : X.backColor("#313449"), A += a.getRowHeight(U)
                                    }
                                    for (var Q = 1; Q < S; Q++) A += a.getRowHeight(Q, g);
                                    if (Y.objs.resetHScrollBar(G), i.options.showVerticalScrollbar = !(A <= J), I.font(y), I.foreColor(s), G ? W.setBorder(h, {
                                            inside: !0,
                                            right: !0,
                                            bottom: !0
                                        }) : (I.setBorder(h, {
                                            inside: !0,
                                            right: !0,
                                            bottom: !0
                                        }), T.font(E), T.backColor(r), T.foreColor(l), T.setBorder(h, {
                                            inside: !0,
                                            right: !0,
                                            bottom: !0
                                        })), _ && (v.backColor(r), v.font(E), v.foreColor(l), b.font(w), b.foreColor(s), M && M.backColor(r)), I.vAlign(d.VerticalAlign.center), I.hAlign(d.HorizontalAlign.center), F && F.backColor(p), j.length > 0)
                                        for (var K = 0, Z = j.length; K < Z; K++) {
                                            var ee = j[K];
                                            ee.backColor(p)
                                        }
                                    O && O.length > 0 && O.forEach(function (e) {
                                        var t = _ ? D : 0;
                                        _ && R && "top" === z.col_pos && (t += 1), a.getCell(e.row, e.col + t, f).foreColor(warnHitColor)
                                    }), P && P.length > 0 && P.forEach(function (e) {
                                        var t = _ ? D : 0;
                                        _ && R && "top" === z.col_pos && (t += 1);
                                        for (var i = a.getCell(e.row, e.col + t, f), n = e.cellStyles, r = !1, o = 0, s = O.length; o < s; o++)
                                            if (e.row == O[o].row && e.col == O[o].col) {
                                                r = !0;
                                                break
                                            }
                                        r || (n && n.color && i.foreColor(n.color), n && n.backgroundColor && i.backColor(n.backgroundColor))
                                    }), a.setRowHeight(0, 1, g), a.setColumnWidth(0, 1, m), L.foreColor("transparent"), L.setBorder(h, {
                                        right: !0
                                    }), a.setColumnResizable(k - 1, !1, g);
                                    for (var te = 0; te < V.length; te++) {
                                        var ae = V[te];
                                        Y.objs.handleAutoWordwrap(ae)
                                    }
                                    Y.objs.resetVScrollBar()
                                },
                                setFontStyles: function (e, t, a) {
                                    if ($.isPlainObject(a)) {
                                        var i = Y.objs.spreadNS,
                                            n = Y.objs.sheet,
                                            r = n.getStyle(e, t) || new i.Style,
                                            o = $("<span></span>");
                                        return o.css(a), r.font = o.css("font"), n.setStyle(e, t, r, Y.objs.colHeader), r
                                    }
                                },
                                resetHScrollBar: function (e) {
                                    for (var t = Y.objs.spread, a = Y.objs.sheet, i = a.getColumnCount(), n = 0, r = 0, o = Y.objs.getCanvasWidth(), s = 0; s < i; s++) n += a.getColumnWidth(s);
                                    n <= o && !e && Y.objs.resetWidth(n);
                                    for (var s = 0; s < i; s++) r += a.getColumnWidth(s);
                                    t.options.showHorizontalScrollbar = !(r <= o)
                                },
                                resetVScrollBar: function () {
                                    for (var e = Y.objs.sheet, t = Y.objs.colHeader, a = Y.objs.spread, i = 0, n = Y.objs.getCanvasHeight(), r = Y.objs.isFlipped ? Y.objs.xLen + 1 : Y.objs.colHeaderRealCount, o = e.getRowCount(), s = 0; s < o; s++) i += e.getRowHeight(s);
                                    for (var l = 0; l < r; l++) i += e.getRowHeight(l, t);
                                    a.options.showVerticalScrollbar = !(i <= n)
                                },
                                autoFitColumn: function (e) {
                                    var t = Y.objs.sheet,
                                        a = e.cell,
                                        i = e.sheetType,
                                        n = a.col,
                                        r = t.getColumnCount(),
                                        o = a.value(),
                                        s = Y.objs.getTextWidth(o, i),
                                        l = t.getColumnWidth(n),
                                        d = Y.objs.getCanvasWidth(),
                                        c = 0,
                                        p = Y.objs.widthOpts,
                                        u = Y.objs.getWidthOptsKey(n);
                                    if (u in p) {
                                        if (n != r - 1) return void t.setColumnWidth(n, p[u], i);
                                        delete p[u]
                                    }(s += U) > l && (c = s >= d ? d - 2 : s, c > d / 2 && (c = d / 2), t.setColumnWidth(n, c, i))
                                },
                                autoFitLastColumn: function () {
                                    for (var e = Y.objs.sheet, t = (Y.objs.viewport, Y.objs.pinIndex), a = e.getColumnCount(), i = (e.getRowCount(), e.getViewportLeftColumn(1)), n = a - 1, r = (e.getColumnWidth(n), Y.objs.getCanvasWidth()), o = 0, s = 0, l = 0, d = Y.objs.widthOpts, c = 0, p = 0; p < t; p++) {
                                        var u = Y.objs.getWidthOptsKey(p);
                                        u in d ? c += d[u] : o += e.getColumnWidth(p)
                                    }
                                    for (var h = i; h < n; h++) {
                                        var u = Y.objs.getWidthOptsKey(h);
                                        u in d ? c += d[u] : o += e.getColumnWidth(h)
                                    }
                                    o >= r || (s = r - c - o - 2, l = Y.objs.getAutoColumn(s), e.setColumnWidth(n, l))
                                },
                                getAutoColumn: function (e) {
                                    for (var t = Y.objs.sheet, a = Y.objs.colHeader, i = Y.objs.viewport, n = t.getRowCount(), r = Y.objs.getCanvasWidth(), o = t.getColumnCount() - 1, s = 0, l = 1; l < Y.objs.colHeaderRealCount; l++) {
                                        var d = t.getCell(l, o, a).value(),
                                            c = Y.objs.getTextWidth(d, a) + U;
                                        c < r && c > s && (s = c)
                                    }
                                    for (var p = 0; p < n; p++) {
                                        var u = t.getCell(p, o),
                                            h = Y.objs.getTextWidth(u.value(), i) + 32;
                                        h < r && h > s && (s = h)
                                    }
                                    return s > e ? s : e
                                },
                                resetWidth: function (e) {
                                    for (var t = Y.objs.sheet, a = (Y.objs.spread, t.getColumnCount()), i = Y.objs.getCanvasWidth(), n = Y.objs.widthOpts, r = Y.objs.getChangelessOpt(), o = a - r.len, s = o > 0 ? o : 1, l = Math.round((i - e) / s), d = 0; d < a; d++) {
                                        if (!(Y.objs.getWidthOptsKey(d) in n)) {
                                            var c = t.getColumnWidth(d);
                                            t.setColumnWidth(d, c + l - 2)
                                        }
                                    }
                                },
                                getChangelessOpt: function () {
                                    var e = Y.objs.sheet,
                                        t = Y.objs.widthOpts,
                                        a = e.getColumnCount(),
                                        n = 0,
                                        r = 0,
                                        o = [];
                                    for (i = 0; i < a; i++) {
                                        var s = Y.objs.getWidthOptsKey(i);
                                        o.push(s)
                                    }
                                    for (key in t)
                                        if ($.inArray(key, o) > -1) {
                                            var l = t[key];
                                            Y.objs.isFlipped ? isNaN(1 * key) || (n += l, r++) : isNaN(1 * key) && (n += l, r++)
                                        } else delete t[key];
                                    return {
                                        width: n,
                                        len: r
                                    }
                                },
                                getCanvas: function () {
                                    var e = Y.objs.sheet,
                                        t = e.getParent().getHost(),
                                        a = t.id + "vp_vp";
                                    return $("#" + a, t)[0]
                                },
                                getCanvasWidth: function () {
                                    return $(Y.objs.canvas).width()
                                },
                                getCanvasHeight: function () {
                                    return $(Y.objs.canvas).height()
                                },
                                draw: function () {
                                    function a() {
                                        var e = 0;
                                        l.setRowCount(m, r), l.setColumnCount(_ + v, r), Y.objs.drawHeader(), Y.objs.drawViewport(), e = l.getRowCount(), Y.objs.headerRowRange = l.getRange(0, -1, m, -1, r), Y.objs.viewportRange = l.getRange(0, -1, e, -1, s), Y.objs.rowHeaderRange = l.getRange(-1, 0, e, 1, o)
                                    }

                                    function i() {
                                        var e = d.tb_statistic,
                                            t = 0;
                                        l.setRowCount(_ + 1, r), l.setColumnCount(g + b, r), Y.objs.drawFlipHeader(), Y.objs.drawFlipViewport(), t = l.getRowCount(), Y.objs.headerRowRange = l.getRange(0, -1, _ + 1, -1, r), Y.objs.headerValueRange = l.getRange(0, g, _ + 1, b, r), Y.objs.viewportCompareRange = l.getRange(0, 0, v, g, s), Y.objs.viewportRange = l.getRange(0, -1, v, -1, s), Y.objs.rowHeaderRange = l.getRange(-1, 0, t + g, 1, o), e.col && (Y.objs.drawFlipColSummary(e.col_pos || "bottom"), "top" === e.col_pos && (Y.objs.headerValueRange = l.getRange(0, g + 1, _ + 1, b, r)))
                                    }

                                    function n(a) {
                                        var i = null;
                                        a && a.length > 0 && (angular.forEach(a[0].field_map, function (e) {
                                            Y.objs.linkDimensionIndexCache.push(e.index)
                                        }), t && t.length > 0 && angular.forEach(t, function (e, t) {
                                            e.ctId == d.chart_id && (i = e.pointData)
                                        }), e.pointData = i || new Array(_))
                                    }
                                    var r = Y.objs.colHeader,
                                        o = Y.objs.rowHeader,
                                        s = Y.objs.viewport,
                                        l = Y.objs.sheet,
                                        d = Y.objs.info = Y.objs.info || e.info,
                                        c = Y.objs.data = Y.objs.data || e.data,
                                        p = Y.objs.xData = c.x,
                                        u = Y.objs.yOptData = c.y_optional || [],
                                        h = Y.objs.yData = c.y.concat(u),
                                        f = Y.objs.isFlipped = d.tb_flip,
                                        g = Y.objs.colHeaderCount = Y.objs.getColHeaderCount(),
                                        m = Y.objs.colHeaderRealCount = g + 1,
                                        _ = Y.objs.xLen = p.length,
                                        v = Y.objs.yLen = h.length,
                                        b = Y.objs.totalDataLen = p[0] && p[0].data.length || c.y[0] && c.y[0].data.length || u[0] && u[0].data.length || 0;
                                    Y.objs.isMergeCell = void 0 === d.tb_merge_cell || d.tb_merge_cell, Y.objs.drillLevel = d.drill_level, Y.objs.sortInfo = d.sort, Y.objs.pinIndex = Y.objs.pinIndex || d.tb_pinned_index || 0, Y.objs.isAdvancedSort = d.is_advanced_sort, Y.objs.jumpInfo = e.optional && e.optional.chart_jump_info, Y.objs.linkInfo = e.optional && e.optional.link_info, Y.objs.widthOpts = Y.objs.widthOpts || d.width_opts || {}, Y.objs.isDrill = d.is_drill,
                                        function () {
                                            n(Y.objs.linkInfo), f ? i() : a()
                                        }()
                                },
                                drawHeader: function (e) {
                                    function t(e, t, a) {
                                        var i = Y.objs.sortInfo,
                                            n = !i.col_index || i.col_index && a === i.col_index;
                                        return !i || i && "x" !== i.axis ? T : t && i.uniq_id && i.uniq_id === t && n ? i.type || T : i.fid === e && n ? i.type || T : T
                                    }

                                    function a(e) {
                                        return b > 0 && b == e + 1 ? I : L
                                    }

                                    function i(i) {
                                        for (var n = 0; n < m; n++) {
                                            var r = f[n],
                                                o = r.nick_name || r.name,
                                                l = r.fid,
                                                d = r.uniq_id,
                                                c = r.description,
                                                u = t(l, d, n),
                                                g = a(n),
                                                _ = p.getCell(i, n, h),
                                                v = {
                                                    value: o,
                                                    fid: l,
                                                    uniqId: d,
                                                    axis: "x",
                                                    colIndex: n,
                                                    type: u,
                                                    pinType: g,
                                                    desc: c,
                                                    cell: _,
                                                    sheetType: h
                                                };
                                            _.value(o), Y.objs.autoFitColumn(v), c && _.textDecoration(Y.objs.underlineStyle), s(i, n), Y.objs.customCell.setHeaderCellType(i, n, v, e)
                                        }
                                    }

                                    function n(e, t, a) {
                                        var i = t - 1;
                                        if (!(t < 0 || a < 0)) {
                                            var n = e.compare_names || [e.nick_name || e.name],
                                                r = F;
                                            return 1 == n.length && e.name == d && (n[i] = n[0]), r = n[i], r = r && r.length > 50 ? r.slice(0, 50) + "..." : r
                                        }
                                    }

                                    function r(e, t, a, i) {
                                        var n = Y.objs.sortInfo,
                                            r = "y" == n.axis,
                                            o = defined(n.uniq_id) && n.uniq_id == i || !defined(n.uniq_id),
                                            s = n.fid === a;
                                        return n && r && s && o ? defined(n.uniq_id) && 1 == e ? n.type || T : defined(n.col_index) ? n.col_index === t && n.type ? n.type : T : 1 === e ? n.type || T : T : T
                                    }

                                    function o(t) {
                                        v[t] = [], v.from = 0, v.spanCount = 1;
                                        for (var i = 0; i < _; i++) {
                                            var o = g[i],
                                                s = n(o, t, i),
                                                d = m + i,
                                                u = o.fid,
                                                f = o.uniq_id,
                                                b = o.description,
                                                y = r(t, d, u, f),
                                                w = a(d),
                                                C = p.getCell(t, d, h),
                                                x = {
                                                    value: s,
                                                    fid: u,
                                                    uniqId: f,
                                                    axis: "y",
                                                    colIndex: d,
                                                    type: y,
                                                    pinType: w,
                                                    desc: b,
                                                    cell: C,
                                                    warnData: o.warn_data || [],
                                                    sheetType: h
                                                };
                                            C.value(s), Y.objs.autoFitColumn(x), b && 1 === t && C.textDecoration(Y.objs.underlineStyle), u === A ? c(t, d) : l(t, i, s), Y.objs.customCell.setHeaderCellType(t, d, x, e)
                                        }
                                    }

                                    function s(e, t) {
                                        y > 1 && e === w - 1 && p.addSpan(1, t, y, 1, h)
                                    }

                                    function l(e, t, a) {
                                        var i = Y.objs.pinIndex,
                                            r = e - 1,
                                            o = t - 1,
                                            s = g[o],
                                            l = n(s, e, o);
                                        l && e !== y && l === a && (1 === e || $.inArray(t, v[r]) > -1) && t + m != i ? (p.getCell(e, m + v.from, h), p.addSpan(e, m + v.from, 1, ++v.spanCount, h), v[e] = v[e] || [], v[e].push(t)) : (v.spanCount = 1, v.from = t)
                                    }

                                    function c(e, t) {
                                        s(e, t)
                                    }
                                    var p = Y.objs.sheet,
                                        u = Y.objs.spreadNS,
                                        h = Y.objs.colHeader,
                                        f = (Y.objs.info, Y.objs.data, Y.objs.xData),
                                        g = (Y.objs.yOptData, Y.objs.yData),
                                        m = Y.objs.xLen,
                                        _ = Y.objs.yLen,
                                        v = {},
                                        b = (Y.objs.ColumnItemsCellType, Y.objs.pinIndex),
                                        y = (Y.objs.spread, Y.objs.colHeaderCount),
                                        w = Y.objs.colHeaderRealCount;
                                    ! function () {
                                        p.suspendPaint();
                                        for (var e = 1; e < w; e++) i(e), o(e);
                                        p.frozenColumnCount(b), p.resumePaint(), p.showColumn(b, u.HorizontalPosition.left)
                                    }()
                                },
                                drawViewport: function (t) {
                                    function a(t, a) {
                                        for (var i = F, n = Y.objs.ColumnItemsCellType, r = 0; r < f; r++) {
                                            var d = o.getCell(a, r, s),
                                                c = p[r],
                                                u = Y.objs.getAlignment("x", r),
                                                h = null,
                                                g = c.data[t];
                                            i = Y.objs.fixXVal(g, l.xAxis[r]), i = c.data[t], i = Y.objs.fixXVal(i, l.xAxis[r]);
                                            var m = Y.objs.getCellDrillData(c, c.data[t], i, l),
                                                _ = c.data_show_type,
                                                v = c.data_type,
                                                b = c.uniq_id;
                                            c.fid;
                                            h = {
                                                fid: c.fid,
                                                value: i,
                                                cell: d,
                                                dataType: v,
                                                sheetType: s,
                                                jumpInfo: Y.objs.jumpInfo,
                                                linkInfo: Y.objs.linkInfo,
                                                drillData: m,
                                                showType: "img" == _ ? _ : F,
                                                orignVal: g,
                                                axis: "x",
                                                uniqId: b
                                            }, d.value(i), d.cellPadding(j), "string" == v && ("img" == _ && M.test(i) && d.value(F), "http://" !== i.toString().substr(0, 7) && "https://" !== i.toString().substr(0, 8) || d.cellPadding("0 16 0 32")), d.hAlign(u), c.is_auto_wordwrap && d.wordWrap(!0) && Y.objs.autoWordwrapCellCache.push(d), m && !!m.isDrill && d.textDecoration(Y.objs.underlineStyle), H || g !== e.pointData[r] || d.backColor(O), Y.objs.autoFitColumn(h), o.setCellType(a, r, new n(h), s)
                                        }
                                    }

                                    function i(e, t) {
                                        for (var a, i, n, r = 0; r < g; r++) {
                                            var l = o.getCell(t, r + f, s),
                                                d = Y.objs.getAlignment("y", r),
                                                c = h[r],
                                                p = {
                                                    fid: c.fid,
                                                    uniqId: c.uniq_id,
                                                    sheetType: s,
                                                    cell: l
                                                };
                                            a = c.aggregator, i = c.formatter, n = Y.objs.fixYVal(c.data[e], i, a), l.value(n), l.hAlign(d), l.cellPadding(j), Y.objs.autoFitColumn(p), Y.objs.getWarnHitSpan(c, e, t, l), Y.objs.getCellStyleSpan(c, e, t, l)
                                        }
                                    }

                                    function n(e) {
                                        var t = "bottom" === e ? o.getRowCount() : 0,
                                            a = o.getCell(t, 0, s);
                                        ++k, o.addRows(t, 1), Y.objs.colSummaryRange = o.getRange(t, -1, 1, -1, s), a.value(c), a.hAlign(Y.objs.hAlign.left), a.cellPadding(j), Y.objs.setColSummarySpan(t);
                                        for (var i = 0; i < g; i++) {
                                            var n = h[i],
                                                r = n.col_summary,
                                                l = n.formatter,
                                                d = n.aggregator,
                                                p = o.getCell(t, f + i, s),
                                                u = Y.objs.getAlignment("y", i),
                                                m = {
                                                    fid: n.fid,
                                                    uniqId: n.uniq_id,
                                                    sheetType: s,
                                                    cell: p
                                                };
                                            r = n.statistic_method === F ? F : Y.objs.fixYVal(r, l, d), p.value(r), p.hAlign(u), p.cellPadding(j), Y.objs.autoFitColumn(m)
                                        }
                                    }

                                    function r(e) {
                                        Y.objs.subtotalRanges = Y.objs.subtotalRanges || [];
                                        for (var t = x[e], a = 0, i = t.length; a < i; a++) {
                                            var n = t[a],
                                                r = 0,
                                                d = 0,
                                                c = 0;
                                            ++k, r = 1 * e + k, o.addRows(r, 1);
                                            for (var p = 0, g = n.length; p < g; p++) {
                                                var m = n[p],
                                                    _ = o.getCell(r, p, s);
                                                if (p < f) {
                                                    var v = l.xAxis[p];
                                                    m === E ? (d = p, m = u) : m = Y.objs.fixXVal(m, l.xAxis[p]), _.hAlign(Y.objs.hAlign.left)
                                                } else {
                                                    var v = h[p - f],
                                                        b = v.formatter,
                                                        y = v.aggregator,
                                                        w = Y.objs.getAlignment("y", p - f);
                                                    m = $.isArray(m) ? m[0] : m, m = v.statistic_method === F ? F : Y.objs.fixYVal(m, b, y), _.hAlign(w)
                                                }
                                                var C = {
                                                    fid: v.fid,
                                                    uniqId: v.uniq_id,
                                                    sheetType: s,
                                                    cell: _
                                                };
                                                _.value(m), _.cellPadding(j), Y.objs.autoFitColumn(C)
                                            }
                                            o.addSpan(r, d, 1, f - d, s), c = r, Y.objs.subtotalRanges.push(o.getRange(c, -1, 1, -1, s))
                                        }
                                    }
                                    var o = Y.objs.sheet,
                                        s = (Y.objs.spreadNS, Y.objs.viewport),
                                        l = Y.objs.info,
                                        d = Y.objs.data,
                                        p = Y.objs.xData,
                                        h = (Y.objs.yOptData, Y.objs.yData),
                                        f = Y.objs.xLen,
                                        g = Y.objs.yLen,
                                        m = Y.objs.totalDataLen,
                                        _ = Y.objs.pageNum,
                                        v = Y.objs.perPageNum,
                                        b = Y.objs.startIndex = Y.objs.startIndex || 0,
                                        y = _ * v,
                                        w = Y.objs.endIndex = y > m ? m : y,
                                        C = l.tb_statistic,
                                        x = d.subtotal || {},
                                        k = Y.objs.totalNum || 0,
                                        D = C.col && f > 0;
                                    ! function () {
                                        var e;
                                        o.suspendPaint(), o.setRowCount(w + k, s), e = o.getRowCount(), D && (C.col_pos = C.col_pos || "bottom", "top" === C.col_pos && !t && n(C.col_pos));
                                        for (var l = b; l < w; l++) {
                                            var d = l + k;
                                            a(l, d), i(l, d), C.col && C.subtotal && !$.isEmptyObject(x) && $.isArray(x[l]) && r(l)
                                        }
                                        Y.objs.mergeViewport(o.getRowCount(), f), e = o.getRowCount(), D && (C.col_pos = C.col_pos || "bottom", "bottom" === C.col_pos && e === m + k && n(C.col_pos)), Y.objs.totalNum = k, o.resumePaint()
                                    }()
                                },
                                drawFlipHeader: function () {
                                    function t(e, t) {
                                        for (var a = 0; a < l; a++) {
                                            var r = t.nick_name || t.name,
                                                o = t.description,
                                                s = i.getCell(e, a, n),
                                                c = {
                                                    value: r,
                                                    axis: "x",
                                                    desc: o,
                                                    cell: s,
                                                    fid: t.fid,
                                                    sheetType: n,
                                                    jumpInfo: Y.objs.jumpInfo,
                                                    linkInfo: Y.objs.linkInfo
                                                };
                                            s.value(r), Y.objs.autoFitColumn(c), o && s.textDecoration(Y.objs.underlineStyle), Y.objs.mergeFlipXHeader(e, a, n), i.setCellType(e, a, new d(c), n)
                                        }
                                    }

                                    function a(t, a) {
                                        for (var o = t - 1, s = a.data, c = Y.objs.getAlignment("x", o), p = r.xAxis[o], u = 0; u < s.length; u++) {
                                            var h = s[u],
                                                f = i.getCell(t, l + u, n),
                                                g = null,
                                                m = p.data_show_type,
                                                _ = p.data_type,
                                                v = Y.objs.fixXVal(h, p),
                                                b = Y.objs.getCellDrillData(p, h, v, r);
                                            g = {
                                                value: v,
                                                cell: f,
                                                dataType: _,
                                                fid: a.fid,
                                                sheetType: n,
                                                jumpInfo: Y.objs.jumpInfo,
                                                linkInfo: Y.objs.linkInfo,
                                                drillData: b,
                                                showType: "img" == m ? m : F,
                                                orignVal: h,
                                                axis: "y"
                                            }, f.value(v), f.hAlign(c), f.cellPadding(j), "string" == _ && ("img" == m && M.test(v) && f.value(F), "http://" !== v.toString().substr(0, 7) && "https://" !== v.toString().substr(0, 8) || f.cellPadding("0 16 0 32")), b && !!b.isDrill && f.textDecoration(Y.objs.underlineStyle), H || h !== e.pointData[t] || f.backColor(O), Y.objs.autoFitColumn(g), i.setCellType(t, l + u, new d(g), n)
                                        }
                                    }
                                    var i = Y.objs.sheet,
                                        n = Y.objs.colHeader,
                                        r = Y.objs.info,
                                        o = Y.objs.xData,
                                        s = Y.objs.xLen,
                                        l = Y.objs.colHeaderCount,
                                        d = (Y.objs.totalDataLen, Y.objs.ColumnItemsCellType);
                                    ! function () {
                                        i.suspendPaint();
                                        for (var e = 0; e < s; e++) {
                                            var n = o[e];
                                            t(e + 1, n), a(e + 1, n)
                                        }
                                        i.resumePaint()
                                    }()
                                },
                                drawFlipViewport: function () {
                                    function e(e, t, a) {
                                        if (!(t < 0)) {
                                            return a = t > 0 ? F : a, i.tb_statistic && i.tb_statistic.row && l > 1 && 1 === e.length && e[0] === d ? d : e[t] + a
                                        }
                                    }

                                    function t(e, t) {
                                        if (!e) return [];
                                        var a = (e.compare_names || [e.nick_name || e.name]).slice(0);
                                        if (e.fid === A && l > 0)
                                            for (var i = 0; i <= l - a.length; i++) a.push(a[0] + t);
                                        return a
                                    }

                                    function a(e) {
                                        if (e) return e.unit_adv ? "(" + e.unit_adv + ")" : F
                                    }
                                    var i = Y.objs.info,
                                        n = (Y.objs.data, Y.objs.yLen),
                                        r = Y.objs.yData,
                                        o = Y.objs.sheet,
                                        s = Y.objs.viewport,
                                        l = Y.objs.colHeaderCount,
                                        c = Y.objs.ColumnItemsCellType;
                                    ! function () {
                                        var d = i.virtual_wordwrap,
                                            p = [];
                                        d && (p = angular.copy(i.compare_axis), p.splice(d.index, 0, d), Y.objs.compareData = p), o.setRowCount(n, s);
                                        for (var u = 0; u < n; u++) {
                                            for (var h = r[u], f = h.formatter, g = h.aggregator, m = a(h), _ = t(h, m), v = Y.objs.getAlignment("y", u), b = h.description, y = h.fid, w = 0; w < _.length; w++) {
                                                var C = o.getCell(u, w, s),
                                                    x = e(_, w, m),
                                                    k = {
                                                        value: x,
                                                        axis: "y",
                                                        desc: b,
                                                        cell: C,
                                                        warnData: h.warn_data || [],
                                                        sheetType: s,
                                                        fid: y
                                                    };
                                                C.value(x), b && 0 === w && C.textDecoration(Y.objs.underlineStyle), y === A && Y.objs.mergeFlipXHeader(u, w, s), p[w] && p[w].is_auto_wordwrap && C.wordWrap(!0) && Y.objs.autoWordwrapCellCache.push(C), Y.objs.autoFitColumn(k), o.setCellType(u, w, new c(k), s)
                                            }
                                            for (var D = 0; D < h.data.length; D++) {
                                                var C = o.getCell(u, l + D, s),
                                                    S = h.data[D],
                                                    k = {
                                                        value: S,
                                                        axis: "y",
                                                        cell: C,
                                                        sheetType: s,
                                                        fid: h.fid
                                                    };
                                                S = Y.objs.fixYVal(S, f, g), C.value(S), C.hAlign(v), C.cellPadding(j), Y.objs.autoFitColumn(k), Y.objs.getWarnHitSpan(h, D, D, C), Y.objs.getCellStyleSpan(h, D, D, C)
                                            }
                                        }
                                        Y.objs.mergeViewport(n, l)
                                    }()
                                },
                                drawFlipColSummary: function (e) {
                                    function t() {
                                        var e = n.getRange(0, h, p, 1, d),
                                            t = n.getSpans(e, d);
                                        Y.objs.removeSpan(t, d), n.addSpan(0, h, r + 1, 1, d)
                                    }

                                    function a() {
                                        var e = n.getCell(0, h, d);
                                        n.addColumns(h, 1), e.value(c), Y.objs.totalDataLen = u + 1, t(), n.setCellType(0, h, new f({
                                            cell: e,
                                            sheetType: d
                                        }), d)
                                    }

                                    function i() {
                                        for (var e = 0; e < o; e++) {
                                            var t = s[e],
                                                a = t.col_summary,
                                                i = t.formatter,
                                                r = t.aggregator,
                                                d = n.getCell(e, h, l),
                                                c = Y.objs.getAlignment("y", e),
                                                p = {
                                                    cell: d,
                                                    sheetType: l
                                                };
                                            a = t.statistic_method === F ? F : Y.objs.fixYVal(a, i, r), d.value(a), d.hAlign(c), d.cellPadding(j), Y.objs.autoFitColumn(p)
                                        }
                                    }
                                    var n = Y.objs.sheet,
                                        r = Y.objs.xLen,
                                        o = Y.objs.yLen,
                                        s = Y.objs.yData,
                                        l = Y.objs.viewport,
                                        d = Y.objs.colHeader,
                                        p = Y.objs.colHeaderCount,
                                        u = Y.objs.totalDataLen,
                                        h = "bottom" === e ? p + u : p,
                                        f = Y.objs.ColumnItemsCellType;
                                    ! function () {
                                        a(), i(), Y.objs.flipColSummaryRange = n.getRange(0, h, o, 1, l)
                                    }()
                                },
                                mergeFlipXHeader: function (e, t, a) {
                                    var i = Y.objs.colHeaderCount,
                                        n = Y.objs.sheet;
                                    i > 1 && t === i - 1 && n.addSpan(e, 0, 1, i, a)
                                },
                                getColHeaderCount: function () {
                                    var e = 1,
                                        t = Y.objs.yData,
                                        a = Y.objs.yOptData;
                                    return t.length ? t[0].name == d && t[1] && t[1].compare_names ? e = t[1].compare_names.length : t[0].compare_names && (e = t[0].compare_names.length || e) : a.length && a[0].compare_names && (e = a[0].compare_names.length), e
                                },
                                fixXVal: function (e, t) {
                                    var a, i = t.data_type;
                                    if (!e) return F;
                                    if ("date" === i) {
                                        g = t.granularity || "day";
                                        var n = t.granularity_name || F,
                                            r = t.month_start_day || 0;
                                        "hour" !== g && "minute" !== g && "second" !== g || (g = "g_" + g), "week" === g && (r = t.week_start_day_of_week || 1), ["(空白)", "(Blank)"].indexOf(e) > -1 ? a = e : (a = bdpChart.helper.checkGranularity(g, e, n, r), "week" === g && (a += "（" + Highcharts.dateFormat("%b/%e", new Date(e)) + "~" + Highcharts.dateFormat("%b/%e", new Date(e + 5184e5)) + "）"))
                                    } else "sub_date" == i ? (g = t.fid.split("_")[1], a = bdpChart.helper.subDateFormat(g, e)) : a = e;
                                    return a = a ? a.toString() : F
                                },
                                fixYVal: function (e, t, a) {
                                    return e ? bdpChart.helper.dataLabelFormatter(t, e, a) : "--"
                                },
                                setColSummarySpan: function (e) {
                                    var t = Y.objs.colSummaryRange;
                                    if (t && !$.isEmptyObject(t)) {
                                        var a = Y.objs.sheet,
                                            i = Y.objs.pinIndex,
                                            n = Y.objs.viewport,
                                            r = Y.objs.xLen,
                                            o = i > 0 && i < r ? i : r,
                                            s = r - o,
                                            l = a.getSpans(t, n);
                                        Y.objs.removeSpan(l, n), o > 0 && a.addSpan(e, 0, 1, o, n), s > 0 && a.addSpan(e, i, 1, s, n)
                                    }
                                },
                                getAlignment: function (e, t) {
                                    var a, i, n, r = Y.objs.data,
                                        o = r[e][t],
                                        s = r.y.length,
                                        l = t + 1 - s;
                                    return o = "y" === e && l > 0 && !o ? Y.objs.getFixYOptItem(l - 1) : o, a = o.data_type, i = o.alignment_method, n = i || "right", "x" !== e || "string" !== a || i || (n = "left"), Y.objs.hAlign[n]
                                },
                                handleAutoWordwrap: function (e, t) {
                                    for (var a = Y.objs.sheet, i = e.row, n = a.getRowHeight(i), r = a.getCellRect(i, e.col), o = 0, s = Y.objs.getCanvasHeight() / 2, l = (r.height, a.getSpans()), d = function (e, t) {
                                        for (var a = 0; a < l.length; a++) {
                                            var i = l[a];
                                            if (i.contains(e, t) && i.rowCount > 0) return !0
                                        }
                                        return !1
                                    }, c = t ? 1 : Y.objs.getCellLineCount(e), p = 0; p < a.getColumnCount(); p++)
                                        if (!d(i, p)) {
                                            var u = a.getCell(i, p),
                                                h = a.getCellRect(i, p),
                                                f = (h.height, 1);
                                            d(i, p) || (f = Y.objs.getCellLineCount(u), c = Math.max(c, f), o = function (e) {
                                                var t = 0;
                                                return t = e > 1 ? 16 * e + 32 : b, t > s && (t = s), t
                                            }(c))
                                        }
                                    o !== n && (a.suspendPaint(), a.setRowHeight(i, o), a.resumePaint())
                                },
                                getCellLineCount: function (e) {
                                    var t = Y.objs.sheet,
                                        a = Y.objs.viewport,
                                        i = e.cellPadding(),
                                        n = [],
                                        r = e.col,
                                        o = t.getColumnWidth(r),
                                        s = e.value(),
                                        l = Y.objs.getTextWidth(s, a),
                                        d = 0,
                                        c = 0,
                                        p = 0;
                                    return e.value() && Y.objs.checkIsWordwrap(r) ? (i && (n = i.split(" "), d = 1 * n[3], c = 1 * n[1]), p = o - d - c, p = (p < 0 ? l : p) || l, Math.ceil(l / p)) : 1
                                },
                                getFixYOptItem: function (e) {
                                    return Y.objs.data.y_optional[e]
                                },
                                getWarnHitSpan: function (e, t, a, i) {
                                    var n = a,
                                        r = Y.objs.info,
                                        o = Y.objs.xLen,
                                        s = r.tb_statistic,
                                        l = (s.col, Y.objs.isFlipped);
                                    if (Y.objs.warnHitSpan = Y.objs.warnHitSpan || [], e.hasOwnProperty("warn_data")) {
                                        1 === (e.warn_data || [])[t] && (l ? Y.objs.warnHitSpan.push({
                                            row: i.row,
                                            col: n
                                        }) : Y.objs.warnHitSpan.push({
                                            row: n,
                                            col: i.col
                                        }))
                                    }
                                },
                                getCellStyleSpan: function (e, t, a, i) {
                                    var n = a,
                                        r = a,
                                        o = Y.objs.info,
                                        s = Y.objs.xLen,
                                        l = o.tb_statistic,
                                        d = (l.col, Y.objs.isFlipped);
                                    if (Y.objs.cellStyleHitSpan = Y.objs.cellStyleHitSpan || [], e.hasOwnProperty("cell_styles")) {
                                        var c = e.cell_styles || [];
                                        null == c[t] || $.isEmptyObject(c[t]) || (i.cellStyles = c[t], d ? Y.objs.cellStyleHitSpan.push({
                                            row: i.row,
                                            col: n,
                                            cellStyles: c[t]
                                        }) : Y.objs.cellStyleHitSpan.push({
                                            row: e.fid.indexOf("summary") >= 0 ? r : n,
                                            col: i.col,
                                            cellStyles: c[t]
                                        }))
                                    }
                                },
                                getCellDrillData: function (e, t, a, i) {
                                    var n = i.is_drill,
                                        r = i.level_fields,
                                        o = i.drill_level;
                                    e.data_type;
                                    null !== t && void 0 !== t || (t = "");
                                    var s = {
                                        isDrill: !1,
                                        drillValue: ""
                                    };
                                    return n && e.fid === r[o].fid && (s = {
                                        isDrill: !0,
                                        drillValue: {
                                            val: t,
                                            text: a
                                        }
                                    }), s
                                },
                                getTextWidth: function (e, t) {
                                    var a = document.createElement("canvas"),
                                        i = a.getContext("2d");
                                    i.font = t === Y.objs.colHeader ? w : y;
                                    var n = i.measureText(e).width;
                                    return a = null, i = null, n
                                },
                                getCellOriginBgColor: function (e, t, a) {
                                    var i = Y.objs.isFlipped;
                                    if (e === Y.objs.colHeader) return r;
                                    if (i) {
                                        if ("x" === t) return r;
                                        if ((a + 1) % 2 == 0) return n;
                                        if (!q) return "#313449"
                                    }
                                },
                                exportDashConfig: function () {
                                    var e = Y.objs.canvas;
                                    $(e).hasClass("chart-canvas") || $(e).addClass("chart-canvas")
                                },
                                hideTip: function () {
                                    var e = Y.objs.descTipEle;
                                    e && (e.style.display = "none")
                                },
                                isFrameSelection: function () {
                                    var e, t = Y.objs.sheet,
                                        a = t.getSpans(),
                                        i = t.getSelections();
                                    if (!i || !i.length) return !1;
                                    if (e = i[0], 1 == e.colCount && 1 == e.rowCount) return !1;
                                    for (var n = 0, r = a.length; n < r; n++)
                                        if (angular.equals(a[n], i[0])) return !1;
                                    return !0
                                },
                                isSingleSelection: function () {
                                    var e = Y.objs.sheet,
                                        t = e.getSelections();
                                    return !(!t || !t.length || Y.objs.isFrameSelection())
                                },
                                mergeViewport: function (e, t) {
                                    var a = Y.objs.sheet,
                                        i = Y.objs.viewport,
                                        n = {},
                                        r = 1,
                                        o = 0,
                                        s = Y.objs.isMergeCell,
                                        l = Y.objs.yData,
                                        d = Y.objs.isFlipped;
                                    if (s)
                                        for (var c = 0; c < t; c++)
                                            for (var p = 0; p < e; p++) {
                                                var u = a.getCell(p, c).text(),
                                                    h = a.getCell(p - 1, c).text(),
                                                    f = h && u === h && (0 === c || $.inArray(p, n[c - 1]) > -1);
                                                if (d && l[p].fid === A && (f = !1), f && ["(空白)", "(Blank)"].indexOf(u) >= 0 && ["(空白)", "(Blank)"].indexOf(h) >= 0 && u === h && (f = !1), f) {
                                                    var g = a.getCell(o, c);
                                                    a.addSpan(o, c, ++r, 1, i), n[c] = n[c] || [], n[c].push(p), g.vAlign(Y.objs.vAlign.top), g.cellPadding(Y.objs.fixCellPadding(g, {
                                                        top: (a.getRowHeight(p) - 16) / 2
                                                    })), a.getRange(o, c, r, 1, i).backColor(v)
                                                } else r = 1, o = p
                                            }
                                },
                                removeSpan: function (e, t) {
                                    for (var a = Y.objs.sheet, i = 0; i < e.length; i++) {
                                        var n = e[i];
                                        a.removeSpan(n.row, n.col, t)
                                    }
                                },
                                removeViewportSpan: function () {
                                    var e = Y.objs.sheet,
                                        t = Y.objs.viewport,
                                        a = e.getSpans();
                                    Y.objs.removeSpan(a, t)
                                },
                                removeHeaderSpan: function () {
                                    var e = Y.objs.sheet,
                                        t = Y.objs.colHeader,
                                        a = e.getSpans(Y.objs.headerRowRange, t);
                                    Y.objs.removeSpan(a, t)
                                },
                                removeAllSpan: function () {
                                    Y.objs.removeHeaderSpan(), Y.objs.removeViewportSpan()
                                },
                                destroy: function () {
                                    Y.objs.subtotalRanges = [], Y.objs.warnHitSpan = [], Y.objs.cellStyleHitSpan = [], Y.objs.autoWordwrapCellCache = [], Y.objs.startIndex = 0, Y.objs.pageNum = 1, Y.objs.endIndex = 0, Y.objs.totalNum = 0
                                },
                                redraw: function (e) {
                                    Y.objs.spread.destroy(), Y.objs.destroy(), Y.objs.data = e.data, Y.objs.info = e.info, ee()
                                },
                                customCell: {
                                    init: function () {
                                        Y.objs.ColumnItemsCellType = this.cellIconType()
                                    },
                                    setHeaderCellType: function (e, t, a, i) {
                                        var n = Y.objs.sheet,
                                            r = Y.objs.colHeader,
                                            o = Y.objs.ColumnItemsCellType;
                                        $.isPlainObject(i) && t === i.col && e === i.row || ($.isPlainObject(i) && (a.pinType = L), n.setCellType(e, t, new o(a), r))
                                    },
                                    cellIconType: function () {
                                        function t(e) {
                                            this.SORT_ASC_ICON_LIGHT = "/static/images/chart-table/asc-sort-arrow-light.svg", this.SORT_ASC_ICON_DARK = "/static/images/chart-table/asc-sort-arrow-dark.svg", this.SORT_DESC_ICON_LIGHT = "/static/images/chart-table/desc-sort-arrow-light.svg", this.SORT_DESC_ICON_DARK = "/static/images/chart-table/desc-sort-arrow-dark.svg", this.SORT_ICON_DESC_PREFIX = "SORT_DESC_ICON_", this.SORT_ICON_ASC_PREFIX = "SORT_ASC_ICON_", this.PIN_GREY_ICON_LIGHT = "/static/images/chart-table/pin-gray-light.svg", this.PIN_GREY_ICON_DARK = "/static/images/chart-table/pin-gray-dark.svg", this.PIN_BLUE_ICON_LIGHT = "/static/images/chart-table/pinned-blue-light.svg", this.PIN_BLUE_ICON_DARK = "/static/images/chart-table/pinned-blue-dark.svg", this.PIN_ICON_GREY_PREFIX = "PIN_GREY_ICON_", this.PIN_ICON_BLUE_PREFIX = "PIN_BLUE_ICON_", this.WARN_ICON_LIGHT = "/static/images/chart-table/warn-icon-light.svg", this.WARN_ICON_DARK = "/static/images/chart-table/warn-icon-dark.svg", this.HREF_ICON_LIGHT = "/static/images/chart-table/href-light.svg", this.HREF_ICON_DARK = "/static/images/chart-table/href-dark.svg", this.ICON_SIZE = 16, this.sortState = e.type, this.sortStateUC = e.type && e.type.toUpperCase(), this.sortIconSrc = this[this["SORT_ICON_" + this.sortStateUC + "_PREFIX"] + R], this.pinState = e.pinType, this.pinStateUC = e.pinType && e.pinType.toUpperCase(), this.pinIconSrc = this[this["PIN_ICON_" + this.pinStateUC + "_PREFIX"] + R], this.warnIconSrc = this["WARN_ICON_" + R], this.hrefIconSrc = this["HREF_ICON_" + R], this.cell = e.cell, this.canvas = Y.objs.canvas, this.cellInfo = e, this.textWidth = Y.objs.getTextWidth(e.value, e.sheetType), this.sheetType = e.sheetType, this.isColheader = e.sheetType === o, r.apply(this)
                                        }
                                        var a = Y.objs.spreadNS,
                                            i = Y.objs.sheet,
                                            n = Y.objs.underlineStyle,
                                            r = a.CellTypes.Base,
                                            o = Y.objs.colHeader,
                                            s = (Y.objs.viewport, {});
                                        return t.prototype = new r, t.prototype.paint = function (e, t, a, n, s, l, d, c) {
                                            if (e) {
                                                var p = c.row,
                                                    u = c.col,
                                                    h = this.textWidth,
                                                    f = (Y.objs.xLen, Y.objs.colHeaderCount),
                                                    g = i.getRange(0, u, f, 1, o),
                                                    m = i.getSpans(g, o),
                                                    _ = Y.objs.isAdvancedSort,
                                                    v = Y.objs.isFlipped,
                                                    b = p === f || m.length && m[0].rowCount === f && s > h + 2 * this.ICON_SIZE + 2 * (this.ICON_SIZE - 4),
                                                    y = 1 * _ == 0,
                                                    w = function (e) {
                                                            var t = e.drill_level,
                                                                a = e.warn,
                                                                i = e.warn_info;
                                                            return 0 == t && 1 === a && !!i.length
                                                        }(Y.objs.info) && function (e) {
                                                            if (!e) return !1;
                                                            for (var t = 0, a = e.length; t < a; t++)
                                                                if (1 === Number(e[t])) return !0;
                                                            return !1
                                                        }(this.cellInfo.warnData),
                                                    C = this._canShowImgHref();
                                                r.prototype.paint.apply(this, arguments), w && this._paintWarnIcon(e, t, a, n, s, l, d, c), C && (C.icon || C.img) && this._paintImgHrefIcon(e, t, a, n, s, l, d, c), v || this.isColheader && ("processMouseMove" === this.state || "processMouseUp" === this.state ? (this.sortState !== T || this.sortIconSrc || (this.sortIconSrc = this[this.SORT_ICON_DESC_PREFIX + R]), this.pinState !== T || this.pinIconSrc || (this.pinIconSrc = this[this.PIN_ICON_GREY_PREFIX + R]), y && this._paintSortIcon(e, t, a, n, s, l, d, c), b && this._paintPinIcon(e, t, a, n, s, l, d, c)) : (this.sortState !== T && this.sortIconSrc && y && this._paintSortIcon(e, t, a, n, s, l, d, c), this.pinIconSrc && this.pinState === I && b && this._paintPinIcon(e, t, a, n, s, l, d, c)))
                                            }
                                        }, t.prototype.getHitInfo = function (e, t, a, n, r) {
                                            var o = this.ICON_SIZE,
                                                s = n.x + n.width - 4,
                                                l = n.y + n.height / 2,
                                                d = n.x + n.width / 2,
                                                c = this.textWidth / 2,
                                                p = this.cell.cellPadding(),
                                                u = this.cell.hAlign(),
                                                h = null,
                                                f = null,
                                                g = !1,
                                                m = !1;
                                            p && (h = 1 * p.split(" ")[3], f = 1 * p.split(" ")[0], p.split(" ")[1]);
                                            var _ = {
                                                x: e,
                                                y: t,
                                                row: r.row,
                                                col: r.col,
                                                cellRect: n,
                                                sheetArea: r.sheetArea,
                                                sheet: r.sheet,
                                                padding: {
                                                    left: h,
                                                    top: f
                                                }
                                            };
                                            this.cell = i.getCell(_.row, _.col, _.sheetArea);
                                            var v = Y.objs.cellLayer.getTextHeight(this.cell);
                                            if (g = h ? e >= n.x && e <= this.textWidth + n.x : Math.abs(e - d) <= c, m = f ? t >= n.y && t <= v + n.y : Math.abs(t - l) <= v / 2, Math.abs(e - s) <= o && Math.abs(t - l) <= o && n.width > this.textWidth + 2 * o + 2 * (o - 4) && (_.isPinReservedLocation = !0), g && m && (_.isTextReservedLocation = !0), 2 == u) {
                                                var b = n.x + n.width - this.textWidth - 4,
                                                    y = n.x + n.width;
                                                _.isTextReservedLocation = e >= b && e <= y && m
                                            }
                                            return e <= n.x + n.width && e >= n.x && (_.isReservedLocation = !0), _
                                        }, t.prototype.processMouseEnter = function (e) {
                                            this.state = "processMouseEnter";
                                            var t = this._canShowImgHref();
                                            t && t.img && this._handleImgUrl(e, "in")
                                        }, t.prototype.processMouseMove = function (e) {
                                            this.state = "processMouseMove", this._checkSetPointer(e) ? this._setPointer() : this._setCursorDefault(), this._canShowDesc(e) && this._handleDesc(e), this._canDrillDown() && this._handleDrillDown(e, "in");
                                            var t = this._canShowImgHref();
                                            t && t.img && this._handleImgUrl(e, "in")
                                        }, t.prototype.processMouseUp = function (e) {
                                            this.state = "processMouseUp";
                                            var t = Y.objs.isFrameSelection();
                                            if (this.isColheader || !t) {
                                                if (this.isColheader && i.clearSelection(), e.isPinReservedLocation && !Y.objs.isFlipped && this.pinState && this.isColheader) return void this._handlePin(e);
                                                if (!Y.objs.isFlipped && this.isColheader) return void this._handleSort();
                                                this._hasLink(e) && this._handleLink(e), this._canJump(e) && this._handleJump(e), this._canDrillDown() && this._handleDrillDown(e, "click");
                                                var a = this._canShowImgHref();
                                                a && (a.icon || a.img) && this._handleImgUrl(e, "click")
                                            }
                                        }, t.prototype.processMouseDown = function (e) {
                                            this.isColheader ? i.clearSelection() : e.isReservedLocation = !1
                                        }, t.prototype.processMouseLeave = function (e) {
                                            this.state = "processMouseLeave", this._hideTip(), this._canDrillDown() && this._handleDrillDown(e, "out");
                                            var t = this._canShowImgHref();
                                            t && (t.icon || t.img) && this._handleImgUrl(e, "out")
                                        }, t.prototype.getAutoFitWidth = function (e, t, a, i, n, r) {
                                            var o = this.textWidth;
                                            return Y.objs.isFlipped ? o + this.ICON_SIZE : o + U
                                        }, t.prototype._paintSortIcon = function (e, t, a, i, n, r, s, l) {
                                            function d(e) {
                                                f && f.setTag(u, h, $.extend({}, g, e), o)
                                            }
                                            var c = this,
                                                p = this.textWidth,
                                                u = l.row,
                                                h = l.col,
                                                f = l.sheet,
                                                g = f.getTag(u, h, o),
                                                m = this.cell.cellPadding(),
                                                _ = 0,
                                                v = 0,
                                                b = this.sortIconSrc;
                                            if (m ? (_ = 1 * m.split(" ")[3], v = _ + p + 4) : v = (p + n) / 2, !(n < p + 2 * this.ICON_SIZE - 2))
                                                if (g && g.sortImg && this.sortState === g.sortState) e.drawImage(g.sortImg, a + v, i + (r - this.ICON_SIZE) / 2 + 1, this.ICON_SIZE, this.ICON_SIZE);
                                                else {
                                                    var y = c.sortState;
                                                    this._initCustomCellIcon({
                                                        type: "sort",
                                                        src: b,
                                                        state: y
                                                    }, d)
                                                }
                                        }, t.prototype._handleSort = function () {
                                            var t = this.cellInfo,
                                                a = Y.objs.drillLevel;
                                            switch (this.sortState) {
                                                case T:
                                                    this.sortState = "desc";
                                                    break;
                                                case "asc":
                                                    this.sortState = T;
                                                    break;
                                                case "desc":
                                                    this.sortState = "asc"
                                            }
                                            var i = this.sortState === T ? F : this.sortState,
                                                n = {
                                                    axis: t.axis,
                                                    type: i,
                                                    fid: t.fid,
                                                    uniq_id: t.uniqId,
                                                    col_index: t.colIndex
                                                };
                                            if (H) e.emit("saveWithOpt", a, {
                                                sort: n,
                                                is_advanced_sort: 0
                                            });
                                            else {
                                                var r = {
                                                    sort: JSON.stringify(n),
                                                    is_advanced_sort: 0
                                                };
                                                e.requestData(r).then(function (t) {
                                                    t && (0 == t.status ? (Y.objs.redraw(t.result), e.emit("data-loaded")) : errorHandle(t))
                                                }), e.emit("dashboard_click_sort")
                                            }
                                        }, t.prototype._paintPinIcon = function (e, t, a, n, r, s, l, d) {
                                            var c = this,
                                                p = this.textWidth,
                                                u = d.row,
                                                h = d.col,
                                                f = i.getTag(u, h, o);
                                            if (!(r < p + 2 * this.ICON_SIZE + 2 * (this.ICON_SIZE - 4)))
                                                if (f && f.pinImg && this.pinState === f.pinState) e.drawImage(f.pinImg, a + r - this.ICON_SIZE - 4, n + (s - this.ICON_SIZE) / 2 + 1, this.ICON_SIZE, this.ICON_SIZE);
                                                else {
                                                    var g = new Image;
                                                    g.onload = function () {
                                                        i.setTag(u, h, $.extend({}, f, {
                                                            pinImg: g,
                                                            pinState: c.pinState
                                                        }), o), i.repaint()
                                                    }, g.src = this.pinIconSrc
                                                }
                                        }, t.prototype._paintWarnIcon = function (e, t, a, n, r, o, s, l) {
                                            function d(e) {
                                                i && i.setTag(p, u, $.extend({}, x, e), h)
                                            }
                                            var c = this.textWidth,
                                                p = l.row,
                                                u = l.col,
                                                h = this.sheetType,
                                                f = this.cell.cellPadding(),
                                                g = 0,
                                                m = 0,
                                                _ = 0,
                                                v = 0,
                                                b = Y.objs.isFlipped,
                                                y = this.warnIconSrc;
                                            if (f && !b) {
                                                var w = 1 * f.split(" ")[3];
                                                m = 0 - this.ICON_SIZE - 4, g = w
                                            } else g = 0, m = r / 2 - c / 2 - this.ICON_SIZE - 4;
                                            if (f && b) {
                                                var C = 1 * f.split(" ")[0];
                                                v = C ? C + 1 : (o - this.ICON_SIZE) / 2 + 1, _ = v
                                            } else _ = (o - this.ICON_SIZE) / 2 + 1;
                                            if (!(r < c + 2 * (g - m + this.ICON_SIZE))) {
                                                var x = i.getTag(p, u, h);
                                                x && x.warnImg ? e.drawImage(x.warnImg, a + g + m, n + _, this.ICON_SIZE, this.ICON_SIZE) : this._initCustomCellIcon({
                                                    type: "warn",
                                                    src: y
                                                }, d)
                                            }
                                        }, t.prototype._paintImgHrefIcon = function (e, t, a, n, r, o, s, l) {
                                            function d(e) {
                                                i && i.setTag(c, p, $.extend({}, D, e), u)
                                            }
                                            var c = l.row,
                                                p = l.col,
                                                u = this.sheetType,
                                                h = this.cellInfo,
                                                f = Y.objs.isFlipped,
                                                g = "",
                                                m = 0,
                                                _ = 0,
                                                v = 0,
                                                b = 0,
                                                y = this.cell.cellPadding(),
                                                w = 0;
                                            y && !f && (w = 1 * y.split(" ")[0]);
                                            var C = "href";
                                            if (h && "img" == h.showType && M.test(h.value)) {
                                                var x = document.createElement("img");
                                                x.src = h.value;
                                                var k = parseInt(x.width) * (20 / parseInt(x.height));
                                                g = x.src, m = a + 16, _ = n + (o - 20) / 2 + 1, v = k, b = 20, x = null, C = "img"
                                            } else h.showType && "img" == h.showType || (g = this.hrefIconSrc,
                                                m = a + this.ICON_SIZE, _ = w ? n + w + 1 : n + (o - this.ICON_SIZE) / 2 + 1, v = this.ICON_SIZE, b = this.ICON_SIZE);
                                            var D = i.getTag(c, p, u);
                                            D && D.hrefImg ? e.drawImage(D.hrefImg, m, _, v, b) : this._initCustomCellIcon({
                                                type: C,
                                                src: g
                                            }, d)
                                        }, t.prototype._initCustomCellIcon = function (e, t) {
                                            if (!e) return !1;
                                            var a = e || {},
                                                n = a.type,
                                                r = a.src,
                                                o = a.state;
                                            if ("warn" == n && (x ? t({
                                                    warnImg: x
                                                }) : (x = new Image, x.onload = function () {
                                                    t({
                                                        warnImg: x
                                                    }), i.repaint()
                                                }, x.src = r)), "href" == n && (k ? t({
                                                    hrefImg: k
                                                }) : (k = new Image, k.onload = function () {
                                                    t({
                                                        hrefImg: k
                                                    }), i.repaint()
                                                }, k.src = r)), "img" == n && (k = new Image, k.onload = function () {
                                                    t({
                                                        hrefImg: k
                                                    }), i.repaint()
                                                }, k.src = r), "sort" == n) {
                                                var s = void 0;
                                                s ? t({
                                                    sortImg: s,
                                                    sortState: o
                                                }) : (s = new Image, s.onload = function () {
                                                    t({
                                                        sortImg: s,
                                                        sortState: o
                                                    }), i.repaint()
                                                }, s.src = r)
                                            }
                                        }, t.prototype._handlePin = function (t) {
                                            var a = (this.cellInfo, Y.objs.drillLevel),
                                                i = (Y.objs.spread, t.row),
                                                n = t.col,
                                                r = 0,
                                                o = {
                                                    row: i,
                                                    col: n
                                                };
                                            switch (this.pinState) {
                                                case L:
                                                    this.pinState = I, r = n + 1, Y.objs.pinIndex = r;
                                                    break;
                                                case I:
                                                    this.pinState = L, Y.objs.pinIndex = 0
                                            }
                                            this.pinStateUC = this.pinState.toUpperCase(), this.pinIconSrc = this[this["PIN_ICON_" + this.pinStateUC + "_PREFIX"] + R], H && e.emit("saveWithOpt", a, {
                                                tb_pinned_index: r
                                            }, {
                                                not_need_redraw: !0
                                            }), e.emit("pin", {
                                                exceptObj: o
                                            })
                                        }, t.prototype._handleDesc = function (e) {
                                            e.isTextReservedLocation ? (this.cell.textDecoration("none"), this._showTip(e)) : (this.cell.textDecoration(n), this._hideTip(e))
                                        }, t.prototype._handleJump = function (t) {
                                            var a = this.cellInfo.value;
                                            this._setPointer(), e.emit("jumpToOtherDash", a, e)
                                        }, t.prototype._handleLink = function (t) {
                                            var a = this.cellInfo,
                                                i = a.orignVal,
                                                n = this.cell,
                                                r = t.row,
                                                o = t.col,
                                                l = Y.objs.isFlipped ? r - 1 : o,
                                                d = n.backColor(),
                                                c = s[l],
                                                p = Y.objs.getCellOriginBgColor(this.sheetType, a.axis, r);
                                            c && c.backColor(p), d === O ? (n.backColor(p), delete e.pointData[l]) : (n.backColor(O), e.pointData[l] = i), s[l] = this.cell, e.emit("refreshLinkedCharts", i, e)
                                        }, t.prototype._handleDrillDown = function (t, a) {
                                            var i = {
                                                    x: t.cellRect.x,
                                                    y: t.cellRect.y
                                                },
                                                r = t.x + 16 - i.x,
                                                o = t.y - i.y,
                                                s = !!t.isTextReservedLocation,
                                                l = this.cellInfo;
                                            if ("img" == l.showType && M.test(l.value) && (s = o >= 10 && o <= 30 && r >= -2 && r <= 20), s && ["in", "click"].indexOf(a) >= 0) {
                                                if (this.cell.textDecoration("none"), this._setPointer(), "click" == a) {
                                                    this.toggleCellImgLayer(t, "hide");
                                                    var d = this.cellInfo.drillData.drillValue,
                                                        c = {
                                                            val: d.val,
                                                            text: d.text
                                                        };
                                                    e.emit("drilldown", c, e)
                                                }
                                            } else this.cell.textDecoration(n), this._setCursorDefault()
                                        }, t.prototype._handleImgUrl = function (e, t) {
                                            if (!Y || !Y.objs) return !1;
                                            var a = {
                                                    x: e.cellRect.x,
                                                    y: e.cellRect.y
                                                },
                                                i = e.x + 16 - a.x,
                                                n = e.y - a.y,
                                                r = Y.objs.isFlipped,
                                                o = this.cell.cellPadding() || " 0 0 0 0",
                                                s = 0,
                                                l = 0;
                                            o && !r && (s = 1 * o.split(" ")[0], n = e.y - a.y + s, s && (l = s - 8));
                                            var d = !1,
                                                c = this.cellInfo;
                                            d = "img" == c.showType && M.test(c.value) ? n >= 10 + l && n <= 30 + l && i >= -2 && i <= 20 : s ? n >= 9 + l && n <= 25 + l && i >= 0 && i <= 14 : n > (e.cellRect.height - this.ICON_SIZE) / 2 && n < (e.cellRect.height + this.ICON_SIZE) / 2 && i >= 0 && i <= 14, "out" == t && (d = !1), d ? (this._setPointer(), "click" == t && "img" != c.showType ? window.open(this.cellInfo.value, "target") : "img" == c.showType && this.toggleCellImgLayer(e, "show")) : (this._setCursorDefault(), this.toggleCellImgLayer(e, "hide"))
                                        }, t.prototype.toggleCellImgLayer = function (e, t) {
                                            if (Y) {
                                                var a = $(this.canvas).offset(),
                                                    i = null;
                                                if ("hide" == t) return i = Y.objs.imgPreviewEle, i && (i.style.display = "none"), !1;
                                                if (!Y.objs.imgPreviewEle) {
                                                    var n = document.createElement("img");
                                                    n.id = "img-preview-ele", document.body.insertBefore(n, null), Y.objs.imgPreviewEle = n
                                                }
                                                i = Y.objs.imgPreviewEle, i.src = this.cellInfo.value;
                                                var r = i.style;
                                                r.position = "absolute", r.zIndex = 1e4, r.maxWidth = "100px";
                                                var o = $(i).outerWidth(),
                                                    s = $(i).height();
                                                r.top = a.top + e.cellRect.y + e.cellRect.height / 2 - s / 2 + "px", r.left = a.left + e.cellRect.x + o / 2 + "px", i.style.display = "block"
                                            }
                                        }, t.prototype._showTip = function (e) {
                                            var t = $(this.canvas).offset();
                                            if (!Y.objs.descTipEle) {
                                                var a = document.createElement("span");
                                                a.className = "tbTipBox", document.body.insertBefore(a, null), Y.objs.descTipEle = a
                                            }
                                            var i = Y.objs.descTipEle,
                                                n = i.style;
                                            i.textContent = this.cellInfo.desc;
                                            var r = $(i).outerWidth(),
                                                o = $(i).height(),
                                                s = e.padding.left ? (this.textWidth - r) / 2 : (e.cellRect.width - r) / 2,
                                                l = e.padding.top ? this.ICON_SIZE / 2 - o : e.cellRect.height / 2 - o;
                                            n.top = t.top + e.cellRect.y + l - 2 * this.ICON_SIZE - 4 + "px", n.left = t.left + e.cellRect.x + s + "px", i.style.display = "block"
                                        }, t.prototype._hideTip = Y.objs.hideTip, t.prototype._checkSetPointer = function (e) {
                                            return !!this._canShowDesc(e) || (!!this._hasLink(e) || (!!this._canJump(e) || (!(!this.isColheader || Y.objs.isFlipped) || void 0)))
                                        }, t.prototype._canShowDesc = function (e) {
                                            var t = this.cellInfo,
                                                a = t.desc,
                                                i = Y.objs.isFlipped;
                                            if (a && (i || "y" !== this.cellInfo.axis || 1 === e.row) && (!i || "y" !== this.cellInfo.axis || 0 == e.col)) return !0
                                        }, t.prototype._canJump = function (e) {
                                            var t = this.cellInfo,
                                                a = t.jumpInfo,
                                                i = e.col,
                                                n = e.row,
                                                r = Y.objs.isFlipped,
                                                o = r ? n - 1 : i;
                                            if (!H && a && a.fid === t.fid && a.f_index == o) return !0
                                        }, t.prototype._hasLink = function (e) {
                                            var t = this.cellInfo,
                                                a = e.col,
                                                i = e.row,
                                                n = Y.objs.isFlipped,
                                                r = n ? i - 1 : a;
                                            if (n) {
                                                if (!this.isColheader) return !1;
                                                if ("x" === t.axis) return
                                            }
                                            if (!H && !Y.objs.isDrill && $.inArray(r, Y.objs.linkDimensionIndexCache) > -1) return !0
                                        }, t.prototype._canDrillDown = function (e) {
                                            var t = this.cellInfo;
                                            if (t.drillData && t.drillData.isDrill) return !0
                                        }, t.prototype._canShowImgHref = function (e) {
                                            var t = this.cellInfo,
                                                a = t.value;
                                            return !a || "http://" !== a.toString().substr(0, 7) && "https://" !== a.toString().substr(0, 8) || "string" != t.dataType ? {
                                                icon: !1,
                                                img: !1
                                            } : "img" == t.showType && M.test(a) ? {
                                                icon: !1,
                                                img: !0
                                            } : {
                                                icon: !0,
                                                img: !1
                                            }
                                        }, t.prototype._setPointer = function () {
                                            this.canvas.style.cursor = "pointer"
                                        }, t.prototype._setCursorDefault = function () {
                                            this.canvas.style.cursor = "default"
                                        }, t
                                    }
                                },
                                lazyLoad: function () {
                                    var e = Y.objs.sheet,
                                        t = e.getRowCount(),
                                        a = e.getViewportBottomRow(1),
                                        i = Y.objs.endIndex,
                                        n = Y.objs.totalDataLen,
                                        r = Y.objs.totalNum,
                                        o = Y.objs.viewport;
                                    t >= n + r || Y.objs.isFlipped || a === t - 1 && (e.suspendPaint(), Y.objs.removeViewportSpan(), e.addRows(t, 30), Y.objs.pageNum = ++Y.objs.pageNum, Y.objs.startIndex = i, Y.objs.drawViewport(!0), Y.objs.viewportRange = e.getRange(0, -1, e.getRowCount(), -1, o), Y.objs.rightSpaceLock = !1, Y.objs.setStyles({
                                        lazyLoad: !0,
                                        range: e.getRange(t, -1, 30 + r + 1, -1, o)
                                    }), e.resumePaint(), Y.objs.autoFitLastColumn(), Y.objs.resetHScrollBar(!0))
                                },
                                checkIsWordwrap: function (e) {
                                    var t = Y.objs.xLen,
                                        a = Y.objs.xData,
                                        i = Y.objs.isFlipped,
                                        n = (Y.objs.yData, Y.objs.compareData || []),
                                        r = null;
                                    if (i) {
                                        if (e > Y.objs.colHeaderCount - 1) return;
                                        r = n[e] || {}
                                    } else {
                                        if (e > t - 1) return;
                                        r = a[e]
                                    }
                                    return r.is_auto_wordwrap
                                },
                                getWidthOptsKey: function (e) {
                                    if (Y.objs.isFlipped) return e;
                                    var t = Y.objs.xLen,
                                        a = Y.objs.xData,
                                        i = Y.objs.yData,
                                        n = e > t - 1 ? i[e - t] : a[e],
                                        r = n.fid,
                                        o = n.uniq_id || F,
                                        s = F;
                                    return n.compare_names && (s = n.compare_names.join("_")), r + o + s
                                },
                                handleRightSpaceOptimize: function () {
                                    if (!Y.objs.rightSpaceLock) {
                                        for (var e = Y.objs.sheet, t = (Y.objs.spreadNS, e.getColumnCount()), a = 0, i = Y.objs.getCanvasWidth(), n = e.getViewportLeftColumn(1), r = t - 1; r >= n; r--) {
                                            a += e.getColumnWidth(r)
                                        }
                                        a < i && e.setColumnWidth(t - 1, i - a + e.getColumnWidth(t - 1) - 2)
                                    }
                                },
                                fixCellPadding: function (e, t) {
                                    var a = e.cellPadding() || "0 0 0 0",
                                        i = a.split(" ");
                                    return t.top && (i[0] = t.top), t.left && (i[3] = t.left), i.join(" ")
                                },
                                fixViewportPos: function () {
                                    var e = Y.objs.sheet,
                                        t = e.getViewportTopRow(1),
                                        a = Y.objs.isFlipped ? Y.objs.colHeaderCount : Y.objs.xLen;
                                    e.suspendPaint();
                                    for (var i = 0; i < a; i++) {
                                        var n = e.getRange(t, i, 1, 1),
                                            r = e.getSpans(n),
                                            o = r[0];
                                        if (0 !== r.length) {
                                            var s = o.row,
                                                l = e.getCell(s, i),
                                                d = function (t, a) {
                                                    for (var i = 0, n = t; n < a; n++) i += e.getRowHeight(n);
                                                    return i
                                                }(s, t),
                                                c = e.getRowHeight(t),
                                                p = d + (c - 16) / 2,
                                                u = Y.objs.fixCellPadding(l, {
                                                    top: p
                                                });
                                            l.cellPadding(u)
                                        }
                                    }
                                    e.resumePaint()
                                },
                                fixColHeaderPos: function () {
                                    if (!Y.objs.isFlipped) {
                                        var e = Y.objs.sheet,
                                            t = Y.objs.colHeader,
                                            a = e.getViewportLeftColumn(1),
                                            i = Y.objs.xLen,
                                            n = Y.objs.yLen,
                                            r = Y.objs.colHeaderRealCount - 1;
                                        if (a = a < i ? i : a, !(n > 0 && Y.objs.yData[a - i].fid === A)) {
                                            e.suspendPaint();
                                            for (var o = 1; o < r; o++) {
                                                var s = e.getRange(o, a, 1, 1, t),
                                                    l = e.getSpans(s, t),
                                                    d = l[0];
                                                if (0 !== l.length) {
                                                    var c = d.col,
                                                        p = e.getCell(o, c, t),
                                                        u = Y.objs.getTextWidth(p.value(), t),
                                                        h = function (t, a) {
                                                            for (var i = 0, n = t; n < a; n++) i += e.getColumnWidth(n);
                                                            return i
                                                        }(c, a),
                                                        f = e.getColumnWidth(a),
                                                        g = h + (f - u) / 2,
                                                        m = Y.objs.fixCellPadding(p, {
                                                            left: g
                                                        });
                                                    p.cellPadding(m)
                                                }
                                            }
                                            e.resumePaint()
                                        }
                                    }
                                },
                                initCornerTheme: function (e) {
                                    $("#corner_style").length > 0 && $("#corner_style").remove();
                                    var t = Y.objs.cornerStyleDom = document.createElement("style"),
                                        a = ".gc-corner-triangle-normal {border-style:solid;border-left-color: $borderTbHeader !important;border-right-color: $borderTbHeader !important;border-bottom-color: $borderTbHeader !important;border-top-color: $borderTbHeader !important;background-color: $borderTbHeader !important;}";
                                    a = a.replace(/\$borderTbHeader/g, e), t.type = "text/css", t.id = "corner_style", t.styleSheet ? t.styleSheet.cssText = a : t.innerHTML = a, document.getElementsByTagName("head")[0].appendChild(t)
                                },
                                getHitTest: function (e, t) {
                                    var a = Y.objs.sheet,
                                        i = $(Y.objs.canvas).offset(),
                                        n = e - i.left,
                                        r = t - i.top;
                                    return a.hitTest(n, r)
                                },
                                getCellInSelections: function (e, t, a) {
                                    for (var i, n = e.length, r = 0; r < n; r++)
                                        if (i = e[r], i.contains(t, a)) return i;
                                    return null
                                },
                                handleThemeStyleClass: function (e, t) {
                                    return e.removeClass("chart-theme-dark chart-theme-default").addClass("chart-theme-" + t.theme), e.removeClass("display-theme-dark display-theme-light").addClass("display-theme-" + ("default" == t.theme ? "light" : "dark")), e.removeClass("display-device-pc display-device-projector display-device-tv").addClass("display-device-" + t.displayDevice), e
                                },
                                getCellPos: function (e, t) {
                                    for (var a = Y.objs.sheet, i = Y.objs.colHeader, n = $(Y.objs.canvas).offset(), r = 0, o = 0, s = 0, l = Y.objs.isFlipped ? Y.objs.xLen : Y.objs.colHeaderCount, d = Y.objs.pinIndex, c = a.getViewportTopRow(1), p = d > 0 && d > t ? 0 : a.getViewportLeftColumn(1), u = 1, h = l + 1; u < h; u++) s += a.getRowHeight(u, i);
                                    for (var f = c; f < e; f++) r += a.getRowHeight(f);
                                    for (var g = p; g < t; g++) o += a.getColumnWidth(g);
                                    for (m = 0; m < d; m++) t + 1 > d && (o += a.getColumnWidth(m));
                                    return {
                                        left: n.left + o,
                                        top: n.top + s + r
                                    }
                                },
                                menu: {
                                    init: function () {
                                        bdp.loadjs({
                                            callback: Y.objs.menu.destroy,
                                            src: "https://s1.bdp.cn/static/js/lib/clipboard.min_3e5e0fa.js"
                                        })
                                    },
                                    createMenu: function () {
                                        if (Y) {
                                            var e = Y.objs.menu,
                                                t = '<div class="J-menu-wrap cope-menutext-layer" style="display:none;z-index:10000;position:absolute;"><ul class="dropdown-wrap create-op-list"><li><a href="javascript:;" class="dropdown-item J_table_copy" data-action="copy" style="display: block;text-align:center;">' + _ + '</a></li><li><a href="javascript:;" class="dropdown-item J_table_autoFit" data-action="autoFitWidth" style="display: none;text-align:center;">' + S + "</a></li></ul></div>";
                                            e.destroy(), $("body").append(t);
                                            var a = e.getMenuDom();
                                            e.getCopyDom();
                                            a.off("click.contextmenu").on("click.contextmenu", function (e) {
                                                Y.eventFuns.handleContextmenuItem(e)
                                            })
                                        }
                                    },
                                    remove: function () {
                                        $(".J-menu-wrap").remove()
                                    },
                                    show: function (t) {
                                        var a = Y.objs.sheet,
                                            i = Y.objs.menu,
                                            n = Y.objs.widthOpts,
                                            r = null,
                                            o = a.getSelections(),
                                            s = o[0];
                                        i.createMenu(t), Y.objs.handleThemeStyleClass($(".J-menu-wrap"), e), i.getMenuDom().show(), r = i.getAutoFitWidthDom();
                                        for (var l = s.col; l < s.col + s.colCount; l++) {
                                            var d = Y.objs.getWidthOptsKey(l);
                                            if (H && d in n) {
                                                r.css({
                                                    display: "block"
                                                });
                                                break
                                            }
                                        }
                                    },
                                    getMenuDom: function () {
                                        return $(".J-menu-wrap")
                                    },
                                    getCopyDom: function () {
                                        return $(".J_table_copy")
                                    },
                                    getAutoFitWidthDom: function () {
                                        return $(".J_table_autoFit")
                                    },
                                    parseCopyHtml: function (e) {
                                        for (var t = $(e).find("tr"), a = F, i = 0, n = t.length; i < n; i++) {
                                            for (var r = $(t[i]).find("td"), o = 0, s = r.length; o < s; o++) {
                                                a = a + $(r[o]).html() + "\t"
                                            }
                                            a += "\r\n"
                                        }
                                        return a
                                    },
                                    destroy: function () {
                                        if (Y) {
                                            var e = Y.objs.menu,
                                                t = e.getCopyDom();
                                            e.remove(), t.off("click.contextmenu")
                                        }
                                    }
                                },
                                cellLayer: {
                                    hook: null,
                                    create: function (e) {
                                        if (Y) {
                                            var t = Y.objs.cellLayer,
                                                a = '<div class="cell-dom-layer ' + t.hook + '" style="display:none;z-index:10000;position:absolute;"><div class="dropdown-wrap create-op-list J-cell-layer-inner"><div class="J-cell-layer-text">' + e + "</div></div></div>";
                                            $("body").append(a);
                                            Y.objs.cellLayer.getLayerDom().off("click.cellDomLayer").on("click.cellDomLayer", function (e) {
                                                return e.preventDefault(), !1
                                            })
                                        }
                                    },
                                    show: function (t, a) {
                                        var i = Y.objs.sheet,
                                            n = t.value(),
                                            r = Y.objs.cellLayer,
                                            o = null,
                                            s = null;
                                        return r.hook = a, r.remove(), r.create(n), o = r.getLayerDom(), Y.objs.handleThemeStyleClass($("." + a), e), s = "J-cell-layer" === a, s && i.clearSelection(), o.show(), r.setSize(t, s), r
                                    },
                                    destroy: function () {
                                        var e = $(".cell-dom-layer");
                                        e.off("click.cellDomLayer"), e.remove()
                                    },
                                    remove: function () {
                                        Y.objs.cellLayer.getLayerDom().remove()
                                    },
                                    getLayerDom: function () {
                                        return $("." + Y.objs.cellLayer.hook)
                                    },
                                    getLayerInnerDom: function () {
                                        return Y.objs.cellLayer.getLayerDom().find(".J-cell-layer-inner")
                                    },
                                    getLayerTextDom: function () {
                                        return Y.objs.cellLayer.getLayerDom().find(".J-cell-layer-text")
                                    },
                                    setPos: function (e) {
                                        var t = Y.objs.sheet,
                                            a = e.row,
                                            i = e.col,
                                            n = Y.objs.cellLayer,
                                            r = Y.objs.getCellPos(a, i),
                                            o = n.getLayerDom(),
                                            s = n.getLayerInnerDom(),
                                            l = r.left + 1,
                                            d = (s.outerHeight(), r.top + 1);
                                        Y.objs.getCanvasHeight(), t.getCellRect(a, i).height;
                                        o.css({
                                            left: l,
                                            top: d
                                        })
                                    },
                                    setSize: function (e, t) {
                                        var a = Y.objs.sheet,
                                            i = e.col,
                                            n = e.row,
                                            r = a.getCellRect(e.row, e.col),
                                            e = a.getCell(n, i),
                                            o = r.width,
                                            s = r.height,
                                            l = Y.objs.cellLayer.getLayerInnerDom(),
                                            d = Y.objs.cellLayer.getLayerTextDom(),
                                            c = e.cellPadding() || "0 0 0 0",
                                            p = e.hAlign(),
                                            u = 0,
                                            h = 0,
                                            f = 0,
                                            g = 0,
                                            m = 0,
                                            _ = 0,
                                            v = Y.objs.getCellPos(n, i).top - $(Y.objs.canvas).offset().top,
                                            b = Y.objs.getCellPos(n, i).left - $(Y.objs.canvas).offset().left,
                                            w = 1,
                                            C = y.split(" "),
                                            x = {
                                                0: "left",
                                                1: "center",
                                                2: "right"
                                            },
                                            k = x[p],
                                            D = $.inArray("bold", e.font().split(" ")) > -1 ? "bold" : "normal";
                                        if (o -= 1, s -= 1, c = c.split(" ").map(function (e, t) {
                                                return e + "px"
                                            }).join(" "), l.css({
                                                width: o,
                                                padding: c,
                                                minHeight: s,
                                                textAlign: k,
                                                fontSize: C[0],
                                                fontFamily: C[1],
                                                color: e.foreColor(),
                                                wordWrap: "break-word",
                                                overflowY: "auto",
                                                overflowX: "hidden",
                                                fontWeight: D,
                                                backgroundColor: e.backColor()
                                            }), f = l.height(), g = d.height(), c = c.split(" ").map(function (e, t) {
                                                if (0 == t) {
                                                    if ("0px" == e) {
                                                        var a = f - g;
                                                        a = a ? a < 16 ? 16 : a : 16, e = Math.round(a / 2)
                                                    }
                                                    e += "px"
                                                }
                                                return 2 == t && "0px" == e && (e = "8px"), e
                                            }).join(" "), u = Y.objs.getCanvasHeight(), h = Y.objs.getCanvasWidth(), m = l.outerHeight(), _ = l.outerWidth(), v + m > u) {
                                            var S = u - v - 1;
                                            l.css({
                                                height: S,
                                                minHeight: S
                                            })
                                        }
                                        if (b + _ > h) {
                                            var T = h - b - 1;
                                            l.css({
                                                width: T,
                                                minWidth: T
                                            })
                                        }
                                        l.css({
                                            padding: c
                                        }), t && (w = m > s || _ > o ? 0 : 1, Y.objs.bdpLogger.cellDetail(w))
                                    },
                                    getTextHeight: function (e) {
                                        var t = "J-cell-getStyle";
                                        $(t).length > 0 && $(t).remove();
                                        var a = Y.objs.cellLayer.show(e, t);
                                        return a.getLayerDom().css({
                                            top: -1e4,
                                            left: -1e4
                                        }), a.getLayerTextDom().height()
                                    }
                                },
                                guide: {
                                    widthChangeGuide: function () {
                                        var e = Y.objs.sheet,
                                            t = e.getColumnCount(),
                                            a = "zh" === z ? "您可以拖动或双击表头分隔线调整列宽" : "Now you can drag and drop or double-click here to adjust the column width",
                                            i = e.getColumnWidth(0),
                                            n = null,
                                            r = null,
                                            o = 0,
                                            s = 0,
                                            l = 0,
                                            d = "zh" === z ? "我知道了" : "I Know",
                                            c = q ? "https://s1.bdp.cn/static/theme/light/icons/table_column_guide_7d50f8e.png" : "https://s1.bdp.cn/static/theme/dark/icons/table_column_guide_9f67d12.png",
                                            p = '<div style="z-index: 100001; position: absolute;" class="J-widthchange-icon-wrap"><img width="84px" height="84px" class="J-width-change-icon" src="' + c + '"></div>',
                                            u = '<div class="common-dot-guide display-inline-block dotguide J-widthchange-tip-wrap"><div class="dot-guide-tip J-dot-guide-tips"><p class="dot-guide-tip-text">' + a + '</p><div class="tip-operate clearfix"><div class="know-and-close J-dot-i-kone">' + d + "</div></div></div></div>",
                                            h = null,
                                            f = null,
                                            g = ($(".gridster"), $(".dash-wrapper")),
                                            m = B.parents(".gridster-item"),
                                            _ = 0,
                                            v = 0,
                                            b = null;
                                        i >= Y.objs.getCanvasWidth() || window.__width_change_guide__ || H || G || W || J || V || window.getGuideVal && 0 == window.getGuideVal("__width_change_guide__") || t < 2 || 0 != g.length && (_ = m.position(".gridster").top, v = m.position(".gridster").left, g.scrollTop(_), g.scrollLeft(v), b = Y.objs.guide.mask(), h = $(p), l = $(Y.objs.canvas).offset(), n = e.getCellRect(1, 1, -1), r = e.getCellRect(0, 1), Y.objs.isFlipped ? (o = l.left + r.x - 42, s = l.top + n.y - 42 + 21) : (o = l.left + n.x - 42, s = l.top + n.y - 42 + 21), h.css({
                                            left: o,
                                            top: s
                                        }), $("body").append(h), f = $(u), f.css({
                                            position: "absolute",
                                            left: o,
                                            top: s
                                        }), $("body").append(f), f.find(".J-dot-i-kone").off("click.widthChangeGuideBtn").on("click.widthChangeGuideBtn", Y.objs.guide.handlewidthChangeTipBtn), b.off("click.widthChangeGuideBtn").on("click.widthChangeGuideBtn", Y.objs.guide.handlewidthChangeTipBtn), h.off("click.widthChangeGuideBtn").on("click.widthChangeGuideBtn", Y.objs.guide.handlewidthChangeTipBtn), window.__width_change_guide__ = !0)
                                    },
                                    handlewidthChangeTipBtn: function () {
                                        window.setGuideApi("__width_change_guide__", 0), Y.objs.guide.widthChangeGuideDestroy()
                                    },
                                    mask: function () {
                                        var e = document.createElement("div");
                                        return $(e).addClass("J-table-mask guide-bg-see"), $(e).css({
                                            position: "absolute",
                                            left: 0,
                                            top: 0,
                                            width: "100%",
                                            height: "100%",
                                            opacity: .72,
                                            zIndex: 1e4
                                        }), $("body").append(e), $(e)
                                    },
                                    widthChangeGuideDestroy: function () {
                                        var e = $(".J-widthchange-tip-wrap"),
                                            t = $(".J-table-mask"),
                                            a = $(".J-widthchange-icon-wrap");
                                        e.find("J-dot-i-kone").off("click.widthChangeGuideBtn"), a.off("click.widthChangeGuideBtn"), t.off("click.widthChangeGuideBtn"), a.remove(), t.remove(), e.remove()
                                    },
                                    wordWrapGuide: function () {
                                        if ("zh" === z && H && (!window.getGuideVal || 0 != window.getGuideVal("__wordwrap_guide__"))) {
                                            var e = null,
                                                t = null,
                                                a = Y.objs.isFlipped,
                                                i = Y.objs.colHeaderCount,
                                                n = q ? "https://s1.bdp.cn/static/theme/light/icons/table-guide-wordwrap_62382a2.png" : "https://s1.bdp.cn/static/theme/dark/icons/table-guide-wordwrap_af79de8.png",
                                                r = '<div style="z-index: 100001; position: absolute;" class="J-wordWrapGuide-icon-wrap"><img width="178px" height="192px" class="J-wordwrap-icon" src="' + n + '"></div>',
                                                o = null,
                                                s = null,
                                                l = null;
                                            if (a) {
                                                if (i <= 1) return;
                                                t = $("#dragCompare_axis").find(".drag-item").first().find(".ui-select")
                                            } else t = $("#dragX").find(".drag-item").first().find(".ui-select");
                                            o = t.offset();
                                            var d = window.bdpGuideVeil.creatVeil(t, {
                                                mask: !0
                                            });
                                            e = $(r), e.css({
                                                left: o.left - 24,
                                                top: o.top + t.height() - 12
                                            }), $("body").append(e), s = d.creatDotGuide(e, "您可以在下拉菜单中设置自动换行", Y.objs.guide.handleWordWrapGuide, {
                                                isfixed: !0,
                                                custom: {
                                                    left: o.left,
                                                    top: o.top + t.height() + 152,
                                                    parent: "body"
                                                },
                                                className: "J-wordwrap-dotlayer"
                                            }), s.css({
                                                zIndex: 100002
                                            }), l = s.find(".J-circle-group"), l.css({
                                                top: -46,
                                                left: 9,
                                                zIndex: 100002
                                            }), d.maskDom.off("click.wordWrapGuide").on("click.wordWrapGuide", Y.objs.guide.handleWordWrapGuide)
                                        }
                                    },
                                    handleWordWrapGuide: function () {
                                        window.setGuideApi("__wordwrap_guide__", 0), Y.objs.guide.wordWrapGuideDestroy()
                                    },
                                    wordWrapGuideDestroy: function () {
                                        $(".J-wordWrapGuide-icon-wrap").remove(), $(".J-mask-wrap").remove(), $(".J-wordwrap-dotlayer").remove()
                                    },
                                    cellLayerGuide: function (e) {
                                        var t = "zh" === z ? "您可以双击单元格查看完整信息" : "Now you can double-click the cell to view full details";
                                        if (!(G || W || J || V || window.getGuideVal && 0 == window.getGuideVal("__cell_layer_guide__"))) {
                                            for (var a = Y.objs.sheet, i = a.getViewportTopRow(1), n = (a.getCell(i, e), a.getCellRect(i, e)), r = $(Y.objs.canvas).offset(), o = a.getRowHeight(i), s = 0, l = Y.objs.isFlipped ? Y.objs.xLen : Y.objs.colHeaderCount, d = null, c = 1, p = l + 1; c < p; c++) s += a.getRowHeight(c, Y.objs.colHeader);
                                            d = window.bdpGuideVeil.creatVeil(null, {
                                                mask: !0,
                                                custom: {
                                                    left: r.left + n.x,
                                                    top: r.top + s,
                                                    right: r.left + n.x + n.width,
                                                    bottom: r.top + s + o
                                                },
                                                className: "table-guide-mask"
                                            }), d.creatDotGuide(null, t, Y.objs.guide.handleCellLayerGuide, {
                                                isfixed: !0,
                                                custom: {
                                                    left: r.left + n.x + n.width - 10,
                                                    top: r.top + s - (o + 15) / 2,
                                                    parent: "body"
                                                },
                                                direction: "right",
                                                className: "J-cellLayer-dotlayer"
                                            }), d.maskDom.off("click.cellLayerGuide").on("click.cellLayerGuide", Y.objs.guide.handleCellLayerGuide)
                                        }
                                    },
                                    handleCellLayerGuide: function () {
                                        window.setGuideApi("__cell_layer_guide__", 0), Y.objs.guide.cellLayerDestroy()
                                    },
                                    cellLayerDestroy: function () {
                                        $(".J-cellLayer-dotlayer").remove(), $(".J-mask-wrap").remove()
                                    },
                                    destroy: function () {
                                        Y.objs.guide.widthChangeGuideDestroy(), Y.objs.guide.wordWrapGuideDestroy(), Y.objs.guide.cellLayerDestroy()
                                    }
                                },
                                bdpLogger: {
                                    adjustWidth: function () {
                                        BDPLogger.log("AdjustWidth", {
                                            category: "user_interact",
                                            action: "adjust_width",
                                            opt_label: JSON.stringify({
                                                ct_id: Y.objs.info.chart_id
                                            })
                                        })
                                    },
                                    restoreAutoWidth: function (e) {
                                        BDPLogger.log("RestoreAutoWidth", {
                                            category: "user_interact",
                                            action: "restore_auto_width",
                                            opt_label: JSON.stringify({
                                                ct_id: Y.objs.info.chart_id,
                                                col_num: e.colCount,
                                                row_num: e.rowCount
                                            })
                                        })
                                    },
                                    cellDetail: function (e) {
                                        BDPLogger.log("CellDetail", {
                                            category: "user_interact",
                                            action: "cell_detail",
                                            opt_label: JSON.stringify({
                                                ct_id: Y.objs.info.chart_id,
                                                is_complete_display: e
                                            })
                                        })
                                    },
                                    cellCopy: function (e) {
                                        BDPLogger.log("CellCopy", {
                                            category: "user_interact",
                                            action: "table_copy",
                                            opt_label: JSON.stringify({
                                                ct_id: Y.objs.info.chart_id,
                                                col_num: e.colCount,
                                                row_num: e.rowCount
                                            })
                                        })
                                    }
                                }
                            },
                            eventFuns: {
                                flip: function () {
                                    if (Y.objs.totalDataLen > 100) return alert(h), !1;
                                    e.emit("saveWithOpt", Y.objs.drillLevel, {
                                        tb_flip: !Y.objs.isFlipped
                                    })
                                },
                                pin: function (e) {
                                    var t = Y.objs.spread,
                                        a = Y.objs.sheet,
                                        i = e.exceptObj,
                                        n = Y.objs.info,
                                        r = n.tb_statistic || {},
                                        o = r.col_pos;
                                    if (a.clearSelection(), t.suspendPaint(), Y.objs.removeHeaderSpan(), Y.objs.drawHeader(i), t.resumePaint(), r && o) {
                                        var s = "bottom" === o ? a.getRowCount() - 1 : 0;
                                        Y.objs.setColSummarySpan(s)
                                    }
                                },
                                handleTopRowChange: function () {
                                    Y.objs.sheet;
                                    Y.eventFuns.removeLayers(), Y.objs.lazyLoad(), Y.objs.fixViewportPos()
                                },
                                handleLeftColumnChanged: function () {
                                    Y.eventFuns.removeLayers(), Y.objs.autoFitLastColumn(), Y.objs.hideTip()
                                },
                                handleDocument: function (e, t) {
                                    if (Y) return Y.eventFuns.removeLayers(e), Y.eventFuns.handleSelection(e, t), Y.objs.hideTip(), e.preventDefault(), !1
                                },
                                handleSelection: function (e, t) {
                                    var a = $(t.e.target),
                                        i = Y.objs.sheet,
                                        n = a.parents(".chart-table"),
                                        r = (n.attr("data-ctid"), i.getSelections());
                                    r && r.length > 0 && (a.is("select") || a.parents(".J-menu-wrap").length > 0 || 0 === n.length && i.clearSelection())
                                },
                                removeLayers: function (e) {
                                    Y && (Y.objs.menu.destroy(), Y.objs.cellLayer.destroy())
                                },
                                handleContextmenu: function (e) {
                                    var t = Y.objs.menu,
                                        a = Y.objs.sheet,
                                        i = Y.objs.getHitTest(e.pageX, e.pageY),
                                        n = i.hitTestType,
                                        r = i.row,
                                        o = i.col,
                                        s = a.getSelections(),
                                        l = Y.objs.viewport,
                                        d = null;
                                    n === l && (null === Y.objs.getCellInSelections(s, r, o) && (a.clearSelection(), a.endEdit(), a.setActiveCell(r, o)), void 0 !== r && void 0 !== o && (t.show(), d = t.getMenuDom(), d.data("sheetArea", n), d.css({
                                        left: e.pageX,
                                        top: e.pageY
                                    }), d.focus(), Y.eventFuns.preventMenuDefault(e)))
                                },
                                preventMenuDefault: function (e) {
                                    var t = Y.objs.sheet.getParent().getHost(),
                                        a = t.id + "vp_vp";
                                    if ($(e.target).attr("id") === a) return event.preventDefault(), !1
                                },
                                handleContextmenuItem: function (t) {
                                    var a = Y.objs.spread,
                                        i = Y.objs.sheet,
                                        n = $(t.target),
                                        r = n.data("action"),
                                        o = i.getSelections(),
                                        s = o[0];
                                    if (Y) {
                                        var l = Y.objs.menu;
                                        switch (r) {
                                            case "copy":
                                                a.commandManager().execute({
                                                    cmd: "copy",
                                                    sheetName: i.name(),
                                                    callback: function (e) {
                                                        l.getCopyDom().attr("aria-label", e.copyText), new Clipboard(".J_table_copy", {
                                                            text: function (e) {
                                                                return l.remove(), e.getAttribute("aria-label")
                                                            }
                                                        }), Y.objs.bdpLogger.cellCopy(s)
                                                    }
                                                });
                                                break;
                                            case "autoFitWidth":
                                                for (var d = Y.objs.widthOpts, c = s.col; c < s.col + s.colCount; c++) {
                                                    var p = Y.objs.getWidthOptsKey(c);
                                                    p in d && (delete d[p], e.emit("saveWithOpt", Y.objs.drillLevel, {
                                                        width_opts: d,
                                                        need_replace: !0
                                                    }))
                                                }
                                                Y.objs.bdpLogger.restoreAutoWidth(s)
                                        }
                                    }
                                },
                                handleCellClick: function (e, t) {
                                    var a = Y.objs.sheet,
                                        i = t.sheetArea,
                                        n = t.row,
                                        r = t.col,
                                        o = a.getSelections(),
                                        s = Y.objs.viewport;
                                    a.getCell(n, r, i);
                                    i === s && Y.objs.isSingleSelection() && (Y.objs.getCellInSelections(o, n, r) || a.clearSelection())
                                },
                                handleColWidthChange: function (t, a) {
                                    var i = a.colList[0],
                                        n = Y.objs.sheet,
                                        r = Y.objs.widthOpts,
                                        o = n.getRowCount(),
                                        s = n.getColumnWidth(i),
                                        l = Y.objs.getWidthOptsKey(i),
                                        d = Y.objs.checkIsWordwrap(i),
                                        c = Y.objs.getCanvasWidth();
                                    s > c - 2 && (s = c - 2, n.setColumnWidth(i, s)), r[l] = s, Y.objs.autoFitLastColumn();
                                    for (var p = 0; p < o; p++) {
                                        var u = n.getCell(p, i);
                                        d && Y.objs.handleAutoWordwrap(u, !0)
                                    }
                                    H && e.emit("saveWithOpt", Y.objs.drillLevel, {
                                        width_opts: r,
                                        need_replace: !0
                                    }, {
                                        not_need_redraw: !0
                                    }), Y.objs.resetHScrollBar(), Y.objs.resetVScrollBar(), Y.objs.guide.cellLayerGuide(i), Y.objs.bdpLogger.adjustWidth()
                                },
                                handleCellDoubleClick: function (e, t) {
                                    var a = Y.objs.sheet,
                                        i = t.col,
                                        n = t.row,
                                        r = t.sheetArea,
                                        o = a.getCell(n, i, r);
                                    o.value(), Y.objs.cellLayer;
                                    r !== Y.objs.colHeader && void 0 !== n && void 0 !== i && (Y.objs.fixViewportPos(), Y.objs.autoFitLastColumn(), Y.objs.cellLayer.show(o, "J-cell-layer").setPos(o))
                                }
                            }
                        },
                        X = function () {
                            if (!Y) return !1;
                            var t = Y.objs.spread = new GC.Spread.Sheets.Workbook(B[0], {
                                    sheetCount: 1
                                }),
                                a = Y.objs.spreadNS = GC.Spread.Sheets,
                                i = (Y.objs.lineStyle = a.LineStyle.thin, Y.objs.sheetArea = a.SheetArea),
                                n = Y.objs.events = a.Events;
                            Y.objs.sheet = t.getActiveSheet(), Y.objs.colHeader = i.colHeader, Y.objs.viewport = i.viewport, Y.objs.rowHeader = i.rowHeader, Y.objs.corner = i.corner, Y.objs.hAlign = a.HorizontalAlign, Y.objs.vAlign = a.VerticalAlign, Y.objs.underlineStyle = a.TextDecorationType.underline, Y.objs.TopRowChangedEvt = n.TopRowChanged, Y.objs.LeftColumnChangedEvt = n.LeftColumnChanged, Y.objs.cellClickEvt = n.CellClick, Y.objs.ColumnWidthChangedEvt = n.ColumnWidthChanged, Y.objs.CellDoubleClickEvt = n.CellDoubleClick, e.pointData = [], Y.objs.canvas = Y.objs.getCanvas(), Y.objs.rightSpaceLock = !1, Y.objs.init()
                        },
                        Q = function () {
                            if (!Y) return !1;
                            var t = Y.objs.sheet;
                            $(".table-flip").off().on("click", Y.eventFuns.flip), B.on("contextmenu", Y.eventFuns.handleContextmenu), $(document).on("clickTable", Y.eventFuns.handleDocument), $(document).on("dashboardAutoplay", Y.eventFuns.removeLayers), e.off("pin").on("pin", Y.eventFuns.pin), $("body").off("dashboard-scroll-start.tableCanvas").on("dashboard-scroll-start.tableCanvas", Y.eventFuns.removeLayers), t.bind(Y.objs.TopRowChangedEvt, Y.eventFuns.handleTopRowChange), t.bind(Y.objs.LeftColumnChangedEvt, Y.eventFuns.handleLeftColumnChanged), t.bind(Y.objs.cellClickEvt, Y.eventFuns.handleCellClick), t.bind(Y.objs.ColumnWidthChangedEvt, Y.eventFuns.handleColWidthChange), t.bind(Y.objs.CellDoubleClickEvt, Y.eventFuns.handleCellDoubleClick)
                        },
                        K = function () {
                            if (Y && Y.objs) {
                                Y.objs.spread && Y.objs.spread.unbindAll(), Y.objs.menu && Y.objs.menu.destroy(), Y.objs.cellLayer && Y.objs.cellLayer.destroy(), Y.objs.guide && Y.objs.guide.destroy();
                                for (var t in Y.objs) {
                                    var a = Y.objs[t];
                                    a && a.destroy && a.destroy()
                                }
                                Y = null
                            }
                            $(".table-flip").off(), B.off("contextmenu"), e.off("pin"), e.off("clearSelection")
                        },
                        Z = function () {
                            var t = e.data;
                            if (0 === (t.x[0] && t.x[0].data.length || t.y[0] && t.y[0].data.length || t.y_optional[0] && t.y_optional[0].data.length || 0)) {
                                var a = bdpChart.language || "zh",
                                    i = "zh" === a ? "当前图表无数据" : "No data to display";
                                return B.append('<div class="chart-error"><p class="no-data" style="font-size: 12px; font-weight: bold; color: #60606a">' + i + "</p></div>"), !0
                            }
                        },
                        ee = function () {
                            Z() || (X(), Q())
                        };
                    return bdp.loadjs({
                        callback: ee,
                        src: "https://s1.bdp.cn/static/js/lib/spreadjs.min_4b931ef.js"
                    }), P.destroy = K, P
                }
            }(),
            function () {
                function e(e, t) {
                    var a = (e.info, e.data),
                        i = a.y[t].data[0],
                        n = 0,
                        r = 1,
                        o = !$.isEmptyObject(a.gauge_setting) && a.gauge_setting.goal.value,
                        s = "--";
                    return i >= 0 && i !== 1 / 0 && i ? (n = i, o ? (r = a.gauge_setting.goal.values ? a.gauge_setting.goal.values[t] : a.gauge_setting.goal.value, r > 0 && r !== 1 / 0 ? s = n / r : r = 0 == i ? 1 : i) : (r = 0 == i ? 1 : i, s = n / r)) : (n = i !== 1 / 0 ? i : 0, o ? (r = a.gauge_setting.goal.values ? a.gauge_setting.goal.values[t] : a.gauge_setting.goal.value) > 0 && r !== 1 / 0 || (r = 1) : r = 1), {
                        showNumber: +n,
                        tickMaxNumber: +r,
                        percentage: s
                    }
                }

                function t(e, t, i) {
                    var n = e.data.y[t],
                        r = !e.info.tb_conditional_formatting || !e.info.tb_conditional_formatting.length;
                    if (n.series_color) return n.series_color;
                    if (n.cell_styles && n.cell_styles.length > 0 && n.cell_styles[0]) return n.cell_styles[0].backgroundColor;
                    if (r) {
                        i.tickMaxNumber;
                        return "--" == i.percentage ? a[0] : 0 === i.showNumber ? a[4] : i.showNumber < 0 ? a[0] : a[1]
                    }
                    return a[0]
                }
                bdpChart.setGaugeSpecialOption = function (a) {
                    var i = a.$elem,
                        n = a.info,
                        r = a.data,
                        o = o || 2;
                    if (0 == r.y.length) {
                        i.find(".solidgauge-title").remove();
                        var s = "zh" == bdpChart.language ? "当前图表无数据" : "No data to display";
                        return void i.append('<div class="chart-error"><p class="no-data">' + s + "</p></div>")
                    }
                    i.find(".chart-error").remove();
                    var l = {
                            1: "rgba(255,255,255,0.1)",
                            2: "#E5E5E5"
                        },
                        d = r.y[0].name;
                    $.isEmptyObject(r.gauge_setting) ? $.isEmptyObject(n.gauge_setting) ? n.gauge_setting = {} : d = n.gauge_setting.name || r.y[0].name : d = r.gauge_setting.name || r.y[0].name;
                    var c = "";
                    $.isEmptyObject(r.gauge_setting) ? $.isEmptyObject(n.gauge_setting) || (c = n.gauge_setting.unit) : c = r.gauge_setting.unit;
                    var p = r.y.length,
                        u = Math.min(i.height(), i.width());
                    if (p > 0) {
                        var h = a._getGridSetting();
                        u = Math.min(h.boxWidth, h.boxHeight)
                    }
                    var f = n.gauge_setting.rateDigit || 0,
                        g = [25, 20, 16, 14, 14],
                        m = "12px",
                        _ = .002 * u + .15;
                    a.isMobileMode && (_ = .8), u < 350 || (u < 400 ? ("22px", m = "14px") : u < 450 ? ("24px", m = "16px") : ("32px", m = "18px"));
                    var v = "";
                    1 != a.gridHeight && 1 != a.gridWidth || (v = u < 111 ? "position:absolute;top:-6px;left:-40px;" : "margin-top:-6px;");
                    var b = [],
                        y = [];
                    r.y.forEach(function (i, n) {
                        var o = e(a, n),
                            s = o.showNumber,
                            l = o.tickMaxNumber,
                            d = o.percentage,
                            c = t(a, n, o);
                        b.push({
                            lineColor: "red",
                            lineWidth: 0,
                            tickWidth: 0,
                            minorTickInterval: null,
                            tickPositioner: function () {
                                return [0, l]
                            },
                            title: {
                                text: ""
                            },
                            min: 0,
                            max: l,
                            stops: [
                                [0, c],
                                [1, c]
                            ],
                            labels: {
                                style: {
                                    fontSize: m
                                },
                                y: 24,
                                useHTML: !0,
                                formatter: function () {
                                    var e = 0;
                                    return r.gauge_setting && r.gauge_setting.goal && void 0 !== r.gauge_setting.goal.digit && (e = r.gauge_setting.goal.digit), this.value ? w(this.value, e) : this.value
                                }
                            }
                        }), y.push({
                            name: r.y.length > 0 ? r.y[0].name : "",
                            data: [s],
                            innerRadius: "75%",
                            outerRadius: "100%",
                            dataLabels: {
                                useHTML: !0,
                                formatter: function () {
                                    var e, i;
                                    "--" === d ? (e = -120, i = "--") : (i = (100 * d).toFixed(f) + "%", e = -120 + Math.floor(240 * d)), e = e > 120 ? 121 : e;
                                    var r = t(a, n, o);
                                    return '<div class="solidguage-custom" style="transform:scale(' + _ + ");-webkit-transform:scale(" + _ + ");" + v + '"><span class="solidgauge-percent">' + i + '</span><div class="pa solidgauge-angle" style="background-color:' + r + ";transform:rotate(" + e + "deg);-webkit-transform:rotate(" + e + 'deg)"><span class="solidgauge-angle-arrow" style="border-bottom-color:' + r + '"></span></div></div>'
                                }
                            }
                        })
                    });
                    var w = function (e, t) {
                            if (e <= 0) return e;
                            var a, i, n = bdpChart.helper.numericSymbols(e, t).toString();
                            return n < 1e3 ? (a = n, i = "") : (a = Number(n.substring(0, n.length - 1)).toFixed(6), i = n.substr(n.length - 1, 1)), (a = Highcharts.numberFormat(a, t, ".", ",")) + i
                        },
                        C = a.options,
                        x = y[0].data[0],
                        k = '<div class="solidgauge-title"><p class="unit">' + bdpChart.helper.dataLabelFormatter(r.y[0].formatter, x, r.y[0].aggregator) + c + '</p><p class="title" >' + d + "</p></div>";
                    $.extend(!0, C, {
                        chart: {
                            type: "solidgauge",
                            style: {
                                overflow: "visible"
                            }
                        },
                        title: {
                            text: k,
                            floating: !0,
                            y: 0
                        },
                        subtitle: {
                            text: n.title,
                            y: 0,
                            style: {
                                fontSize: "16px"
                            }
                        },
                        exporting: {
                            filename: n.title
                        },
                        tooltip: {
                            enabled: !1,
                            crosshairs: null
                        },
                        legend: {
                            enabled: !1
                        },
                        pane: {
                            center: ["50%", "72%"],
                            startAngle: -120,
                            endAngle: 120,
                            size: "90%",
                            background: {
                                backgroundColor: l[o],
                                borderWidth: 0,
                                innerRadius: "75%",
                                outerRadius: "100%",
                                shape: "arc"
                            }
                        },
                        plotOptions: {
                            solidgauge: {
                                animation: !0,
                                dataLabels: {
                                    y: -20,
                                    borderWidth: 0,
                                    useHTML: !0,
                                    style: {
                                        fontSize: g[f] + "px"
                                    },
                                    crop: !1,
                                    overflow: "none"
                                }
                            }
                        },
                        xAxis: {
                            visible: !1
                        },
                        yAxis: b,
                        series: y
                    }), C.series[0].data.splice(1), a.isMobileMode && (C.series = [C.series[0]]), "fullscreen" == a.mode && (C.plotOptions.series.animation = !0), "dark" === a.theme && (C = $.extend(!0, C, {
                        pane: {
                            background: {
                                backgroundColor: "#343752"
                            }
                        }
                    }))
                };
                var a = {
                    0: "#A3ABB0",
                    1: "#40A276",
                    2: "#F6CC4E",
                    3: "#F38000",
                    4: "#EE4B4B"
                }
            }(),
            function () {
                function e(e, t) {
                    var a = bdpChart.language || "zh",
                        i = "zh" == a ? {
                            SUM: "求和",
                            AVERAGE: "平均值",
                            AVG: "平均值",
                            MIN: "最小值",
                            MAX: "最大值",
                            COUNT: "计数",
                            COUNT_DISTINCT: "去重计数",
                            sum: "求和",
                            average: "平均值",
                            avg: "平均值",
                            min: "最小值",
                            max: "最大值",
                            count: "计数",
                            count_distinct: "去重计数",
                            YoY: "同比",
                            QoQ: "环比",
                            TOTAL: "总计",
                            MED: "中位数",
                            PERCENTILE: "百分位",
                            PERCENTILE: "百分位",
                            PERCENT_5: "百分位5",
                            PERCENT_10: "百分位10",
                            PERCENT_25: "百分位25",
                            PERCENT_50: "百分位50",
                            PERCENT_75: "百分位75",
                            PERCENT_90: "百分位90",
                            PERCENT_95: "百分位95"
                        } : {
                            SUM: "Sum",
                            AVERAGE: "Average",
                            MIN: "Minimum",
                            MAX: "Maximum",
                            COUNT: "Count",
                            COUNT_DISTINCT: "Count(Distinct)",
                            AVG: "Average",
                            sum: "Sum",
                            avg: "Average",
                            average: "Average",
                            min: "Minimum",
                            max: "Maximum",
                            count: "Count",
                            count_distinct: "Count(Distinct)",
                            YoY: "",
                            QoQ: "环比",
                            TOTAL: "Total",
                            MED: "Median",
                            PERCENTILE: "Percentile",
                            PERCENT_5: "5th percentile",
                            PERCENT_10: "10th percentile",
                            PERCENT_25: "25th percentile",
                            PERCENT_50: "50th percentile",
                            PERCENT_75: "75th percentile",
                            PERCENT_90: "90th percentile",
                            PERCENT_95: "95th percentile",
                            LAST: "Latest"
                        },
                        n = new RegExp("^(\\d|[1-9]\\d|100)$");
                    if ("中位数" == e.aggregator_name || "Median" == e.aggregator_name) t = e.aggregator = "MED", e.percent = "0.5";
                    else if (n.test(parseInt(e.aggregator_name))) {
                        var r = parseInt(e.aggregator_name);
                        t = e.aggregator = "PERCENT_" + r, e.percent = String(r / 100)
                    }
                    if (e.nick_name) return e.nick_name;
                    var o = e.name;
                    return t && 1 !== !e.is_build_aggregated && i[t] && (o += " (" + i[t] + ")"), o
                }
                var t = bdpChart.helper;
                bdpChart.setMapAreaSpecialOption = function (a) {
                    var i = a.info,
                        n = t.filterNullVal(a.data),
                        r = i.drill_level,
                        o = r && a.optional.drill_value.concat().reverse(),
                        s = "中国",
                        l = +i.map.region,
                        d = i.map.granularity,
                        c = bdpChart.language || "zh";
                    if (2 === l)
                        if (r) {
                            if (s = a.optional.drill_value[r - 1], t.mapType.indexOf(s) < 0)
                                for (var p = 0; p < o.length; p++)
                                    if (t.mapType.indexOf(o[p]) > -1) {
                                        s = o[p];
                                        break
                                    }
                            t.mapType.indexOf(s) < 0 && (s = n.x[0].origin_name)
                        } else s = n.x[0].origin_name;
                    var u;
                    u = t.mapType.indexOf(s) > -1 ? t.cityMap[s] : "china";
                    var h = Highcharts.maps["countries/cn/" + u + "_geo"];
                    h || (t.getMapMeta(u + "_geo"), h = Highcharts.maps["countries/cn/" + u + "_geo"]);
                    var f = [],
                        g = n.x[0].data.length,
                        m = t.getEdgeValueFromMultiArray(n, "y", "max") || 0,
                        _ = t.getEdgeValueFromMultiArray(n, "y", "min") || 0,
                        v = 0,
                        b = 0;
                    g && (v = t.formatMapNum(m, 4, m > 0 ? "ceil" : "floor"), b = t.formatMapNum(_, 4, _ > 0 ? "floor" : "ceil"));
                    var y = bdpChart.helper.numericSymbols(v),
                        w = bdpChart.helper.numericSymbols(b),
                        C = y.toString().substr(y.toString().length - 1, 1),
                        x = w.toString().substr(w.toString().length - 1, 1);
                    if (C == x && (Math.abs(v) > 1e3 || Math.abs(b) > 1e3)) {
                        y = t.formatMapNum(y.toString().substr(0, y.length - 1), 4, m > 0 ? "ceil" : "floor"), w = t.formatMapNum(w.toString().substr(0, w.length - 1), 4, _ > 0 ? "floor" : "ceil");
                        for (var k = ["", "K", "M", "B", "T", "P", "E"], D = 0; D < k.length && k[D] !== x; D++);
                        v = y * Math.pow(10, 3 * D), b = w * Math.pow(10, 3 * D)
                    }
                    for (var S, T, I, L = v.sub(b), A = isInteger(v.mul(.25)) ? 0 : v.mul(.25).toString().split(".")[1].length, E = n.x[0].mismatch.length, D = 0; D < g; D++) S = n.x[0].data[D], T = n.y[0].data[D], (1 === l && "city" !== d || 2 === l && "province" !== d && (S.indexOf("0000") < 0 || ["110000", "310000", "120000", "500000"].indexOf(S) > -1)) && (I = {
                        "hz-code": S,
                        name: S,
                        value: Number(T)
                    }, T >= v.mul(.5) ? I.dataLabels = {
                        style: {
                            color: "#fff",
                            textOutline: "none"
                        }
                    } : I.dataLabels = {
                        style: {
                            color: "rgba(0, 0, 0, .6)",
                            textOutline: "none"
                        }
                    }, f.push(I));
                    var F = "fullscreen" === a.mode && 1 == localStorage.getItem("fs_data_label"),
                        M = $.extend(!0, a.options, {
                            chart: {
                                type: "map",
                                spacing: [15, 15, 10, 15]
                            },
                            title: {
                                text: ""
                            },
                            subtitle: {
                                text: i.title,
                                y: 0,
                                style: {
                                    "font-size": "fullscreen" === a.mode ? "20px" : "16px",
                                    color: "dark" === a.theme ? "#FFFFFF" : "#333333"
                                }
                            },
                            exporting: {
                                filename: i.title
                            },
                            mapNavigation: {
                                enabled: !1
                            },
                            plotOptions: {
                                map: {
                                    cursor: i.is_drill || "2" == a.optional.linked_chart_type ? "pointer" : "default",
                                    borderColor: "#fff",
                                    nullColor: "#E6E8EA",
                                    dataLabels: {
                                        align: "center",
                                        allowOverlap: void 0 === i.show_all_datalabels || i.show_all_datalabels,
                                        crop: !1,
                                        enabled: !(a.isDashboardMode && (a.gridWidth < 4 || a.gridHeight < 4)),
                                        style: {
                                            color: "#777",
                                            fontSize: "10px",
                                            textOutline: "none"
                                        }
                                    },
                                    events: {
                                        legendItemClick: function () {
                                            return !1
                                        }
                                    }
                                }
                            },
                            legend: {
                                enabled: !a.isMobileMode && (!a.isDashboardMode || a.isDashboardMode && a.dash_setting.show_legend),
                                align: "left",
                                verticalAlign: "bottom",
                                floating: !0,
                                y: -5,
                                layout: "horizontal",
                                valueDecimals: A,
                                backgroundColor: null,
                                symbolRadius: 0,
                                symbolHeight: 0,
                                symbolWidth: 0,
                                useHTML: !0,
                                itemStyle: {
                                    "pointer-events": "none"
                                },
                                labelFormatter: function () {
                                    var a = t.escapeHtml(e(i.yAxis[0], i.yAxis[0].aggregator));
                                    return '<div class="map-legend-row"><span class="map-legend-text-left">' + bdpChart.helper.numericSymbols(b) + '</span><span class="map-legend-text-right">' + bdpChart.helper.numericSymbols(v) + '</span></div><div class="color-linear-gradient map-legend" style="background:-webkit-linear-gradient(left, #DBECF7, #DBECF7 25%, #A6D3F3 25%, #A6D3F3 50%, #72AFD9 50%, #72AFD9 75%, #5C8EB0 75%, #5C8EB0);background:-moz-linear-gradient(left, #DBECF7, #DBECF7 25%, #A6D3F3 25%, #A6D3F3 50%, #72AFD9 50%, #72AFD9 75%, #5C8EB0 75%, #5C8EB0);background:-ms-linear-gradient(left, #DBECF7, #DBECF7 25%, #A6D3F3 25%, #A6D3F3 50%, #72AFD9 50%, #72AFD9 75%, #5C8EB0 75%, #5C8EB0);background:-o-linear-gradient(left, #DBECF7, #DBECF7 25%, #A6D3F3 25%, #A6D3F3 50%, #72AFD9 50%, #72AFD9 75%, #5C8EB0 75%, #5C8EB0);"></div><div class="map-legend-name" title="' + a + '">' + a + "</div>"
                                }
                            },
                            tooltip: {
                                crosshairs: null,
                                formatter: a._generateTooltipFormatter()
                            },
                            series: [{
                                data: f,
                                mapData: h,
                                joinBy: "hz-code",
                                mapData: h,
                                enableMouseTracking: !1,
                                dataLabels: {
                                    useHTML: !0,
                                    formatter: function () {
                                        var e = [];
                                        return void 0 !== this.point.value && null !== this.point.value && (i.show_datalabels || F) && (e.push('<p class="bdp-datalabels datalabels-map datalabels-map-value text-center">'), e.push(bdpChart.helper.dataLabelFormatter(n.y[0].formatter, this.point.value, n.y[0].aggregator)), e.push("</p>")), e.push('<p class="datalabels-map text-center">'), e.push(this.point.name), e.push("</p>"), e.join("")
                                    }
                                },
                                showInLegend: !1
                            }, {
                                data: f,
                                mapData: h,
                                joinBy: "hz-code",
                                name: n.y[0].name,
                                states: {
                                    hover: {
                                        brightness: .1
                                    }
                                },
                                dataLabels: {
                                    enabled: !1
                                }
                            }]
                        });
                    2 === a.gridWidth && (M.legend.enabled = !1), "fullscreen" === a.mode && $.extend(!0, M, {
                        tooltip: {
                            style: {
                                fontSize: "14px"
                            }
                        }
                    }), "dark" === a.theme && $.extend(!0, M, {
                        plotOptions: {
                            map: {
                                borderColor: "rgba(0, 0, 0, 0.1)",
                                nullColor: "#343752",
                                dataLabels: {
                                    style: {
                                        color: "rgba(255, 255, 255,  .4)",
                                        textOutline: "none"
                                    }
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: "none",
                            borderWidth: 0,
                            style: {
                                padding: 0
                            }
                        }
                    }),
                        function (e) {
                            var t = M.series;
                            angular.forEach(t, function (e) {
                                angular.forEach(e.data, function (e, t) {
                                    e.value < b.add(L.mul(.25)) ? e.color = "#DBECF7" : e.value < b.add(L.mul(.5)) ? e.color = "#A6D3F3" : e.value < b.add(L.mul(.75)) ? e.color = "#72AFD9" : e.color = "#5C8EB0"
                                })
                            })
                        }(),
                        function (a) {
                            var i = a.info,
                                n = M.series,
                                r = i.color_setting;
                            if (delete i.color_setting.is_series, !$.isEmptyObject(r))
                                if (1 != r.mode) {
                                    var o = bdpChart.colors[r.theme],
                                        s = r.enum_color_map;
                                    r.field[0].fid == i.xAxis[0].fid && (angular.forEach(n, function (e) {
                                        angular.forEach(e.data, function (e, t) {
                                            var a = angular.isArray(e) ? e[0] : e["hz-code"];
                                            s.hasOwnProperty(a) ? e.color = s[a].color : e.color = o[t % o.length]
                                        })
                                    }), delete M.colorAxis, M.legend.enabled = !1)
                                } else if (1 === r.mode) {
                                    delete M.colorAxis;
                                    var l = [],
                                        d = r.range_color;
                                    a.data.colors.map(function (e) {
                                        null !== e && l.push(Number(e))
                                    });
                                    var c = [].concat(l).sort(function (e, t) {
                                            return e - t
                                        }),
                                        p = c[0] || 0,
                                        u = c[c.length - 1] || 0;
                                    !d.disable_max && d.max && (u = d.max), !d.disable_min && d.min && (p = d.min);
                                    var h = t.linearRangeColor(d.start_color, d.end_color),
                                        f = t.createLinearScale(d, l),
                                        g = [],
                                        m = d.step;
                                    if (m > 1) {
                                        for (D = 0; D < m - 1; D++) g.push(h(D / (m - 1)));
                                        g.push(h(1))
                                    }
                                    angular.forEach(n, function (e) {
                                        angular.forEach(e.data, function (e, t) {
                                            var a = l[t],
                                                i = f(a);
                                            if (m) {
                                                var n = Math.floor(m * i);
                                                n = Math.min(n, m - 1), e.color = g[n]
                                            } else e.color = h(i)
                                        })
                                    }), $.extend(!0, M.legend, {
                                        symbolWidth: 0,
                                        symbolHeight: 0,
                                        labelFormatter: function () {
                                            var a = bdpChart.helper.createLinearGradientCss(d.start_color, d.end_color, d.step),
                                                i = t.escapeHtml(e(r.field[0], r.aggregator));
                                            return '<div class="map-legend-row"><span class="map-legend-text-left">' + bdpChart.helper.numericSymbols(p) + '</span><span class="map-legend-text-right">' + bdpChart.helper.numericSymbols(u) + '</span></div><div class="color-linear-gradient map-legend" style="' + a + '"></div><div class="map-legend-name" title="' + i + '">' + i + "</div>"
                                        }
                                    })
                                }
                        }(a), a.once("load", function () {
                        if (E && "edit" === a.mode) {
                            var e = "";
                            e = "zh" === c ? "有" + E + "条未知地区" : "There are " + E + " unknown area.";
                            var t = '<div class="map-mismatch-text pa guide"><p><a class="cursor-pointer">' + e + '</a></p><div class="guide-tip dropdown-wrap">' + bdp.utils.encodeHTML(n.x[0].mismatch.join("、")) + "</div></div>";
                            a.$elem.append(t)
                        }
                    }), a.$elem.highcharts("Map", M)
                }
            }(),
            function () {
                function e(e, t) {
                    var a = bdpChart.language || "zh",
                        i = "zh" == a ? {
                            SUM: "求和",
                            AVERAGE: "平均值",
                            AVG: "平均值",
                            MIN: "最小值",
                            MAX: "最大值",
                            COUNT: "计数",
                            COUNT_DISTINCT: "去重计数",
                            sum: "求和",
                            average: "平均值",
                            avg: "平均值",
                            min: "最小值",
                            max: "最大值",
                            count: "计数",
                            count_distinct: "去重计数",
                            YoY: "同比",
                            QoQ: "环比",
                            TOTAL: "总计",
                            MED: "中位数",
                            PERCENTILE: "百分位",
                            PERCENTILE: "百分位",
                            PERCENT_5: "百分位5",
                            PERCENT_10: "百分位10",
                            PERCENT_25: "百分位25",
                            PERCENT_50: "百分位50",
                            PERCENT_75: "百分位75",
                            PERCENT_90: "百分位90",
                            PERCENT_95: "百分位95"
                        } : {
                            SUM: "Sum",
                            AVERAGE: "Average",
                            MIN: "Minimum",
                            MAX: "Maximum",
                            COUNT: "Count",
                            COUNT_DISTINCT: "Count(Distinct)",
                            AVG: "Average",
                            sum: "Sum",
                            avg: "Average",
                            average: "Average",
                            min: "Minimum",
                            max: "Maximum",
                            count: "Count",
                            count_distinct: "Count(Distinct)",
                            YoY: "",
                            QoQ: "环比",
                            TOTAL: "Total",
                            MED: "Median",
                            PERCENTILE: "Percentile",
                            PERCENT_5: "5th percentile",
                            PERCENT_10: "10th percentile",
                            PERCENT_25: "25th percentile",
                            PERCENT_50: "50th percentile",
                            PERCENT_75: "75th percentile",
                            PERCENT_90: "90th percentile",
                            PERCENT_95: "95th percentile",
                            LAST: "Latest"
                        },
                        n = new RegExp("^(\\d|[1-9]\\d|100)$");
                    if ("中位数" == e.aggregator_name || "Median" == e.aggregator_name) t = e.aggregator = "MED", e.percent = "0.5";
                    else if (n.test(parseInt(e.aggregator_name))) {
                        var r = parseInt(e.aggregator_name);
                        t = e.aggregator = "PERCENT_" + r, e.percent = String(r / 100)
                    }
                    if (e.nick_name) return e.nick_name;
                    var o = e.name;
                    return t && 1 !== !e.is_build_aggregated && i[t] && (o += " (" + i[t] + ")"), o
                }
                var t = bdpChart.helper;
                bdpChart.setMapBubbleSpecialOption = function (a, i) {
                    function n(e, t) {
                        var a = e.info,
                            n = e.data,
                            r = a.chart_id,
                            o = {},
                            s = [];
                        if (i && (!i || 0 != i.length)) {
                            angular.forEach(i, function (e, t) {
                                e.ctId == r && (o = e.pointInfo, s = e.pointData)
                            });
                            var l = o.hzCode;
                            e.pointData = s;
                            var d, c = t[1].data;
                            c.length > 1 && (angular.forEach(n.x[0].data, function (e, t) {
                                e == l && (d = t)
                            }), angular.isNumber(d) && (c[d].selected = !0))
                        }
                    }
                    var r = a.info,
                        o = t.filterNullVal(a.data),
                        s = r.drill_level,
                        l = s && a.optional.drill_value.concat().reverse(),
                        d = "中国",
                        c = +r.map.region,
                        p = r.map.granularity,
                        u = bdpChart.language || "zh",
                        h = void 0 === r.show_all_datalabels || r.show_all_datalabels;
                    if ("city" === p && 1 == c && void 0 === r.show_all_datalabels && (h = !1), 2 === c)
                        if (s) {
                            if (d = a.optional.drill_value[s - 1], t.mapType.indexOf(d) < 0)
                                for (var f = 0; f < l.length; f++)
                                    if (t.mapType.indexOf(l[f]) > -1) {
                                        d = l[f];
                                        break
                                    }
                            t.mapType.indexOf(d) < 0 && (d = o.x[0].origin_name)
                        } else d = o.x[0].origin_name;
                    var g;
                    g = t.mapType.indexOf(d) > -1 ? t.cityMap[d] : "china";
                    var m = "province" === p ? Highcharts.maps["countries/cn/china_geo"] : Highcharts.maps["countries/cn/city-point"];
                    m || (t.getMapMeta("province" === p ? "china_geo" : "city-point"), m = "province" === p ? Highcharts.maps["countries/cn/china_geo"] : Highcharts.maps["countries/cn/city-point"]);
                    var _ = Highcharts.maps["countries/cn/" + g + "_geo"];
                    _ || (t.getMapMeta(g + "_geo"), _ = Highcharts.maps["countries/cn/" + g + "_geo"]);
                    var v = [],
                        b = o.x[0].data.length,
                        y = o.x[0].mismatch.length,
                        w = t.getEdgeValueFromMultiArray(o, "y", "max"),
                        C = t.getEdgeValueFromMultiArray(o, "y", "min");
                    C < 0 && (C = 0);
                    var x = C ? 10 * C / w : 1;
                    x = x < 1 ? 1 : x;
                    var k = 0;
                    isNaN(w) || (k = isInteger(w.mul(.25)) ? 0 : w.mul(.25).toString().split(".")[1].length);
                    for (var D, S, T = 0; T < b; T++) D = o.x[0].data[T], S = o.y[0].data[T], (1 === c || 2 === c && "province" !== p && D.indexOf("0000") < 0) && null !== S && (v.push({
                        _i: T,
                        "hz-code": D,
                        z: Number(S)
                    }), o.y[0].hasOwnProperty("warn_data") && 1 == o.y[0].warn_data[T] && (v[T].color = "rgba(255, 133, 90,0.5)"));
                    v.sort(function (e, t) {
                        return t.z - e.z
                    });
                    var I = "fullscreen" === a.mode && 1 == localStorage.getItem("fs_data_label"),
                        L = $.extend(!0, a.options, {
                            chart: {
                                type: "map",
                                spacing: [15, 15, 10, 15]
                            },
                            title: {
                                text: ""
                            },
                            subtitle: {
                                text: r.title,
                                y: 0,
                                style: {
                                    "font-size": "fullscreen" === a.mode ? "20px" : "16px",
                                    color: "dark" === a.theme ? "#FFFFFF" : "#333333"
                                }
                            },
                            exporting: {
                                filename: r.title
                            },
                            mapNavigation: {
                                enabled: !1
                            },
                            plotOptions: {
                                map: {
                                    borderColor: "#fff",
                                    nullColor: "#E6E8EA",
                                    events: {
                                        legendItemClick: function () {
                                            return !1
                                        }
                                    }
                                },
                                mapbubble: {
                                    showInLegend: !1,
                                    cursor: r.is_drill || "2" == a.optional.linked_chart_type ? "pointer" : "default",
                                    marker: {
                                        enabled: !1,
                                        states: {
                                            select: {
                                                fillColor: "#7BE",
                                                lineWidth: 2,
                                                lineColor: "#59C"
                                            }
                                        }
                                    },
                                    dataLabels: {
                                        align: "center",
                                        allowOverlap: h,
                                        crop: !1,
                                        enabled: !(a.isDashboardMode && (a.gridWidth < 4 || a.gridHeight < 4)),
                                        style: {
                                            color: "dark" == a.theme ? "#fff" : "#555",
                                            textOutline: "dark" == a.theme ? "0 0 3px rgba(0,0,0,0.2)" : null
                                        }
                                    },
                                    stickyTracking: !1
                                }
                            },
                            legend: {
                                enabled: !1
                            },
                            tooltip: {
                                crosshairs: null,
                                formatter: a._generateTooltipFormatter()
                            },
                            series: [{
                                mapData: _,
                                enableMouseTracking: !1
                            }, {
                                allowPointSelect: "2" == a.optional.linked_chart_type,
                                type: "mapbubble",
                                mapData: m,
                                name: o.y[0].name,
                                joinBy: "hz-code",
                                data: v,
                                minSize: x + "%",
                                maxSize: "10%",
                                color: "rgba(121,188,233,0.5)",
                                dataLabels: {
                                    useHTML: !0,
                                    formatter: function () {
                                        var e = [];
                                        return void 0 !== this.point.z && null !== this.point.z && (r.show_datalabels || I) && (e.push('<p class="bdp-datalabels datalabels-map datalabels-map-value text-center">'), e.push(bdpChart.helper.dataLabelFormatter(o.y[0].formatter, this.point.z, o.y[0].aggregator)), e.push("</p>")), e.push('<p class="datalabels-map text-center">'), e.push(this.key), e.push("</p>"), e.join("")
                                    }
                                }
                            }]
                        });
                    "fullscreen" === a.mode && $.extend(!0, L, {
                        tooltip: {
                            style: {
                                fontSize: "14px"
                            }
                        }
                    }), "dark" === a.theme && $.extend(!0, L, {
                        plotOptions: {
                            map: {
                                borderColor: "rgba(0, 0, 0, 0.1)",
                                nullColor: "#343752",
                                dataLabels: {
                                    style: {
                                        color: "rgba(255, 255, 255, .3)"
                                    }
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: "none",
                            borderWidth: 0,
                            style: {
                                padding: 0
                            }
                        }
                    });
                    var A = a.deviceStyle.plotOptions ? a.deviceStyle.plotOptions.map : {};
                    $.extend(!0, L.plotOptions.map, A),
                        function (a) {
                            var i = a.info,
                                r = L.series,
                                o = i.color_setting;
                            if (n(a, r), delete i.color_setting.is_series, !$.isEmptyObject(o)) {
                                if (1 != o.mode) {
                                    var s = bdpChart.colors[o.theme],
                                        l = o.enum_color_map;
                                    o.field[0].fid == i.xAxis[0].fid && (angular.forEach(r, function (e) {
                                        angular.forEach(e.data, function (e, t) {
                                            var a = angular.isArray(e) ? e[0] : e["hz-code"];
                                            l.hasOwnProperty(a) ? e.color = l[a].color : e.color = s[t % s.length]
                                        })
                                    }), delete L.colorAxis)
                                } else if (1 == o.mode) {
                                    delete L.colorAxis;
                                    var d = [],
                                        c = o.range_color,
                                        p = v.map(function (e, t) {
                                            return a.data.colors[e._i]
                                        });
                                    p.map(function (e) {
                                        null !== e && d.push(Number(e))
                                    });
                                    var u = [].concat(d).sort(function (e, t) {
                                            return e - t
                                        }),
                                        h = u[0] || 0,
                                        f = u[u.length - 1] || 0;
                                    !c.disable_max && c.max && (f = c.max), !c.disable_min && c.min && (h = c.min);
                                    var g = t.linearRangeColor(c.start_color, c.end_color),
                                        m = t.createLinearScale(c, d),
                                        _ = [],
                                        b = c.step;
                                    if (b > 1) {
                                        for (T = 0; T < b - 1; T++) _.push(g(T / (b - 1)));
                                        _.push(g(1))
                                    }
                                    angular.forEach(r, function (e) {
                                        angular.forEach(e.data, function (e, t) {
                                            var a = d[t],
                                                i = m(a);
                                            if (b) {
                                                var n = Math.floor(b * i);
                                                n = Math.min(n, b - 1), e.color = _[n]
                                            } else e.color = g(i)
                                        })
                                    }), $.extend(!0, L.legend, {
                                        enabled: !0,
                                        align: "left",
                                        verticalAlign: "bottom",
                                        floating: !0,
                                        y: -5,
                                        layout: "horizontal",
                                        valueDecimals: k,
                                        backgroundColor: null,
                                        symbolRadius: 0,
                                        symbolHeight: 0,
                                        symbolWidth: 0,
                                        useHTML: !0,
                                        itemHoverStyle: {
                                            "pointer-events": "none"
                                        },
                                        labelFormatter: function () {
                                            var a = bdpChart.helper.createLinearGradientCss(c.start_color, c.end_color, c.step),
                                                i = t.escapeHtml(e(o.field[0], o.aggregator));
                                            return '<div class="map-legend-row"><span class="map-legend-text-left">' + bdpChart.helper.numericSymbols(h) + '</span><span class="map-legend-text-right">' + bdpChart.helper.numericSymbols(f) + '</span></div><div class="color-linear-gradient map-legend" style="' + a + '"></div><div class="map-legend-name" title="' + i + '">' + i + "</div>"
                                        }
                                    })
                                }
                                angular.forEach(r, function (e) {
                                    angular.forEach(e.data, function (e, t) {
                                        a.data.y[0].hasOwnProperty("warn_data") && 1 == a.data.y[0].warn_data[t] && (e.color = "rgba(255, 133, 90,0.5)")
                                    })
                                })
                            }
                        }(a), a.once("load", function () {
                        if (y && "edit" === a.mode) {
                            var e = "";
                            e = "zh" === u ? "有" + y + "条未知地区" : "There are " + y + " unknown area.";
                            var t = '<div class="map-mismatch-text pa guide"><p><a class="cursor-pointer">' + e + '</a></p><div class="guide-tip dropdown-wrap">' + bdp.utils.encodeHTML(o.x[0].mismatch.join("、")) + "</div></div>";
                            a.$elem.append(t)
                        }
                    }), a.$elem.highcharts("Map", L)
                }
            }(),
            function () {
                bdpChart.setSankeySpecialOption = function (e) {
                    function t(t, a) {
                        if (t.origin_data = $.extend(!0, {}, t.data), "date" === t.data_type) {
                            var i = t.granularity,
                                n = t.granularity_name || "",
                                r = t.month_start_day || 0;
                            "week" === i && (r = t.week_start_day_of_week);
                            var o, s = e.data.x[a].data,
                                l = s.length;
                            0 === a ? o = s[l - 1] - s[0] : 1 === a && (o = s[l - 1].name - s[0].name), i = bdpChart.helper.setGranularityByDate(i, o), 0 === a ? t.data.forEach(function (e, a) {
                                t.data[a] = bdpChart.helper.checkGranularity(i, e, n, r)
                            }) : 1 === a && t.data.forEach(function (e, a) {
                                t.data[a].name = bdpChart.helper.checkGranularity(i, e.name, n, r)
                            }), t.data_type = "string"
                        }
                    }

                    function a(e) {
                        this.nodeWidth = 20, this.padding = 28, this.paddingmultiplier = 10, this.lowopacity = .1, this.highopacity = .2, this.d3Elem = d3.selectAll(i.toArray()), this.data = e.data, this.info = e.info, this.isMobileMode = e.isMobileMode
                    }
                    var i = e.$elem,
                        n = e.mode,
                        r = e.theme,
                        o = e.info.yAxis[0].formatter,
                        s = bdpChart.helper,
                        l = "dark" === e.theme ? 1 : 2;
                    if (bdpChart.language || (bdpChart.language = "zh"), !e.data.x.length || !e.data.x[1].data.length) {
                        var d = "zh" === bdpChart.language ? "当前图表无数据" : "No data to display";
                        return void i.html('<div class="chart-error"><p>' + d + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                    }
                    var c = "zh" === bdpChart.language ? "数值" : "Value",
                        p = {
                            top: 0,
                            right: 0,
                            bottom: 30,
                            left: 0
                        };
                    e.isDashboardMode && (p.top = 8);
                    var u = 1 == l ? "#fff" : "#000",
                        h = 1 == l ? "fullscreen" === n ? "#fff" : "rgba(255, 255, 255, .5)" : "#606060",
                        f = "fullscreen" === n ? "12px" : "10px";
                    "dark" === r && (this.lowopacity = .1), a.prototype = {
                        constructor: a,
                        initSvg: function () {
                            var a = this;
                            a.color = a._getColor(), t(a.data.x[0], 0), t(a.data.x[1], 1);
                            var r = 0,
                                o = 0;
                            if ("edit" === n && (o = 64, r = 80), a.isMobileMode && (o = 32, r = 32, e.isDashboardMode && (o = 0, r = 0)), a.width = i[0].offsetWidth - r, a.height = i[0].offsetHeight - o, a.width * a.height <= 0) return !1;
                            a.svg = a.d3Elem.append("svg").attr("style", 'font-family:arial, "lucida grande", "lucida sans unicode", verdana, helvetica, sans-serif;font-size:12px;').attr("width", a.width).attr("height", a.height).attr("viewBox", "0 0 " + a.width + " " + a.height).attr("perserveAspectRatio", "xMinYMid"), a._setSeries(), a.draw()
                        },
                        _setSeries: function () {
                            for (var e = this.data, t = {
                                nodes: [],
                                links: []
                            }, a = [], i = 0; i < e.x[0].data.length; i++) {
                                t.nodes[i] = {
                                    origin_name_value: e.x[1].origin_data[i].name,
                                    origin_value: e.x[0].origin_data[i]
                                };
                                var n = e.x[0].data[i],
                                    r = e.x[1].data[i].name,
                                    o = e.x[1].data[i].value;
                                a.indexOf(n) < 0 ? (a.push(n), t.nodes[i].layer = a.length - 1) : t.nodes[i].layer = a.indexOf(n), t.nodes[i].name = r, t.nodes[i].value = o
                            }
                            this.layers = a.length, t.links = e.y[0].data, this.sankeyData = t
                        },
                        _getLayers: function () {
                            return this.layers
                        },
                        _getColor: function () {
                            var e = bdpChart.getColorsByType("C300", "bdp");
                            return d3.scale.ordinal().range(e)
                        },
                        _setColor: function (e) {
                            var t = this.color(e),
                                a = this.info.color_setting || {};
                            return a && a.enum_color_map && a.enum_color_map.hasOwnProperty(e) && (t = a.enum_color_map[e].color), t
                        },
                        draw: function () {
                            var e = this,
                                t = e.sankeyData,
                                a = e.svg;
                            a.selectAll("g").remove();
                            var i;
                            this.sankey = i = d3.sankey().nodeWidth(e.nodeWidth).nodePadding(e.paddingmultiplier).size([e.width, e.height - p.top - p.bottom]);
                            var n = i.reversibleLink();
                            i.nodes(t.nodes).links(t.links).layout(32), e._initBackground(a), e._renderLinks(i, a, n, t.links), e._renderNodes(i, a, n, t.nodes), e._renderXaxisLabel(i, a)
                        },
                        _initBackground: function (e) {
                            e.append("rect").attr("class", "sankey-background").attr("width", this.width).attr("height", this.height).attr("fill", "transparent")
                        },
                        _renderNodes: function (e, t, a, n) {
                            function r(t) {
                                d3.select(this).attr("transform", "translate(" + t.x + "," + (t.y = Math.max(0, Math.min(l.height - p.top - p.bottom - t.dy, d3.event.y))) + ")"), e.relayout(), l.path1.attr("d", a(1)), l.path0.attr("d", a(0)), l.path2.attr("d", a(2))
                            }
                            var l = this,
                                d = "date" === l.info.xAxis[1].data_type,
                                u = t.append("g").attr("transform", "translate(" + p.left + "," + p.top + ")").selectAll(".node").data(n).enter().append("g").attr("class", "node").attr("transform", function (e) {
                                    return "translate(" + e.x + "," + e.y + ")"
                                }).attr("posx", function (e) {
                                    return e.x
                                }).call(d3.behavior.drag().origin(function (e) {
                                    return e
                                }).on("dragstart", function () {
                                    this.parentNode.appendChild(this)
                                }).on("drag", r)),
                                h = u.append("rect").attr("height", function (e) {
                                    return Math.max(0, e.dy)
                                }).attr("width", l.nodeWidth).style("fill", function (e) {
                                    return e.fill ? e.color = e.fill : e.color = l._setColor((d ? e.origin_name_value.toString() : e.name).replace(/ .*/, ""))
                                });
                            l.isMobileMode ? h.on("click", function (e) {
                                l.selectedPoint = null, $(".chart-drilldown").hide(), d3.selectAll(".link").style("opacity", l.lowopacity), t.selectAll(".link").filter(function (t) {
                                    return t.source == e || t.target == e
                                }).transition().style("opacity", l.highopacity), l.tooltip = i.find(".sankey-tooltip");
                                var a = "";
                                l.info.yAxis[0].hasOwnProperty("unit_adv") && (a = l.info.yAxis[0].unit_adv), l.tooltip.remove(), l.tooltip = $('<div class="sankey-tooltip"><p class="tooltips-title">' + s.escapeHtml(e.name) + '</p><div class="tooltips-point-wrap"><div class="tooltips-table"><div class="tooltips-item"><div class="tooltips-val" style="color:' + e.color + '">' + s.dataLabelFormatter(o, e.value) + a + '</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(c)) + "</div></div></div></div></div>"), i.append(l.tooltip)
                            }) : h.on("mouseover", function (e) {
                                t.selectAll(".link").filter(function (t) {
                                    return t.source == e || t.target == e
                                }).transition().style("opacity", l.highopacity), l.tooltip = i.find(".sankey-tooltip");
                                var a = "";
                                if (l.info.yAxis[0].hasOwnProperty("unit_adv") && (a = l.info.yAxis[0].unit_adv), !l.tooltip.length) {
                                    var n = l.setTooltipPosition();
                                    l.tooltip = $('<div class="sankey-tooltip" style="position: absolute; left:' + n.x + "px;top:" + n.y + 'px;"><p class="text-center tooltips-title">' + s.escapeHtml(e.name) + '</p><table class="tooltips-table"><tr style="color:' + e.color + '"><td>' + c + "：</td><td>" + s.dataLabelFormatter(o, e.value) + a + "</td></tr></table></div>"), i.append(l.tooltip)
                                }
                            }).on("mouseout", function (e) {
                                t.selectAll(".link").filter(function (t) {
                                    return t.source === e || t.target === e
                                }).transition().style("opacity", l.lowopacity), l.tooltip.remove()
                            }).on("mousemove", function (e) {
                                var t = l.setTooltipPosition();
                                l.updateTooltipPosition(t.x, t.y)
                            }), l._renderText(e, u)
                        },
                        setTooltipPosition: function () {
                            if (null === this.tooltip) return {
                                x: 0,
                                y: 0
                            };
                            var e = this.tooltip.outerWidth(),
                                t = this.tooltip.outerHeight(),
                                a = d3.event.clientX + 10,
                                n = d3.event.clientY,
                                r = i[0].getBoundingClientRect();
                            return d3.event.pageX + e > r.right && (a = a - e - 20), d3.event.pageY + t > r.bottom - 30 && (n -= t), {
                                x: a - r.left,
                                y: n - r.top
                            }
                        },
                        updateTooltipPosition: function (e, t) {
                            this.tooltip.css({
                                left: e,
                                top: t
                            })
                        },
                        _renderLinks: function (t, a, n, r) {
                            var l = this,
                                d = l.link = a.append("g").attr("transform", "translate(" + p.left + "," + p.top + ")").selectAll(".link").data(r).enter().append("g").attr("class", "link").sort(function (e, t) {
                                    return t.dy - e.dy
                                });
                            l.path0 = d.append("path").attr("d", n(0)), l.path1 = d.append("path").attr("d", n(1)), l.path2 = d.append("path").attr("d", n(2)), l.link.attr("fill", u).attr("opacity", l.lowopacity), l.isMobileMode ? (l.link.on("click", function (e) {
                                l.selectedPoint = e, l.info.is_drill && $(".chart-drilldown").show(), d3.selectAll(".link").style("opacity", l.lowopacity), d3.select(this).style("opacity", l.highopacity), l.tooltip = i.find(".sankey-tooltip");
                                var t = "";
                                l.info.yAxis[0].hasOwnProperty("unit_adv") && (t = l.info.yAxis[0].unit_adv), l.tooltip.remove(), l.tooltip = $('<div class="sankey-tooltip"><p class="tooltips-title">' + e.source.name + " → " + e.target.name + '</p><div class="tooltips-point-wrap"><div class="tooltips-table"><div class="tooltips-item"><div class="tooltips-val" style="color:' + e.source.color + '">' + s.dataLabelFormatter(o, e.value) + t + '</div><div class="tooltips-label">' + $.trim(bdp.utils.encodeHTML(c)) + "</div></div></div></div></div>"), i.append(l.tooltip)
                            }), !e.isDashboardMode && l.link.length && l.link[0][0] && l.link[0][0].__onclick(), l._bindMobDrilldown()) : l.link.on("mouseover", function (e) {
                                d3.select(this).style("opacity", l.highopacity), l.tooltip = i.find(".sankey-tooltip");
                                var t = "";
                                if (l.info.yAxis[0].hasOwnProperty("unit_adv") && (t = l.info.yAxis[0].unit_adv), !l.tooltip.length) {
                                    var a = l.setTooltipPosition();
                                    l.tooltip = $('<div class="sankey-tooltip" style="position: absolute; left:' + a.x + "px;top:" + a.y + 'px;"><p class="text-center tooltips-title">' + e.source.name + " → " + e.target.name + '</p><table class="tooltips-table"><tr style="color:' + e.source.color + '"><td>' + c + "：</td><td>" + s.dataLabelFormatter(o, e.value) + t + "</td></tr></table></div>"), i.append(l.tooltip)
                                }
                            }).on("mouseout", function (e) {
                                d3.select(this).style("opacity", l.lowopacity), l.tooltip.remove()
                            }).on("mousemove", function (e) {
                                var t = l.setTooltipPosition();
                                l.updateTooltipPosition(t.x, t.y)
                            }).on("click", function (e) {
                                l._drillDown(e)
                            }), l.info.is_drill && l.link.attr("cursor", "pointer")
                        },
                        _drillDown: function (t) {
                            this.info.is_drill && e.emit("drilldown", t, e)
                        },
                        _bindMobDrilldown: function () {
                            var t = this,
                                a = $(".chart-drilldown");
                            t.info.is_drill ? (a.show(), a.off("click.drilldown").on("click.drilldown", function () {
                                e.emit("drilldown", t.selectedPoint, e)
                            })) : a.hide()
                        },
                        _renderText: function (e, t) {
                            var a = this;
                            t.append("text").attr("x", -4).attr("y", function (e) {
                                return e.dy / 2
                            }).attr("dy", ".35em").attr("class", "label-text").attr("fill", h).attr("stroke", "none").style("font-size", f).attr("text-anchor", "end").attr("transform", null).text(function (e) {
                                return e.name
                            }).filter(function (e) {
                                return e.x < a.width / 2
                            }).attr("x", 4 + e.nodeWidth()).attr("text-anchor", "start"), t.append("text").attr("x", function (e) {
                                return -e.dy / 2
                            }).attr("y", function (e) {
                                return e.dx / 2 + 4
                            }).attr("transform", "rotate(270)").attr("fill", "#fff").attr("stroke", "none").attr("text-anchor", "middle").text(function (e) {
                                if (e.dy > 50) return s.dataLabelFormatter(o, e.value)
                            })
                        },
                        _renderXaxisLabel: function (e, t) {
                            var a = this;
                            t.append("g").attr("class", "sankey-xaxis-label").attr("transform", "translate(0," + (a.height - 10) + ")");
                            var i, n = a.data.x[0],
                                r = bdp.utils.arrayUnique(n.data),
                                o = a.getLayerPosition(t),
                                s = o[1],
                                l = 0,
                                d = [],
                                c = "visible",
                                p = [];
                            r.forEach(function (e, n) {
                                var u = t.select(".sankey-xaxis-label").append("text");
                                if (u.text(e).attr("fill", h).style("font-size", f), i = a._getTextWidth(u), l = 0 === n ? o[0] : n === r.length - 1 ? o[n] - i + a.nodeWidth : o[n] - .5 * i + .5 * a.nodeWidth, d.push([l, i]), 0 === n) c = i + a.nodeWidth >= s ? "hidden" : "visible";
                                else if (n < r.length - 1) {
                                    var g = Math.ceil(i / s);
                                    if (g <= 1) c = "visible", "visible" === p[n - 1] && d[n - 1][0] + d[n - 1][1] >= d[n][0] && (c = "hidden");
                                    else
                                        for (var m = g - 1; m > 0; m--) {
                                            if (n - m < 0) {
                                                c = "hidden";
                                                break
                                            }
                                            if ("visible" === p[n - m]) {
                                                c = "hidden";
                                                break
                                            }
                                            c = "visible"
                                        }
                                } else c = i + a.nodeWidth >= s ? "hidden" : "visible", "visible" === p[n - 1] && d[n - 1][0] + d[n - 1][1] >= d[n][0] && (c = "hidden");
                                p.push(c), u.attr("transform", "translate(" + l + ",0)").style("visibility", c)
                            })
                        },
                        _getTextWidth: function (e) {
                            var t = 0;
                            return e.each(function (e) {
                                t = this.getComputedTextLength()
                            }), t
                        },
                        getLayerPosition: function () {
                            var e = this.sankeyData.nodes,
                                t = [];
                            return e.forEach(function (e, a) {
                                var i = e.x;
                                t.indexOf(i) < 0 && t.push(i)
                            }), t.sort(function (e, t) {
                                return e - t
                            })
                        },
                        resize: function () {
                            var e = this,
                                t = i[0].offsetWidth,
                                a = i[0].offsetHeight;
                            e.svg && (e.svg.attr("width", t).attr("height", a), e.sankey.size([t, a - 30]))
                        }
                    };
                    var g = new a(e);
                    g.initSvg(), window.onresize = function () {
                        g.resize()
                    }
                }
            }(),
            function () {
                function e(e) {
                    var t = bdpChart.language || "zh",
                        a = "zh" === t ? "当前图表无数据" : "No data to display";
                    e.html('<div class="chart-error"><p>' + a + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                }

                function t(e, t, i, n) {
                    t.find(".chart-text-updown").remove();
                    var i = n.data;
                    if (2 === n.info.y.length) {
                        var r, o = i.y.length / 2,
                            s = i.y[e + o],
                            l = s.data[0],
                            d = s.formatter,
                            c = s.aggregator;
                        r = null == l ? "--" : a.dataLabelFormatter(d, l, c);
                        var p = $('<div class="chart-text-updown nowrap">'),
                            u = s.compare_names[0] || s.nick_name || s.name,
                            h = $('<span class="hd nowrap">').text(u);
                        p.append(h);
                        var f, g, m = (n.info.tb_conditional_formatting || []).some(function (e) {
                            if (e.fid === s.fid && e.uniq_id === s.uniq_id) return !0
                        });
                        s.series_color ? f = s.series_color : m ? s.cell_styles && s.cell_styles.length > 0 && s.cell_styles[0] ? (g = s.cell_styles[0].shape_type || "", f = s.cell_styles[0].color) : f = "#A3ABB0" : l > 0 ? (g = "arrow-up", f = "#EF4B4A") : null == l ? (g = void 0, f = "#A3ABB0") : 0 == l ? (g = "arrow-equal", f = "#A3ABB0") : (g = "arrow-down", f = "#40B27E");
                        var _ = "";
                        g && (_ = '<i class="icomoon icomoon-' + g + '"></i>'), p.append('<span class="bd up" style="color:' + f + ';">' + _ + r + "</span>"), t.append(p)
                    }
                }
                var a = bdpChart.helper;
                bdpChart.setTextSpec = function (i) {
                    var n = i.$elem,
                        r = i.data,
                        o = r.y[0];
                    if (!o.data.length) return e(n), !1;
                    n.find(".chart-error").remove(), "fullscreen" === i.mode && n.html("");
                    var s = o.formatter,
                        l = o.aggregator,
                        d = o.nick_name || o.name;
                    n.addClass("text-chart"), n.html("");
                    var c = r.y.length / i.info.y.length,
                        p = c;
                    i.isMobileMode && (c = 1);
                    var u = n;
                    if (c > 1) {
                        var h, f;
                        i.info.split_compare_setting ? (h = i.info.split_compare_setting.rows, f = i.info.split_compare_setting.cols) : h = f = c > 16 ? 4 : Math.ceil(Math.sqrt(c)), c > h * f && n.css("overflow-y", "auto");
                        var g = h * f < c && i.isDashboardMode ? n.width() - 15 : n.width(),
                            m = g / f,
                            _ = n.height() / h,
                            v = {
                                left: parseInt(n.css("padding-left")),
                                top: parseInt(n.css("padding-top"))
                            }
                    }
                    for (var b = (i.info.y.length, 0); b < c; b++) {
                        var y = r.y[b],
                            w = null === y.data[0] ? "--" : +y.data[0],
                            C = $('<div class="chart-text-box">'),
                            x = $('<div class="chart-text-box-inner">'),
                            k = $('<div class="chart-text-item">'),
                            D = $('<div class="chart-text-base">'),
                            S = $('<div class="chart-text-title">'),
                            T = $('<div class="chart-text-value nowrap">');
                        p > 1 && 1 == c && C.addClass("single-dimension");
                        var I, L = d,
                            A = (i.info.tb_conditional_formatting || []).some(function (e) {
                                if (e.fid === y.fid && e.uniq_id === y.uniq_id) return !0
                            });
                        if (y.series_color ? T.css("color", y.series_color) : A && (y.cell_styles && y.cell_styles.length > 0 && y.cell_styles[0] ? (I = y.cell_styles[0].shape_type || "", I && T.append('<i class="icomoon icomoon-' + I + '"></i>'), T.css("color", y.cell_styles[0].color)) : T.css("color", "#A3ABB0")), y.compare_values && y.compare_values.length && (L = d = y.compare_values[0], k.append($('<div class="chart-text-title">').text(y.compare_values.slice(1).join("_")))), "edit" === i.mode ? (L = $('<span class="nick-name-value nowrap">').text(d), S.append(L)) : S.text(L), D.append(S).append(T), k.append(D), x.append(k), C.append(x), c > 1) {
                            C = $("<div>").append(C).addClass("grid-box");
                            var E = {
                                left: m * (b % f) + v.left,
                                top: _ * parseInt(b / f) + v.top
                            };
                            C.css({
                                position: "absolute",
                                left: E.left,
                                top: E.top,
                                width: m,
                                height: _
                            })
                        }
                        if (u.append(C), NaN === w || isNaN(w)) T.text("--");
                        else {
                            var F = $("<div>").append($("<sub>").text(o.unit_adv));
                            w = a.dataLabelFormatter(s, w, l);
                            var M = T.append(w + F.html());
                            "fullscreen" != i.mode && "edit" != i.mode && M.attr("title", w)
                        }
                        t(b, k, r, i), "edit" === i.mode && (k.find(".chart-text-updown .hd").off("click.nickname").on("click.nickname", function () {
                            i.emit("setNickName", "event", 1)
                        }), n.find(".chart-text-title").off("click.nickname").on("click.nickname", ".nick-name-value", function () {
                            i.emit("setNickName", "event", 0)
                        }))
                    }
                }
            }(),
            function () {
                bdpChart.setWaterfallSpecialOption = function (e) {
                    var t, a, i = [],
                        n = e.data,
                        r = e.info,
                        o = e.options.series[0].data,
                        s = bdpChart.helper,
                        l = $.cookie("locale") || "zh",
                        d = n.x.length ? n.x[0].data_type : "",
                        c = 1 == n.x.length && "date" == d ? "datetime" : "category",
                        p = r.waterfall_setting || {
                                show_sum: !r.xAxis.length || "date" !== r.xAxis[0].data_type,
                                sum_name: "en" === l ? "Sum" : "累计值",
                                color_theme: bdpChart.getColorsByType("C320", "bdp")
                            },
                        u = p.show_sum,
                        h = p.sum_name,
                        f = p && p.color_theme || bdpChart.getColorsByType("C320", "bdp"),
                        g = {
                            color: f[1],
                            upColor: f[0]
                        },
                        m = n.y[0].formatter;
                    if ("date" === d) var _ = s.getGranularity(n, n.x[0].data.length),
                        v = _.granularity || "day",
                        b = _.granularity_name || "",
                        y = r.xAxis[0].month_start_day || 0;
                    if (e.data.x.length) {
                        var w = n.x[0].data;
                        if ("date" === d && 1 === e.data.x.length) {
                            var C, x = w[w.length - 1] - w[0],
                                k = {
                                    year: bdp.utils.isLeapYear(w[w.length - 1]) ? 316224e5 : 31536e6,
                                    quarter: 79488e5,
                                    month: 26784e5,
                                    week: 6048e5,
                                    day: 864e5,
                                    hour: 36e5,
                                    minute: 6e4,
                                    second: 1e3,
                                    c_second: 1e3,
                                    c_minute: 6e4,
                                    c_hour: 36e5,
                                    g_hour: 36e5,
                                    g_minute: 6e4,
                                    g_second: 1e3
                                };
                            v = s.setGranularityByDate(v, x);
                            var D = o[o.length - 1].x;
                            if ("month" === v) {
                                var S = new Date(D).getMonth() + 1;
                                [1, 3, 5, 7, 8, 10, 12].indexOf(S) > -1 ? C = D + k[v] : [4, 6, 9, 11].indexOf(S) > -1 ? C = D + k[v] - 864e5 : 2 === S && (C = bdp.utils.isLeapYear(D) ? D + k[v] - 1728e5 : D + k[v] - 2592e5)
                            } else C = D + k[v];
                            t = {
                                name: C,
                                isSum: !0,
                                x: C,
                                formatter: e.data.y[0].formatter
                            }
                        } else t = {
                            name: h,
                            isSum: !0,
                            formatter: e.data.y[0].formatter
                        };
                        2 === e.data.x.length && e.options.xAxis.categories.push({
                            categories: [p.sum_name],
                            name: ""
                        }), angular.forEach(o, function (e, t) {
                            a = {
                                name: e.name,
                                nick_name: n.y[0].nick_name,
                                x: "date" === d ? e.x : this.x,
                                y: 1 * n.y[0].data[t],
                                formatter: n.y[0].formatter
                            }, i.push(a)
                        })
                    } else angular.forEach(e.data.y, function (e, t) {
                        a = {
                            name: e.nick_name || e.name,
                            nick_name: e.nick_name,
                            y: 1 * e.data[0],
                            formatter: m
                        }, i.push(a)
                    }), t = {
                        name: h,
                        isSum: !0,
                        formatter: m
                    };
                    u && i.push(t);
                    var T = {
                        chart: {
                            type: "waterfall"
                        },
                        legend: {
                            enabled: !1
                        },
                        plotOptions: {
                            waterfall: {
                                lineColor: "dark" === e.theme ? "rgba(255,255,255,0.35)" : "#333",
                                borderWidth: 0,
                                lineWidth: 1,
                                dataLabels: {
                                    formatter: function () {
                                        var e = this.point.aggregator;
                                        return s.dataLabelFormatter(m, this.y, e)
                                    }
                                }
                            }
                        },
                        xAxis: {
                            type: c,
                            labels: {
                                enabled: !0
                            }
                        }
                    };
                    return e.options.series = [{
                        upColor: g.upColor,
                        color: g.color,
                        data: i
                    }], 1 === e.data.x.length && (T.xAxis.labels.formatter = function () {
                        var t = this.axis.chart.options.series[0].data,
                            a = this.value;
                        if (this.isLast && u && a === t[t.length - 1].x) return s.drawGridPlotLine(this, e, r, "C320", "x_date"), h;
                        if ("date" === d) {
                            if ("week" === v) {
                                y = 1, b && (y = r.xAxis[0].week_start_day_of_week);
                                var i = new Date(a).getDay();
                                i > y ? a -= 864e5 * (i - y) : a += 864e5 * (y - i)
                            }
                            return s.drawGridPlotLine(this, e, r, "C320", "x_date"), s.checkGranularity(v, a, b, y)
                        }
                        return a
                    }), T
                }
            }(),
            function (e) {
                function t(e) {
                    this.mapOption = {
                        centerLng: g.lng,
                        centerLat: g.lat,
                        zoom: m
                    }, this.animationThreshold = 2e3, this.watermark = e ? e.watermark : null, this.$elem = e.$elem, this.chartInstance = e, this.isMobileMode = e.isMobileMode, this.mobileSingleChart = e.mobileSingleChart
                }

                function a(e) {
                    if (e.nick_name) return e.nick_name;
                    var t = e.name;
                    return e.aggregator && 1 !== !e.is_build_aggregated && C[e.aggregator] && (t += " (" + C[e.aggregator] + ")"), t
                }

                function i(e, t) {
                    var a, i = e.map(function (e) {
                            return Number(e)
                        }),
                        n = bdpChart.helper.linearRangeColor(t.start_color, t.end_color),
                        r = bdpChart.helper.createLinearScale(t, i),
                        o = [],
                        s = t.step;
                    if (s > 1) {
                        for (a = 0; a < s - 1; a++) o.push(n(a / (s - 1)));
                        o.push(n(1))
                    }
                    return function (e) {
                        var t, a = r(e);
                        if (s) {
                            var i = Math.floor(s * a);
                            i = Math.min(i, s - 1), t = o[i]
                        } else t = n(a);
                        return t
                    }
                }

                function n(e, t, a) {
                    if (isNaN(e)) return 1;
                    var i, n = t.length,
                        r = n - 1;
                    for (i = 0, n = t.length; i < n; i++) {
                        var o = t[i];
                        if (e < o[0]) {
                            r = i;
                            break
                        }
                        if (o[0] <= e && e < o[1]) {
                            r = i;
                            break
                        }
                    }
                    return a ? n - r : r + 1
                }

                function r(e) {
                    e || (e = document.createElement("canvas").getContext("2d"));
                    var t = e.backingStorePixelRatio || e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;
                    return (window.devicePixelRatio || 1) / t
                }

                function o(e) {
                    for (var t = e.split(","), a = t[0].match(/:(.*?);/)[1], i = atob(t[1]), n = i.length, r = new Uint8Array(n); n--;) r[n] = i.charCodeAt(n);
                    var o = new Blob([r], {
                        type: a
                    });
                    return URL.createObjectURL(o)
                }
                var s = JSON.parse('{"USE_CUSTOM_MAP":false,"MAP_COORDTYPE":"bd09ll","DEFAULT_CENTER":{"lng":105.403119,"lat":38.028658},"DEFAULT_ZOOM":5}'),
                    l = s && s.USE_CUSTOM_MAP,
                    d = s && s.DARK_STYLE_TMS,
                    c = s && s.LIGHT_STYLE_TMS,
                    p = s && s.WMTS_CFG,
                    u = s && s.CUSTOM_CRS,
                    h = s && s.FORCE_DRAW_EVEYTHING,
                    f = s && s.MAP_COORDTYPE,
                    g = s && s.DEFAULT_CENTER,
                    m = s && s.DEFAULT_ZOOM,
                    _ = s && s.MIN_ZOOM,
                    v = s && s.MAX_ZOOM,
                    b = (s && s.COPY_RIGHT_TEXT, {
                        funcQueue: [],
                        loadLibInProgress: !1
                    });
                bdpChart.setGisSpec = function (e) {
                    window.HOST_TYPE = "2";
                    var a = function () {
                        var a = e.gisMap || new t(e);
                        e.info.meta.layers && e.info.meta.layers.forEach(function (t) {
                            var a = e.info.tb_gis_type[t.tb_id] || 0;
                            t.coordType = w[a]
                        }), a.render(e.$elem[0], e.data.layers, e.info.meta), e.gisMap = a, e.$elem.addClass("chart-gis"), e.$elem.data("bdp-chart-instance", e)
                    };
                    if (l) thirdPluginLoader({
                        initFun: a,
                        libSrc: "https://s1.bdp.cn/static/js/lib/mapv/mapv.leaflet.min_2f8876b.js",
                        libId: window.L && window.Mapv && window.VizToolControl
                    }, b);
                    else {
                        window.BMap_loadScriptTime = (new Date).getTime();
                        thirdPluginLoader({
                            initFun: a,
                            libSrc: "https://api.map.baidu.com/getscript?v=2.0&ak=1XjLLEhZhQNUzd93EjU5nOGQ",
                            otherSrc: "https://s1.bdp.cn/static/js/lib/mapv/mapv.min_99b2503.js",
                            libId: window.BMap && window.VizToolControl && window.LegendControl
                        }, b)
                    }
                };
                var y = bdpChart.helper,
                    w = {
                        0: "bd09ll",
                        1: "gcj02",
                        2: "gcj02",
                        3: "gcj02",
                        4: "gcj02",
                        5: "wgs84",
                        6: "gcj02",
                        7: "wgs84"
                    },
                    C = {
                        SUM: "求和",
                        AVERAGE: "平均值",
                        AVG: "平均值",
                        MIN: "最小值",
                        MAX: "最大值",
                        COUNT: "计数",
                        COUNT_DISTINCT: "去重计数",
                        sum: "求和",
                        average: "平均值",
                        avg: "平均值",
                        min: "最小值",
                        max: "最大值",
                        count: "计数",
                        count_distinct: "去重计数",
                        YoY: "同比",
                        QoQ: "环比",
                        TOTAL: "总计",
                        MED: "中位数",
                        PERCENTILE: "百分位",
                        PERCENT_5: "5",
                        PERCENT_10: "10",
                        PERCENT_25: "25",
                        PERCENT_50: "50",
                        PERCENT_75: "75",
                        PERCENT_90: "90",
                        PERCENT_95: "95"
                    };
                t.prototype = {
                    constructor: t,
                    render: function (e, t, a) {
                        var i = this;
                        this.layerData = t, this.layerInfo = a.layers, i.$elem = $(e), a.center && (this.mapOption.centerLng = a.center[0], this.mapOption.centerLat = a.center[1]), a.zoom && (this.mapOption.zoom = a.zoom), this.bmap ? (this.clear(), this.setMapStyle(), this.setCenterAndZoom(), this.configData(), this.emit("loaded"), this.chartInstance.emit("load", this.chartInstance), $(e).addClass("bdp-chart-loaded"), this.vizToolControl && this.vizToolControl.reset(), this.legendControl && this.legendControl.reset(), this.labelControl && this.labelControl.reset()) : (this.initBaseMap(e), this.setMapStyle(), this.setCenterAndZoom(), this.once("tilesloaded", function () {
                            i.mobileSingleChart && i.$elem.attr("style", ""), this.initMapv(), this.configData(), this.emit("loaded"), this.chartInstance.emit("load", this.chartInstance), setTimeout(function () {
                                $(e).addClass("bdp-chart-loaded")
                            }, 200)
                        }))
                    },
                    initBaseMap: function (t, a) {
                        var i = this,
                            n = function (e) {
                                setTimeout(function () {
                                    i.emit("tilesloaded")
                                })
                            };
                        if (l) {
                            var r = {
                                center: [this.mapOption.centerLat, this.mapOption.centerLng],
                                zoom: this.mapOption.zoom,
                                zoomControl: !1,
                                attributionControl: !1,
                                editable: !0,
                                editOptions: {
                                    skipMiddleMarkers: !0
                                }
                            };
                            if (u)
                                if ("string" == typeof u)["EPSG3395", "EPSG3857", "EPSG4326", "Earth", "Simple"].indexOf(u) > -1 ? r.crs = L.CRS[u] : console.log("unsupport crs, please use L.Proj.CRS instead");
                                else {
                                    var o = $.extend(!0, {}, u.options);
                                    o.bounds && (o.bounds = L.bounds(o.bounds)), r.crs = new L.Proj.CRS(u.code, u.proj4def, o)
                                }
                            _ && (r.minZoom = _), v && (r.maxZoom = v);
                            var s = this.bmap = L.map(t, r),
                                h = bdpChart.language || "zh";
                            L.control.zoom({
                                zoomInTitle: "zh" == h ? "放大" : "Zoom in",
                                zoomOutTitle: "zh" == h ? "缩小" : "Zoom out"
                            }).addTo(s), this._usedMapStyle = this.chartInstance.theme;
                            var f;
                            if (p) {
                                var o = $.extend(!0, o, p.options);
                                "object" == typeof o.style && (o.style = o.style[this._usedMapStyle] || "default"), f = new L.TileLayer.WMTS(p.url, o)
                            } else {
                                var g = "dark" == this._usedMapStyle ? d : c;
                                f = L.tileLayer(g)
                            }
                            this.tileLayer = f, f.addTo(s), f.on("tileload", n)
                        } else {
                            a = e.extend({
                                enableMapClick: !1,
                                enableHighResolution: !0
                            }, a);
                            var s = this.bmap = new BMap.Map(t, a);
                            s.enableAutoResize();
                            var i = this;
                            if (s.addEventListener("tilesloaded", n), this.scrollWheelZoom(!0), this.watermark) {
                                var m = 'url("' + this.watermark.url + '") ' + (this.watermark.repeat || "repeat");
                                $(t).find(".BMap_mask").eq(0).css("background", m)
                            }
                            var b = new BMap.ScaleControl({
                                    anchor: BMAP_ANCHOR_TOP_LEFT
                                }),
                                y = new BMap.NavigationControl;
                            this.bmap.addControl(b), this.bmap.addControl(y)
                        }
                        var w = this.vizToolControl = new VizToolControl({
                            gisMap: this,
                            rectangleZoom: !u
                        });
                        this.bmap.addControl(w);
                        var C = this.legendControl = new LegendControl({
                            gisMap: this
                        });
                        this.bmap.addControl(C)
                    },
                    showLegend: function () {
                        this.legendControl && this.legendControl.show()
                    },
                    hideLegend: function () {
                        this.legendControl && this.legendControl.hide()
                    },
                    scrollWheelZoom: function (e) {
                        e ? this.bmap.enableScrollWheelZoom() : this.bmap.disableScrollWheelZoom()
                    },
                    setMapStyle: function () {
                        if (this._usedMapStyle !== this.chartInstance.theme) {
                            if (window.BMap) {
                                var e;
                                "dark" === this.chartInstance.theme ? (e = "#24273e", this.mapStyle = [{
                                    featureType: "all",
                                    elementType: "all",
                                    stylers: {
                                        color: "#24273e"
                                    }
                                }, {
                                    featureType: "road",
                                    elementType: "all",
                                    stylers: {
                                        color: "#303349"
                                    }
                                }, {
                                    featureType: "administrative",
                                    elementType: "labels.text.fill",
                                    stylers: {
                                        color: "#555869"
                                    }
                                }, {
                                    featureType: "water",
                                    elementType: "all",
                                    stylers: {
                                        lightness: 5,
                                        visibility: "on"
                                    }
                                }, {
                                    featureType: "green",
                                    elementType: "all",
                                    stylers: {
                                        lightness: -5
                                    }
                                }, {
                                    featureType: "poi",
                                    elementType: "labels.icon",
                                    stylers: {
                                        lightness: 34,
                                        visibility: "off"
                                    }
                                }, {
                                    featureType: "subway",
                                    elementType: "all",
                                    stylers: {
                                        visibility: "off"
                                    }
                                }, {
                                    featureType: "arterial",
                                    elementType: "labels",
                                    stylers: {
                                        visibility: "on"
                                    }
                                }, {
                                    featureType: "highway",
                                    elementType: "labels.icon",
                                    stylers: {
                                        visibility: "off"
                                    }
                                }, {
                                    featureType: "label",
                                    elementType: "labels.icon",
                                    stylers: {
                                        visibility: "off"
                                    }
                                }, {
                                    featureType: "boundary",
                                    elementType: "geometry.fill",
                                    stylers: {
                                        color: "#303349",
                                        weight: "1",
                                        lightness: -1
                                    }
                                }]) : (e = "#f8f8f8", this.mapStyle = [{
                                    featureType: "all",
                                    elementType: "labels.text.fill",
                                    stylers: {
                                        color: "#999999"
                                    }
                                }, {
                                    featureType: "all",
                                    elementType: "geometry.fill",
                                    stylers: {
                                        hue: "#d3e3f2",
                                        lightness: 50,
                                        saturation: -84
                                    }
                                }, {
                                    featureType: "all",
                                    elementType: "labels.text.stroke",
                                    stylers: {
                                        color: "#ffffff"
                                    }
                                }, {
                                    featureType: "road",
                                    elementType: "geometry.stroke",
                                    stylers: {
                                        lightness: 50,
                                        saturation: -84
                                    }
                                }, {
                                    featureType: "label",
                                    elementType: "labels.icon",
                                    stylers: {
                                        visibility: "off"
                                    }
                                }, {
                                    featureType: "highway",
                                    elementType: "labels.icon",
                                    stylers: {
                                        visibility: "off"
                                    }
                                }]), this.bmap.setMapStyle({
                                    styleJson: this.mapStyle
                                }), this.bmap.getContainer().style.background = e
                            } else {
                                var t = "drak" == this.chartInstance.theme ? d : c;
                                this.tileLayer.setUrl(t)
                            }
                            this._usedMapStyle = this.chartInstance.theme
                        }
                    },
                    setCenterAndZoom: function (e, t) {
                        if (e && (this.mapOption.centerLng = e.lng, this.mapOption.centerLat = e.lat), t && (this.mapOption.zoom = t), l);
                        else {
                            var a = new BMap.Point(this.mapOption.centerLng, this.mapOption.centerLat);
                            this.bmap.centerAndZoom(a, this.mapOption.zoom)
                        }
                    },
                    getCenterAndZoom: function () {
                        if (!this.bmap) return {};
                        var e = this.bmap.getZoom();
                        return {
                            center: this.bmap.getCenter(),
                            zoom: e
                        }
                    },
                    initMapv: function () {
                        var e = this,
                            t = {
                                useLeaflet: l,
                                map: this.bmap,
                                coordType: f || "bd09ll"
                            };
                        e.isMobileMode ? t.click = function (t, a) {
                            t.length && e.showMobTooltip(t[0])
                        } : t.hover = function (t, a) {
                            t.length ? e.showTooltip(t[0], a.clientX, a.clientY) : e.hideTooltip()
                        };
                        this.mapv = new Mapv(t)
                    },
                    configData: function () {
                        var e = this.layerData,
                            t = this.layerInfo,
                            a = (this.mapv, this);
                        this._configuredData = [], this._layers = [], e.forEach(function (e, i) {
                            if (!$.isEmptyObject(e) && !t[i].invisible) {
                                var n = a.configLayerData(e, t[i]),
                                    e = new Mapv.Layer(n);
                                a._layers.push(e), a._configuredData.push(n)
                            }
                        }), a.isMobileMode && a._configuredData.length && a._configuredData[0].data.length && a.showMobTooltip(a._configuredData[0].data[0])
                    },
                    getConfiguredData: function () {
                        return this._configuredData
                    },
                    getDrawedLayers: function () {
                        return this.mapv.get("layers")
                    },
                    configLayerData: function (e, t) {
                        var a, o = {
                                mapv: this.mapv,
                                zIndex: 1,
                                dataType: "point",
                                drawType: this._getDrawType(t),
                                dataRangeControl: !1,
                                forceDrawEverything: h,
                                coordType: t.coordType
                            },
                            s = [],
                            l = t.timeline && t.timeline.enabled && t.timeline.field,
                            d = t.color_setting,
                            c = !$.isEmptyObject(t.bubble_setting);
                        if ("heatmap" === t.type) {
                            a = {
                                unit: t.heatmap_setting.unit || "px",
                                size: t.heatmap_setting.radius || 10,
                                type: "radius",
                                maxOpacity: .8
                            }, a.gradient = {
                                .4: "blue",
                                .7: "cyan",
                                .8: "lime",
                                .9: "yellow",
                                "1.0": "red"
                            };
                            var p, u = e.y[0] && e.y[0].data;
                            e.lng[0].data.forEach(function (t, a) {
                                var i = {
                                    lng: +t,
                                    lat: +e.lat[0].data[a],
                                    count: 1
                                };
                                if (u && (p = defined(p) ? Math.max(p, +u[a]) : +u[a], i.count = +u[a]), l) {
                                    if ("" == e.timeline[0].data[a] || +e.timeline[0].data[a] < 0) return;
                                    i.t = +e.timeline[0].data[a]
                                }
                                s.push(i)
                            }), a.max = p
                        } else if ("bubble" === t.type) {
                            "ripple" === t.bubble_symbol ? (a = {
                                fps: 24,
                                rippleStyle: "fill_stroke",
                                fillStyle: "#5182e4",
                                strokeStyle: "#5182e4",
                                globalCompositeOperation: "screen",
                                shuffle: !l,
                                stepIn: !l,
                                minScale: .5,
                                maxScale: 3,
                                size: 3
                            }, o.dataType = "ripple") : (a = {
                                lineWidth: 0,
                                fillStyle: "rgb(238, 75, 75)",
                                fillAlpha: 1,
                                size: "location" == t.bubble_symbol ? 16 : 4,
                                maxScale: "location" === t.bubble_symbol ? 2.5 : 2,
                                minScale: "location" === t.bubble_symbol ? .3 : .5,
                                shape: t.bubble_symbol || "circle"
                            }, "location" === a.shape && (a.icon = {
                                show: !0,
                                font: "icomoon",
                                text: ""
                            })), $.isEmptyObject(t.bubble_setting) || (a.scaleRange = this._getBubbleSize(e, t));
                            var f = d && 1 == t.color_setting.mode && i(e.colors, t.color_setting.range_color),
                                g = this._getLabelAxis(e, t);
                            c && (a.size = 3), e.lng[0].data.forEach(function (a, i) {
                                var r = {
                                    lng: +a,
                                    lat: +e.lat[0].data[i]
                                };
                                if (d) {
                                    var o = e.colors;
                                    if (1 == t.color_setting.mode) r.color = Highcharts.Color(f(o[i])).get();
                                    else {
                                        var p = bdpChart.getColorsByType("C400", "bdp");
                                        r.color = t.color_setting.enum_color_map[o[i]] ? t.color_setting.enum_color_map[o[i]].color : p[i % p.length]
                                    }
                                }
                                if (c && (r._count = +e.bubble_sizes[i], r.count = n(+e.bubble_sizes[i], e.bubble_size_groups, t.bubble_setting.reverse)), l) {
                                    if ("" == e.timeline[0].data[i] || +e.timeline[0].data[i] < 0) return;
                                    r.t = +e.timeline[0].data[i]
                                }
                                r.labels = g.map(function (e) {
                                    var t = e.data[i];
                                    return !e.field.aggregator && "date" === e.field.data_type && t ? t = Highcharts.dateFormat("%Y-%b-%e %H:%M:%S", new Date(t)) : (e.field.aggregator || "number" === e.field.data_type) && t && (t = y.dataLabelFormatter(e.field.formatter, t), e.field.unit_adv && (t += e.field.unit_adv)), t = null === t ? "--" : t, {
                                        name: e.name,
                                        value: t
                                    }
                                }), s.push(r)
                            })
                        } else if (t.type.indexOf("trajectory") >= 0) {
                            var m = this.chartInstance.theme;
                            "d_trajectory" === t.type ? (a = {
                                fillStyle: "#5182e4",
                                lineWidth: 1,
                                globalCompositeOperation: "dark" == m ? "screen" : "darken"
                            }, o.dataType = "trailline", $.isEmptyObject(t.bubble_setting) || (a.scaleRange = this._getBubbleSize(e, t))) : (a = {
                                strokeStyle: "rgba(50, 50, 255, 0.8)",
                                lineWidth: .3,
                                globalCompositeOperation: "dark" == m ? "lighter" : "multiply"
                            }, o.dataType = "polyline");
                            var _ = e.trajectory ? e.trajectory[0].data : [],
                                v = e.sequence ? e.sequence[0].data : [],
                                b = e.lng[0].data,
                                w = e.lat[0].data,
                                C = {},
                                d = t.color_setting;
                            if (f = d && 1 == t.color_setting.mode && i(e.colors, t.color_setting.range_color), _.length !== v.length) return;
                            _.forEach(function (i, r) {
                                if (C[i] || (C[i] = {
                                        geo: []
                                    }), !("" == v[r] || +v[r] < 0)) {
                                    var o = [+b[r], +w[r], +v[r]];
                                    if (d) {
                                        var s, l = e.colors;
                                        s = 1 == t.color_setting.mode ? Highcharts.Color(f(l[r])).get() : t.color_setting.enum_color_map[l[r]] ? t.color_setting.enum_color_map[l[r]].color : a.fillStyle, o.push(s), C[i].color = s
                                    }
                                    if (c && "d_trajectory" === t.type) {
                                        var p = n(+e.bubble_sizes[r], e.bubble_size_groups, t.bubble_setting.reverse);
                                        size = a.scaleRange[0] + (a.scaleRange[1] - a.scaleRange[0]) * p / e.bubble_size_groups.length, size *= .3, o.push(size)
                                    }
                                    C[i].geo.push(o)
                                }
                            });
                            for (var x in C) C[x].geo.sort(function (e, t) {
                                return e[2] - t[2]
                            }), C[x].geo.length > 0 && s.push(C[x]);
                            C = null
                        } else if ("massive" === t.type) {
                            a = {
                                size: 2,
                                fillStyle: "#94afdf"
                            }, o.context = "webgl", o.preserveDrawingBuffer = !0;
                            var d = t.color_setting,
                                f = d && 1 == t.color_setting.mode && i(e.colors, t.color_setting.range_color);
                            e.lng[0].data.forEach(function (a, i) {
                                var n = {
                                    lng: +a,
                                    lat: +e.lat[0].data[i]
                                };
                                if (d) {
                                    var r = e.colors;
                                    if (1 == t.color_setting.mode) n.color = Highcharts.Color(f(r[i])).get();
                                    else {
                                        var o = bdpChart.getColorsByType("C400", "bdp");
                                        n.color = t.color_setting.enum_color_map[r[i]] ? t.color_setting.enum_color_map[r[i]].color : o[i % o.length]
                                    }
                                }
                                if (l) {
                                    if ("" == e.timeline[0].data[i] || +e.timeline[0].data[i] < 0) return;
                                    n.t = +e.timeline[0].data[i]
                                }
                                s.push(n)
                            })
                        } else if ("graph" === t.type) {
                            var k = bdpChart.getColorsByType("C400", "bdp"),
                                D = [];
                            t.y.forEach(function (e, t) {
                                var a = e.series_color || k[t % k.length];
                                D.push(a)
                            });
                            var S = Math.sqrt(r());
                            a = {
                                lineWidth: 0,
                                fillStyle: "rgb(81, 130, 228)",
                                fillAlpha: 1,
                                size: 12 * S,
                                graphType: t.graph_type || "pie",
                                colors: D
                            }, $.isEmptyObject(t.bubble_setting) || (a.scaleRange = this._getBubbleSize(e, t));
                            var c = !$.isEmptyObject(t.bubble_setting),
                                g = this._getLabelAxis(e, t);
                            c && (a.size = 6 * S), e.lng[0].data.forEach(function (a, i) {
                                var r = {
                                    lng: +a,
                                    lat: +e.lat[0].data[i],
                                    values: []
                                };
                                if (e.y.forEach(function (e) {
                                        r.values.push(+e.data[i])
                                    }), r.sum = r.values.reduce(function (e, t) {
                                        return e + +t
                                    }, 0), c && (r.count = n(+e.bubble_sizes[i], e.bubble_size_groups, t.bubble_setting.reverse)), l) {
                                    if ("" == e.timeline[0].data[i] || +e.timeline[0].data[i] < 0) return;
                                    r.t = +e.timeline[0].data[i]
                                }
                                r.labels = g.map(function (e) {
                                    var a, n = e.data[i];
                                    if (null === n) a = "--";
                                    else if (!e.field.aggregator && "date" === e.field.data_type && n) a = Highcharts.dateFormat("%Y-%b-%e %H:%M:%S", new Date(n));
                                    else if ((e.field.aggregator || "number" === e.field.data_type) && n) {
                                        var a = "",
                                            o = "pie" === t.graph_type && t.y.indexOf(e.field) > -1;
                                        o && (a += (100 * n / r.sum).toFixed(2) + "% ("), a += y.dataLabelFormatter(e.field.formatter, n), e.field.unit_adv && (a += e.field.unit_adv), o && (a += ")")
                                    } else a = n;
                                    return {
                                        name: e.name,
                                        value: a
                                    }
                                }), s.push(r)
                            })
                        }
                        if (l) {
                            var T = this;
                            o.animation = "time";
                            var I;
                            if (I = 9 != +t.timeline.speed ? .5 * (+t.timeline.speed || 3) : +t.timeline.fps, o.animationOptions = {
                                    tickFormatter: function (e, a) {
                                        var i = T.chartInstance,
                                            n = "current" == a ? void 0 : "abb";
                                        return i._formatTimeWithField(e, t.timeline.field, n)
                                    },
                                    control: {
                                        onInitialize: function (e) {
                                            var t = $('<div class="mapv-play-control-progress"><span class="progress-cursor"></span></div>');
                                            $(e).append(t);
                                            var a;
                                            $(T.$elem).off("mousemove.gis_mouse_ctrl").on("mousemove.gis_mouse_ctrl", function (t) {
                                                $(e).removeClass("auto-hide"), clearTimeout(a), a = setTimeout(function () {
                                                    $(e).addClass("auto-hide")
                                                }, 3e3)
                                            })
                                        },
                                        onUpdate: function (e, t, a) {
                                            setTimeout(function () {
                                                $(e).find(".mapv-play-control-progress .progress-cursor").css("left", 100 * a + "%")
                                            })
                                        },
                                        onStateChange: function (e, t) {
                                            "play" === t && T.vizToolControl && T.vizToolControl.reset()
                                        }
                                    },
                                    fps: Math.max(I, .05),
                                    interval: (t.timeline.interval || 1) + "-" + (t.timeline.field.granularity || "day"),
                                    loop: t.timeline.loop,
                                    loopInterval: 1e3
                                }, t.type.indexOf("d_trajectory") >= 0) {
                                var L = t.timeline.field.granularity || "day",
                                    A = +t.timeline.interval || 1,
                                    E = {
                                        year: 31536e6,
                                        quarter: 7776e6,
                                        month: 2592e6,
                                        week: 6048e5,
                                        day: 864e5,
                                        hour: 36e5,
                                        minute: 6e4
                                    },
                                    F = E[L] * A;
                                if (o.animationOptions.scope = F, 9 != +t.timeline.speed) switch (o.animationOptions.fps = 60, t.timeline.speed) {
                                    case 1:
                                        o.animationOptions.duration = 6e4;
                                        break;
                                    case 5:
                                        o.animationOptions.duration = 1e4;
                                        break;
                                    case 3:
                                    default:
                                        o.animationOptions.duration = 2e4
                                } else {
                                    var I = Math.max(+t.timeline.fps, .05);
                                    o.animationOptions.fps = I;
                                    var v = e.sequence ? e.sequence[0].data : [];
                                    if (v.length > 1) {
                                        var M = v[v.length - 1] - v[0];
                                        M > 0 && (o.animationOptions.duration = M / I)
                                    }
                                }
                            }
                        } else "bubble" === t.type && "ripple" !== t.bubble_symbol && s.length <= this.animationThreshold && (o.animation = !0, o.animationOptions = {
                            duration: 600,
                            transition: "ease-out"
                        });
                        return o.drawOptions = a, o.data = s, o.type = t.type, o
                    },
                    showLayer: function (e) {
                        this._layers[e] && this._layers[e].show(), this.vizToolControl.showSelectResultInLayer(e), this.layerInfo[e].tempInvisible = !1
                    },
                    hideLayer: function (e) {
                        this._layers[e] && this._layers[e].hide(), this.vizToolControl.hideSelectResultInLayer(e), this.layerInfo[e].tempInvisible = !0
                    },
                    pauseTimeAnimation: function () {
                        this.mapv && this.mapv.pauseTimeAnimation()
                    },
                    startTimeAnimation: function () {
                        this.mapv && this.mapv.startTimeAnimation()
                    },
                    _getDrawType: function (e) {
                        return "heatmap" === e.type ? e.type : "bubble" === e.type || "massive" === e.type || "trajectory" === e.type ? "simple" : "graph" === e.type ? "graph" : void 0
                    },
                    _getGradientColor: function (e) {
                        return e.color_setting && 1 == e.color_setting.mode ? {
                            .3: e.color_setting.range_color.start_color,
                            1: e.color_setting.range_color.end_color
                        } : null
                    },
                    _getBubbleSize: function (e, t) {
                        return t.bubble_setting.size_range
                    },
                    _getLabelAxis: function (e, t) {
                        for (var i = {}, n = e.x.concat(e.y), r = t.x.concat(t.y), o = [], s = !1, l = 0, d = n.length; l < d; l++) {
                            var c = r[l],
                                p = n[l],
                                u = (c.name, c.fid + "$" + (c.aggregator || ""));
                            s = !!c.aggregator, i[u] || (i[u] = 1, o.push({
                                name: a(c),
                                data: p.data,
                                type: c.data_type,
                                field: c
                            }))
                        }
                        if (t.color_setting) {
                            var h = t.color_setting.field[0];
                            h.aggregator = t.color_setting.aggregator;
                            var u = h.fid + "$" + h.aggregator;
                            i[u] || (i[u] = 1, !s && "number" !== h.data_type && h.aggregator && (e.colors = e.colors.map(function (e) {
                                return 1
                            })), o.push({
                                name: a(h),
                                data: e.colors,
                                field: h
                            }))
                        }
                        if (t.bubble_setting) {
                            var h = t.bubble_setting.field;
                            h.aggregator = t.bubble_setting.aggregator;
                            var u = h.fid + "$" + h.aggregator;
                            i[u] || (i[u] = 1, o.push({
                                name: a(h),
                                data: e.bubble_sizes,
                                field: h
                            }))
                        }
                        return o
                    },
                    hideTooltip: function () {
                        x.hideTooltip()
                    },
                    showTooltip: function (e, t, a) {
                        if ((!e.labels || 0 !== e.labels.length) && e.labels) {
                            var i = [];
                            i.push('<table style="margin: 0 6px;">');
                            for (var n = 0, r = e.labels.length; n < r; n++) i.push('<tr><td class = "text-right" style = "padding-right:4px">' + bdp.utils.encodeHTML(e.labels[n].name) + ':</td><td class = "text-left" >' + e.labels[n].value + "</td></tr>");
                            i.push("</table>"), x.showTooltip(t, a, i.join(""))
                        }
                    },
                    showMobTooltip: function (e) {
                        if ((!e.labels || 0 !== e.labels.length) && e.labels) {
                            this.$elem.find(".sankey-tooltip").remove();
                            var t = [];
                            t.push('<div class="sankey-tooltip">'), t.push('<div class="tooltips-point-wrap pt10"><div class="tooltips-table">');
                            for (var a = 0, i = e.labels.length; a < i; a++) t.push('<div class="tooltips-item"><div class="tooltips-val">' + e.labels[a].value + '</div><div class="tooltips-label">' + bdp.utils.encodeHTML(e.labels[a].name) + "</div></div>");
                            t.push("</div></div></div>"), this.$elem.append(t.join(""))
                        }
                    },
                    clear: function () {
                        this.mapv && this.mapv.clearAllLayer()
                    },
                    destroy: function () {
                        this.clear(), this.mapv = null, l && this.bmap.remove(), this.$elem.removeClass("chart-gis"), this.$elem.empty(), this.$elem.css("backgroundColor", "")
                    },
                    _bMap2ImageSrc: function (e, t, a) {
                        e = e || 1;
                        var i = "/api/bmap/staticimage",
                            n = this.getCenterAndZoom(),
                            r = {
                                center: n.center.lng + "," + n.center.lat,
                                zoom: n.zoom,
                                width: t,
                                height: a,
                                copyright: 1,
                                ak: "1XjLLEhZhQNUzd93EjU5nOGQ",
                                scale: Math.round(e)
                            },
                            o = [];
                        for (var s in r) r.hasOwnProperty(s) && o.push(s + "=" + r[s]);
                        return i = i + "?" + o.join("&")
                    },
                    exportImage: function (e) {
                        var t = document.createElement("canvas");
                        e = Math.min(e, 2);
                        var a = t.getContext("2d"),
                            i = e || r(a),
                            n = $.Deferred(),
                            o = this.getBaseMapCanvas(),
                            s = this.getCoverMapCanvas(),
                            d = this.$elem.width(),
                            c = this.$elem.height(),
                            p = d * i,
                            u = c * i;
                        t.width = p, t.height = u;
                        var h = this.watermark,
                            f = this.watermark,
                            g = 0,
                            m = 0,
                            _ = function () {
                                if (l) {
                                    var e = o.box.css("transform").replace("translate3d(", "").replace(")", "").split(","),
                                        t = parseInt(e[1].replace(" ", "")),
                                        r = parseInt(e[0].replace(" ", "")),
                                        f = {
                                            top: t * i + "px",
                                            left: r * i + "px",
                                            transform: ""
                                        };
                                    o.box.css({
                                        width: "100%",
                                        height: "100%",
                                        overflow: "hidden",
                                        transform: ""
                                    }), o.map.css(f), s.canvasLayer.css(f)
                                } else o.box[0].style.left = parseInt(o.box[0].style.left) * i + "px", o.box[0].style.top = parseInt(o.box[0].style.top) * i + "px";
                                if (o.map.children("div").each(function (e, t) {
                                        if (l) {
                                            var a = $(t).css("transform").replace("translate3d(", "").replace(")", "").split(","),
                                                n = parseInt(a[1].replace(" ", "")),
                                                r = parseInt(a[0].replace(" ", ""));
                                            $(t).css({
                                                position: "absolute",
                                                top: n * i + "px",
                                                left: r * i + "px",
                                                transform: ""
                                            })
                                        } else t.style.left = parseInt(t.style.left) * i + "px", t.style.top = parseInt(t.style.top) * i + "px";
                                        $(t).children("img").each(function (e, t) {
                                            if (g = parseInt(t.style.width), m = parseInt(t.style.height), $(t).width(g * i), $(t).height(m * i), l) {
                                                var a, n, r;
                                                $(t).css("transform").indexOf("matrix") >= 0 ? (a = $(t).css("transform").replace("matrix(", "").replace(")", "").split(","), n = parseInt(a[5]), r = parseInt(a[4])) : $(t).css("transform").indexOf("translate3d") >= 0 && (a = $(t).css("transform").replace("translate3d(", "").replace(")", "").split(","), n = parseInt(a[1].replace(" ", "")), r = parseInt(a[0].replace(" ", ""))), $(t).css({
                                                    position: "absolute",
                                                    left: r * i + "px",
                                                    top: n * i + "px",
                                                    transform: ""
                                                })
                                            } else r = parseInt(t.style.left), n = parseInt(t.style.top), t.style.left = r * i + "px", t.style.top = n * i + "px"
                                        })
                                    }), h) {
                                    var _ = a.createPattern(v, h.repeat || "repeat");
                                    a.fillStyle = _, a.fillRect(0, 0, p, u)
                                }
                                s.canvasList.each(function (e, t) {
                                    var a = Canvas2Image.convertToPNG(t, d, c).src,
                                        n = parseInt(t.style.left) * i + "px",
                                        r = parseInt(t.style.top) * i + "px";
                                    canvasToImage = '<img src="' + a + '" width="' + d * i + '" height="' + c * i + '" style="position: absolute; top: ' + r + "; left: " + n + ';"/>', s.canvasLayer.append(canvasToImage)
                                }), s.box.append(s.canvasLayer), o.box.append(s.box), o.box.append(o.map), n.resolve(o.box)
                            };
                        if (h) {
                            var v = new Image;
                            v.onload = function () {
                                f = !0
                            }, v.src = h.url
                        } else _();
                        return n.promise()
                    },
                    getBaseMapCanvas: function () {
                        var e = {
                            map: [],
                            box: null
                        };
                        if (l) {
                            var t = {
                                position: "absolute",
                                top: 0,
                                left: 0
                            };
                            e.box = this.$elem.find(".leaflet-map-pane").clone(), e.box.css(t), e.map = e.box.children(".leaflet-tile-pane").children(".leaflet-layer"), e.map.css(t), e.box.children("div").remove()
                        } else {
                            var a = this.$elem.children("div:first-child");
                            e.box = this.$elem.children("div:first-child").clone(), e.box.children("div").remove(), e.map = a.children("div:eq(-3)").clone()
                        }
                        return e
                    },
                    getCoverMapCanvas: function () {
                        var e = {
                            box: null,
                            canvasLayer: null,
                            canvasList: []
                        };
                        if (l) {
                            var t = {
                                position: "absolute",
                                top: 0,
                                left: 0
                            };
                            e.box = $("<div></div>"), e.box.css(t), e.box.css("z-index", 100), e.canvasLayer = this.$elem.find(".leaflet-overlay-pane").clone(), e.canvasLayer.css(t), e.canvasLayer.children("canvas").remove(), e.canvasList = this.$elem.find(".leaflet-overlay-pane").children("canvas")
                        } else {
                            var a = this.$elem.children("div:first-child");
                            e.box = a.children("div:eq(1)").clone(), e.box.children("div").remove(), e.canvasLayer = a.children("div:eq(1)").children("div:last-child").clone(), e.canvasList = this.$elem.children("div:first-child").children("div:eq(1)").children("div:last-child").children("canvas"), e.canvasLayer.children("canvas").remove()
                        }
                        return e
                    },
                    toObjectURL: o
                };
                var x = function () {
                    var e;
                    return {
                        showTooltip: function (t, a, i) {
                            e || (e = new Tooltip(void 0, {
                                typeClass: "sankey-tooltip"
                            })), e.content(i).position(t, a).show()
                        },
                        hideTooltip: function () {
                            e && e.hide()
                        }
                    }
                }();
                bdpChart.Events.mixTo(t)
            }(angular),
            function () {
                function e(e) {
                    var t = bdpChart.language,
                        a = "zh" === t ? "当前图表无数据" : "No data to display";
                    e.html('<div class="chart-error"><p>' + a + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                }

                function t(e) {
                    e.info.funnel_setting || (e.info.funnel_setting = {
                        show_detail: !0,
                        layout: "horizontal"
                    }), this.chart = e, this.$elem = e.$elem, this.theme = e.theme, this.d3Elem = d3.selectAll(this.$elem.toArray()), this.data = [], this.tooltip = null, this.displayMode = e.mode, this.layout = e.info.funnel_setting.layout || "horizontal", this.modeColor = e.deviceStyle.bg, this.isMobileMode = e.isMobileMode
                }
                var a, i, n = bdpChart.helper;
                t.prototype = {
                    constructor: t,
                    draw: function () {
                        return this.$elem.width() * this.$elem.height() != 0 && (this._setOptions(), this._setSeries(), this.data.length ? (this._setOptionsByMode(), this._bindEvents(), new D3Funnel(this.d3Elem).draw(this.data, this.options), void this.chart.emit("load", this.chart, null)) : (e(this.$elem), !1))
                    },
                    formatXaxisLabel: function (e) {
                        if ("date" === e.data_type) {
                            var t = e.granularity,
                                a = e.granularity_name || "",
                                i = e.month_start_day || 0;
                            "week" === t && (i = e.week_start_day_of_week);
                            var r = e.data[e.data.length - 1] - e.data[0];
                            t = bdpChart.helper.setGranularityByDate(t, r), e.data.forEach(function (r, o) {
                                e.data[o] = n.checkGranularity(t, r, a, i)
                            })
                        }
                        return e.data
                    },
                    getColor: function () {
                        var e = [],
                            t = this.chart.info.funnel_setting;
                        return e = t && t.color_theme || bdpChart.getColorsByType("C330", "bdp"), this.colorTheme = e, d3.scale.ordinal().range(e)
                    },
                    _setOptions: function () {
                        var e = this,
                            t = (this.displayMode, !this.chart.isDashboardMode || this.chart.isDashboardMode && ("horizontal" === e.layout && e.chart.gridHeight > 3 || "vertical" === e.layout && e.chart.gridWidth > 3));
                        e.options = {
                            chart: {
                                bottomPinch: 1,
                                layout: e.layout || "horizontal",
                                width: e.$elem.width(),
                                height: e.$elem.height(),
                                isMobile: e.isMobileMode
                            },
                            block: {
                                fill: {
                                    scale: e.getColor()
                                },
                                stroke: {
                                    color: "dark" === e.theme ? "#24273E" : "#fff"
                                },
                                highlight: !0,
                                dynamicHeight: !1,
                                autoSlope: !0,
                                bottomBlock: {
                                    minWidth: 40,
                                    height: 30,
                                    text: {
                                        fill: "dark" === e.theme ? "#FFF" : "#333"
                                    }
                                }
                            },
                            label: {
                                fontSize: "14px",
                                fill: "#fff",
                                format: function (t, a) {
                                    var i = e.chart.data.y[0].formatter;
                                    return n.dataLabelFormatter(i, a)
                                }
                            },
                            attrition: {
                                rate: {
                                    enabled: t,
                                    label: {
                                        fontSize: "10px",
                                        fill: "dark" === e.theme ? "rgba(255,255,255,0.3)" : "#333",
                                        width: 110
                                    },
                                    lineColor: "dark" === e.theme ? "rgba(255,255,255,0.3)" : "#ccc"
                                },
                                count: {
                                    enabled: t,
                                    label: {
                                        fontSize: "10px",
                                        fill: "dark" === e.theme ? "rgba(255,255,255,0.3)" : "#333",
                                        width: 110
                                    },
                                    lineColor: "dark" === e.theme ? "rgba(255,255,255,0.3)" : "#ccc"
                                }
                            }
                        }
                    },
                    _setOptionsByMode: function () {
                        "fullscreen" !== this.displayMode || this.isMobileMode ? "dark" === this.chart.theme && (this.options = $.extend(!0, this.options, {
                            block: {
                                bottomBlock: {
                                    text: {
                                        fill: "#fff"
                                    }
                                },
                                stroke: {
                                    color: "none"
                                }
                            },
                            attrition: {
                                rate: {
                                    label: {
                                        fill: "rgba(255, 255, 255, .5)"
                                    },
                                    lineColor: "rgba(255,255,255,0.3)"
                                },
                                count: {
                                    label: {
                                        fill: "rgba(255, 255, 255, .5)"
                                    },
                                    lineColor: "rgba(255,255,255,0.3)"
                                }
                            }
                        })) : this.options = $.extend(!0, this.options, {
                            chart: {
                                animate: 200,
                                padding: [20, 0, 20, 0]
                            },
                            block: {
                                bottomBlock: {
                                    text: {}
                                },
                                stroke: {
                                    color: "none"
                                }
                            },
                            label: {
                                fontSize: "14px"
                            },
                            attrition: {
                                rate: {
                                    label: {
                                        fontSize: "14px",
                                        width: 200
                                    }
                                },
                                count: {
                                    label: {
                                        fontSize: "14px",
                                        width: 200
                                    }
                                }
                            }
                        })
                    },
                    _setSeries: function () {
                        var e, t, a = this,
                            i = a.chart.data;
                        i.x.length ? (t = i.y[0].data, e = a.formatXaxisLabel(angular.copy(i.x[0])) || [], e.forEach(function (e, i) {
                            var n = [e, 1 * t[i]];
                            defined(t[i]) ? n.push(a.colorTheme[i % a.colorTheme.length]) : (n[1] = null, n.push(a.modeColor)), a.data.push(n)
                        })) : i.y.forEach(function (e, t) {
                            var i = [e.nick_name || e.name, 1 * e.data[0]];
                            defined(e.data[0]) ? i.push(a.colorTheme[t % a.colorTheme.length]) : (i[1] = null, i.push(a.modeColor)), a.data.push(i)
                        }), a.data.length > 0 && (a.data[a.data.length - 1][2] = a.modeColor), a._setBottomWidth()
                    },
                    getEdgeVal: function () {
                        for (var e, t = this.data, a = this.data[0][1], i = this.data[0][1], n = 0; n < t.length; n++) e = t[n][1], e < a && (a = e), e > i && (i = e);
                        return i * a < 0 || i < 0 ? a = 0 : 0 === i && 0 === a && (i = 40, a = 40), {
                            max: i,
                            min: a
                        }
                    },
                    _setBottomWidth: function () {
                        var e = this;
                        if (e.data.length) {
                            var t = e.getEdgeVal(),
                                a = null === t.max || isNaN(t.max) ? 1 : Math.min(1, t.min / t.max);
                            this.options = $.extend(!0, this.options, {
                                chart: {
                                    bottomWidth: a
                                }
                            })
                        }
                    },
                    _bindEvents: function () {
                        var e = this;
                        e.isMobileMode ? (e.options.events = {}, e.options.events.click = {
                            block: function (t, a) {
                                e.selectedPoint = t, e._showTooltip(t, a)
                            }
                        }, e._bindMobDrilldown()) : (e.options.events = {
                            mouseover: {
                                block: function (t, a) {
                                    e._showTooltip(t, a)
                                }
                            },
                            mouseout: {
                                block: function (t, a) {
                                    e.tooltip.remove()
                                }
                            },
                            mousemove: {
                                block: function (t, a) {
                                    var i = e.setTooltipPosition();
                                    e.updateTooltipPosition(i.x, i.y)
                                }
                            }
                        }, e.chart.info.is_drill && (e.options.events.click = {
                            block: function (t, a) {
                                e.chart.emit("drilldown", t, e.chart)
                            }
                        }))
                    },
                    _bindMobDrilldown: function () {
                        var e = this,
                            t = $(".chart-drilldown");
                        e.chart.info.is_drill ? (t.show(), t.off("click.drilldown").on("click.drilldown", function () {
                            e.chart.emit("drilldown", e.selectedPoint, e.chart)
                        })) : t.hide()
                    },
                    _showTooltip: function (e, t) {
                        var r = this;
                        r.tooltip = r.$elem.find(".sankey-tooltip");
                        var o, s = r.chart.data,
                            l = r.chart.info,
                            d = e.index,
                            c = r.data[d],
                            p = (d < r.data.length - 1 && r.data[d + 1], r.data[0][1], s.y[0]),
                            u = s.y[0];
                        d < r.data.length - 1 && (o = 0 === c[1] ? "--" : (r.data[d + 1][1] / c[1] * 100).toFixed(2) + "%");
                        var h;
                        d < r.data.length - 1 && (h = 0 === r.data[0][1] || null === r.data[0][1] || void 0 === r.data[0][1] ? "--" : (r.data[d + 1][1] / r.data[0][1] * 100).toFixed(2) + "%"), l.xAxis.length || (p = s.y[d], d < r.data.length - 1 && (u = s.y[d + 1]));
                        var f = p.formatter,
                            g = (p.nick_name || p.name, ""),
                            m = "";
                        p.hasOwnProperty("unit_adv") && (g = p.unit_adv), u.hasOwnProperty("unit_adv") && (m = u.unit_adv);
                        var _, v = e.fill.actual;
                        _ = "dark" === r.theme ? "#FFF" : v;
                        var b = r.data.length - 1;
                        if (e.index === b) return !1;
                        var y = c[0],
                            w = r.data[d + 1][0];
                        if (l.xAxis.length > 0 && "date" === l.xAxis[0].data_type) {
                            var C = l.xAxis[0].granularity;
                            ["hour", "minute", "second"].indexOf(C) > -1 && (C = "g_" + C), y = n.checkGranularity(C, r.chart.origin_data.x[0].data[d]), w = n.checkGranularity(C, r.chart.origin_data.x[0].data[d + 1])
                        }
                        if (r.isMobileMode) {
                            r.tooltip.remove();
                            var x = "";
                            s.x.length && (x = '<p class="tooltips-title">' + n.escapeHtml(s.y[0].nick_name || s.y[1].name) + "</p>"), r.tooltip = $('<div class="sankey-tooltip">' + x + '<div class="tooltips-point-wrap' + (0 === s.x.length ? " pt10" : "") + '"><div class="tooltips-table"><div class="tooltips-item"><div class="tooltips-val" style="color:' + v + '">' + n.dataLabelFormatter(f, e.value) + g + '</div><div class="tooltips-label">' + n.escapeHtml(y) + '</div></div><div class="tooltips-item"><div class="tooltips-val" style="color:' + v + '">' + n.dataLabelFormatter(f, r.data[d + 1][1]) + m + '</div><div class="tooltips-label">' + n.escapeHtml(w) + '</div></div><div class="tooltips-item"><div class="tooltips-val" style="color:' + v + '">' + o + '</div><div class="tooltips-label">' + a + '</div></div><div class="tooltips-item"><div class="tooltips-val" style="color:' + v + '">' + h + '</div><div class="tooltips-label">' + i + "</div></div></div></div></div>"), r.$elem.append(r.tooltip)
                        } else if (!r.tooltip.length) {
                            var k = r.setTooltipPosition();
                            r.tooltip = $('<div class="sankey-tooltip" style="position:absolute; border-color:' + v + ";left:" + k.x + "px;top:" + k.y + 'px;"><table class="tooltips-table"></tr><tr><td style="color:' + v + '">' + n.escapeHtml(y) + '：</td><td style="color:' + _ + '">' + n.dataLabelFormatter(f, e.value) + g + '</td></tr><tr><td style="color:' + v + '">' + n.escapeHtml(w) + '：</td><td style="color:' + _ + '">' + n.dataLabelFormatter(f, r.data[d + 1][1]) + m + '</td></tr><tr><td style="color:' + v + '">' + a + '：</td><td style="color:' + _ + '">' + o + '</td></tr><tr><td style="color:' + v + '">' + i + '：</td><td style="color:' + _ + '">' + h + "</td></tr></table></div>"), r.$elem.append(r.tooltip)
                        }
                    },
                    setTooltipPosition: function () {
                        if (null === this.tooltip) return {
                            x: 0,
                            y: 0
                        };
                        var e = this.tooltip.outerWidth(),
                            t = this.tooltip.outerHeight(),
                            a = d3.event.clientX + 10,
                            i = d3.event.clientY,
                            n = this.$elem[0].getBoundingClientRect();
                        return d3.event.pageX + e > n.right && (a = a - e - 20), d3.event.pageY + t > n.bottom - 30 && (i -= t), {
                            x: a - n.left,
                            y: i - n.top
                        }
                    },
                    updateTooltipPosition: function (e, t) {
                        this.tooltip && this.tooltip.css({
                            left: e,
                            top: t
                        })
                    },
                    resize: function (e) {
                        var t = this,
                            a = e[0].offsetWidth,
                            i = e[0].offsetHeight;
                        t.d3Elem && t.d3Elem.select("svg") && t.d3Elem.select("svg").attr("width", a).attr("height", i)
                    }
                }, bdpChart.setFunnelSpecialOption = function (n) {
                    bdpChart.language || (bdpChart.language = "zh"), a = "zh" === bdpChart.language ? "转化率" : "Conversion Rate", i = "zh" === bdpChart.language ? "到达率" : "Arrival Rate";
                    var r = n.$elem;
                    if (!n.data.y[0].data.length) return void e(r);
                    var o = new t(n);
                    o.draw(), $(window).on("resize", function () {
                        o.resize(r)
                    })
                }
            }(),
            function () {
                bdpChart.setWordCloudSpec = function (e) {
                    function t() {
                        var e = g.wordcloud_setting && g.wordcloud_setting.text_shadow,
                            t = h(),
                            a = d3.scale.linear().domain([b[b.length - 1], b[0]]).range([20, 40]),
                            i = v.map(function (i, n) {
                                var r = t(i, b[n]) || "#666",
                                    o = {
                                        label: i,
                                        color: r,
                                        fontSize: a(b[n])
                                    };
                                return e && (o.textShadow = "0px 0px 5px " + r), o
                            }),
                            n = {
                                entries: i,
                                width: C.width(),
                                height: C.height(),
                                radius: "90%",
                                radiusMin: 75,
                                bgDraw: !1,
                                bgColor: "transparent",
                                opacityOver: 1,
                                opacityOut: .05,
                                opacitySpeed: 6,
                                fov: 800,
                                speed: .5,
                                fontFamily: "PingFang SC, Helvetica Neue, Helvetica, STHeitiSC-Light, WOL_SB, Segoe UI Semibold, Segoe UI, Tahoma, Helvetica, sans-serif",
                                fontSize: "26",
                                fontColor: "#666",
                                fontWeight: "normal",
                                fontStyle: "normal",
                                fontStretch: "normal",
                                fontToUpperCase: !1
                            };
                        C.svg3DTagCloud(n), setTimeout(function () {
                            C.addClass("bdp-chart-loaded")
                        }, 100)
                    }

                    function a() {
                        x = {
                            width: C.width(),
                            height: C.height()
                        }
                    }

                    function n(e) {
                        if (a(), C.html(""), o(), e ? (I.width = x.width * S, I.height = x.height * S, I.style.width = x.width + "px", I.style.height = x.height + "px") : I = r(x), 0 == b.length) {
                            var t = "zh" === bdpChart.language ? "当前图表无数据" : "No data to display";
                            return void C.html('<div class="chart-error"><p>' + t + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                        }
                        WordCloud(I, D), C.append(I), $(I).on("wordcloudstop", function () {
                            setTimeout(function () {
                                C.addClass("bdp-chart-loaded")
                            }, 0)
                        })
                    }

                    function r(e) {
                        var t = document.createElement("canvas");
                        return t.className = "chart-canvas canvas-" + g.chart_type, t.width = e.width * S, t.height = e.height * S, t.style.width = e.width + "px", t.style.height = e.height + "px", t
                    }

                    function o() {
                        s(v, b), D.color = h(), l(), p()
                    }

                    function s(e, t) {
                        var a = v.map(function (e, a) {
                            return [e, t[a]]
                        });
                        D && (D.list = a)
                    }

                    function l() {
                        var e = grid_s = 0;
                        $.each(v, function (t, a) {
                            var i = Math.sin(L(b[t]) / 100),
                                n = 0,
                                r = 1;
                            /[\w-]/i.test(v[t]) && (n = v[t].match(/[\w-]/gi).length, r = 1 - .5 * n / v[t].length), e += i * (a.length * i) * r
                        });
                        var t = 0;
                        D.weightFactor = function (a, i) {
                            if (i && t--, a = 1.2 * Math.round(Math.sin(L(a) / 100) * Math.sqrt(x.width * x.height / e)), 1 == S && (a /= 2), x.width / x.height > 2) {
                                var n = .9;
                                1 == S && (n = .8), a *= n
                            }
                            return v[t].length * a > x.width * S * .9 && (a = x.width * S / v[t].length * .9), t++, a
                        }
                    }

                    function d() {
                        if (!C.find(".sankey-tooltip").length) {
                            var e = document.createElement("div"),
                                t = document.createElement("p"),
                                a = document.createElement("span");
                            t.className = "tooltips-title", a.className = "tooltip-value", e.className = "sankey-tooltip",
                                $(e).css("display", "none"), $(e).append(t).append(a), C.append(e)
                        }
                        return null
                    }

                    function c() {
                        if (!C.find(".sankey-tooltip").length) {
                            var e = document.createElement("div");
                            e.className = "sankey-tooltip";
                            var t = document.createElement("div");
                            t.className = "tooltips-point-wrap";
                            var a = document.createElement("div");
                            a.className = "tooltips-table";
                            var i = document.createElement("div");
                            i.className = "tooltips-item";
                            var n = document.createElement("p");
                            n.className = "tooltips-title";
                            var r = document.createElement("div");
                            r.className = "tooltips-val";
                            var o = document.createElement("div");
                            o.className = "tooltips-label", i.appendChild(r), i.appendChild(o), a.appendChild(i), t.appendChild(a), e.appendChild(n), e.appendChild(t), C.append(e)
                        }
                        return null
                    }

                    function p() {
                        A ? (c(), D.click = function (e, t, a) {
                            C.find(".sankey-tooltip");
                            e && (C.find(".tooltips-title").text(e[0]), C.find(".tooltips-val").text(e[1]).css("color", y[e[0]].color), C.find(".tooltips-label").text(E))
                        }, D.list && D.list[0] && D.click(D.list[0])) : (d(), D.hover = function (e, t, a) {
                            var i = C.find(".sankey-tooltip");
                            if (e) {
                                C.find(".tooltips-title").text(e[0]), C.find(".tooltip-value").text(E + "：" + e[1]).css("color", y[e[0]].color);
                                var n = i.outerWidth(),
                                    r = i.outerHeight(),
                                    o = C[0].getBoundingClientRect(),
                                    s = a.clientX + 10,
                                    l = a.clientY;
                                a.pageX + n > o.right && (s = s - n - 20), a.pageY + r > o.bottom - 30 && (l -= r), i.css({
                                    position: "absolute",
                                    left: s - o.left + "px",
                                    top: l - o.top + "px"
                                }), i.show()
                            } else i.hide()
                        }), C.off("mouseleave.tooltip").on("mouseleave.tooltip", function () {
                            C.find(".sankey-tooltip").hide()
                        })
                    }

                    function u() {
                        C.width() == x.width && C.height() == x.height || (D.clearCanvas = !0, setTimeout(function () {
                            n(!0)
                        }, 10))
                    }

                    function h() {
                        var e = d3.scale.category20(),
                            t = g.color_setting;
                        return _[0].fid == t.field[0].fid && function (a) {
                            if (0 == a) {
                                var n = bdpChart.colors[t.theme || "default"];
                                if (!t.enum_color_map) {
                                    var r = {};
                                    angular.forEach(v, function (e, t) {
                                        void 0 == r[e] && (r[e] = {
                                            name: e,
                                            color: n[t % n.length]
                                        })
                                    }), t.enum_color_map = r
                                }
                                t.enum_color_map = f(v, t.enum_color_map, n), y = t.enum_color_map, e = function (e, a, i, n, r) {
                                    if (t.enum_color_map.hasOwnProperty(e)) return t.enum_color_map[e].color
                                }
                            } else {
                                var r = b.map(function (e) {
                                        return Number(e)
                                    }),
                                    o = w.linearRangeColor(t.range_color.start_color, t.range_color.end_color),
                                    s = w.createLinearScale(t.range_color, r),
                                    l = [],
                                    d = t.range_color.step;
                                if (d > 1) {
                                    for (i = 0; i < d - 1; i++) l.push(o(i / (d - 1)));
                                    l.push(o(1))
                                }
                                e = function (e, t, a, i, n) {
                                    var r = s(t);
                                    if (d) {
                                        var c = Math.floor(d * r);
                                        return c = Math.min(c, d - 1), y[e] = l[c], l[c]
                                    }
                                    return y[e] = o(r), o(r)
                                }
                            }
                        }(t.mode), e
                    }

                    function f(e, t, a) {
                        return t = t || {}, angular.forEach(e, function (e, i) {
                            void 0 == t[e] && (t[e] = {
                                name: e,
                                color: a[i % a.length]
                            })
                        }), t
                    }
                    var g = e.info,
                        m = e.data,
                        _ = m.x,
                        v = _[0].data || [],
                        b = _[0].word_part_count || [],
                        y = {},
                        w = bdpChart.helper,
                        C = e.$elem,
                        x = {
                            width: C.width(),
                            height: C.height()
                        };
                    if (g.display_in_3d) {
                        var k = {
                                funcQueue: [],
                                loadLibInProgress: !1
                            },
                            D = {};
                        thirdPluginLoader({
                            initFun: t,
                            libSrc: "https://s1.bdp.cn/static/js/lib/wordcloud/svg3dtagcloud_fe06e7a.js",
                            libId: window.SVG3DTagCloud
                        }, k)
                    } else {
                        var S = window.devicePixelRatio || 1,
                            y = {},
                            T = "fullscreen" == e.mode ? " #272A30" : "#fff";
                        T = "transparent";
                        var I, D = {
                                shuffle: !1,
                                rotateRatio: 1,
                                customRotations: [0, -Math.PI / 2, 0, Math.PI / 2, 0],
                                fontFamily: "Arial, Helvetica, Microsoft Yahei, sans-serif",
                                backgroundColor: T
                            },
                            L = d3.scale.linear().domain([b[b.length - 1], b[0]]).range([20, 157]),
                            A = e.isMobileMode,
                            E = "en" == bdpChart.language ? "word frequency" : "词频";
                        setTimeout(function () {
                            n()
                        }, 500), $(window).on("resize.wordcloud" + e.ct_id, function () {
                            "edit" != e.mode && u()
                        })
                    }
                }
            }(),
            function () {
                function e(e) {
                    var t = bdpChart.language || "zh",
                        a = "zh" === t ? "当前图表无数据" : "No data to display";
                    e.html('<div class="chart-error"><p>' + a + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                }

                function t(e) {
                    e.info.funnel_setting || (e.info.funnel_setting = {
                        show_detail: !0,
                        layout: "horizontal"
                    }), this.$elem = e.$elem, this.d3Elem = d3.selectAll(e.$elem.toArray()), this.data = {
                        $elem: [],
                        dataArray: [],
                        width: "",
                        height: ""
                    }, this.chart = e, this.theme = e.theme, this.tooltip = null, this.data.$elem = d3.selectAll(e.$elem.toArray()), this.modeColor = this.chart.deviceStyle.bg, this.isMobileMode = e.isMobileMode
                }
                var a = bdpChart.helper;
                t.prototype = {
                    constructor: t,
                    draw: function () {
                        var t = this.chart.mode,
                            a = 0,
                            i = 0;
                        if ("edit" === t && (i = 64, a = 80), this.isMobileMode && (i = 32, a = 32, chart.isDashboardMode && (i = 0, a = 0)), this.data.height = this.$elem[0].offsetHeight - i, this.data.width = this.$elem[0].offsetWidth - a, this.$elem.width() * this.$elem.height() == 0) return !1;
                        var n = this._structData(this._normalizeData());
                        if (!n.length || 1 === n.length && 1 === n[0].firstNull) return e(this.$elem), !1;
                        this.data.dataArray = n, this._setOptions(), this._bindEvents(), new D3Sunburst(this.data, this.options), this.chart.emit("load", this.chart, null)
                    },
                    _normalizeData: function () {
                        var e = this,
                            t = angular.copy(e.chart.data),
                            a = bdpChart.language || "zh",
                            i = t.y[0].data;
                        e.chart.misMatchNum = [];
                        for (var n = i.length - 1; n >= 0; n--)
                            if (i[n] < 0 || null === i[n]) {
                                i.splice(n, 1);
                                var r, o = [];
                                t.x.forEach(function (t, i) {
                                    r = "" === t.data[n] ? "zh" === a ? "(空白)" : "(blank)" : e.chart._formatXAxisLabel(t.data[n], i, !0), o.push(r), t.data.splice(n, 1)
                                }), e.chart.misMatchNum.push(o.join("-"))
                            }
                        return t
                    },
                    _makeFirstLevelPosItem: function (e, t) {
                        for (var a, i = e.data, t = t || 0, n = [], r = {}, o = this.chart.info.xAxis, s = 0, l = 0; l < o.length; l++)
                            if (o[l].fid === e.fid) {
                                s = l;
                                break
                            }
                        for (var l = 0, d = i.length; l < d; l++)
                            if (a = this.chart._formatXAxisLabel(i[l], s, !0), r = {
                                    originData: i[l],
                                    name: a,
                                    startPos: l + t,
                                    endPos: "",
                                    children: [],
                                    colorArray: [],
                                    color: "",
                                    size: ""
                                }, 0 === l) n.push(r), 1 === d && (r.endPos = l + t);
                            else if (l > 0 && i[l] !== i[l - 1]) {
                                n.push(r);
                                var c = n.length,
                                    p = l - 1 + t;
                                if (n[c - 2].endPos = p, l === d - 1) {
                                    var u = l + t;
                                    n[c - 1].endPos = u
                                }
                            } else if (l === d - 1) {
                                var c = n.length,
                                    u = l + t;
                                n[c - 1].endPos = u
                            }
                        return n
                    },
                    _makeOtherPosItem: function (e, t) {
                        for (var a, i, n = e.data, r = [], o = [], s = angular.copy(e), l = 0, d = t.length; l < d; l++) {
                            a = t[l].startPos, i = t[l].endPos, s.data = [];
                            for (var c = a, p = i + 1; c < p; c++) s.data.push(n[c]);
                            r = this._makeFirstLevelPosItem(s, a), o = o.concat(r)
                        }
                        return o
                    },
                    getPosArr: function (e, t) {
                        for (var a, i, n = [], r = e.length, o = 0; o < r; o++) a = 0 === o ? this._makeFirstLevelPosItem(e[o]) : this._makeOtherPosItem(e[o], n[n.length - 1]), n.push(a);
                        i = n[n.length - 1];
                        for (var o = 0, s = i.length; o < s; o++) i[o].size = 1 * t[o];
                        return n
                    },
                    makeJsonData: function (e) {
                        for (var t, a, i = e.length - 1; i >= 1; i--) t = e[i], a = e[i - 1], this.pushLevelItem(a, t);
                        return a
                    },
                    pushLevelItem: function (e, t) {
                        for (var a, i, n, r, o, s, l, d = 0, c = 0, p = e.length; c < p; c++) {
                            a = e[c], i = a.startPos, n = a.endPos, d = 0;
                            for (var u = 0, h = t.length; u < h; u++) r = t[u], o = parseFloat(r.size), s = r.startPos, l = r.endPos, s >= i && l <= n && (d += o, a.size = d, ["", "(空白)", "(Blank)"].indexOf(r.name) > -1 && (r.firstNull = 1, r.children = []), a.children.push(r))
                        }
                    },
                    attrChildrenColor: function (e) {
                        var t = e.children;
                        if (t)
                            for (var a = 0; a < t.length; a++) t[a].color = e.color, this.attrChildrenColor(t[a])
                    },
                    _attrColor: function (e, t) {
                        var a, i = t.data.x,
                            n = t.info,
                            r = bdpChart.colors.default,
                            o = r.length,
                            s = {},
                            l = n.color_setting,
                            d = e.length,
                            c = [];
                        i[0].data.forEach(function (e, t) {
                            "" !== e && ["(空白)", "(Blank)"].indexOf(e) < 0 && c.indexOf(e) < 0 && c.push(null === e ? null : e)
                        }), l.enum_color_map ? s = l.enum_color_map : c.forEach(function (e, t) {
                            "" !== e && ["(空白)", "(Blank)"].indexOf(e) < 0 && !s.hasOwnProperty(e) && (s[e] = {
                                name: e,
                                color: r[t % o]
                            })
                        });
                        for (var p = 0; p < d; p++) a = e[p], ["date", "sub_date"].indexOf(i[0].data_type) > -1 && s.hasOwnProperty(a.originData) ? a.color = s[a.originData].color : a.color = s[a.name] ? s[a.name].color : r[p], this.attrChildrenColor(a);
                        return e
                    },
                    _structData: function (e) {
                        for (var t = this, a = (t.chart.data, e.y[0].data), i = this.makeJsonData(this.getPosArr(e.x, a)), n = 0, r = i.length - 1; r >= 0; r--) "(空白)" !== i[r].name && "" !== i[r].name || (i[r].firstNull = 1, i[r].children = []), n += i[r].size;
                        return i.size = n, i = t._attrColor(i, t.chart)
                    },
                    setTooltipPosition: function () {
                        if (null === this.tooltip) return {
                            x: 0,
                            y: 0
                        };
                        var e = this.tooltip.outerWidth(),
                            t = this.tooltip.outerHeight(),
                            a = d3.event.clientX + 10,
                            i = d3.event.clientY,
                            n = this.$elem[0].getBoundingClientRect();
                        return d3.event.pageX + t > n.right && (a = a - e - 20), d3.event.pageY + t > n.bottom - 30 && (i -= t), {
                            x: a - n.left,
                            y: i - n.top
                        }
                    },
                    _setOptions: function () {
                        var e, t = this,
                            a = (this.displayMode, !this.chart.isDashboardMode || this.chart.isDashboardMode, Math.min(t.data.height, t.data.width)),
                            i = t.chart.info;
                        e = a < 250 ? "10" : a >= 250 && a < 450 ? "12" : a >= 450 && a < 850 ? "14" : "16", t.options = {
                            chart: {
                                isMobile: t.isMobileMode,
                                fontSize: e,
                                modeColor: t.modeColor,
                                showProportion: i.sunburst_setting && i.sunburst_setting.showProportion || "text"
                            },
                            dataLabels: {
                                allowOverlap: i.show_all_datalabels
                            },
                            series: [],
                            color: []
                        }, i && i.style && i.style.labels && (t.options.dataLabels.style = i.style.labels.style)
                    },
                    _getSum: function (e) {
                        return e.parent ? this._getSum(e.parent) : e.size || (valueSum = e.children.size), valueSum
                    },
                    _getTitle: function (e) {
                        var t = e.name;
                        return e.depth > 1 ? (t = e.parent.name + "-" + t, this._getTitle(e.parent)) : e.depth, t
                    },
                    _getHoverColor: function (e) {
                        var t = d3.rgb(e.color),
                            a = t.r + 25 > 255 ? 255 : t.r + 25,
                            i = t.g + 25 > 255 ? 255 : t.g + 25,
                            n = t.b + 25 > 255 ? 255 : t.b + 25;
                        return d3.rgb(a, i, n).toString()
                    },
                    _showTooltip: function (e, t) {
                        var i = this,
                            n = "zh" === bdpChart.language ? "占比" : "rate",
                            r = i.chart.data,
                            o = d3.scale.linear().range([0, 2 * Math.PI]),
                            s = {
                                startA: Math.max(0, Math.min(2 * Math.PI, o(e.x))),
                                endA: Math.max(0, Math.min(2 * Math.PI, o(e.x + e.dx)))
                            },
                            l = Math.abs(s.startA - s.endA),
                            d = $(i.$elem).find("#path-" + t);
                        if (e.originColor = d.css("fill"), l > .01 && !e.firstNull) {
                            i.tooltip = i.$elem.find(".sankey-tooltip");
                            var c = d3.hsl(e.color),
                                p = e.depth % 2 == 1 ? e.color : d3.hsl(c.h, c.s, 1.15 * c.l),
                                u = i._getSum(e),
                                h = e.size / u * 100,
                                f = i.chart.info,
                                g = i._getTitle(e),
                                m = "default" === i.theme ? "#8E8E8E" : "#fff",
                                _ = f.y[0].nick_name || f.y[0].name,
                                v = f.yAxis[0].unit_adv || "",
                                b = bdpChart.helper.dataLabelFormatter(f.yAxis[0].formatter, parseFloat(e.size));
                            if (e.parent)
                                if (d3.selectAll(".node").style("opacity", 1), d.css("opacity", .8), i.isMobileMode) i.tooltip.remove(), i.tooltip = $('<div class="sankey-tooltip"><p class="tooltips-title">' + g + '</p><div class="tooltips-point-wrap' + (0 === r.x.length ? " no-dimension" : "") + '"><div class="tooltips-table"><div class="tooltips-item"><div class="tooltips-val" style="color:' + p + '">' + b + a.escapeHtml(v) + '</div><div class="tooltips-label">' + a.escapeHtml(_) + '</div></div><div class="tooltips-item"><div class="tooltips-val" style="color:' + p + '">' + h.toFixed(1) + '</div><div class="tooltips-label">' + n + "</div></div></div></div></div>"), i.$elem.append(i.tooltip);
                                else {
                                    var y = i.setTooltipPosition();
                                    i.tooltip.length || (i.tooltip = $('<div class="sankey-tooltip" style="position:absolute; border-color:' + p + ";left:" + y.x + "px;top:" + y.y + 'px;"><p class="text-center tooltips-title" style="color: ' + m + '">' + g + '</p><table class="tooltips-table"></tr><tr><td class="nowrap" style="color:' + p + ';text-align: right; max-width: 170px; overflow:hidden; text-overflow:ellipsis ">' + a.escapeHtml(_) + '：</td><td style="color:' + p + '">' + b + a.escapeHtml(v) + '</td></tr><tr><td style="color:' + p + '; text-align: right">' + n + '：</td><td style="color:' + p + '">' + h.toFixed(1) + "%</td></tr></table></div>"), i.$elem.append(i.tooltip))
                                }
                        }
                    },
                    _bindEvents: function () {
                        var e = this;
                        e.isMobileMode ? e.options.events = {
                            click: function (t, a) {
                                e._showTooltip(t, a)
                            }
                        } : e.options.events = {
                            mouseover: function (t, a) {
                                e._showTooltip(t, a)
                            },
                            mouseout: function (t, a) {
                                d3.select(e.$elem[0]).select("#path-" + a).style("fill", t.originColor), e.tooltip && e.tooltip.remove()
                            },
                            mousemove: function (t, a) {
                                var i = e.setTooltipPosition();
                                e.updateTooltipPosition(i.x, i.y)
                            }
                        }
                    },
                    updateTooltipPosition: function (e, t) {
                        this.tooltip && this.tooltip.css({
                            left: e,
                            top: t
                        })
                    },
                    resize: function (e) {
                        var t = this,
                            a = e.width(),
                            i = e.height();
                        t.d3Elem && t.d3Elem.select("svg") && t.d3Elem.select("svg").attr("width", a).attr("height", i)
                    }
                }, bdpChart.setSunburstSpecialOption = function (a) {
                    var i = a.$elem;
                    if (!a.data.y[0] || !a.data.y[0].data.length) return void e(i);
                    var n = new t(a);
                    $(window).on("resize", function () {
                        n.resize(i)
                    }), a.once("load", function () {
                        var e = a.misMatchNum,
                            t = bdpChart.language || "zh";
                        if (e.length && "edit" === a.mode && "C360" === a.info.chart_type) {
                            var i = "";
                            i = "zh" === t ? "有" + e.length + "项负值或空值数据" : "There are " + e.length + " negative or null values.";
                            var n = '<div class="map-mismatch-text pa guide"><p><a class="cursor-pointer">' + i + '</a></p><div class="guide-tip dropdown-wrap">' + bdp.utils.encodeHTML(e.join("、")) + "</div></div>";
                            a.$elem.append(n)
                        }
                    }), a.on("reflow", function () {
                        n.resize(i)
                    }), n.draw()
                }
            }(),
            function (e) {
                function t(e, t, a) {
                    var i = document.createElement(e);
                    if (null === t || "null" == t || void 0 === t || "undefined" === t) {
                        var n = document.createTextNode("");
                        i.appendChild(n)
                    } else {
                        var n = document.createTextNode(t);
                        i.appendChild(n)
                    }
                    return a && (i.className = a), i
                }

                function a(e) {
                    var t = !0,
                        i = "";
                    if (c(e))
                        for (var n, r = 0; r < e.length; r++) {
                            if (n = e[r], !u(n)) {
                                i = "不是一个标准的数据格式，每一项必须是一个{}", t = !1;
                                break
                            }
                            if (void 0 === n.name) {
                                i = "缺少name属性", t = !1;
                                break
                            }
                            if (n.children) {
                                var o = a(n.children);
                                if (!o.valid) return {
                                    valid: !1,
                                    errMsg: o.errMsg
                                }
                            }
                        } else i = "非数组格式", t = !1;
                    return {
                        valid: t,
                        errMsg: i
                    }
                }

                function i(e) {
                    var t, a = [];
                    return e.forEach(function (e, i) {
                        var n = !!e.info.tb_statistic.col;
                        t = e.data, t.x.length ? a.push(t.x[0].data.length + n) : t.y.length ? a.push(t.y[0].data.length + n) : t.y_optional.length && a.push(t.y_optional[0].data.length + n)
                    }), a.sort(function (e, t) {
                        return e - t
                    }).pop()
                }

                function n(e) {
                    var t, a = {};
                    return e.forEach(function (e, i) {
                        t = e.info, t.xAxis.forEach(function (e, t) {
                            a["%T" + i + ".X" + t + "%"] = e
                        }), t.yAxis.forEach(function (e, t) {
                            a["%T" + i + ".Y" + t + "%"] = e
                        }), (t.compare_axis || []).forEach(function (e, t) {
                            a["%T" + i + ".C" + t + "%"] = e
                        }), (t.yAxisOptional || []).forEach(function (e, t) {
                            a["%T" + i + ".Y_OPTIONAL" + t + "%"] = e
                        })
                    }), a
                }

                function r(e, t) {
                    var a, i, n, r = [];
                    return e.forEach(function (e, o) {
                        a = e.info;
                        var s = e.data.y,
                            l = a.tb_statistic && a.tb_statistic.row;
                        n = a.compare_axis.length && a.compare_setting && a.compare_setting.sort.index || 0, a.xAxis.forEach(function (e, a) {
                            if (i = "%T" + o + ".X" + a + "%", o > 0) {
                                var n = !1;
                                (t || []).forEach(function (e) {
                                    e.indexOf(i) > -1 && (n = !0)
                                }), n || r.push({
                                    name: i,
                                    _refName: i,
                                    children: []
                                })
                            } else r.push({
                                name: i,
                                _refName: i,
                                children: []
                            })
                        }), l && "left" === a.tb_statistic.row_pos && r.push({
                            name: s[0].name,
                            children: []
                        });
                        var d = [{
                                name: "",
                                _refName: "",
                                children: []
                            }],
                            c = [{
                                name: "",
                                _refName: "",
                                children: []
                            }];
                        if (0 === n) {
                            for (var p = (a.compare_axis || []).length; p > 0;) i = "%T" + o + ".C" + (p - 1) + "%", d[0].name && (d[0].children = [y(d[0])]), d[0].name = i, d[0]._refName = i, p--;
                            a.yAxis.forEach(function (e, t) {
                                i = "%T" + o + ".Y" + t + "%", r.push({
                                    name: i,
                                    _refName: i,
                                    children: d[0].name ? y(d) : []
                                })
                            })
                        } else if (n > 0) {
                            for (var u = [], p = (a.compare_axis || []).length; p > 0 && n < p;) i = "%T" + o + ".C" + (p - 1) + "%", d[0].name && (d[0].children = [y(d[0])]), d[0].name = i, d[0]._refName = i, p--;
                            for (a.yAxis.forEach(function (e, t) {
                                i = "%T" + o + ".Y" + t + "%", u.push({
                                    name: i,
                                    _refName: i,
                                    children: d[0].name ? y(d) : []
                                })
                            }); n > 0;) i = "%T" + o + ".C" + (n - 1) + "%", c[0].name ? c[0].children = [y(c[0])] : c[0].children = y(u), c[0].name = i, c[0]._refName = i, n--;
                            r.push(c[0])
                        }
                        s.forEach(function (e, t) {
                            "virtual" === e.data_type && e.parent_uniq_id && r.push({
                                name: s[t].name,
                                children: []
                            })
                        }), l && "right" === a.tb_statistic.row_pos && r.push({
                            name: s[s.length - 1].name,
                            children: []
                        })
                    }), r
                }

                function o(e) {
                    for (var t = e.map(function (e) {
                        return e.length
                    }).sort().pop(), a = [], i = 0; i < t;) a[i] = [], e.forEach(function (e, t) {
                        var n = e[i] || {};
                        for (var r in n) n.hasOwnProperty(r) && a[i].push(n[r])
                    }), i++;
                    return a
                }

                function s(e, t) {
                    var a = [],
                        i = n(t);
                    return e.forEach(function (e) {
                        var t = [];
                        for (var n in i) i.hasOwnProperty(n) && (name = i[n].nick_name || i[n].name, name === e && t.push(n));
                        t.length && a.push(t)
                    }), a
                }

                function l(e, t, a) {
                    this.theadRows = 0, this.views = y(e), this.$elem = t, this.totalData = i(this.views), this.colSummaryPos = "bottom", this.rowSummaryPos = "right", this.varMap = n(this.views), this.ctId = a
                }

                function d(e) {
                    return e && e.document && e.location && e.alert && e.setInterval
                }

                function c(e) {
                    return void 0 !== e && "[object array]" === Object.prototype.toString.call(e).toLowerCase()
                }

                function p(e) {
                    return "string" == typeof e
                }

                function u(e) {
                    return void 0 !== e && "[object object]" === Object.prototype.toString.call(e).toLowerCase()
                }

                function h(e) {
                    return "[object Date]" === Object.prototype.toString.call(e)
                }

                function f(e) {
                    return "[object RegExp]" === Object.prototype.toString.call(e)
                }

                function g(e) {
                    return "function" == typeof e
                }

                function m(e, t) {
                    if (e.indexOf) return e.indexOf(t);
                    for (var a = 0; a < e.length; a++)
                        if (t === e[a]) return a;
                    return -1
                }

                function _(e, t) {
                    if (e === t) return !0;
                    if (null === e || null === t) return !1;
                    if (e !== e && t !== t) return !0;
                    var a, i, n, r = typeof e,
                        o = typeof t;
                    if (r == o && "object" == r) {
                        if (!c(e)) {
                            if (h(e)) return h(t) && e.getTime() == t.getTime();
                            if (f(e) && f(t)) return e.toString() == t.toString();
                            if (c(t)) return !1;
                            n = {};
                            for (i in e)
                                if ("$" !== i.charAt(0) && !g(e[i])) {
                                    if (!_(e[i], t[i])) return !1;
                                    n[i] = !0
                                }
                            for (i in t)
                                if (!n.hasOwnProperty(i) && "$" !== i.charAt(0) && void 0 !== t[i] && !g(t[i])) return !1;
                            return !0
                        }
                        if (!c(t)) return !1;
                        if ((a = e.length) == t.length) {
                            for (i = 0; i < a; i++)
                                if (!_(e[i], t[i])) return !1;
                            return !0
                        }
                    }
                    return !1
                }

                function v(e) {
                    if (null == e || d(e)) return !1;
                    var t = e.length;
                    return !(1 !== e.nodeType || !t) || (p(e) || c(e) || 0 === t || "number" == typeof t && t > 0 && t - 1 in e)
                }

                function b(e, t, a) {
                    var i;
                    if (e)
                        if (g(e))
                            for (i in e) "prototype" == i || "length" == i || "name" == i || e.hasOwnProperty && !e.hasOwnProperty(i) || t.call(a, e[i], i);
                        else if (e.forEach && e.forEach !== b) e.forEach(t, a);
                        else if (v(e))
                            for (i = 0; i < e.length; i++) t.call(a, e[i], i);
                        else
                            for (i in e) e.hasOwnProperty(i) && t.call(a, e[i], i);
                    return e
                }

                function y(e, t, a, i) {
                    if (d(e)) throw "Can't copy! Making copies of Window or Scope instances is not supported.";
                    if (t) {
                        if (e === t) throw "Can't copy! Source and destination are identical.";
                        if (a = a || [], i = i || [], u(e)) {
                            var n = m(a, e);
                            if (n !== -1) return i[n];
                            a.push(e), i.push(t)
                        }
                        var r;
                        if (c(e)) {
                            t.length = 0;
                            for (var o = 0; o < e.length; o++) r = y(e[o], null, a, i), u(e[o]) && (a.push(e[o]), i.push(r)), t.push(r)
                        } else {
                            b(t, function (e, a) {
                                delete t[a]
                            });
                            for (var s in e) r = y(e[s], null, a, i), u(e[s]) && (a.push(e[s]), i.push(r)), t[s] = r
                        }
                    } else t = e, e && (c(e) ? t = y(e, [], a, i) : h(e) ? t = new Date(e.getTime()) : f(e) ? t = new RegExp(e.source) : u(e) && (t = y(e, {}, a, i)));
                    return t
                }
                var w, C, x = {
                        center: " text-center",
                        left: " text-left",
                        right: " text-right"
                    },
                    k = bdpChart.language || "zh";
                "zh" == k ? ("当前图表无数据", "加载更多...", "表格数据超过100条不支持行列转置", w = "总计", C = "小计") : ("No data to display", "Load more...", "Table data more than 100 do not support transpose", w = "Summary", C = "Subtotal"), l.prototype = {
                    theadCells: [],
                    theadCellsTmp: [],
                    canRender: !0,
                    render: function (e) {
                        var t = this;
                        if (!t.canRender) return !1;
                        t.destory(), t.meta = e || r(t.views, t.joinArgs), t.setHeadMeta(), "JOIN" === t.action ? t._joinTable(t.joinArgs) : "UNION" === t.action || "CUSTOM" === t.action && t._doCustomRender()
                    },
                    viewOrder: function (e) {
                        var t = !0,
                            a = this;
                        if (e && ($.isArray(e) ? e.length !== this.views.length && (t = !1, alert("请确认设置了每一个视图的顺序")) : (t = !1, alert('视图顺序请遵循["第一个视图名称","第N个视图名称",...]的形式'))), a.canRender = t, t && e) {
                            var i = [];
                            e.forEach(function (e) {
                                a.views.forEach(function (t, a) {
                                    t.info.title === e && i.push(t)
                                })
                            }), a.views = i, a.varMap = n(this.views)
                        }
                        return t
                    },
                    joinTable: function (e) {
                        var t = this,
                            a = !0,
                            i = !1;
                        if (!this.canRender) return !1;
                        if (e)
                            if ($.isArray(e)) {
                                var n = $.isArray(e[0]);
                                n ? a = e.every(function (e, t) {
                                    return $.isArray(e)
                                }) : (a = e.every(function (e, t) {
                                    return "string" == typeof e
                                }), i = !0)
                            } else a = !1;
                        if (a) {
                            if (this.joinArgs = i ? s(e, this.views) : e, i && this.joinArgs.length !== e.length) return alert("请确保每一个数据集中均存在join条件中的每一项值"), !1;
                            if (i)
                                for (var r = 0; r < t.views.length; r++) {
                                    for (var o = t.views[r], l = 0, d = 0; d < e.length; d++)
                                        for (var c = 0, p = o.data.x.length; c < p; c++) {
                                            var u = o.data.x[c].nick_name || o.data.x[c].name;
                                            if (u === e[d]) {
                                                l++;
                                                break
                                            }
                                        }
                                    if (l !== e.length) return alert("请确保每一个数据集中均存在join条件中的每一项值，否则会造成数据膨胀"), !1
                                }
                            this.action = "JOIN"
                        } else alert("join条件不合法");
                        return t.canRender = a, a
                    },
                    unionTable: function () {
                        this.action = "UNION"
                    },
                    _drawTable: function () {
                        var e = document.createElement("table");
                        e.setAttribute("class", "bdp-table-normal bdp-table-custom");
                        var t = this.initHeadHTML();
                        e.appendChild(t);
                        var a = this.initBodyHTML();
                        e.appendChild(a), this.$elem.html(e), this.getTbMergeCell() && this.mergeCell(), this.viewData = null, this.theadCellsTmp = null, $(e).fixedHeaderTable({
                            borderCollapse: !1,
                            fixedColumn: !1
                        }), window["iframe_childCustomData_" + this.ctId] = {
                            enableExportExcel: !0,
                            head: this.theadCells,
                            body: this.tableData
                        }
                    },
                    getTbMergeCell: function () {
                        return this.views.some(function (e, t) {
                            return !!e.info.tb_statistic.tb_merge_cell
                        })
                    },
                    setHeadMeta: function () {
                        var e = this.meta,
                            t = a(e);
                        if (!t.valid) return void alert(t.errMsg);
                        this.translateMeta1(), this.theadRows = this.getHeadRows(e), this.setRowSpan(e), this.makeMetaToArray(e), this.buildTheadCells(), this.setColSpan(e)
                    },
                    getHeadRows: function (e, t) {
                        var a = this,
                            i = [];
                        return e.forEach(function (e, n) {
                            i[n] = 1, e.row = void 0 === t ? 0 : t + 1, e.children && e.children.length && (i[n] += a.getHeadRows(e.children, e.row))
                        }), i.sort().pop()
                    },
                    setRowSpan: function (e) {
                        var t = this;
                        e.forEach(function (e, a) {
                            e.children && e.children.length ? (e.rowSpan = 1, t.setRowSpan(e.children)) : e.rowSpan = t.theadRows - (e.row || 0)
                        })
                    },
                    makeMetaToArray: function (e, t) {
                        var a = this;
                        e.forEach(function (e, i) {
                            var n = a.theadCellsTmp.length;
                            e.parent = t, a.theadCellsTmp.push({
                                _i: n,
                                name: e.name,
                                row: e.row,
                                rowSpan: e.rowSpan || 1,
                                colSpan: e.colSpan || 1,
                                parent: void 0 === t ? {} : t
                            }), e.children && e.children.length && a.makeMetaToArray(e.children, {
                                name: e.parent && e.parent.name ? e.parent.name + "_" + e.name : e.name,
                                _i: n
                            })
                        })
                    },
                    buildTheadCells: function () {
                        var e = this;
                        e.theadCellsTmp.forEach(function (t, a) {
                            e.theadCells[t.row] || (e.theadCells[t.row] = []), e.theadCells[t.row].push(t)
                        })
                    },
                    _getYRange: function () {
                        var e, t = [],
                            a = [];
                        return (this.views || []).forEach(function (i, n) {
                            e = [], t[n] = [];
                            var r = i.data.y.concat(i.data.y_optional || []);
                            r.forEach(function (t, i) {
                                a.indexOf(t.uniq_id) < 0 && (e.push(i), a.push(t.uniq_id))
                            }), e.push(r.length);
                            for (var o = 0; o < e.length - 1; o++) t[n].push([e[o], e[o + 1]])
                        }), t
                    },
                    translateMeta1: function () {
                        function e(e, t, n, r) {
                            for (var o = 0, s = t, l = a.views[n].info, d = l.compare_axis, c = 0; c < d.length; c++)
                                if ((d[c].nick_name || d[c].name) == s) {
                                    o = c;
                                    break
                                }
                            var p = [],
                                u = [],
                                h = [];
                            i = a._getNodeIndex(a.views[r[0]].data, e);
                            var f = a.views[n].data.y.length;
                            return (a.views[n].data.y.slice(i) || []).forEach(function (t, a) {
                                if ("row_summary" !== t.fid) {
                                    var n = t.compare_names.slice(0, o + 1).join("_"),
                                        r = t.compare_names[o + 1];
                                    r && (!h.length || h.indexOf(n) > -1) && u.indexOf(r) < 0 && (i++, i >= f && (i = 0), p.push({
                                        name: r,
                                        parentName: e.parentName || null,
                                        _refName: e._refName || null,
                                        _parentRefName: e._parentRefName || null
                                    }), u.push(r), h.push(n))
                                }
                            }), p
                        }

                        function t(i, r) {
                            var o, s = [];
                            i.forEach(function (l, d) {
                                o = a.varMap[l.name];
                                var c, p, u, h, f = [];
                                if (l.parentName ? (u = l.parentName, h = l._refPName) : (r ? r.parentName ? (u = r.parentName + "_" + r.name, h = r._parentRefName + "_" + r._refName) : (u = r.name, h = r._refName) : (u = null, h = null), l.parentName = u, l._parentRefName = h), /^\%T\d+\.[C,X,Y]\d+\%$/.test(l.name) && (f = l.name.match(/\d+/g).map(function (e) {
                                        return +e
                                    })), f.length && (c = a.views[f[0]].info, p = c.compare_axis.length && c.compare_setting && c.compare_setting.sort.index || 0), /^\%T\d+\.C\d+\%$/.test(l.name))
                                    if (f.length && f[1] < p) {
                                        var g = [];
                                        (a.views[f[0]].data.y || []).forEach(function (e, t) {
                                            for (var a = e.compare_names, i = {
                                                name: a[f[1]],
                                                parentName: u,
                                                _refName: l.name,
                                                _parentRefName: h,
                                                children: y(l.children)
                                            }, n = !1, o = 0; o < g.length; o++)
                                                if (_(i, g[o])) {
                                                    n = !0;
                                                    break
                                                }
                                            var s = a.slice(0, f[1]).join("_");
                                            n || r && (!r || u !== s) || g.push(i)
                                        }), r ? r.children = y(g) : Array.prototype.splice.apply(i, [d, 1].concat(y(g))), t(a.meta)
                                    } else s = e(l, o.nick_name || o.name, f[0], f), n.push(l.name);
                                else if (/^\%T\d+\.[X,Y]\d+\%$/.test(l.name)) {
                                    var m = o.nick_name || o.name;
                                    l.name = m
                                }
                                s.length && r ? (r.children = y(s), l.children && l.children.length && /^\%T\d+\.C\d+\%$/.test(l.name) && (r.children.forEach(function (e) {
                                    e.children = y(l.children)
                                }), r && t(r.children, r))) : l.children && l.children.length && t(l.children, l)
                            })
                        }
                        var a = this,
                            i = 0,
                            n = [];
                        t(a.meta)
                    },
                    _getNodeIndex: function (e, t) {
                        for (var a, i = 0, n = 0, r = e.y.length - 1; n < r; n++)
                            if (a = e.y[n], a.compare_names && a.compare_names.join("_").indexOf(t.parentName) > -1) {
                                i = n;
                                break
                            }
                        return i
                    },
                    setColSpan: function (e) {
                        var t, a, i = this;
                        if (i.theadRows > 1)
                            for (var n = i.theadRows - 2; n >= 0; n--) {
                                a = i.theadCells[n], t = i.theadCells[n + 1];
                                for (var r = 0; r < a.length; r++) {
                                    for (var o = 0; o < t.length; o++) {
                                        var s = t[o].parent,
                                            l = a[r].parent.name ? a[r].parent.name + "_" + a[r].name : a[r].name;
                                        s.name === l && s._i === a[r]._i && (a[r].colSpan += t[o].colSpan)
                                    }
                                    a[r].colSpan > 1 && a[r].colSpan--
                                }
                            }
                        return i.theadCells
                    },
                    loadScriptAsync: function (e) {
                        function t() {
                            window.AlaSql = "AlaSql", e && "function" == typeof e && e()
                        }
                        var a = {
                            funcQueue: [],
                            loadLibInProgress: !1
                        };
                        thirdPluginLoader({
                            initFun: t,
                            libSrc: "https://s1.bdp.cn/static/js/lib/alasql.min_2736c18.js",
                            libId: window.AlaSql
                        }, a)
                    },
                    _joinTable: function (e) {
                        var t = this,
                            a = [];
                        (e || []).forEach(function (e, t) {
                            a[t] = [], e.forEach(function (e, i) {
                                var n = e.match(/\d+/g).map(function (e, t) {
                                    return +e
                                });
                                a[t].push(n)
                            })
                        });
                        for (var i = 0; i < a.length; i++)
                            for (var n = a[i], r = 0; r < n.length; r++)
                                if (!t.views[n[r][0]].data.x[n[r][1]]) return alert("请确保第" + (n[r][0] + 1) + "个数据集有" + (n[r][1] + 1) + "个维度"), !1;
                        t.joinRule = a, t.viewData = t.buildTableData();
                        var s = function (e) {
                            return function (a) {
                                var i = "";
                                return t._joinKey.forEach(function (e, a) {
                                    i += " table0." + e + " = table1." + e, a < t._joinKey.length - 1 && (i += " AND ")
                                }), alasql("SELECT * FROM ? table0 OUTER JOIN ? table1 ON " + i, [e, a])
                            }
                        };
                        this.customSql || this.joinExternalInfoMap(), e ? function () {
                            var e = t.viewData.length;
                            if (e > 1) {
                                for (var a, i, n = 1; n < e; n++) i = s(a || t.viewData[0]), alasql.options.modifier = n + 1 == e ? "MATRIX" : "", a = i(t.viewData[n]);
                                t.tableData = a, t._drawTable()
                            }
                        }() : (t.tableData = o(t.viewData), t._drawTable())
                    },
                    buildTableData: function (e) {
                        var t = this,
                            a = [],
                            n = [];
                        t.originColData = [], t._joinKey = [], t.externalInfoMap = {};
                        var r = [];
                        (t.joinRule || []).forEach(function (e, t) {
                            r[t] = e.map(function (e) {
                                return "bdp" + e.join("")
                            })
                        });
                        var o = function (e, t, a) {
                            return e.tb_statistic.col && e.tb_statistic.subtotal && !$.isEmptyObject(t) && $.isArray(t[a])
                        };
                        if (t.setTableInfo(t.views), t.views.forEach(function (e, a) {
                                var i = e.info.tb_statistic.col,
                                    n = y(e.data.x || []),
                                    r = y(e.data.y || []),
                                    o = y(e.data.y_optional || []);
                                n.forEach(function (t, a) {
                                    t.axis = "x", i && (0 === a ? "bottom" === e.info.tb_statistic.col_pos ? t.data.push(w) : "top" === e.info.tb_statistic.col_pos && t.data.unshift(w) : "bottom" === e.info.tb_statistic.col_pos ? t.data.push("") : "top" === e.info.tb_statistic.col_pos && t.data.unshift(""))
                                }), r.forEach(function (a) {
                                    a.axis = "y", i && ("bottom" === e.info.tb_statistic.col_pos ? a.data.push(a.col_summary) : "top" === e.info.tb_statistic.col_pos && a.data.unshift(a.col_summary)), a.data.forEach(function (e, i) {
                                        void 0 === t.emptyValue || null !== e && void 0 !== e && "" !== e || (a.data[i] = t.emptyValue)
                                    })
                                }), o.forEach(function (e) {
                                    e.axis = "y", i && e.data.push(e.col_summary)
                                }), t.originColData.push([].concat(n, r, o))
                            }), t.originColData.forEach(function (e, t) {
                                n[t] = [], e.forEach(function (e, a) {
                                    n[t][a] = [].concat(e.data)
                                })
                            }), e) {
                            var s = t.customSql;
                            s = s.replace(/\s{2,}/g, " "), n.forEach(function (e, n) {
                                var r = t.views[n].data,
                                    s = t.views[n].info,
                                    l = r.subtotal,
                                    d = s.tb_statistic;
                                if (d.col && "top" === d.col_pos) {
                                    var c = {};
                                    for (var p in l) c[+p + 1] = l[p];
                                    l = c
                                }
                                a[n] = [];
                                for (var u = i([t.views[n]]), h = 0; h < u; h++) {
                                    for (var f = {}, g = e.length, m = 0; m < g; m++) {
                                        var _ = t.originColData[n][m],
                                            v = _.nick_name || _.name;
                                        _.compare_names && (v = _.compare_names.join("_")), f[v] = e[m][h]
                                    }
                                    if (a[n].push(f), o(s, l, h))
                                        for (var b = 0, w = l[h].length; b < w; b++) {
                                            subtotalCell = {};
                                            for (var p = l[h][b], m = 0; m < p.length; m++) {
                                                var _ = t.originColData[n][m],
                                                    v = _.nick_name || _.name;
                                                _.compare_names && (v = _.compare_names.join("_")), subtotalCell[v] = $.isArray(p[m]) ? p[m][0] : p[m], "[__subtotal__]" === subtotalCell[v] ? subtotalCell[v] = C : "" == subtotalCell[v] && (subtotalCell[v] = "__BDPHOLDER" + a[n][h][v]), t.externalInfoMap.hasOwnProperty(v) || (t.externalInfoMap[v] = y(t.originColData[n][m]), delete t.externalInfoMap[v].data)
                                            }
                                            a[n].push(subtotalCell)
                                        }
                                }
                            })
                        } else n.forEach(function (e, n) {
                            var s = t.views[n].data,
                                l = t.views[n].info,
                                d = l.tb_statistic,
                                c = s.subtotal;
                            if (d.col && "top" === d.col_pos) {
                                var p = {};
                                for (var u in c) p[+u + 1] = c[u];
                                c = p
                            }
                            a[n] = [];
                            for (var h = t.joinRule.length ? i([t.views[n]]) : t.totalData, f = 0; f < h; f++) {
                                for (var g = {}, m = 0; m < e.length; m++) {
                                    var _ = "bdp" + n.toString() + m.toString();
                                    r.forEach(function (e, a) {
                                        e.indexOf(_) > -1 && (t._joinKey[a] ? _ = t._joinKey[a] : (_ += "join", t._joinKey[a] = _))
                                    }), g[_] = e[m][f], t.externalInfoMap.hasOwnProperty(_) || (t.externalInfoMap[_] = y(t.originColData[n][m]), delete t.externalInfoMap[_].data)
                                }
                                if (a[n].push(g), o(l, c, f))
                                    for (var v = 0, b = c[f].length; v < b; v++) {
                                        subtotalCell = {};
                                        for (var u = c[f][v], m = 0; m < u.length; m++) {
                                            var _ = "bdp" + n.toString() + m.toString();
                                            r.forEach(function (e, a) {
                                                e.indexOf(_) > -1 && (t._joinKey[a] ? _ = t._joinKey[a] : (_ += "join", t._joinKey[a] = _))
                                            }), subtotalCell[_] = $.isArray(u[m]) ? u[m][0] : u[m], "[__subtotal__]" === subtotalCell[_] ? subtotalCell[_] = C : "" == subtotalCell[_] && (subtotalCell[_] = "__BDPHOLDER" + a[n][f][_]), t.externalInfoMap.hasOwnProperty(_) || (t.externalInfoMap[_] = y(t.originColData[n][m]), delete t.externalInfoMap[_].data)
                                        }
                                        a[n].push(subtotalCell)
                                    }
                            }
                        });
                        return a.forEach(function (e, t) {
                            e.forEach(function (e, t) {
                                for (var a in e) null === e[a] && (e[a] = "")
                            })
                        }), a
                    },
                    customAlaSql: function (e) {
                        this.action = "CUSTOM", this.customSql = e
                    },
                    _doCustomRender: function () {
                        var e = this.buildTableData(!0);
                        alasql.options.modifier = "MATRIX", this.tableData = alasql(this.customSql, e);
                        var t = alasql.parse(this.customSql);
                        this.disSqlColumns(t), this._drawTable()
                    },
                    joinExternalInfoMap: function () {
                        var e = this;
                        e.externalInfoMap = Object.keys(e.externalInfoMap).map(function (t) {
                            return e.externalInfoMap[t]
                        })
                    },
                    disSqlColumns: function (e) {
                        var t = this,
                            a = [];
                        if (e.statements && e.statements.length > 0) {
                            var i = e.statements[0].columns,
                                n = {},
                                r = [];
                            e.statements[0].from && "default" !== e.statements[0].from[0].as && r.push(e.statements[0].from[0].as), e.statements[0].joins && "default" !== e.statements[0].joins[0].as && r.push(e.statements[0].joins[0].as), i.forEach(function (t, i) {
                                var r = null;
                                t.columnid && (t.tableid ? r = t.tableid + ".[" + t.columnid + "]" : (r = "[" + t.columnid + "]", n.bool = !0, n.param = e.statements[0].from[0].param)), a.push(r)
                            })
                        }
                        if (!(a.length < 0)) {
                            var o = this.originColData;
                            n.bool && (o = [this.originColData[Number(n.param)]]);
                            var s = [],
                                l = this.meta;
                            a.forEach(function (e, a) {
                                e: for (var i = 0, n = o.length; i < n; i++) {
                                    var d = 0,
                                        c = o[i].length;
                                    t: for (var p = 0; p < c; p++) {
                                        var u = o[i][p],
                                            h = u.nick_name || u.name;
                                        u.compare_names && (h = u.compare_names.join("_")), h = r.length > 0 ? r[i] + ".[" + h + "]" : "[" + h + "]";
                                        var f = y(u);
                                        if (l[a] && l[a].formatterName) {
                                            this.views;
                                            r.length > 0 ? t.views.forEach(function (e, t) {
                                                e.info.y.forEach(function (e, i) {
                                                    var n = e.nick_name || e.name;
                                                    n = r[t] + ".[" + n + "]";
                                                    var o = y(e);
                                                    l[a].formatterName === n && (o.axis = "y", delete o.data, s.push(o))
                                                })
                                            }) : t.views[0].info.y.forEach(function (e, t) {
                                                var i = e.nick_name || e.name;
                                                i = "[" + i + "]";
                                                var n = y(e);
                                                l[a].formatterName === i && (n.axis = "y", delete n.data, s.push(n))
                                            });
                                            break t
                                        }
                                        if (h === e) {
                                            delete f.data, s.push(f);
                                            break e
                                        }
                                        if (null === e) {
                                            if (!l[a] || !l[a].formatterName) {
                                                s.push({});
                                                break e
                                            }
                                            l[a].formatterName === h && (delete f.data, s.push(f))
                                        } else e !== h && null !== e && d++
                                    }
                                    d === c && s.push({})
                                }
                            }), this.externalInfoMap = s
                        }
                    },
                    initHeadHTML: function () {
                        for (var e = document.createDocumentFragment(), a = document.createElement("thead"), i = 0; i < this.theadCells.length; i++) {
                            for (var n = document.createElement("tr"), r = 0; r < this.theadCells[i].length; r++) {
                                var o = t("th", this.theadCells[i][r].name, "th");
                                o.setAttribute("rowspan", this.theadCells[i][r].rowSpan), o.setAttribute("colspan", this.theadCells[i][r].colSpan), n.appendChild(o)
                            }
                            e.appendChild(n)
                        }
                        return a.appendChild(e), a
                    },
                    initBodyHTML: function () {
                        for (var e, a, i, n, r, o, s = this, l = document.createDocumentFragment(), d = "text-left", c = {}, p = document.createElement("tbody"), u = this.externalInfoMap.length, h = 0; h < this.tableData.length; h++) {
                            e = document.createElement("tr");
                            for (var f = this.tableData[h], g = f.length, m = 0; m < g; m++) {
                                var _ = m;
                                if (m >= u && (_ = m % u), c = this.externalInfoMap[_])
                                    if (i = c.data_type, r = c.alignment_method ? c.alignment_method : "right", n = f[m], "x" === c.axis)
                                        if ("string" !== i || c.alignment_method ? c.alignment_method || (r = "right") : r = "left", d = x[r], [null, "", void 0].indexOf(n) > -1 || 0 === n.toString().indexOf("__BDPHOLDER")) o = "";
                                        else {
                                            o = n;
                                            var v = c.granularity || "day";
                                            "week" === v && (d = "text-left")
                                        }
                                    else "y" === c.axis ? (r = c && c.alignment_method ? c.alignment_method : "right", d = x[r], void 0 === s.emptyValue || null !== n && void 0 !== n && "" !== n || (n = s.emptyValue), o = null === n || void 0 === n ? "--" : isNaN(parseInt(n)) ? n : bdpChart.helper.dataLabelFormatter(c.formatter, n, c.aggregator)) : (void 0 === s.emptyValue || null !== n && void 0 !== n && "" !== n || (n = s.emptyValue), o = n);
                                else void 0 === s.emptyValue || null !== n && void 0 !== n && "" !== n || (n = s.emptyValue), o = n;
                                a = t("td", "", d), tdDiv = t("div", o, "td-wrap"), a.appendChild(tdDiv), e.appendChild(a)
                            }
                            l.appendChild(e)
                        }
                        return p.appendChild(l), p
                    },
                    getRowHeight: function () {
                        return 35
                    },
                    mergeCell: function () {
                        for (var e = this.getRowHeight(), t = this.views[0].data.x.length, a = this.$elem.find("thead"), i = this.$elem.find("tbody"), n = (a.clone(), i.clone()), r = 0; r < t; r++) n.mergeCol(r, e);
                        i[0] && (i[0] = bdp.utils.replaceHtml(i[0], n.html()))
                    },
                    destory: function () {
                        this.$elem.html(""), this.theadCells = [], this.theadCellsTmp = []
                    },
                    formatAlasql: function (e) {
                        var t = /(\+|\-|\*|\/|\%)/g,
                            a = e;
                        return t.test(e) && (a = this.formatAlasqlArith(e)), a
                    },
                    formatAlasqlArith: function (e) {
                        return e.replace(/(\+|\-|\*|\/|\%)/g, " $1 ").replace(/(\[\S*\])/g, "Number($1)")
                    },
                    setTableInfo: function (e) {
                        var t = this;
                        this.customTable = {}, this.customTable.colPos = "bottom", this.customTable.subtotal = !1, e.map(function (e, a, i) {
                            var n = i[a].info;
                            if (n.tb_statistic.subtotal && "top" === n.tb_statistic.col_pos) return t.customTable.colPos = n.tb_statistic.col_pos,
                                void(t.customTable.subtotal = n.tb_statistic.subtotal)
                        })
                    },
                    strSubstr: function (e, t, a) {
                        return temp = a.split(e, 2), content = temp[1].split(t, 2), content[0]
                    },
                    getCellData: function (e, t) {
                        e = Number(e) - 1, t = Number(t) - 1;
                        var a = this.tableData;
                        return 0 === a.length && alert("没有数据"), a[e][t]
                    },
                    setCellData: function (e) {
                        var t = this;
                        0 !== e.length && e && (e.forEach(function (e, a) {
                            t.tableData[e[0] - 1][e[1] - 1] = e[2]
                        }), this._drawTable())
                    },
                    setEmptyValue: function (e) {
                        this.emptyValue = e
                    }
                }, e.BDPTable = l
            }(window),
            function () {
                function e(e, t) {
                    console.error(t);
                    var a;
                    if ("edit" == e.mode) {
                        if (a = "zh" == bdpChart.language ? "代码运行异常，请检查代码" : "code error，please check your code", t && t.stack && "string" == typeof t.stack) {
                            var i = t.stack.split("\n"),
                                n = i.length > 1 && /<anonymous>:(\d+)/.exec(i[1]);
                            if (n && n.length > 1) {
                                var r = n[1];
                                r = +r - 2;
                                var o = document.createElement("pre");
                                o.innerHTML = "<span>" + i[0] + "</span><span class='line-number'>line: " + r + "</span>", $(o).addClass("error"), $(o).find(".line-number").attr("data-linenum", r), $("#console-message").append(o)
                            }
                        }
                    } else a = "zh" == bdpChart.language ? "图表配置异常，请检查图表视图配置" : "Chart error，please check settings";
                    e.$elem.html('<div class="empty-custom-chart-tip">' + a + "</div>")
                }

                function t(e, t, a) {
                    var i = new vega.View(vega.parse(t)).logLevel(vega.Warn).initialize(e.get(0)).hover().run();
                    e.find("canvas").addClass("chart-canvas"), a && (window.BDPVegaView = i)
                }
                bdpChart.helper;
                bdpChart.setCustomSpec = function (a) {
                    var i = a.$elem,
                        n = a.info,
                        r = a.views.map(function (e) {
                            return e.info.x
                        }),
                        o = a.views.map(function (e) {
                            return e.info.y
                        }),
                        s = a.views.map(function (e) {
                            return e.info.compare_axis
                        }),
                        l = a.info.meta.custom_chart_setting,
                        d = l.mode || "vega",
                        c = l.code;
                    if (c) {
                        var p = [],
                            u = [],
                            h = [],
                            f = [],
                            g = [];
                        a.views.forEach(function (e, t) {
                            var i = [],
                                n = e.info,
                                l = e.data,
                                d = e.data.x.concat(l.y);
                            if (r = n.x.map(function (e, t) {
                                    return e.id = "x" + t, e.id
                                }), o = n.y.map(function (e, t) {
                                    return e.id = "y" + t, e.id
                                }), s = n.compare_axis.map(function (e, t) {
                                    return e.id = "c" + t, e.id
                                }), xy_fields = r.concat(o), dataViewName = "ds" + t, xy_fields.length > 0)
                                for (var c = 0, u = d[0].data.length; c < u; c++) {
                                    var m = {};
                                    r.forEach(function (t, i) {
                                        m[t] = a._formatXAxisLabel.apply(e, [l.x[i].data[c], i])
                                    }), o.forEach(function (e, t) {
                                        m[e] = +l.y[t].data[c]
                                    }), i.push(m)
                                }
                            p.push({
                                name: dataViewName,
                                values: i
                            }), h.push(n.x), f.push(n.y), g.push(n.compare_axis)
                        }), u = p.map(function (e) {
                            return e.name
                        });
                        var m = bdp.utils.getQueryString("debug"),
                            _ = bdp.utils.getQueryString("disablejs");
                        if ("vega" == d) {
                            var v = function () {
                                c = "var spec = " + c + ";return spec;";
                                try {
                                    var n = new Function("$DATA_VIEWS", "$X_FIELDS", "$Y_FIELDS", "$C_FIELDS", c),
                                        r = n(u, h, f, g);
                                    r = $.extend(!0, {
                                        autosize: "fit",
                                        padding: 10,
                                        data: []
                                    }, r), r.data = p.concat(r.data), "fit" == r.autosize && (void 0 === r.width && (r.width = i.width() - 2 * r.padding - 12), void 0 === r.height && (r.height = i.height() - 2 * r.padding - 12)), t(i, r, "edit" == a.mode)
                                } catch (t) {
                                    console.error(t), e(a, t)
                                }
                            };
                            thirdPluginLoader({
                                initFun: v,
                                libSrc: "https://s1.bdp.cn/static/js/lib/vega/vega_4b0988d.js",
                                libId: window.vega
                            }, {
                                funcQueue: [],
                                loadLibInProgress: !1
                            })
                        } else {
                            if (n.code_check_result && 0 != +n.code_check_result.status) return e(a, "代码运行检测异常 status: " + n.code_check_result.status + ", msg: " + n.code_check_result.msg);
                            try {
                                var b = {
                                    info: a.info,
                                    views: a.views
                                };
                                if (b.lang = bdpChart.language || "zh", b.theme = a.theme, b.mode = a.mode, b.ct_id = a.ct_id, b.displayDevice = a.displayDevice, b.isMobileMode = a.isMobileMode, "true" == m && console.debug("Chart " + b.ct_id + " : ", b), "true" != _) {
                                    var y;
                                    a.$elem.find("iframe").length > 0 ? (y = a.$elem.find("iframe").get(0), y.contentWindow.postMessage(JSON.stringify(b), window.location.origin)) : (y = document.createElement("iframe"), y.src = window.location.origin + "/custom_chart.html", y.id = "_iframe_" + a.ct_id, y.scrolling = "no", a.$elem.html(y), y.onload = function () {
                                        y.contentWindow.postMessage(JSON.stringify(b), window.location.origin)
                                    })
                                }
                            } catch (t) {
                                e(a, t)
                            }
                        }
                    } else {
                        var w;
                        w = "edit" == a.mode ? "zh" == bdpChart.language ? "运行代码即可预览图表" : "Run to preview the results" : "zh" == bdpChart.language ? "无可用图表，请检查图表视图配置" : "No chart, please check settings", a.$elem.html('<div class="empty-custom-chart-tip">' + w + "</div>")
                    }
                }
            }(),
            function (e) {
                e.colors = {
                    default: ["#5182E4", "#9BCC66", "#3FB27E", "#F7CB4A", "#F88D48", "#F35352", "#CE62D6", "#8954D4", "#5156B8", "#51B4F1", "#69D4DB", "#D42D6B"],
                    contrast: ["#006BC2", "#FF8500", "#0FA8E0", "#197C90", "#4D5FB0", "#B98934", "#4D8CAE", "#72C8F2", "#FFBF9A", "#B6D0DE", "#DCE292", "#80ADC5"],
                    vintage: ["#984337", "#5B6246", "#999053", "#E1D09F", "#E39971", "#9A4D2E", "#DB5546", "#E7824F", "#DBA946", "#BFA86F"],
                    blue_sky: ["#4A72C9", "#6071C6", "#78A9F2", "#A3CCF8", "#89A0D3", "#4966B7", "#479CE2", "#7560BF", "#47B8E2", "#6087BF"],
                    green_contrast: ["#A1CB80", "#3D8A6F", "#FFCD5D", "#C74A66", "#42A4B8", "#8B736E", "#739E90", "#08A86C", "#4294B8", "#76B55F"],
                    green_contrast_2: ["#B7D62D", "#EB4B5C", "#8D9E69", "#D6D6D7", "#67B9CD", "#A4DED9", "#8AC98B"],
                    green: ["#0D9347", "#00633E", "#D2EA57", "#87CD43", "#80AE9C", "#AECDC3", "#B4BBA5"],
                    gray_blue: ["#8DAFCE", "#CE765B", "#6B648D", "#5491C5", "#A16D6E", "#4BB0D8", "#D9C59D"],
                    purple: ["#7260AF", "#A563AC", "#D3C3DB", "#A999C9", "#D9A6D6"],
                    blue_contrast: ["#515FD7", "#EEBDC1", "#C5BEDC", "#A6A7A9", "#5787D8"],
                    gray_red: ["#5B68AA", "#787B9B", "#D95657", "#D8D9DA", "#85A0C1"],
                    gray: ["#5A6A7B", "#9FB2BE", "#5C6B86", "#898E94", "#CBD3DA"]
                }, 
                e.rangeColors = {
                    default: ["#FFA9A9", "#EF6064"],
                    golden: ["#FAD961", "#F76B1C"],
                    green: ["#C7CCAC", "#0D9347"],
                    blue: ["#A3CCF8", "#4A72C9"],
                    purple: ["#D3C3DB", "#7260AF"],
                    gray: ["#CBD3DA", "#5A6A7B"]
                }, 
                e.theme = {
                    bdp: function (t) {
                        var a = e.colors.default;
                        switch (t) {
                            case 7:
                                a = ["#5182E4", "#9BCC66", "#3FB27E", "#F7CB4A", "#F88D48", "#F35352", "#CE62D6", "#8954D4", "#5156B8", "#51B4F1", "#69D4DB", "#D42D6B"];
                                break;
                            case 0:
                                a = ["#5182E4", "#F7CB4A", "#3FB27E", "#F88D48", "#9BCC66", "#69D4DB", "#51B4F1", "#5156B8", "#8954D4", "#CE62D6", "#F35352", "#D42D6B"];
                                break;
                            case 14:
                                a = ["#F88D48", "#5182E4", "#F7CB4A", "#3FB27E", "#9BCC66", "#69D4DB", "#51B4F1", "#5156B8", "#8954D4", "#CE62D6", "#F35352", "#D42D6B"];
                                break;
                            case 21:
                                a = ["#3FB27E", "#F7CB4A", "#F88D48", "#5182E4", "#9BCC66", "#69D4DB", "#51B4F1", "#5156B8", "#8954D4", "#CE62D6", "#F35352", "#D42D6B"];
                                break;
                            case 300:
                                a = ["#5182E4", "#FFC064", "#3FB27E", "#F88D48", "#9ACFFE", "#81D069", "#51B4F1", "#CE62D6", "#EE4B4A", "#8954D4", "#D42D6B", "#385CD4"];
                                break;
                            case 310:
                                a = ["#A3ABB0"];
                                break;
                            case 320:
                                a = ["#EB4B5C", "#B7D62D"];
                                break;
                            case 330:
                                a = ["#9BCC66", "#FEC163", "#40A376", "#FE855A", "#EF4C4C", "#A139D5", "#6738D5", "#395DD5", "#3886D4", "#9BD0FE", "#76797C", "#71B0DA"];
                                break;
                            case 370:
                                a = ["#5182E4", "#5355B7", "#55B3F0", "#40B27E", "#9ACC67", "#F78E4B", "#F25554", "rgba(81,130,228,0.85)", "rgba(83,85,183,0.85)", "rgba(85,179,240,0.85)", "rgba(64,178,126,0.85)", "rgba(154,204,103,0.85)", "rgba(247,142,75,0.85)", "rgba(242,85,84,0.85)"]
                        }
                        return a
                    }
                }, 
                e.getColorsByType = function (t, a) {
                    var i = e.theme[a];
                    $.isFunction(i) || (i = e.theme.bdp);
                    var n;
                    switch (t) {
                        case "C240":
                        case "C242":
                        case "C241":
                            n = i(14);
                            break;
                        case "C210":
                        case "C211":
                        case "C212":
                        case "C250":
                            n = i(0);
                            break;
                        case "C260":
                        case "C261":
                        case "C220":
                            n = i(21);
                            break;
                        case "C230":
                            n = i(7);
                            break;
                        case "C300":
                            n = i(300);
                            break;
                        case "C310":
                            n = i(310);
                            break;
                        case "C320":
                            n = i(320);
                            break;
                        case "C330":
                            n = i(330);
                            break;
                        case "C370":
                            n = i(370);
                            break;
                        default:
                            n = i(0)
                    }
                    return n
                }, {
                    theme: e.theme
                }
            }(bdpChart),
            function (e, t) {
                function a(e, a, i) {
                    this.maxDataLen = 1500, this.dsh_id = a.dsh_id, this.ct_id = a.ct_id, this.parent_id = a.parent_id, this.rule_id = a.rule_id, this.ws_id = a.ws_id, this.access_token = a.access_token, this.mode = e, this.isSubView = !!this.parent_id, this.mobileSingleChart = !!i, this.is_tpl = a.is_tpl || 0, this.is_chart_tpl = a.is_chart_tpl || 0, this.theme = a.theme || "default", this.themeColor = angular.copy(t.themeColors[this.theme]), this.displayDevice = a.device || "pc", this.deviceStyle = t.deviceStyles[this.theme][this.displayDevice], this.chartTalbe = null, /(\d+)\*(\d+)/.test(e) && (this.isDashboardMode = !0, this.gridWidth = RegExp.$1 >>> 0, this.gridHeight = RegExp.$2 >>> 0), this.alwaysShowDataLabels = a.alwaysShowDataLabels, this.optional = {}, this.defaultOptions = {}, this.chartTypeDelegate = t.chartTypeDelegate, this.modeDelegate = t.modeDelegate, this.isMobileMode = n.isMobile(), this.isOpenTimePredicted = !1
                }
                var n = t.helper,
                    r = (n.mobileHelper, t.ChartType);
                a.prototype = {
                    draw: function (e, t, a, i, n, o) {
                        var s = this,
                            l = s.getChartType();
                        s.readCache = t && t.read_cache || !1, "edit" === s.mode && [r.GIS, r.Custom].indexOf(l) < 0 && s.destroy(), s.$elem = e, t && (s.ct_id !== t.ct_id && s.destroy(), s.ct_id = t.ct_id, s.rule_id = t.rule_id, s.auto_play = i, s.setOptional(t.optional), s.isDashboardMode && (s.dash_setting = n.child.meta.dash_setting), t.advanced_sort && (this.advanced_sort = t.advanced_sort)), e.data("chart-data", s);
                        var d = (new Date).getTime();
                        s.readCache && s.isDashboardMode ? (s._loadingState(), s._drawChartWithCache(a, o, d)) : s.requestData(a, o).then(function (e) {
                            s._drawChart(e, o, d)
                        })
                    },
                    updateInfo: function (e, a) {
                        this.info = $.extend(!0, this.info, e), a && !this.loading_data && (this.getChartType() === r.GIS ? t.setGisSpec(this) : (this.destroy(), this.renderChart()))
                    },
                    renderChart: function (e) {
                        var a = this,
                            i = a.ct_id,
                            o = a.getChartType(),
                            s = e && e.mainChartContainer || a.mainChartContainer;
                        if (a.$elem.find(".chart-error").remove(), "dark" === this.theme ? this.$elem.removeClass("chart-theme-default").addClass("chart-theme-dark") : this.$elem.removeClass("chart-theme-dark").addClass("chart-theme-default"), n.isDrillChart(a.info) || this.optional.free_drill_opt ? a.isDashboardMode && a.$elem.parent().removeClass("noscroll") : a.$elem.parent().find(".drill-crumbs").remove(), this.optional.free_drill_opt ? a.isDashboardMode ? a.$elem.parents(".chart-box").find(".advance-sort-wrap").css("display", "none") : "edit" === a.mode ? $("#chartBox").find(".advance-sort-wrap").css("display", "none") : "fullscreen" === a.mode && $(".chart-fullscreen-wrap").find(".advance-sort-wrap").css("display", "none") : a.isDashboardMode ? a.$elem.parents(".chart-box").find(".advance-sort-wrap").css("display", "inline-block") : "edit" === a.mode ? $("#chartBox").find(".advance-sort-wrap").css("display", "inline-block") : "fullscreen" === a.mode && $(".chart-fullscreen-wrap").find(".advance-sort-wrap").css("display", "inline-block"), this.isMobileMode && this.info.compare_axis && this.info.compare_axis.length && (o == r.KPICard || o == r.Gauge) && (this.info.chart_type = o = r.Table, this.$elem.addClass("chart-table")), a.isSubView) return this.$elem.addClass("chart-table"), t.setTableSpecialOption(a, s);
                        if ([r.Table, r.AreaMap, r.BubbleMap, r.Sankey, r.KPICard, r.Funnel, r.WordCloud, r.GIS, r.Sunburst, r.Custom].indexOf(o) > -1) {
                            switch (o !== r.GIS && o !== r.Custom && a.destroy(), a.options = {}, [r.AreaMap, r.BubbleMap].indexOf(o) > -1 && a._bindEventsOptions(), this._setMobileOptions(), o) {
                                case r.Table:
                                    this.chartTalbe = this.isMobileMode ? t.setTableSpecialOption(a, s) : t.setCanvasTableOpts(a, s);
                                    break;
                                case r.AreaMap:
                                    t.setMapAreaSpecialOption(a);
                                    break;
                                case r.BubbleMap:
                                    var l = a._needSetLinkCorlor();
                                    t.setMapBubbleSpecialOption(a, s, l);
                                    break;
                                case r.Sankey:
                                    t.setSankeySpecialOption(a);
                                    break;
                                case r.KPICard:
                                    t.setTextSpec(a);
                                    break;
                                case r.GIS:
                                    t.setGisSpec(a);
                                    break;
                                case r.Funnel:
                                    t.setFunnelSpecialOption(a);
                                    break;
                                case r.Sunburst:
                                    t.setSunburstSpecialOption(a);
                                    break;
                                case r.WordCloud:
                                    t.setWordCloudSpec(a);
                                    break;
                                case r.Custom:
                                    t.setCustomSpec(a);
                                    break;
                                default:
                                    t.setTableSpecialOption(a)
                            }[r.WordCloud, r.KPICard, r.Sankey, r.Table].indexOf(o) > -1 && a.emit("load", a), o !== r.WordCloud && o !== r.GIS && a.$elem.addClass("bdp-chart-loaded")
                        } else {
                            for (var d = a._config(e), c = d.series.length - 1; c >= 0; c--) d.series[c].id = c;
                            if (a.translateMarkPoint(), a._isStackChart()) {
                                if (!a._isSettedColor()) {
                                    var p = a.data.y.length;
                                    d.colors && (d.colors = d.colors.splice(0, p).reverse())
                                }
                                d.series.length > 0 && (d.series[0].borderRadiusTopLeft = 1.7, d.series[0].borderRadiusTopRight = 1.7, d.series[d.series.length - 1].borderRadiusBottomLeft = 1.7, d.series[d.series.length - 1].borderRadiusBottomRight = 1.7)
                            }
                            var u = a.chartInstance,
                                h = !u || !u.series || !u.options || [r.Radar, r.Waterfall].indexOf(o) > -1 || u.series.length !== d.series.length || u.options.legend.enabled !== d.legend.enabled || u.options.legend.align !== d.legend.align || !a.isMobileMode && a.isSplitChart();
                            if (d.legend && u && u.options && u.options.legend && !h && u.options.legend.itemStyle && d.legend.itemStyle && (h = JSON.stringify(u.options.legend.itemStyle) != JSON.stringify(d.legend.itemStyle)), !h && a.info.style && a.info.style.labels && (h = a.info.style.labels.changed), h || u.series.length !== d.series.length || u.options.series.forEach(function (e, t) {
                                    if (e.nick_name !== d.series[t].nick_name) return h = !0, !0
                                }), !h) {
                                (u.userOptions.navigator && !d.navigator || !u.userOptions.navigator && d.navigator) && (h = !0);
                                var f = u.options.series[0].type || u.options.chart.type;
                                !!(u.options.plotOptions && u.options.plotOptions[f] && u.options.plotOptions[f].dataLabels && u.options.plotOptions[f].dataLabels.enabled) ^ !!(d.plotOptions && d.plotOptions[f] && d.plotOptions[f].dataLabels && d.plotOptions[f].dataLabels.enabled) && (h = !0)
                            }
                            if (h) a.destroy(), a.isMobileMode || !a.isSplitChart() || this.isEmptyChart() ? (u && d.series && d.series.forEach(function (e) {
                                e.animation = !0
                            }), a.chartInstance = Highcharts.chart(a.$elem[0], d), a._setNavigatorRange(!0)) : a.renderChartInSplitMode(d);
                            else {
                                var g = a.chartInstance.series,
                                    m = o === r.Scatter,
                                    _ = o === r.ComparisonBar && a.info.comparison_xaxis_pos && ["pos_side", "pos_right"].indexOf(a.info.comparison_xaxis_pos) > -1;
                                if (a.info.xAxis.length > 1) a.chartInstance.update(d);
                                else {
                                    if (d.series.forEach(function (e, t) {
                                            var i = g[t];
                                            if (i) {
                                                if (m) {
                                                    for (var n = i.points.length, r = e.data.length, o = n - r, s = !(Math.abs(o) > 50); o > 0;) {
                                                        var l = n - o;
                                                        i.removePoint(l, !1), o--
                                                    }
                                                    for (; o < 0;) i.addPoint(e.data[r - -o], s), o++;
                                                    i.options.animation = !0
                                                }
                                                i.setData(e.data, !1, !0, !0), $.extend(!0, i.options, {
                                                    marker: e.marker
                                                })
                                            } else a.chartInstance.addSeries(e, !1, !0)
                                        }), [r.Gauge].indexOf(o) > -1) a.chartInstance.update({
                                        xAxis: d.xAxis,
                                        yAxis: d.yAxis,
                                        series: d.series
                                    });
                                    else {
                                        if (d.xAxis && a.chartInstance.xAxis[0].update(d.xAxis, !1), _) {
                                            var v = a.chartInstance.xAxis[1];
                                            v && v.update(d.xAxis[1], !0)
                                        }
                                        a.chartInstance.yAxis.forEach(function (e, t) {
                                            d.yAxis && d.yAxis[t] && e.update(d.yAxis[t], !1)
                                        }), $.extend(!0, a.chartInstance.options, d)
                                    }
                                    var b = o != r.TreeMap && {
                                            duration: 800
                                        };
                                    a.chartInstance.setTitle(d.title, d.subtitle, !1), a.chartInstance.redraw(b)
                                }
                                a._setNavigatorRange(!1)
                            }
                            if (a.$elem.addClass("bdp-chart-loaded"), a.displayMissData(), $.inArray(o, ["C220"]) == -1) {
                                var y = a.chartInstances || a.chartInstance;
                                if (!y) return;
                                if ($.isArray(y))
                                    for (var c = 0, w = y.length; c < w; c++) y[c].series && a.setColorCache(i, y[c].series, c);
                                else y.series && a.setColorCache(i, y.series, 0)
                            }
                        }
                        "C310" == o && bdp.utils.updateChartFontSize(i)
                    },
                    setArrColorCache: function (e, t) {},
                    setColorCache: function (e, t, a) {
                        function i() {
                            return n.mainChartColorContainer[e].chartColor[a].length < t.length
                        }
                        if (this.mainChartColorContainer && this.data) {
                            var n = this,
                                r = n.data.x;
                            n.mainChartColorContainer[e] = n.mainChartColorContainer[e] || {}, n.mainChartColorContainer[e].chartColor = n.mainChartColorContainer[e].chartColor || [], n.mainChartColorContainer[e].chartColor[a] = n.mainChartColorContainer[e].chartColor[a] || [], i() && angular.forEach(t, function (t, o) {
                                var s = [];
                                angular.forEach(t.data, function (e, t) {
                                    var a = e.color,
                                        i = [],
                                        n = {};
                                    angular.forEach(r, function (e, a) {
                                        i.push(e.data[t])
                                    }), n[i.toString()] = a, s.push(n)
                                }), i() && n.mainChartColorContainer[e].chartColor[a].push(s)
                            })
                        }
                    },
                    displayMissData: function () {
                        var e = this,
                            a = t.language || "zh",
                            n = e.getChartType();
                        if ([r.ComparisonBar].indexOf(n) > -1) {
                            var o = [],
                                s = e.data.y,
                                l = e.data.x,
                                d = e.info.compare_axis && e.info.compare_axis.length,
                                c = d ? s[0].nick_name + "-" + s[0].name : s[0].nick_name || s[0].name,
                                p = d ? s[1] ? s[1].nick_name + "-" + s[1].name : "" : s[1] && s[1].nick_name || s[1] && s[1].name || "";
                            s[0] && s[0].data && s[0].data.forEach(function (t, a) {
                                if (t < 0 || void 0 == t) {
                                    var i = e._formatXAxisLabel(l[0].data[a], 0, !1),
                                        n = i + "-" + c;
                                    o.push(n)
                                }
                            }), s[1] && s[1].data && s[1].data.forEach(function (t, a) {
                                if (t < 0 || void 0 == t) {
                                    var i = e._formatXAxisLabel(l[0].data[a], 0, !1),
                                        n = i + "-" + p;
                                    o.push(n)
                                }
                            }), e.data.mismatch = o
                        }
                        var u = e.data && e.data.mismatch && e.data.mismatch.length;
                        if (u && "edit" === e.mode) {
                            var h = [];
                            if ("C243" == n) h = e.data.mismatch;
                            else
                                for (i in e.data.mismatch) e.data.mismatch.hasOwnProperty(i) && h.push(e._formatXAxisLabel(e.data.mismatch[i], 0, !0));
                            var f = "";
                            "zh" === a ? n !== r.Pie && n !== r.ComparisonBar || (f = "有" + u + "项负值或空值数据") : n !== r.Pie && n !== r.ComparisonBar || (f = "There are" + u + " negative or null values");
                            var g = '<div class="map-mismatch-text pa guide"><p><a class="cursor-pointer">' + f + '</a></p><div class="guide-tip dropdown-wrap">' + bdp.utils.encodeHTML(h.join("、")) + "</div></div>";
                            e.$elem.append(g)
                        }
                    },
                    drawWithOption: function (e) {
                        this.draw(this.$elem, null, e)
                    },
                    _loadingState: function () {
                        var e = this;
                        e.isDashboardMode || 0 !== e.$elem.find(".load-outer").length || (e.$elem.append(n.initLoadingStatus("size-1x")), e.$elem.removeClass("bdp-chart-loaded bdp-chart-error").addClass("bdp-chart-loading")), e.$elem.addClass("bdp-chart-loading"), e.emit("data-loading"), e.loading_data = !0
                    },
                    _removeLoadingState: function () {
                        var e = this;
                        e.$elem.find(".base-loading-layer").remove(), e.$elem.removeClass("bdp-chart-loading"), e.emit("data-loaded"), e.loading_data = !1
                    },
                    requestData: function (e, t) {
                        e = e || {};
                        var a = this,
                            i = {
                                ct_id: a.ct_id,
                                dsh_id: a.dsh_id
                            };
                        a.rule_id && (i.rule_id = a.rule_id), a.ws_id && (i.ws_id = a.ws_id), a.access_token && (i.access_token = a.access_token), a.is_tpl && (i.is_tpl = 1), 0 != e.is_advanced_sort && this.advanced_sort && (i.advanced_sort = this.advanced_sort, i.is_advanced_sort = 1), this.is_chart_tpl && (i.is_chart_tpl = 1), $.extend(i, a.optional, e || {}), delete i.link_info, a._loadingState();
                        var o = a.requestTimestamp = +new Date;
                        $(".J_dash_edit_content").length && 1 == $(".J_dash_edit_content").attr("issetfilter") && (i.linked_value = []);
                        var s = "/api/chart/data";
                        i.sdo_id && (s = "/api/chart/share_data");
                        var l = i;
                        return $.ajax({
                            url: s,
                            type: "POST",
                            dataType: "json",
                            data: n.params(i)
                        }).then(function (e) {
                            if (a.requestTimestamp > o) return null;
                            if (0 == +e.status) {
                                var t = e.result.info,
                                    i = e.result.data;
                                if (t && n.timePredicted.isOpen(t.chart_type, t.yAxis)) {
                                    a.isOpenTimePredicted = !0;
                                    var d = {
                                        category: "user_interact",
                                        action: "chart_interact",
                                        opt_label: JSON.stringify({
                                            ct_id: t.chart_id,
                                            result: n.timePredicted.hasYError(e.result.data.y),
                                            forecasted_qty: +new Date - o
                                        }),
                                        opt_value: 1
                                    };
                                    BDPLogger.log("forecast_run", d)
                                }
                                if (t.chart_type == r.GIS && t.meta.layers) {
                                    var c;
                                    t.meta.layers.some(function (e, t) {
                                        return !(!e.timeline || !e.timeline.enabled) && (c = i.layers[t], !0)
                                    });
                                    if (c && c.timeline[0].data_count > 2e4) {
                                        for (var p = Math.min(Math.ceil((c.timeline[0].data_count - 2e4) / 2e4), 9), u = [], h = c.timeline[0].start, f = c.timeline[0].end, g = 2; p > 0;) l.timeline_config = {
                                            start: h,
                                            stop: f,
                                            page: g
                                        }, u.push($.ajax({
                                            url: s,
                                            type: "POST",
                                            dataType: "json",
                                            data: n.params(l)
                                        })), p--, g++;
                                        return $.when.apply($, u).then(function () {
                                            var t = Array.prototype.slice.call(arguments);
                                            1 == u.length && (t = [t]);
                                            var a = ["lng", "lat", "trajectory", "sequence", "timeline", "colors", "x", "y"];
                                            return i.layers.forEach(function (e, i) {
                                                e.timeline && e.timeline.length > 0 && t.forEach(function (t) {
                                                    if (t[0] && 0 == +t[0].status) {
                                                        var n = t[0].result.data.layers[i];
                                                        a.forEach(function (t) {
                                                            "colors" == t ? $.merge(e[t], n[t]) : e[t] && e[t].forEach(function (a, i) {
                                                                e[t][i] && n[t][i] && $.merge(e[t][i].data, n[t][i].data)
                                                            })
                                                        })
                                                    }
                                                })
                                            }), e
                                        })
                                    }
                                }
                            }
                            return e
                        })
                    },
                    _writeCache: function (e) {
                        var t = this;
                        if (dashChartsCache && dashChartsCache[t.dsh_id] || (dashChartsCache = {}, dashChartsCache[t.dsh_id] = {}), e && e.result.info) {
                            e.result.info.chart_type !== r.Sankey && (dashChartsCache[t.dsh_id][t.ct_id] = e), t.readCache && localforage.setItem("CACHE_DASH_DATA", dashChartsCache[t.dsh_id])
                        }
                    },
                    _drawChartWithCache: function (e, t, a) {
                        var i, n = this;
                        i = null, i ? n._drawChart(i, t, a) : n.requestData(e, t).then(function (e) {
                            e && (n._writeCache(e), n._drawChart(e, t, a))
                        })
                    },
                    _drawChart: function (e, a, i) {
                        var n = this;
                        if (n._removeLoadingState(), e) {
                            var o = (new Date).getTime();
                            Math.ceil((o - i) / 1e3);
                            if (0 == +e.status) {
                                var s = n.getChartType(),
                                    l = e.result.info ? e.result.info.chart_type : "";
                                if (s && s !== l && n.destroy(), n.info && (n._isRefreshed = !0), n.info = e.result.info, e.result.views) n.views = angular.copy(e.result.views);
                                else {
                                    if (n.data = e.result.data, l === r.Area && !this.isSplitChart()) {
                                        var d = [],
                                            c = [],
                                            p = [];
                                        n.data.y.forEach(function (e, t) {
                                            d[t] = [e.data.reduce(function (e, t) {
                                                return Math.abs(e) + Math.abs(t)
                                            }, 0), t]
                                        });
                                        var u = d.concat();
                                        bdp.utils.stableSort(u, function (e, t) {
                                            return t[0] - e[0]
                                        });
                                        for (var h = 0, f = n.data.y.length; h < f; h++) c.push(n.data.y[u[h][1]]), n.info.y[u[h][1]] && p.push(n.info.y[u[h][1]]);
                                        n.data.y = c, n.info.y = p
                                    }
                                    n.chartData = angular.copy(n.data), n.origin_data = angular.copy(n.data), n.chartData.message && "" !== n.chartData.message && (setCurrentTipPosition("dataOver"), $("#dataOver").show().find("span").text(n.chartData.message), setTimeout(function () {
                                        $("#dataOver").hide()
                                    }, 3e3))
                                }
                                if (void 0 === n.info.show_datalabels && (n.info.show_datalabels = ["C230", "C271", "C272", "C330", "C360"].indexOf(n.info.chart_type) > -1), a = a || {}, n.mainChartContainer = a.mainChartContainer, n.mainChartIdContainer = a.mainChartIdContainer, n.mainChartColorContainer = a.mainChartColorContainer, n.emit("data", n), "edit" == n.mode && n.getChartType() == r.Custom && n._isRefreshed) {
                                    if ("" !== n.info.meta.custom_chart_setting.code && !n.$elem.find(".custom-chart-refresh-hint").length) {
                                        var g = "en" == t.language ? 'The data has changed and click "Run" to update the chart.' : "数据已变动，点击“运行”更新图表";
                                        n.$elem.append('<div class="custom-chart-refresh-hint"><i class="bdp-icon ico-close-white"></i>' + g + "</div>"), n.$elem.on("click", ".custom-chart-refresh-hint .ico-close-white", function () {
                                            $(".custom-chart-refresh-hint").remove()
                                        })
                                    }
                                } else ! function () {
                                    var e = function () {
                                        var e = $.cookie("locale");
                                        Highcharts.setOptions({
                                            lang: {
                                                noData: "en" == e || !e && "en" == navigator.language ? "No data to display" : "当前图表无数据"
                                            }
                                        }), n.renderChart(a)
                                    };
                                    n.selectionData && (n.selectionData = null, n.selectionOptCount = null, n.hideRevertSelectionBtn()), bdp.utils.browser().safari ? setTimeout(function () {
                                        e()
                                    }, 50) : e()
                                }();
                                "C310" == n.info.chart_type && bdp.utils.updateChartFontSize(n.info.chart_id)
                            } else {
                                var m = e.errstr;
                                n.destroy(), n.$elem.html('<div class="chart-error"><p>' + m + "</p></div>").addClass("bdp-chart-loaded bdp-chart-error")
                            }
                            if (n.data && 1 == n.data.compare_axis_prompt) {
                                var m = "en" == (t.language || "zh") ? "Only the first two items are compared with the others ignored" : "对比只显示结果的前两项";
                                setCurrentTipPosition("dataOver"), $("#dataOver").show().find("span").text(m), setTimeout(function () {
                                    $("#dataOver").hide()
                                }, 3e3)
                            }
                        }
                    },
                    setOptional: function (e) {
                        this.optional = e
                    },
                    setMode: function (e) {
                        this.mode = e, /(\d+)\*(\d+)/.test(e) && (this.isDashboardMode = !0, this.gridWidth = RegExp.$1 >>> 0, this.gridHeight = RegExp.$2 >>> 0)
                    },
                    getChartType: function () {
                        return this.info ? this.info.chart_type : ""
                    },
                    supportPinLegend: function () {
                        return [r.Line, r.Column, r.NStackColumn, r.PStackColumn, r.Area, r.NStackArea, r.PStackArea, r.Biax].indexOf(this.getChartType()) > -1
                    },
                    supportNavigator: function () {
                        var e = [r.Line, r.Column, r.NStackColumn, r.PStackColumn, r.Sankey, r.Area, r.NStackArea, r.PStackArea, r.Biax];
                        this.info;
                        return e.indexOf(this.getChartType()) > -1 && this.data.x.length > 0 && this.data.y[0] && this.data.y[0].data.length > 1
                    },
                    canDrillDown: function () {
                        return !(!this.info || this.optional.free_drill_opt) && this.info.is_drill
                    },
                    _needSetLinkCorlor: function () {
                        var e = this;
                        e.optional.linked_value;
                        return !($.inArray(e.mode, ["edit", "fullscreen"]) > -1) && $.inArray(e.info.chart_id, e.mainChartIdContainer) != -1
                    },
                    _isShowLegend: function () {
                        var e = !0,
                            t = this.info,
                            a = t.chart_type,
                            i = t.color_setting,
                            n = [].concat(t.compare_axis || []),
                            o = n.map(function (e) {
                                return e.fid
                            });
                        return e = (a == r.Pie || !this.isMobileMode) && (!this.isDashboardMode || this.isDashboardMode && this.dash_setting.show_legend), e && [r.Pie, r.Sunburst].indexOf(a) < 0 && (i && delete i.is_series, o && i && i.hasOwnProperty("field") && (e = i.field.every(function (e) {
                            return !(o.indexOf(e.fid) < 0)
                        }))), a == r.ComparisonBar && (e = !1), e
                    },
                    _config: function (e) {
                        var a = this;
                        if (this.options = {
                                title: {
                                    text: ""
                                },
                                subtitle: {
                                    text: this.info.title,
                                    y: -20,
                                    style: {
                                        "font-family": "Microsoft Yahei",
                                        "font-size": "fullscreen" === this.mode ? "20px" : "16px",
                                        color: "dark" === this.theme ? "#FFFFFF" : "#333333"
                                    }
                                },
                                exporting: {
                                    filename: this.info.title
                                },
                                xAxis: {
                                    labels: {
                                        enabled: !a.isDashboardMode || a.isDashboardMode && a.dash_setting.show_axis
                                    }
                                },
                                yAxis: [],
                                tooltip: {
                                    crosshairs: !1,
                                    formatter: this._generateTooltipFormatter()
                                },
                                legend: {
                                    enabled: a._isShowLegend(),
                                    useHTML: !0,
                                    labelFormatter: this._generateLegendFormatter()
                                }
                            }, this.isEmptyChart()) return this._displayEmptyChart();
                        this._setColorByTheme(), this._setBasicOptions(), this._setXaxisLabel(), this._setYaxisLabel(), this._setYaxisTitle(), this._setChartData(), this._bindEventsOptions(), this._setGuideLine(), this._setNavigatorOptions(), this._setSelectOption();
                        var i = this.getChartType();
                        "dark" === this.theme && [r.Biax, r.ComparisonBar].indexOf(i) > -1 ? (this.info.yAxisOptional.length || i == r.ComparisonBar) && (this.themeColor.yAxis[1] = angular.copy(this.themeColor.yAxis[0])) : "dark" === this.theme && this.themeColor.yAxis[1] && delete this.themeColor.yAxis[1], $.extend(!0, this.options, this.themeColor), i === r.Pie && t.setPieSpecialOption(this), i === r.Scatter && t.setScatterSpecialOption(this), this._setChartTypeOptions(), a.needSetLinkCorlor = a._needSetLinkCorlor(), this._setColor(), a.needSetLinkCorlor && this._setLinkColor(e), this._setModeOptions(), !this.alwaysShowDataLabels && ["C200", "C261", "C300", "C310", "C340", "C400"].indexOf(this.info.chart_type) < 0 && (this.info.show_datalabels || angular.forEach(this.options.plotOptions, function (e, t) {
                            e.dataLabels ? e.dataLabels.enabled = !1 : e.dataLabels = {
                                enabled: !1
                            }
                        })), this._setSpecialOptions(), this._setAltOption(), i === r.ComparisonBar && t.setComparisonSpecialOption(this), $.extend(!0, this.options, this.deviceStyle);
                        var n = this.$elem.width() > this.$elem.height();
                        this.getChartType() === r.Pie && (bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash() ? n = this.$elem.width() > this.$elem.height() : this.isDashboardMode && (n = this.gridWidth > this.gridHeight + 1));
                        var o = n ? {
                            layout: "vertical",
                            align: "right",
                            verticalAlign: "top"
                        } : {
                            align: "center",
                            layout: "horizontal",
                            verticalAlign: "bottom",
                            maxHeight: 55,
                            margin: 10,
                            itemDistance: this.supportPinLegend() ? 4 : 20,
                            padding: 0
                        };
                        if (this.getChartType() === r.Pie && $.extend(!0, o, {
                                enabled: !(this.isDashboardMode && this.gridWidth < 5 && 3 == this.gridHeight) && this.isDashboardMode && this.dash_setting.show_legend
                            }), $.extend(!0, this.options, {
                                legend: o
                            }), "dark" === this.theme && "fullscreen" != this.mode) {
                            [r.Pie].indexOf(i) > -1 && this.options.series.forEach(function (e) {
                                e.shadow = !0
                            })
                        }
                        return i === r.TreeMap && t.setTreemapSpecialOption(this), this._setGridPlotLine(), this._setAxisExtendStyle(), this._setLegendExtend(), this._setChartTitleStyle(), this._setChartLabelStyle(), this._setMobileOptions(), this.options
                    },
                    isEmptyChart: function () {
                        if (this.getChartType() == r.GIS) return !1;
                        var e;
                        return e = this.views ? this.views.map(function (e) {
                            return e.data
                        }) : [this.data], e.every(function (e) {
                            var t, a, i, n;
                            for (t = 0, n = e.x.length; t < n; t++)
                                if (0 !== e.x[t].data.length) return !1;
                            for (a = 0, n = e.y.length; a < n; a++)
                                if (0 !== e.y[a].data.length) return !1;
                            for (i = 0, n = e.y_optional.length; i < n; i++)
                                if (0 !== e.y_optional[i].data.length) return !1;
                            return !0
                        })
                    },
                    _displayEmptyChart: function () {
                        return this.$elem.addClass("bdp-chart-loaded"), $.extend(this.options, {
                            noData: {
                                style: {
                                    color: "dark" === self.theme ? "rgba(255, 255, 255, 0.36)" : "#60606a"
                                }
                            },
                            xAxis: {
                                categories: []
                            },
                            series: []
                        })
                    },
                    _setColorByTheme: function () {
                        "fullscreen" != this.mode && 1 == this.theme_id && Highcharts.setOptions({
                            title: {
                                style: {
                                    color: "rgba(255, 255, 255, 0.6)"
                                }
                            },
                            legend: {
                                navigation: {
                                    activeColor: "#999",
                                    inactiveColor: "#CCC",
                                    style: {
                                        color: "#666"
                                    }
                                },
                                itemStyle: {
                                    color: "#999"
                                }
                            },
                            xAxis: {
                                lineColor: "rgba(255,255,255,0.1)"
                            },
                            tooltip: {
                                style: {
                                    color: "#FFF"
                                }
                            },
                            plotOptions: {
                                pie: {
                                    dataLabels: {
                                        style: {
                                            color: "#fefefe",
                                            textOutline: "1px 1px rgba(0,0,0,0.4)"
                                        }
                                    }
                                }
                            }
                        })
                    },
                    _setBasicOptions: function () {
                        var e = this.getChartType(),
                            a = this.canDrillDown(),
                            i = n.generateTitle(e, this.data, this.info),
                            o = this.optional.chart_jump_info && this.optional.chart_jump_info.can_jump,
                            s = a || "2" == this.optional.linked_chart_type || "1" == o ? "pointer" : "",
                            l = {
                                colors: this.data.selectionColors || t.getColorsByType(e),
                                title: {
                                    text: i,
                                    margin: "edit" == this.mode ? 10 : 0
                                },
                                plotOptions: {
                                    series: {
                                        connectNulls: !0
                                    },
                                    column: {
                                        cursor: s
                                    },
                                    bar: {
                                        cursor: s
                                    },
                                    line: {
                                        cursor: s
                                    },
                                    spline: {
                                        cursor: s
                                    },
                                    scatter: {
                                        cursor: s
                                    },
                                    waterfall: {
                                        cursor: s
                                    },
                                    bubble: {
                                        cursor: s
                                    },
                                    area: {
                                        cursor: s
                                    },
                                    areaspline: {
                                        cursor: s
                                    }
                                }
                            };
                        this.isOpenTimePredicted && (l.plotOptions.series.turboThreshold = 1601), e !== r.Pie && (e !== r.Biax && 1 === this.data.y.length ? $.extend(!0, l, {
                            chart: {},
                            legend: {
                                enabled: !1
                            }
                        }) : $.extend(!0, l, {
                            chart: {
                                spacingTop: "" === i ? 22 : 12
                            },
                            legend: {
                                y: -8
                            }
                        })), $.extend(!0, this.options, l)
                    },
                    _bindMobDrilldown: function () {
                        var e = this,
                            t = e.getChartType(),
                            a = $(".chart-drilldown");
                        a.show(), a.off("click.drilldown").on("click.drilldown", function () {
                            if ("C370" !== t) e.emit("drilldown", e.selectedPoint, e);
                            else {
                                var a = e.selectedPoint.drillId || "",
                                    i = e.selectedPoint.series.nodeMap,
                                    n = e.selectedPoint.series;
                                n.drillToNode(a), e.options.plotOptions.treemap.events.onDrillToNode(a, i, n), e.selectedPoint = e.findTreeMapFirstNode(a, i, n) || e.selectedPoint, e.refreshTooltip(e.chartInstance)
                            }
                        })
                    },
                    findTreeMapFirstNode: function (e, t, a) {
                        for (var i, n = t[e].children[0].i, r = 0; r < a.points.length && (i = a.points[r], i.index !== n); r++);
                        return i.node.children.length ? a.points[i.node.children[0].i] : i
                    },
                    refreshTooltip: function (e) {
                        var t, a = this.getChartType(),
                            i = e.series,
                            n = [];
                        1 === this.info.xAxis.length && "date" !== this.info.xAxis[0].data_type ? i.forEach(function (e, t) {
                            null !== e.points[0].y && n.push(e.points[0])
                        }) : i.forEach(function (e, a) {
                            t = e.data.length, null !== e.points[t - 1].y && n.push(e.points[t - 1])
                        });
                        var r;
                        "C370" === a ? (r = this.selectedPoint ? this.selectedPoint : i[0].points.length > 1 ? i[0].points[1] : i[0].points[0], r.node.children.length ? $(".chart-drilldown").show() : $(".chart-drilldown").hide()) : r = "C272" === a ? [n[1]] : n, this.supportNavigator() && this.info.navigator_setting && this.info.navigator_setting.enabled && (r = r.splice(0, r.length / 2)), r.length > 0 && e.tooltip.refresh(r)
                    },
                    _setMobileOptions: function () {
                        var e = this,
                            t = e.getChartType(),
                            a = e.canDrillDown(),
                            i = e.isDashboardMode ? [0, 0, 0, 0] : [16, 16, 16, 16];
                        if (e.isMobileMode) {
                            "C370" === t && (a = e.info.xAxis.length > 2),
                                function (e) {
                                    e.wrap(e.Tooltip.prototype, "hide", function (e) {})
                                }(Highcharts);
                            var n = {
                                subtitle: {
                                    text: ""
                                },
                                chart: {
                                    spacingTop: 10,
                                    events: {
                                        load: function () {
                                            e.$elem.addClass("bdp-chart-loaded"), e.emit("load", e, this), e.isDashboardMode || e.refreshTooltip(this), e.handleDountChart(this, i), a ? e._bindMobDrilldown() : $(".chart-drilldown").hide()
                                        },
                                        redraw: function () {
                                            e.emit("redraw", e, this), e.isDashboardMode || e.refreshTooltip(this), e.handleDountChart(this, i), a ? e._bindMobDrilldown() : $(".chart-drilldown").hide(), e.handleDountChart(this, i)
                                        }
                                    },
                                    style: {
                                        overflow: "visible"
                                    }
                                },
                                legend: {
                                    enabled: !1
                                },
                                tooltip: {
                                    enabled: !e.isDashboardMode,
                                    useHTML: !0,
                                    formatter: e._generateTooltipFormatter()
                                }
                            };
                            "fullscreen" === this.mode && (n.title = {
                                text: ""
                            }), "C230" === t && "fullscreen" != e.mode && (n.legend.enabled = !0);
                            var r = ["column", "line", "spline", "bar", "pie", "map", "mapbubble", "scatter", "waterfall", "bubble", "area", "areaspline"];
                            return e.options.plotOptions && $.each(r, function (t, a) {
                                delete e.options.plotOptions[a].point.events
                            }), ["C271", "C272", "C370"].indexOf(t) < 0 && (n.yAxis = [], (this.options.yAxis || []).forEach(function (e, t) {
                                n.yAxis.push({
                                    title: {
                                        style: {}
                                    },
                                    labels: {}
                                })
                            }), "C243" === t && ("fullscreen" == e.mode ? (e.options.yAxis[0].labels.y = 10, e.options.yAxis[1].labels.y = -21, n.yAxis[0].title.offset = 14, n.yAxis[1].title.offset = -16) : (e.options.yAxis[0].labels.y = 10, e.options.yAxis[1].labels.y = -20, n.yAxis[0].title.offset = 14, n.yAxis[1].title.offset = -15))), "C261" === t ? (n.pane = {
                                center: "fullscreen" == e.mode ? ["50%", "50%"] : ["50%", "72%"],
                                size: "90%"
                            }, n.yAxis = [], (this.options.yAxis || []).forEach(function (e, t) {
                                n.yAxis.push({
                                    labels: {
                                        style: {
                                            fontSize: "13px",
                                            color: "rgba(0,0,0,0.38)"
                                        },
                                        y: 24
                                    }
                                })
                            })) : "C290" === t && (n.pane = {
                                size: "70%"
                            }), $.extend(!0, this.options, n), this.options
                        }
                    },
                    _setNavigatorOptions: function () {
                        var e = this,
                            t = e.info,
                            a = this.getChartType();
                        if (this.supportNavigator() && t.navigator_setting && t.navigator_setting.enabled) {
                            if (this.isDashboardMode && this.dash_setting.show_navigator === !1) return;
                            if (this.info.split_compare) return;
                            if (this.isDashboardMode && this.gridWidth < 4 && this.gridHeight < 4 || this.isDashboardMode && this.gridHeight < 4) return void $.extend(!0, this.options, {
                                navigator: {
                                    enabled: !1
                                }
                            });
                            var i = "dark" === this.theme ? {
                                    handles: {
                                        backgroundColor: "#3E4155",
                                        borderColor: "#717392"
                                    },
                                    outlineColor: "#3E4155",
                                    label: {
                                        textColor: "#bebfc6"
                                    }
                                } : {
                                    handles: {
                                        backgroundColor: "#FFF",
                                        borderColor: "#BAC2C7"
                                    },
                                    outlineColor: "#E8EBED",
                                    label: {
                                        textColor: "#000"
                                    }
                                },
                                n = t.navigator_setting;
                            if ($.extend(!0, this.options, {
                                    chart: {
                                        spacingRight: 3
                                    },
                                    navigator: {
                                        isDateAxis: "date" == this.info.x[0].data_type,
                                        enabled: !0,
                                        start: Math.max(0, n.start || 0),
                                        end: Math.min(n.end || 1, 1),
                                        label: {
                                            formatter: function (t, a) {
                                                return "object" == typeof t.category ? t.category.parent.name + "_" + t.category.name : e._formatXAxisLabel(t.options.name || a || t.options.x, 0)
                                            }
                                        }
                                    },
                                    xAxis: {
                                        minRange: 1
                                    }
                                }, {
                                    navigator: i
                                }), [r.PStackArea, r.NStackArea, r.NStackColumn, r.PStackColumn].indexOf(a) > -1) {
                                var o = this.options.series[this.options.series.length - 1];
                                $.extend(!0, o, {
                                    showInNavigator: !0
                                })
                            }
                            if ("edit" === this.mode) {
                                var e = this;
                                $.extend(!0, this.options, {
                                    xAxis: {
                                        events: {
                                            afterSetExtremes: function (t) {
                                                var a = t.target,
                                                    i = (a.series[0].data, !1),
                                                    n = {},
                                                    r = t.min,
                                                    o = t.max;
                                                a.oldMin !== r && (i = !0, n.start = (r - a.dataMin) / (a.dataMax - a.dataMin)), a.oldMax !== o && (i = !0, n.end = (o - a.dataMin) / (a.dataMax - a.dataMin)), i && e.emit("saveWithOpt", e.info.drill_level, {
                                                    navigator_setting: n
                                                }, {
                                                    only_save_meta: !0
                                                })
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    },
                    _setNavigatorRange: function (e) {
                        var t = this.options;
                        if (t.navigator && t.navigator.enabled && (0 != t.navigator.start || 1 != t.navigator.end)) {
                            var a, i, n = (t.series[0].data, this.chartInstance.xAxis[0]),
                                r = Math.max(0, n.dataMax - n.dataMin);
                            a = n.dataMin + t.navigator.start * r, i = n.dataMin + t.navigator.end * r, n.setExtremes(a, i, e)
                        }
                    },
                    _setSpecialOptions: function () {
                        var e, t = this.info,
                            a = this.getChartType(),
                            i = [],
                            n = this,
                            o = t.yAxis,
                            s = o.length,
                            l = [];
                        if ("C370" != a) {
                            for (var d = 0; d < s; d++) {
                                var c = {
                                    y: null
                                };
                                e = n.options.series[d], e && e.data[d] && e.data[d].color ? c.color = e.data[d].color : e && e.color && (c.color = e.color), l.push(c)
                            }
                            if (!t.xAxis.length && !t.compare_axis.length && [r.Column, r.NStackColumn, r.PStackColumn, r.Bar, r.NStackBar, r.PStackBar].indexOf(a) > -1) {
                                for (var d = 0; d < s; d++) i.push(o[d].nick_name || o[d].name), e = n.options.series[d], e.data = [].concat(l), e.data[d] = {
                                    color: e.data[d].color,
                                    y: 1 * n.data.y[d].data[0]
                                };
                                $.extend(!0, this.options, {
                                    xAxis: {
                                        type: "category",
                                        categories: i,
                                        labels: {
                                            enabled: !0
                                        }
                                    },
                                    plotOptions: {
                                        column: {
                                            pointPadding: .2,
                                            borderWidth: 0,
                                            stacking: "normal"
                                        },
                                        bar: {
                                            pointPadding: .2,
                                            borderWidth: 0,
                                            stacking: "normal"
                                        }
                                    }
                                })
                            }
                        }
                    },
                    isLoadingData: function () {
                        return this.$elem.hasClass("bdp-chart-loading")
                    },
                    getCurrentPage: function () {
                        var e = this;
                        return e.isDashboardMode ? location.href.indexOf("dash_fullscreen") > 0 ? "dash_fullscreen" : "dashboard" : e.mode
                    },
                    getXIndexOfPoint: function (e) {
                        var t = this.data.x[this.data.x.length - 1];
                        return t && t.data.indexOf(this.xMap[e.x] || e.x)
                    },
                    handleDountChart: function (e, t) {
                        var a = this;
                        if (a.getChartType() === r.Pie && "donut" === a.info.shape) {
                            var i = e.series[0].data[0];
                            e.series[0].data.forEach(function (e) {
                                e.percentage > i.percentage && (i = e)
                            });
                            var o = a.info.xAxis[0],
                                s = o && "date" === o.data_type ? o.granularity : void 0,
                                l = i.name;
                            if (s) {
                                var d = i.x,
                                    c = o.granularity_name,
                                    p = o.month_start_day || 0;
                                "week" === s ? c && (d += 864e5 * (o.week_start_day_of_week - 1), p = o.week_start_day_of_week) : "hour" !== s && "minute" !== s && "second" !== s || (s = "g_" + s), l = n.checkGranularity(s, d, c, p)
                            }
                            var u = i.percentage.toFixed(2) + "%",
                                h = .4 * e.plotHeight / 250 + .6,
                                f = .6 * e.plotHeight,
                                g = "dark" === a.theme ? "#fff" : "#666",
                                m = e.plotLeft + e.series[0].center[0],
                                _ = e.plotTop + e.series[0].center[1],
                                v = a.$elem.find(".pie-center-txt");
                            if (v.length > 0) v.find(".slice-name").text(l).css({
                                color: i.color
                            }), v.find(".slice-value").text(u);
                            else {
                                var v = '<div class="pie-center-txt nowrap" style="transform: scale(' + h + "); max-width: " + f + 'px;">';
                                v += '<span class="slice-name" style="color: ' + i.color + '">' + l + "</span><br>", v += '<span class="slice-value" style="color: ' + g + '">' + u + "</span>", v += "</div>", v = $(v), a.$elem.append(v)
                            }
                            v.css({
                                left: m + v.width() * -.5 + t[3],
                                top: _ + v.height() * -.5 + t[0]
                            })
                        }
                    },
                    handleLegendHover: function () {
                        var e = this;
                        this.$elem.on("mouseenter", ".highcharts-legend-item", function (e) {
                            this.pinnedLegendItem;
                            $(this).find(".J-ico-pin").length || $(this).find(".legend-content").append("<i class='bdp-icon J-ico-pin ico-legend-focus'></i>")
                        }).on("mouseleave", ".highcharts-legend-item", function (t) {
                            var a = e.pinnedLegendItem;
                            a && a.index() == $(this).index() || $(this).find(".J-ico-pin").remove()
                        })
                    },
                    _bindEventsOptions: function () {
                        var e = this,
                            t = "edit" === e.mode ? [32, 40, 32, 40] : [0, 0, 0, 0],
                            a = {
                                chart: {
                                    events: {
                                        load: function () {
                                            e.$elem.addClass("bdp-chart-loaded"), e.emit("load", e, this), e.handleLegendHover(), e.handleDountChart(this, t)
                                        },
                                        redraw: function () {
                                            e.emit("redraw", e, this), e.handleDountChart(this, t)
                                        }
                                    }
                                }
                            },
                            i = ["column", "line", "spline", "bar", "pie", "map", "mapbubble", "scatter", "waterfall", "bubble", "area", "areaspline"],
                            n = ["column", "line", "spline", "bar", "area", "areaspline"];
                        a.plotOptions = {};
                        var o = function (t) {
                            if (t.shiftKey && e.supportSelect()) return e.selectPoint(this, t);
                            if (e.optional.free_drill_opt) return !1;
                            var a = e.canDrillDown(),
                                i = e.optional.chart_jump_info;
                            a ? e.emit("drilldown", this, e) : e.emit("pointClick", this, e), "2" == e.optional.linked_chart_type && e.emit("refreshLinkedCharts", this, e), i && i.can_jump && e.emit("jumpToOtherDash", this, e)
                        };
                        [r.Column, r.NStackColumn, r.PStackColumn, r.Bar, r.NStackBar, r.PStackBar, r.ComparisonBar, r.Waterfall].indexOf(e.getChartType()) > -1 && e.data.x.length > 0 && "date" != e.data.x[0].data_type && $.extend(this.options, {
                            chart: {
                                events: {
                                    click: function (e) {
                                        var t = Math.abs(Math.round(e.xAxis[0].value));
                                        this.series[0].data[t].firePointEvent("click", event)
                                    }
                                }
                            }
                        }, !0), $.each(i, function (t, i) {
                            a.plotOptions[i] = {
                                point: {
                                    events: {
                                        click: o
                                    }
                                }
                            }, n.indexOf(i) > -1 && $.extend(!0, a.plotOptions[i], {
                                events: {
                                    legendItemClick: function (t) {
                                        var a = this.chart.series,
                                            i = this,
                                            n = $(t.browserEvent.target),
                                            r = "ico-legend-focus-active";
                                        if (n.hasClass("J-ico-pin")) {
                                            if (n.hasClass("ico-legend-focus")) {
                                                n.addClass(r).removeClass("ico-legend-focus"), e.pinnedLegendItem && e.pinnedLegendItem.find(".J-ico-pin").remove(), e.pinnedLegendItem = n.parents(".highcharts-legend-item"), a.forEach(function (e) {
                                                    e.setVisible(!1, !1)
                                                }), i.setVisible(!0, !1), i.linkedSeries.forEach(function (e) {
                                                    e.setVisible(!0, !1)
                                                }), this.chart.redraw();
                                                var o = {
                                                    category: "user_interact",
                                                    action: "chart_interact",
                                                    opt_label: JSON.stringify({
                                                        ct_id: e.ct_id
                                                    })
                                                };
                                                BDPLogger.log("focus_legend", o)
                                            } else n.addClass("ico-legend-focus").removeClass(r), e.pinnedLegendItem = null, a.forEach(function (e) {
                                                e.setVisible(!0, !1)
                                            }), this.chart.redraw();
                                            t.preventDefault()
                                        } else if (e.pinnedLegendItem) {
                                            var s = e.pinnedLegendItem.index();
                                            i.visible ? i.index == s && (e.pinnedLegendItem.find(".J-ico-pin").addClass("ico-legend-focus").removeClass(r), e.pinnedLegendItem = null) : i.index != s && (e.pinnedLegendItem.find(".J-ico-pin").remove(), e.pinnedLegendItem = null)
                                        }
                                    }
                                }
                            })
                        }), this.options = this.options || {}, $.extend(!0, this.options, a)
                    },
                    _setModeOptions: function () {
                        return $.extend(!0, this.options, this.modeDelegate.getModeOption(this))
                    },
                    _setChartTypeOptions: function () {
                        var e = this.getChartType(),
                            t = this.chartTypeDelegate.getChartTypeOption(this, e);
                        return $.extend(!0, this.options, t)
                    },
                    _generateLegendFormatter: function () {
                        var e = this.data;
                        return function () {
                            var t = this;
                            return n.legendFormatter(t, e)
                        }
                    },
                    _getUnit: function () {
                        var e = this.info;
                        return {
                            unit_left: e.yaxis_unit,
                            unit_right: e.yaxis_unit_right
                        }
                    },
                    _setXaxisLabel: function () {
                        var e, a = this,
                            i = this.data,
                            o = this.info,
                            s = this.getChartType(),
                            l = 0;
                        o.chart_type, r.ComparisonBar;
                        if (this.options.xAxis.plotLines = [], e = 1 === i.x.length ? o.xAxis[0].data_type : "", s === r.Scatter && o.yAxis) {
                            o.yAxis && (e = o.yAxis[0].data_type);
                            var d = o.chart_type === r.Scatter && !$.isEmptyObject(o.bubble_setting);
                            if ("number" == e && !d && !a.selectionData) {
                                var c, p, u, h, f = {
                                    title: {
                                        text: ""
                                    },
                                    gridLineWidth: 0,
                                    endOnTick: !0
                                };
                                if (u = Math.max.apply(Math, i.y[0].data), h = Math.min.apply(Math, i.y[0].data), c = n.formatNumber(u), p = n.formatNumber(h), c = c < 0 ? 0 : c, p = p > 0 ? 0 : p, f.min = p, f.max = c, c == p) return;
                                var g = [],
                                    m = Number(c.sub(p).div(4).toFixed(6));
                                if (!m) return;
                                for (var _ = isInteger(m) ? 0 : m.toString().split(".")[1].length, v = p; v <= c; v = Number(v.add(m).toFixed(_))) g.push(_ ? Number(v.toFixed(Math.min(_, 6))) : v);
                                g.length < 5 && g.push(v), f.tickPositions = g, $.extend(!0, this.options.xAxis, f)
                            }
                            o.xAxisRange = [], $.extend(!0, this.options.xAxis, {
                                labels: {
                                    formatter: function () {
                                        n.drawGridPlotLine(this, a, o, s, "x");
                                        var e = i.y[0].formatter;
                                        return e && "num" == e.check && e.num.unit ? n.dataLabelFormatter(e, this.value, e.aggregator) : e && "percent" == e.check ? Highcharts.numberFormat(Number(this.value).mul(100), Math.max(0, e.percent.digit)) + "%" : n.numericSymbols(this.value)
                                    }
                                }
                            })
                        } else {
                            for (var b = 0; b < i.y.length; b++) l = Math.max(l, i.y[b].data.length);
                            if (this.options.xAxis = this.options.xAxis || {}, o.xAxis) {
                                if ("date" === e && s !== r.Scatter) {
                                    var y = n.getGranularity(i, l),
                                        w = y.tickInterval,
                                        C = y.granularity || "day",
                                        x = y.granularity_name || "",
                                        k = o.xAxis[0].month_start_day || 0,
                                        D = i.x[0].data,
                                        S = D[D.length - 1] - D[0];
                                    C = n.setGranularityByDate(C, S), o.xAxisRange = [], $.extend(!0, this.options, {
                                        xAxis: {
                                            type: "datetime",
                                            labels: {
                                                formatter: function () {
                                                    var e = this.value;
                                                    if ("week" === C) {
                                                        k = 1, x && (k = o.xAxis[0].week_start_day_of_week);
                                                        var t = new Date(e).getDay();
                                                        t > k ? e -= 864e5 * (t - k) : e += 864e5 * (k - t)
                                                    }
                                                    return n.drawGridPlotLine(this, a, o, s, "x_date"), n.checkGranularity(C, e, x, k)
                                                }
                                            },
                                            tickPixelInterval: 120,
                                            minTickInterval: w
                                        }
                                    }), s === r.Radar && (this.options.xAxis.tickPositioner = function () {
                                        return i.x[0].data
                                    })
                                } else "sub_date" === e ? (C = i.x[0].fid.split("_")[1], $.extend(!0, this.options, {
                                    xAxis: {
                                        labels: {
                                            formatter: function () {
                                                return t.helper.subDateFormat(C, this.value)
                                            }
                                        }
                                    }
                                }), this.options.xAxis.type = "category", this.options.xAxis.minTickInterval = void 0) : "string" !== e && "number" !== e || (this.options.xAxis.type = "category", this.options.xAxis.minTickInterval = void 0, $.extend(!0, this.options, {
                                    xAxis: {
                                        labels: {
                                            formatter: function () {
                                                var e = this.value;
                                                return e.length > 25 ? e.substring(0, 25) + "..." : e
                                            }
                                        }
                                    }
                                }));
                                if (s !== r.Bar && s !== r.NStackBar && s !== r.PStackBar && s !== r.ComparisonBar || $.extend(!0, this.options, {
                                        xAxis: {
                                            labels: {
                                                x: -5,
                                                y: 4
                                            },
                                            tickPixelInterval: 10
                                        }
                                    }), 2 === o.xAxis.length) {
                                    if ([r.Column, r.NStackColumn, r.PStackColumn, r.Bar, r.NStackBar, r.PStackBar, r.Biax, r.Line, r.Waterfall].indexOf(s) > -1) {
                                        var T = [],
                                            I = {},
                                            L = i.x[0],
                                            A = i.x[1],
                                            E = [],
                                            F = {},
                                            M = this,
                                            j = "dark" === this.theme ? "rgba(81, 130, 228, .12)" : "rgba(232, 235, 237, .6)";
                                        L.data.forEach(function (e, t) {
                                            e = M._formatXAxisLabel(e, 0), F.name !== e && (void 0 !== F.from && (F.to = t - .5, E.push(F)), F = {
                                                name: e,
                                                color: E.length % 2 == 0 ? j : null,
                                                from: t - .5,
                                                to: t - .5
                                            }), t === L.data.length - 1 && (F.to = t + .5, E.push(F)), I.name !== e && (I = {
                                                name: e,
                                                categories: []
                                            }, T.push(I));
                                            var a = M._formatXAxisLabel(A.data[t], 1);
                                            I.categories.push(a)
                                        }), $.extend(!0, this.options.xAxis, {
                                            type: "category",
                                            categories: T,
                                            plotBands: E,
                                            minTickInterval: void 0,
                                            tickColor: "dark" === this.theme ? "rgba(255, 255, 255, .1)" : "rgba(0, 0, 0, .1)",
                                            tickWidth: 1,
                                            labels: {
                                                autoRotation: [-90],
                                                formatter: function () {
                                                    var e = this.value;
                                                    return e.length > 25 ? e.substring(0, 25) + "..." : e
                                                }
                                            }
                                        })
                                    }
                                }
                            }
                        }
                    },
                    _formatTimeWithField: function (e, t, a) {
                        if (e = +e, isNaN(e)) return "NaN";
                        var i = t.granularity || "day",
                            r = t.granularity_name || "",
                            o = t.month_start_day || 0;
                        if ("hour" !== i && "minute" !== i && "second" !== i || (i = "g_" + i), "week" === i) {
                            o = 1, r && (o = t.week_start_day_of_week);
                            var s = new Date(e).getDay();
                            s > o ? e -= 864e5 * (s - o) : e += 864e5 * (o - s)
                        }
                        return n.checkGranularity(i, e, r, o, a)
                    },
                    _formatXAxisLabel: function (e, a, i) {
                        var r = this.data,
                            o = this.info,
                            s = o.xAxis[a];
                        if (s && "date" === s.data_type) {
                            var l = r.x[a].data,
                                d = n.getGranularity(r, l.length, a),
                                c = (d.tickInterval, d.granularity || "day"),
                                p = d.granularity_name || "",
                                u = o.xAxis[a].month_start_day || 0,
                                h = l[l.length - 1] - l[0];
                            if (i ? "hour" !== c && "minute" !== c && "second" !== c || (c = "g_" + c) : c = n.setGranularityByDate(c, h), "week" === c) {
                                u = 1, p && (u = s.week_start_day_of_week);
                                var f = new Date(e).getDay();
                                f > u ? e -= 864e5 * (f - u) : e += 864e5 * (u - f)
                            }
                            return n.checkGranularity(c, e, p, u)
                        }
                        if (s && "sub_date" === s.data_type) {
                            var c = s.fid.split("_")[1];
                            return t.helper.subDateFormat(c, e)
                        }
                        return e
                    },
                    _getXAxisLabelMaxWidth: function (e) {
                        if (!e.length) return 0;
                        var t = [];
                        return e.forEach(function (e) {
                            t.push(hz.cutString.getP(e, 12))
                        }), Math.max.apply(null, t)
                    },
                    _getYAxisLabelEdgeValue: function (e, t, a, i) {
                        return [r.NStackColumn, r.NStackBar, r.NStackArea].indexOf(e) > -1 ? n.getSumByColumnFromMultiArray(this.data, t, a, i) : Math[a](0, n.getEdgeValueFromMultiArray(this.data, t, a, e, i))
                    },
                    _setYaxisLabel: function () {
                        function e(e, t, s) {
                            var d = t === r.ComparisonBar;
                            s = s || [], e = "right" === e ? "_" + e : e;
                            var c, p, u = e ? "y_optional" : "y",
                                h = n.getPositiveOrNegative(a, u, s),
                                f = 0,
                                g = 0,
                                m = [r.PStackColumn, r.PStackBar, r.PStackArea].indexOf(t) > -1,
                                _ = [r.NStackColumn, r.NStackBar, r.NStackArea].indexOf(t) > -1,
                                v = t === r.Scatter;
                            if (m) "mix" === h ? (f = 100, g = -100) : "negative" === h ? (f = 0, g = -100) : "positive" === h && (f = 100, g = 0);
                            else if (v) {
                                if (a.y[1] && a.y[1].data.length) {
                                    var b = Math.max.apply(Math, a.y[1].data),
                                        y = Math.min.apply(Math, a.y[1].data);
                                    b * y < 0 ? (i.yaxis_max_disabled ? (c = Math.max.apply(Math, a.y[1].data), f = n.formatNumber(b)) : (c = i.yaxis_max, f = c), i.yaxis_min_disabled ? (p = Math.min.apply(Math, a.y[1].data), g = n.formatNumber(y)) : (p = i.yaxis_min, g = p)) : (i.yaxis_max_disabled ? (c = Math.max.apply(Math, a.y[1].data), f = n.formatNumber(b), f = Math.max(0, f)) : (c = i.yaxis_max, f = c), i.yaxis_min_disabled ? (p = Math.min.apply(Math, a.y[1].data), g = n.formatNumber(y), g = Math.min(0, g)) : (p = i.yaxis_min, g = p)), $.cookie("yaxis_min" + e, p), $.cookie("yaxis_max" + e, c)
                                }
                            } else {
                                if (t === r.Waterfall && (i.yaxis_max_disabled = !0, i.yaxis_min_disabled = !0), "mix" !== h || d)
                                    if (d) {
                                        var w = n.getEdgeValueFromMultiArray(a, "y", "max", t, s),
                                            C = n.getEdgeValueFromMultiArray(a, "y", "min"),
                                            x = .05 * (w - C),
                                            k = i.yaxis_min_disabled,
                                            D = i.yaxis_max_disabled,
                                            S = i.yaxis_max <= 0 ? w : i.yaxis_max,
                                            T = i.yaxis_min < 0 ? 0 : i.yaxis_min;
                                        "_right" !== e ? (k ? (c = 0, f = n.formatNumber(c)) : (c = -T, f = -T), D ? (p = -w, g = n.formatNumber(p)) : (p = -S, g = -S), o.info.yaxis_auto_zoom && n.canSetZoom(t) && (c = -C, f = Math.min(0, -C + x), g = -w - x)) : (k ? (p = 0, g = n.formatNumber(p)) : (p = T, g = T), D ? (c = w, f = n.formatNumber(c)) : (c = S, f = S), o.info.yaxis_auto_zoom && n.canSetZoom(t) && (p = C, g = Math.max(0, C - x), f = w + x))
                                    } else {
                                        if ("positive" == h ? (p = 0, c = o._getYAxisLabelEdgeValue(t, u, "max", s), f = n.formatNumber(c)) : "negative" == h && (c = 0, p = o._getYAxisLabelEdgeValue(t, u, "min", s), g = n.formatNumber(p)), (!_ && "y" === u && o.info.yaxis_auto_zoom || "y_optional" === u && o.info.yaxis_auto_zoom_right) && n.canSetZoom(t)) {
                                            c = n.getEdgeValueFromMultiArray(o.data, u, "max", t, s), p = n.getEdgeValueFromMultiArray(o.data, u, "min", t, s);
                                            var x = .05 * (c - p);
                                            "positive" == h ? (f = c + x, g = Math.max(0, p - x), f === g && (f *= 1.05, g *= .95)) : "negative" == h && (f = Math.min(0, c + x), g = p - x, f === g && (f *= .95, g *= 1.05))
                                        }!l["yaxis_max_disabled" + e] && l["yaxis_max" + e] && (f = Number(l["yaxis_max" + e] || i["yaxis_max" + e])), !l["yaxis_min_disabled" + e] && l["yaxis_min" + e] && (g = Number(l["yaxis_min" + e] || i["yaxis_min" + e]))
                                    }
                                else {
                                    var I = e ? i.yaxis_max_disabled_right : i.yaxis_max_disabled,
                                        L = e ? i.yaxis_min_disabled_right : i.yaxis_min_disabled,
                                        A = e ? i.yaxis_max_right : i.yaxis_max,
                                        E = e ? i.yaxis_min_right : i.yaxis_min;
                                    I ? (c = o._getYAxisLabelEdgeValue(t, u, "max", s), f = n.formatNumber(c)) : (c = A, f = c), L ? (p = o._getYAxisLabelEdgeValue(t, u, "min", s), g = n.formatNumber(p)) : (p = E, g = p)
                                }
                                $.cookie("yaxis_max" + e, c), $.cookie("yaxis_min" + e, p)
                            }
                            return {
                                max: f,
                                min: g,
                                origin_max: c,
                                origin_min: p
                            }
                        }

                        function t(t, s, l) {
                            var d = l === r.ComparisonBar;
                            s = "right" === s ? "_" + s : s, i.yAxisRange = [];
                            var c = {
                                    reversed: !1,
                                    title: {
                                        text: ""
                                    },
                                    gridLineWidth: 0,
                                    opposite: !(!s || d),
                                    labels: {
                                        enabled: !o.isDashboardMode || o.isDashboardMode && o.dash_setting.show_axis,
                                        formatter: function () {
                                            var e = n.checkPercentLabel(this, a, l, d ? "" : s);
                                            return n.drawGridPlotLine(this, o, i, l, "y"), e
                                        }
                                    }
                                },
                                p = l === r.PStackColumn || l === r.PStackBar || l === r.PStackArea,
                                u = function () {
                                    var t, a, d, c, p = (o.theme, o.mode.split("*")),
                                        u = (p[0], p[1], []),
                                        h = [r.PStackColumn, r.PStackBar, r.PStackArea].indexOf(l) > -1,
                                        f = l === r.ComparisonBar,
                                        g = h || f ? 1 : 1.2,
                                        m = [],
                                        _ = o._isStackChart();
                                    if (this.series) {
                                        var v = this.series.length;
                                        this.series.forEach(function (e, t) {
                                            if (e.visible === !1) {
                                                var a = _ ? v - t - 1 : t;
                                                m.push(a)
                                            }
                                        })
                                    }
                                    var b = e(s, l, m);
                                    if (a = b.min, t = b.max, a * t < 0) {
                                        var y = i.yaxis_auto_zoom && n.canSetZoom(l),
                                            w = !y && (s ? i.yaxis_max_disabled_right : i.yaxis_max_disabled),
                                            C = !y && (s ? i.yaxis_min_disabled_right : i.yaxis_min_disabled);
                                        if (w && C) {
                                            var x = Math.abs(t),
                                                k = Math.abs(a),
                                                D = x > k ? 1 : -1,
                                                S = D > 0 ? x : k;
                                            if (S >= 3 * (D < 0 ? x : k)) {
                                                if (S = n.formatNumber(Math.max(Math.abs(b.origin_max * g), Math.abs(b.origin_min * g)), 3), !(d = Number(S.div(3).toFixed(6)))) return;
                                                c = isInteger(d) ? 0 : d.toString().split(".")[1].length;
                                                for (var T = 0; T <= S; T = Number(T.add(d).toFixed(c))) D > 0 ? u.push(c ? Number(T.toFixed(Math.min(c, 6))) : T) : u.push(c ? 0 === T ? 0 : -Number(T.toFixed(Math.min(c, 6))) : 0 === T ? 0 : -T);
                                                return u.length < 4 && u.push(D * T), u.push(Number((-D * d).toFixed(c))), u.sort(function (e, t) {
                                                    return e - t
                                                })
                                            }
                                            t = n.formatNumber(S * g), a = n.formatNumber(-S * g)
                                        }
                                    } else {
                                        var I = i.yaxis_auto_zoom_right && n.canSetZoom(l),
                                            y = i.yaxis_auto_zoom && n.canSetZoom(l);
                                        if (!h) {
                                            var L, $;
                                            s ? (L = !I && i.yaxis_max_disabled_right, $ = !I && i.yaxis_min_disabled_right) : (L = !y && i.yaxis_max_disabled, $ = !y && i.yaxis_min_disabled), L && $ && (a = n.formatNumber(b.origin_min * g), t = n.formatNumber(b.origin_max * g))
                                        }
                                        if (f) {
                                            var L = !y && (i.yaxis_max_disabled || i.yaxis_max_right),
                                                $ = !y && i.yaxis_min_disabled;
                                            "_right" !== s ? (a = L ? n.formatNumber(b.origin_min) : b.min, t = $ ? n.formatNumber(b.origin_max) : b.max) : (a = $ ? n.formatNumber(b.origin_min) : b.min, t = L ? n.formatNumber(b.origin_max) : b.max)
                                        }
                                    }
                                    if (d = Number(t.sub(a).div(4).toFixed(6))) {
                                        if (c = isInteger(d) ? 0 : d.toString().split(".")[1].length, f && "pos_middle" === i.comparison_xaxis_pos && "_right" !== s) {
                                            for (var A = -t; A <= -a; A = Number(A.add(d).toFixed(c))) u.push(c ? Number(-A.toFixed(Math.min(c, 6))) : -A);
                                            u.length < 5 && u.push(a), u.reverse()
                                        } else {
                                            for (var T = a; T <= t; T = Number(T.add(d).toFixed(c))) u.push(c ? Number(T.toFixed(Math.min(c, 6))) : T);
                                            u.length < 5 && u.push(t)
                                        }
                                        return u
                                    }
                                };
                            if (t.max * t.min >= 0 && t.max === t.min) return c;
                            var h = i.chart_type === r.Scatter;
                            return h && i.yaxis_min_disabled && i.yaxis_max_disabled || (c.tickPositioner = u), h && (c.getLabelRange = u), c
                        }
                        var a = this.data,
                            i = this.info;
                        this.options.yAxis = [];
                        var o = this,
                            s = this.getChartType(),
                            l = i;
                        if (s === r.Biax) i.yAxis.length && (n.checkIsAllDataNull(a, "y") ? this.options.yAxis[0] = {
                            reversed: !1,
                            title: {
                                text: ""
                            },
                            gridLineWidth: 0,
                            opposite: !1,
                            labels: {
                                enabled: !o.isDashboardMode || o.isDashboardMode && o.dash_setting.show_axis,
                                formatter: function () {
                                    return n.checkPercentLabel(this, a, i.type_optional[0])
                                }
                            },
                            tickPositioner: function () {
                                return [0, 1, 2, 3, 4]
                            }
                        } : this.options.yAxis[0] = t(e("", i.type_optional[0]), "", i.type_optional[0])), i.yAxisOptional.length && (n.checkIsAllDataNull(a, "y_optional") ? this.options.yAxis[1] = {
                            reversed: !1,
                            title: {
                                text: ""
                            },
                            gridLineWidth: 0,
                            opposite: !0,
                            labels: {
                                enabled: !o.isDashboardMode || o.isDashboardMode && o.dash_setting.show_axis,
                                formatter: function () {
                                    return n.checkPercentLabel(this, a, i.type_optional[1], "right")
                                }
                            },
                            tickPositioner: function () {
                                return [0, 1, 2, 3, 4]
                            }
                        } : this.options.yAxis[1] = t(e("right", i.type_optional[1]), "right", i.type_optional[1]));
                        else if (s !== r.Gauge && i.yAxis.length) {
                            if (0 === i.compare_axis.length && n.checkIsAllDataNull(a, "y")) return void(this.options.yAxis[0] ? this.options.yAxis[0].gridLineWidth = 0 : this.options.yAxis[0] = {
                                gridLineWidth: 0
                            });
                            s === r.ComparisonBar ? (this.options.yAxis[0] = t(e("", s), "", s), this.options.yAxis[1] = t(e("right", s), "right", s)) : this.options.yAxis[0] = t(e("", s), "", s)
                        }[r.Line, r.Column, r.Bar, r.NStackColumn, r.PStackColumn, r.NStackBar, r.PStackBar, r.ComparisonBar].indexOf(s) > -1 && "dark" === this.theme && (this.options.yAxis[0].gridLineWidth = 1, this.options.yAxis[0].gridLineColor = "rgba(255, 255, 255, .06)", s == r.ComparisonBar && (this.options.yAxis[1].gridLineWidth = 1, this.options.yAxis[1].gridLineColor = "rgba(255, 255, 255, .06)"))
                    },
                    _setYaxisTitle: function () {
                        var e = this,
                            t = this.info,
                            a = t.yaxis_name,
                            i = t.yaxis_unit || "";
                        if (a || (a = this.getChartType() === r.Scatter ? this.data.y[1] ? this.data.y[1].name : "" : this.data.y[0] ? this.data.y[0].name : ""), t.yAxis.length > 0 && (!this.isDashboardMode || this.gridWidth > 3)) {
                            if (t.chart_type == r.ComparisonBar) {
                                var n = "";
                                t.compare_axis && t.compare_axis.length ? (n = t.yaxis_name_right || this.data.y[1] && this.data.y[1].nick_name || "", a = t.yaxis_name || this.data.y[0].nick_name) : (n = t.yaxis_name_right || this.data.y[1] && this.data.y[1].name || "", a = t.yaxis_name || this.data.y[0].name);
                                var o = $.extend(!0, this.options.yAxis[0], {
                                        title: {
                                            text: !e.isDashboardMode || e.isDashboardMode && e.dash_setting.show_axis ? a : ""
                                        }
                                    }),
                                    o = $.extend(!0, this.options.yAxis[1], {
                                        title: {
                                            text: !e.isDashboardMode || e.isDashboardMode && e.dash_setting.show_axis ? n : ""
                                        }
                                    })
                            } else var o = $.extend(!0, this.options, {
                                yAxis: [{
                                    title: {
                                        text: !e.isDashboardMode || e.isDashboardMode && e.dash_setting.show_axis ? i ? a + " (" + i + ")" : a : ""
                                    }
                                }]
                            });
                            if (t.chart_type === r.Biax && o.yAxis[1]) {
                                var s = t.yaxis_name_right,
                                    l = t.yaxis_unit_right || "";
                                s || (s = this.data.y_optional.length ? this.data.y_optional[0].name : ""), !e.isDashboardMode || e.isDashboardMode && e.dash_setting.show_axis ? o.yAxis[1].title.text = "" == l ? s : s + " (" + l + ")" : o.yAxis[1].title.text = ""
                            }
                        } else {
                            var d = [{
                                title: {
                                    text: ""
                                }
                            }];
                            t.chart_type === r.Biax && d.push({
                                title: {
                                    text: ""
                                }
                            }), $.extend(!0, this.options, {
                                yAxis: d
                            })
                        }
                    },
                    _setChartData: function () {
                        var e = this,
                            t = this.getChartType(),
                            a = this.data,
                            i = this.info,
                            n = a.x.length,
                            o = a.y.length,
                            s = a.y_optional.length,
                            l = this.chartData.y,
                            d = this.chartData.y_optional || [],
                            c = this.info.type_optional;
                        if (t !== r.Scatter && t !== r.TreeMap) {
                            if (0 !== n || 0 === o && 0 === s) {
                                if (this._setSeries(0), this.options.series = this.reverseStackChartData(), i.chart_type === r.Biax) {
                                    this._setSeries(1);
                                    var p = 0,
                                        u = 0;
                                    if (1 === i.xAxis.length && "date" === i.xAxis[0].data_type) {
                                        var h = i.xAxis[0].granularity,
                                            f = {
                                                second: 1e3,
                                                minute: 6e4,
                                                hour: 36e5,
                                                day: 864e5,
                                                week: 6048e5,
                                                month: 26784e5,
                                                quarter: 79488e5,
                                                year: 316224e5
                                            };
                                        u = this.chartData.x[0].data.length;
                                        for (var g = u - 1; g > 0; g--) {
                                            var m = g - 1,
                                                _ = this.chartData.x[0].data[g] - this.chartData.x[0].data[m];
                                            if (_ > f[h]) {
                                                for (var v = 0; v < this.chartData.y.length; v++) this.chartData.y[v].data.splice(g, 0, [this.chartData.x[0].data[g] - f[h], null]);
                                                for (var b = 0; b < this.chartData.y_optional.length; b++) this.chartData.y_optional[b].data.splice(g, 0, [this.chartData.x[0].data[g] - f[h], null]);
                                                p++
                                            }
                                        }
                                    }
                                    if (["C211", "C212"].indexOf(c[0]) > -1 && (l = l.reverse(), this.data.selectionColors)) {
                                        var y = this.data.selectionColors.slice(0, l.length).reverse();
                                        this.options.colors = y.concat(this.data.selectionColors.slice(l.length))
                                    }
                                    if (["C211", "C212"].indexOf(c[1]) > -1 && (d = d.reverse(), this.data.selectionColors)) {
                                        var y = this.data.selectionColors.slice(l.length).reverse();
                                        this.options.colors = this.data.selectionColors.slice(0, l.length).concat(y)
                                    }
                                    this.options.series = l.concat(d), this.options.series[0] && u + p > e.maxDataLen && this.options.series.forEach(function (t, a) {
                                        t.data.splice(0, u + p - e.maxDataLen)
                                    })
                                }
                            } else {
                                if (t === r.Pie) return;
                                if (t === r.Radar) {
                                    if (o.length < 3) return !1;
                                    var w = [],
                                        C = [];
                                    if (i.compare_axis.length) {
                                        var x = {},
                                            k = {};
                                        angular.forEach(a.y, function (e) {
                                            var t = e.compare_names,
                                                a = t.slice(1).join("_");
                                            k[e.uniq_id] || (w.push(t[0]), k[e.uniq_id] = 1), x[a] ? x[a].data.push(1 * e.data[0]) : (x[a] = {
                                                name: a,
                                                data: [1 * e.data[0]],
                                                compare_values: e.compare_values,
                                                uniq_id: e.uniq_id
                                            }, C.push(x[a]))
                                        })
                                    } else {
                                        var D = [];
                                        angular.forEach(a.y, function (e) {
                                            w.push(e.name), D.push(1 * e.data[0])
                                        }), C = [{
                                            data: D
                                        }]
                                    }
                                    return void $.extend(!0, this.options, {
                                        xAxis: {
                                            type: "category",
                                            categories: w
                                        },
                                        series: C
                                    })
                                }
                                $.extend(!0, this.options, {
                                    xAxis: {
                                        type: "category",
                                        labels: {
                                            enabled: !1
                                        }
                                    }
                                });
                                for (var S = 0; S < o; S++)
                                    for (var T = 0; T < a.y[S].data.length; T++) this.chartData.y[S].data[T] = {
                                        y: 1 * a.y[S].data[T]
                                    };
                                if (t === r.Biax) {
                                    for (var I = 0; I < s; I++)
                                        for (var L = 0; L < this.chartData.y_optional[I].data.length; L++) this.chartData.y_optional[I].data[L] = {
                                            y: 1 * this.chartData.y_optional[I].data[L]
                                        };
                                    var C = [];
                                    if (["C211", "C212"].indexOf(c[0]) > -1 && (l = l.reverse(), this.data.selectionColors)) {
                                        var y = this.data.selectionColors.slice(0, l.length).reverse();
                                        this.options.colors = y.concat(this.data.selectionColors.slice(l.length))
                                    }
                                    if (["C211", "C212"].indexOf(c[1]) > -1 && (d = d.reverse(), this.data.selectionColors)) {
                                        var y = this.data.selectionColors.slice(l.length).reverse();
                                        this.options.colors = this.data.selectionColors.slice(0, l.length).concat(y)
                                    }
                                    angular.forEach(l, function (e, t) {
                                        e.type = "column", e.yAxis = 0, e.zIndex = 1, C.push(e)
                                    }), angular.forEach(d, function (e, t) {
                                        e.type = "line", e.yAxis = 1, e.zIndex = 2, C.push(e)
                                    }), this.options.series = C
                                } else this.options.series = this.reverseStackChartData()
                            }
                            this._handleLineMarker(this.options.series)
                        }
                    },
                    _handleLineMarker: function (e) {
                        var t = this,
                            a = t.getChartType();
                        [r.Line, r.Area, r.NStackArea, r.PStackArea].indexOf(a) > -1 ? e.forEach(function (e) {
                            1 === e.data.reduce(function (e, t) {
                                return Number(e) + Number(!!t)
                            }, 0) && $.extend(!0, e, {
                                marker: {
                                    lineWidth: 2,
                                    fillColor: "dark" == t.theme ? "rgba(255, 255, 255, 0)" : "#fff"
                                }
                            })
                        }) : a === r.Biax && e.forEach(function (e) {
                            "line" !== e.type && "spline" !== e.type || $.extend(!0, e, {
                                marker: {
                                    enabled: !0
                                }
                            })
                        })
                    },
                    _needSetColor: function () {
                        return [r.Table, r.Gauge, r.Scatter, r.Waterfall].indexOf(this.info.chart_type) < 0
                    },
                    _isSettedColor: function () {
                        var e = this,
                            t = e.info.yAxis,
                            a = e.info.yAxisOptional;
                        return [t].concat(a).some(function (e) {
                            return void 0 !== e.series_color
                        })
                    },
                    _isStackChart: function () {
                        return "C211 C212 C241 C242 C351 C352".indexOf(this.info.chart_type) > -1
                    },
                    reverseStackChartData: function () {
                        return this._isStackChart() ? this.chartData.y.reverse() : this.chartData.y
                    },
                    _setSeries: function (e) {
                        var t, a = this.data,
                            i = this.info,
                            o = this.getChartType(),
                            s = [],
                            l = {},
                            d = 0 === e ? "y" : "y_optional",
                            c = "category" === this.options.xAxis.type ? "name" : "x",
                            p = 0;
                        if ("date" === a.x[0].data_type && a.x[0].granularity_name) switch (a.x[0].granularity) {
                            case "year":
                                p = 864e5 * (i.xAxis[0].year_start_month - 1) * 30;
                                break;
                            case "month":
                                p = 864e5 * (i.xAxis[0].month_start_day - 32);
                                break;
                            case "week":
                                p = 864e5 * (i.xAxis[0].week_start_day_of_week - 1)
                        }
                        a.x[0].dateTimePadding = p;
                        var u = a[d] && a[d].length > 0 ? a[d].length * a[d][0].data.length : 0,
                            h = Math.ceil(u / 3e3),
                            f = u > 3e3 && $.inArray(o, ["C210", "C211", "C212", "C220", "C240", "C214"]) > -1 && h > 0;
                        a[d].length > 0 && (this.xMap = {});
                        for (var g = 0; g < a[d].length; g++) {
                            t = a[d][g].data, t.length, s = [], l = {};
                            for (var m = 0; m < t.length; m++) {
                                l = {};
                                var _ = a.x[0].data[m];
                                if ("date" === a.x[0].data_type && a.x[0].granularity_name)
                                    if ("month" === a.x[0].granularity) {
                                        var v = new Date(_).getMonth() + 1;
                                        [1, 3, 5, 7, 8, 10, 12].indexOf(v) > -1 ? l[c] = _ - p : [4, 6, 9, 11].indexOf(v) > -1 ? l[c] = _ - p - 864e5 : 2 === v && (bdp.utils.isLeapYear(_) ? l[c] = _ - p - 1728e5 : l[c] = _ - p - 2592e5)
                                    } else l[c] = _ - p;
                                else l[c] = _;
                                f && (l.dataLabels = l.dataLabels || {}, m % h != 0 && (l.dataLabels.enabled = !1)), this.xMap[l[c]] = this.data.x[0].data[m];
                                if (null == t[m]) l.y = null;
                                else if ("string" == typeof t[m] || void 0 === t[m].length) l.y = null !== t[m] ? 1 * t[m] : null;
                                else if ($.isArray(t[m])) l = [].concat(l[c], t[m]), delete l.color;
                                else
                                    for (var b = 0; b < t[m].length; b++) l.y = null !== t[m][b] ? 1 * t[m][b] : null;
                                s.push(l)
                            }
                            var y = i.compare_axis && i.compare_axis.length;
                            this.isOpenTimePredicted && y && n.timePredicted.checkType(a[d][g], "open", "line") && (a[d][g].linkedTo = ":previous"), this.isOpenTimePredicted && n.timePredicted.checkType(a[d][g], "enable", "area") && n.timePredicted.extendAreaRangeOpt(a[d][g], +this.info.use_spline), this.chartData[d][g] = angular.copy(a[d][g]), this.chartData[d][g].data = s, i.chart_type === r.Biax && (a.y.length > 0 || a.y_optional.length > 0) && (this.chartData[d][g].type = "C220" === i.type_optional[e] ? "line" : "column", this.chartData[d][g].yAxis = e, this.chartData[d][g].zIndex = "line" === this.chartData[d][g].type ? 2 : 1)
                        }
                    },
                    _setLinkColor: function (e) {
                        var t = this,
                            a = t.getChartType(),
                            i = (t.info, t.data),
                            n = t.info.chart_id,
                            r = {},
                            o = [];
                        if ($.isArray(t.mainChartContainer) && 0 == t.mainChartContainer.length && (t.mainChartContainer = e && e.mainChartContainer || [], t.mainChartColorContainer = e && e.mainChartColorContainer || []), 0 != t.mainChartContainer.length) {
                            angular.forEach(t.mainChartContainer, function (e, t) {
                                e.ctId == n && (r = e.pointInfo, o = e.pointData)
                            });
                            var s = (r.index, r.x),
                                l = r.name,
                                d = t.options.xAxis;
                            if ("C220" === a || "C250" === a) {
                                var c = t.options.series;
                                if ("C250" == a) {
                                    var p;
                                    c && c.forEach(function (e) {
                                        "line" == e.type && (p = !0)
                                    }), p && t._setLinkLineColor(c, i, o, a, d), t._setLinkBarColor(c, i, o)
                                } else t._setLinkLineColor(c, i, o, a, d)
                            } else if (["pie", "map"].indexOf(t.options.chart.type) > -1) {
                                var u, h = t.options.series[0].data;
                                h.length > 1 && (angular.forEach(i.x[0].data, function (e, t) {
                                    e == (s || l) ? u = t : angular.isNumber(t) && (h[t].selected = !1, h[t].sliced = !1, h[t].select = !1)
                                }), angular.isNumber(u) && (h[u].selected = !0, h[u].sliced = !0, h[u].select = !0))
                            } else {
                                var c = t.options.series;
                                t._setLinkBarColor(c, i, o)
                            }
                        }
                    },
                    _setLinkBarColor: function (e, t, a) {
                        angular.forEach(e, function (e, i) {
                            angular.forEach(e.data, function (e, i) {
                                var n = [];
                                angular.forEach(t.x, function (e, t) {
                                    n.push(e.data[i])
                                }), angular.equals(n, a) || (e.color = "#ccc")
                            })
                        })
                    },
                    _setLinkLineColor: function (e, t, a, i, n) {
                        var r;
                        angular.forEach(e, function (e, o) {
                            angular.forEach(e.data, function (e, o) {
                                var s = [];
                                angular.forEach(t.x, function (e, t) {
                                    s.push(e.data[o])
                                }), angular.equals(s, a) && (r = "C220" === i ? a[0] : o, n.plotLines = [{
                                    value: r,
                                    color: "rgba(134,139,156,0.5)",
                                    width: 1,
                                    id: "chartLinkPlotLine"
                                }])
                            })
                        })
                    },
                    _setColor: function () {
                        var e = this.info,
                            a = this.data,
                            o = this.options.series,
                            s = this.getChartType(),
                            l = e.color_setting,
                            d = [].concat(e.y || [], e.y_optional || []),
                            c = d.some(function (e, t) {
                                return !!e.series_color
                            }),
                            p = t.getColorsByType(e.chart_type, "bdp");
                        if ("C290" !== s || e.xAxis.length)
                            if (this.isOpenTimePredicted && angular.forEach(o, function (e, t) {
                                    n.timePredicted.checkType(e, "enable", "line") && (e.series_color = e.time_seires_setting.series_color), n.timePredicted.checkType(e, "enable", "area") && (e.series_color = e.time_seires_setting.series_color)
                                }), ($.isEmptyObject(l) || l.is_series) && (e.yAxis.length > 0 || s === r.Biax) && c) {
                                if (s === r.Pie) return;
                                if (this.isOpenTimePredicted && !this.isSplitChart()) {
                                    var u = e.compare_axis && e.compare_axis.length;
                                    n.timePredicted.setSeriesColor(o, u, this.options.colors)
                                } else angular.forEach(o, function (e, t) {
                                    e.series_color ? e.color = e.series_color : e.color = p[t % p.length]
                                })
                            } else {
                                if (delete l.is_series, $.isEmptyObject(l) || !this._needSetColor()) return void(this.isOpenTimePredicted && n.timePredicted.setSeriesColor(o, e.compare_axis.length, this.options.colors));
                                if (1 != +l.mode) {
                                    p = t.colors[l.theme];
                                    var h = l.enum_color_map || null,
                                        f = null === h ? [] : Object.keys(h).map(function (e) {
                                            return e.split("_")
                                        }),
                                        g = {
                                            count: 0,
                                            posInColorField: [],
                                            posInDimension: []
                                        };
                                    if (angular.forEach(e.xAxis, function (e, t) {
                                            for (var a = 0; a < l.field.length; a++)
                                                if (e.fid === l.field[a].fid) {
                                                    g.count++, g.posInColorField.push(a), g.posInDimension.push(t);
                                                    break
                                                }
                                        }), e.xAxis.length && g.count > 0) {
                                        var m = [];
                                        angular.forEach(o, function (t, i) {
                                            angular.forEach(t.data, function (n, r) {
                                                g.posInDimension.forEach(function (o, s) {
                                                    var l = a.x[o].data[r];
                                                    if (m = [t.uniq_id.toString()].concat(n.name, null === l ? null : l.toString()), e.compare_axis.length > 0 && (m = m.concat(t.compare_values)), h) {
                                                        for (var d = 0; d < f.length; d++)
                                                            if (bdp.utils.isContain(m, f[d])) {
                                                                n.color = h[f[d].join("_")].color;
                                                                break
                                                            }
                                                        n.color || (n.color = p[(i * t.data.length + r) % p.length])
                                                    } else n.color = p[(i * t.data.length + r) % p.length]
                                                })
                                            })
                                        })
                                    } else e.compare_axis.length && angular.forEach(o, function (e, t) {
                                        var a = e.compare_values.slice().reverse();
                                        if (a.splice(-1, 1, e.uniq_id.toString()), h)
                                            if (h.hasOwnProperty(a.join("_"))) e.color = h[a.join("_")].color;
                                            else {
                                                var i = [e.uniq_id.toString()].concat(e.compare_values);
                                                (e.compare_values.indexOf("") > -1 || e.compare_values.indexOf(null) > -1) && (i = i.concat(["(空白)", "(Blank)"]));
                                                for (var n = 0; n < f.length; n++)
                                                    if (bdp.utils.isContain(i, f[n])) {
                                                        e.color = h[f[n].join("_")].color;
                                                        break
                                                    }
                                            }
                                        else e.color = p[t % p.length]
                                    })
                                } else if (1 == +l.mode) {
                                    var _ = e.compare_axis && e.compare_axis.length > 0;
                                    if ([r.Line, r.Radar, r.Area, r.NStackArea, r.PStackArea].indexOf(s) > -1) {
                                        var v = this.$elem.height() - 34;
                                        if (l && l.range_color) {
                                            var b, y = l.range_color.start_color,
                                                w = l.range_color.end_color;
                                            b = y == w ? y : {
                                                linearGradient: [0, 0, 0, v],
                                                stops: [
                                                    [0, w],
                                                    [1, y]
                                                ]
                                            }, this.options.series.forEach(function (e) {
                                                e.color = b
                                            })
                                        }
                                    }
                                    var C = a.colors.map(function (e) {
                                            return Number(e)
                                        }),
                                        x = n.linearRangeColor(l.range_color.start_color, l.range_color.end_color),
                                        k = n.createLinearScale(l.range_color, C),
                                        D = [],
                                        S = l.range_color.step;
                                    if (S > 1) {
                                        for (i = 0; i < S - 1; i++) D.push(x(i / (S - 1)));
                                        D.push(x(1))
                                    }
                                    angular.forEach(o, function (e, t) {
                                        _ && (C = a.colors[t % a.colors.length].map(function (e) {
                                            return Number(e)
                                        }), k = n.createLinearScale(l.range_color, C)), angular.forEach(e.data, function (e, t) {
                                            var a = C[t],
                                                i = k(a);
                                            if (S) {
                                                var n = Math.floor(S * i);
                                                n = Math.min(n, S - 1), e.color = D[n]
                                            } else e.color = x(i)
                                        })
                                    })
                                }
                            }
                    },
                    _setGuideLine: function () {
                        var e = this,
                            t = this.info.drill_level,
                            a = this.getChartType(),
                            i = this.info,
                            o = this.options,
                            s = this.data;
                        if (a === r.Pie && a === r.Table || a === r.Radar || a === r.Waterfall) return !1;
                        var l, d, c, p = o.yAxis[0].tickPositioner ? o.yAxis[0].tickPositioner() : [],
                            u = [],
                            h = o.yAxis[1] && o.yAxis[1].tickPositioner ? o.yAxis[1].tickPositioner() : [],
                            f = 12,
                            g = 10 * f,
                            m = "#8FC2EC",
                            _ = "dark" === this.theme ? "#EE4B4B" : "#D0021B",
                            v = 1,
                            b = 3,
                            y = [],
                            w = [],
                            C = [],
                            x = [r.Bar, r.NStackBar, r.PStackBar, r.ComparisonBar].indexOf(a) > -1;
                        l = s.guide_line || [], d = s.guide_line_right || [], c = s.guide_line_x || [], y = o.yAxis[0].plotLines || [], w = o.xAxis.plotLines && o.xAxis.plotLines[0] || [], C = o.yAxis[1] && o.yAxis[1].plotLines || [];
                        var k = function (e) {
                                if (e) {
                                    for (var t = 0; t < e.length; t++)
                                        if (0 == +e[t]) return !0;
                                    return !1
                                }
                            },
                            D = function (t, a) {
                                var i = [{
                                    color: e.deviceStyle.xAxis ? e.deviceStyle.xAxis.lineColor : "dark" === e.theme ? "rgba(255, 255, 255, .06)" : "#ccc",
                                    width: 1,
                                    value: 0,
                                    defaultZero: !0
                                }];
                                if (!t) {
                                    var n;
                                    n = "dark" === this.theme ? {
                                        text: "",
                                        style: {
                                            color: "#fff"
                                        },
                                        align: "left",
                                        x: -22,
                                        y: 3
                                    } : {
                                        text: "",
                                        align: "left",
                                        x: -22,
                                        y: 5
                                    }, "right" === a && (n.align = "right", n.x = -n.x), i[0].label = n
                                }
                                return i
                            };
                        if (y.length && 0 == +y[0].value) y = y.slice(0, 1);
                        else {
                            var S = i.chart_type === r.Scatter && !$.isEmptyObject(i.bubble_setting);
                            a === r.Gauge || S ? y = [] : (y = D(k(p), "left"), plotLinesRight = D(k(h), "right"))
                        }
                        "fullscreen" !== this.mode || this.isMobileMode || (f = 13, g = 10 * f, m = "dark" === this.theme ? "rgba(255,255,255,.3)" : "rgba(0,0,0,.3)", v = 2, b = 4), angular.forEach(l, function (e) {
                            angular.forEach(s.y, function (t) {
                                e.fid === t.fid && (e.formatter = t.formatter)
                            })
                        });
                        var T = function (e, t, i, o, s) {
                            if (o) {
                                for (var l, d = 50 * f, c = {}, p = 0, u = 0; u < o.length; u++) p = Math.max(p, isInteger(o[u]) ? 0 : o[u].toString().split(".")[1].length);
                                angular.forEach(t, function (t) {
                                    var o = hz.cutString.cutStr(t.name, d + 1, !1, f),
                                        p = hz.cutString.getP(o, f);
                                    c = {
                                        width: Math.min(p, g),
                                        height: 16 * Math.ceil(p / g),
                                        top: 16 * -Math.ceil(p / g) - 20
                                    };
                                    var u = t.value,
                                        h = s ? -t.value : t.value;
                                    t.formatter && "percent" === t.formatter.check ? u = Highcharts.numberFormat(100 * u, t.formatter.percent.digit) + "%" : (l = isInteger(t.value) ? 0 : t.value.toString().split(".")[1].length, u = t.value < 1e3 ? n.numericSymbols(t.value, Math.min(4, l)) : n.numericSymbolsWithDigit(t.value));
                                    var _ = Math.ceil(hz.cutString.getP(u.toString(), f)),
                                        y = 12;
                                    t.value > 1e3 && (y = 15), _ = x ? -.5 * (_ + y) : -(_ + y), i.push({
                                        color: m,
                                        dashStyle: "dash",
                                        value: h,
                                        width: v,
                                        zIndex: 4,
                                        label: {
                                            text: '<span class="guide-label-' + e + " " + x + '">' + u + '<span class="guide-label-text" style="width:' + c.width + "px;height:" + c.height + "px;top:" + c.top + 'px;">' + o + "</span></span>",
                                            align: e,
                                            verticalAlign: "bottom",
                                            x: "left" === e ? x ? _ + 6 : _ : -_,
                                            y: x ? "left" === e ? b + 16 : b - 6 : b,
                                            rotation: 0,
                                            style: {
                                                color: "#fff",
                                                fontSize: f + "px",
                                                display: a === r.Gauge ? "none" : "block"
                                            },
                                            useHTML: !0
                                        }
                                    })
                                })
                            }
                        };
                        if (i.chart_type === r.Scatter && T("left", c, w, u), a == r.ComparisonBar) {
                            var I = [],
                                L = [],
                                A = i.y[0].uniq_id,
                                E = i.y[1] && i.y[1].uniq_id || A;
                            C = D(k(h), "right"), C = D(k(h), "right"), angular.forEach(l, function (e) {
                                (e.uniq_id == A && "calculate" == e.value_type || "constant" == e.value_type) && I.push(e), (e.uniq_id == E && "calculate" == e.value_type || "constant" == e.value_type) && L.push(e)
                            }), T("left", I, y, p, !0), T("left", L, C, h)
                        } else T("left", l, y, p);
                        d && d.length > 0 && (angular.forEach(d, function (e) {
                            angular.forEach(s.y_optional, function (t) {
                                e.fid === t.fid && (e.formatter = t.formatter)
                            })
                        }), T("right", d, plotLinesRight, h)), !t && [r.PStackColumn, r.PStackBar, r.PStackArea, r.Waterfall].indexOf(a) < 0 && (angular.forEach(i.warn_info, function (e) {
                            0 === Number(e.axis_type) ? angular.forEach(s.y, function (t) {
                                e.field_id === t.fid && (e.formatter = t.formatter)
                            }) : angular.forEach(s.y_optional, function (t) {
                                e.field_id === t.fid && (e.formatter = t.formatter)
                            })
                        }), angular.forEach(i.warn_info, function (e) {
                            e.switch && angular.forEach(e.meta.option, function (t) {
                                if ("C243" == a) var i = !s.y[0].compare_names.length && s.y[1] && s.y[1].uniq_id === t.uniq_id,
                                    o = i || s.y[0].compare_names.length > 0;
                                if (7 === Number(t.compare_type)) angular.forEach(t.compare_value, function (s, l) {
                                    var d = t.compare_value[l];
                                    d = e.formatter && "percent" === e.formatter.check ? Highcharts.numberFormat(100 * d, Number(e.formatter.percent.digit)) + "%" : n.numericSymbols(d);
                                    var c = hz.cutString.getP(d.toString(), f),
                                        p = 24;
                                    t.compare_value[l] > 1e3 && (p = 27), c = x ? -.6 * (c + p) : -(c + p), 0 == +e.axis_type ? (i || y.push({
                                        value: t.compare_value[l],
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-left">' + d + "</span>",
                                            align: "left",
                                            verticalAlign: "bottom",
                                            x: x ? c + 10 : c,
                                            y: x ? b + 18 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px",
                                                display: a === r.Gauge ? "none" : "block"
                                            },
                                            useHTML: !0
                                        }
                                    }), o && C.push({
                                        value: t.compare_value,
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-right">' + d + "</span>",
                                            align: "left",
                                            verticalAlign: "bottom",
                                            x: x ? c + 10 : c,
                                            y: x ? b + 18 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px"
                                            },
                                            useHTML: !0
                                        }
                                    })) : plotLinesRight.push({
                                        value: t.compare_value[l],
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-right">' + d + "</span>",
                                            align: "right",
                                            x: -c,
                                            y: x ? b - 6 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px"
                                            },
                                            useHTML: !0
                                        }
                                    })
                                });
                                else {
                                    var l = t.compare_value;
                                    l = e.formatter && "percent" === e.formatter.check ? Highcharts.numberFormat(100 * l, Number(e.formatter.percent.digit)) + "%" : n.numericSymbols(l);
                                    var d = hz.cutString.getP(l.toString(), f),
                                        c = 24;
                                    t.compare_value > 1e3 && (c = 27), d = x ? -.6 * (d + c) : -(d + c), 0 === Number(e.axis_type) ? (i || y.push({
                                        value: "C243" === a ? -t.compare_value : t.compare_value,
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-left">' + l + "</span>",
                                            align: "left",
                                            verticalAlign: "bottom",
                                            x: x ? d + 10 : d,
                                            y: x ? b + 18 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px",
                                                display: a === r.Gauge ? "none" : "block"
                                            },
                                            useHTML: !0
                                        }
                                    }), o && C.push({
                                        value: t.compare_value,
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-right">' + l + "</span>",
                                            align: "left",
                                            verticalAlign: "bottom",
                                            x: x ? d + 10 : d,
                                            y: x ? b + 18 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px"
                                            },
                                            useHTML: !0
                                        }
                                    })) : plotLinesRight.push({
                                        value: t.compare_value,
                                        width: v,
                                        color: _,
                                        zIndex: 5,
                                        label: {
                                            text: '<span class="warn-label-right">' + l + "</span>",
                                            align: "right",
                                            x: "C243" === a ? d : -d,
                                            y: x ? b - 6 : b,
                                            rotation: 0,
                                            style: {
                                                color: _,
                                                fontSize: f + "px"
                                            },
                                            useHTML: !0
                                        }
                                    })
                                }
                            })
                        })), a !== r.ComparisonBar && (l.length || d && d.length) && (o.legend && o.legend.enabled !== !1 ? o.legend.margin = Math.max(o.legend.margin || 0, 5) : o.chart.marginRight = Math.max(o.chart.marginRight || 0, 10)), angular.isArray(o.yAxis) ? (o.yAxis[0].plotLines = y, i.chart_type === r.Biax && o.yAxis[1] && (o.yAxis[1].plotLines = plotLinesRight), a == r.ComparisonBar && o.yAxis[1] && (o.yAxis[1].plotLines = C)) : o.yAxis.plotLines = y, i.chart_type === r.Scatter && (o.xAxis.plotLines = w)
                    },
                    _setXaxisPlotLines: function () {
                        var e = this.info,
                            t = this.data,
                            a = e.xAxis[0];
                        if (a && "date" === a.data_type) {
                            var i = a.granularity,
                                r = this.options,
                                o = new Date(t.x[0].data[0]),
                                s = new Date(t.x[0].data[t.x[0].data.length - 1]),
                                l = n.getTimeZoneOffset(),
                                d = {
                                    year: o.getFullYear(),
                                    month: o.getMonth()
                                },
                                c = {
                                    year: s.getFullYear(),
                                    month: s.getMonth()
                                };
                            if (d.year === c.year && d.month === c.month || "year" === i) return;
                            if ("day" === i)
                                for (var p = d.year; p <= c.year; p++)
                                    for (var u = 0; u < 12; u++) r.xAxis.plotLines.push({
                                        dashStyle: "ShortDash",
                                        color: "#CCC",
                                        width: 1,
                                        value: Date.UTC(p, u, 1) + 3600 * l * 1e3
                                    });
                            else
                                for (var h = d.year; h <= c.year; h++) r.xAxis.plotLines.push({
                                    dashStyle: "ShortDash",
                                    color: "#CCC",
                                    width: 1,
                                    value: Date.UTC(h, 0, 1) + 3600 * l * 1e3
                                })
                        }
                    },
                    canDrawMarkPoint: function () {
                        var e = this.getChartType(),
                            t = !1;
                        if (e) {
                            var a = this.info;
                            t = ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C320", "C350", "C351", "C352", "C360"].indexOf(e) > -1 && 1 === a.x.length && (!a.compare_axis || 0 === a.compare_axis.length)
                        }
                        return t
                    },
                    translateMarkPoint: function () {
                        var e = this.info.field_comment;
                        if ($.isEmptyObject(e) || 0 === this.data.x.length || !this.canDrawMarkPoint()) return this.markPoints = [];
                        var t = [],
                            a = this.data.x[0].data,
                            i = this.info.yAxis.concat(this.info.yAxisOptional),
                            n = this.data.x[0].data_type;
                        return angular.forEach(e, function (e) {
                            for (var r = 0, o = i.length; r < o; r++) {
                                var s = e.xaxis_value;
                                "date" !== n && "sub_date" !== n || (s = Number(s));
                                var l = angular.indexOf(a, s),
                                    d = i[r].uniq_id + "";
                                if (i[r].fid === e.yaxis_id && d == e.yaxis_uniq_id && l > -1) {
                                    t.push(angular.extend(e, {
                                        seriesIndex: r,
                                        xDataIndex: l
                                    }));
                                    break
                                }
                            }
                        }), this.markPoints = t
                    },
                    destroy: function () {
                        if (!this.$elem) return !0;
                        this.chartInstance = null;
                        var t = this.$elem.data("chart-data"),
                            a = this.$elem.highcharts();
                        this.$elem.removeClass("bdp-chart-loaded bdp-chart-loading bdp-chart-error");
                        var i = t && t.info ? t.info.chart_type : "";
                        if ($(".global-tooltip").empty(), a && "function" == typeof a.destroy) this.$elem.off("mouseleave mouseenter"), i === r.Pie && "donut" === this.info.shape && this.$elem.find(".pie-center-txt").remove(), i === r.Gauge && this.$elem.find(".solidgauge-title").remove(), a.destroy(), this.$elem.find(".set-yaxis-sort, .zoom").remove();
                        else if (r.Table === i || r.KPICard === i || r.Custom == i) this.$elem.off("click"), this.$elem.html(""), this.chartTalbe && this.chartTalbe.destroy && this.chartTalbe.destroy();
                        else if ("C300 C330 C360".indexOf(i) > -1) {
                            var n = d3.selectAll(this.$elem.toArray());
                            n.selectAll("svg").remove(), n.selectAll("*").remove(), n.text("")
                        } else r.GIS === i ? this.gisMap && (this.gisMap.destroy(), delete this.gisMap) : r.WordCloud.indexOf(i) > -1 && ($(e).off("resize.wordcloud" + this.ct_id), this.$elem.off("mouseleave"), this.$elem.find("canvas").off("mousemove"), this.$elem.data("plugin_SVG3DTagCloud", void 0), this.$elem.html(""))
                    }
                }, t.Events.mixTo(a), t.Chart = a
            }(window, bdpChart),
            function (e, t) {
                function a(e, t) {
                    if (o && o.supportAlt() && void 0 !== Highcharts.hoverChartIndex) {
                        var a = Highcharts.charts[Highcharts.hoverChartIndex];
                        if (a && a.hoverPoint && (localStorage.setItem("BDP_useAltTooltip", 1), o.getChartType() == l.TreeMap ? a.tooltip.refresh(a.hoverPoint, e) : a.tooltip.refresh(a.hoverPoints, e)), "keydown" == t) {
                            var i = o,
                                n = {
                                    category: "user_interact",
                                    action: "chart_interact",
                                    opt_label: JSON.stringify({
                                        ct_id: i.ct_id,
                                        page: i.getCurrentPage(),
                                        hover_mode: i.info.hover_mode
                                    })
                                };
                            BDPLogger.log("alt_hover", n)
                        }
                    }
                }

                function i(a, i) {
                    var n = t.ChartType,
                        r = i.getChartType(),
                        o = i.data,
                        s = i.info,
                        l = i._getUnit(),
                        c = a.key || a.points[0].key,
                        p = l.unit_left || "",
                        u = "",
                        h = !1,
                        f = !0,
                        g = a.points || [a.point];
                    if ("C370" === r) {
                        var m = a.point.parent;
                        if (m) {
                            var _ = c,
                                v = a.series.nodeMap[m].name;
                            c = g.length > 1 ? v : v + " - " + _
                        } else title = c
                    }
                    if ("C320" === r && (0 === a.point.index && 0 === a.point.category, h = a.point.isSum, (!s.xAxis.length || s.xAxis.length && h) && (f = !1)), 1 === o.x.length && "date" === s.xAxis[0].data_type && "C370" !== r) {
                        var b = s.xAxis[0],
                            y = b.granularity || "day",
                            w = b.granularity_name || "",
                            C = b.month_start_day || 0;
                        "week" === y ? (w && (c += 864e5 * (b.week_start_day_of_week - 1)), C = b.week_start_day_of_week) : "hour" !== y && "minute" !== y && "second" !== y || (y = "g_" + y), title = d.checkGranularity(y, c, w, C), "week" === y && (title += "（" + Highcharts.dateFormat("%m/%d", new Date(c)) + "~" + Highcharts.dateFormat("%m/%d", new Date(c + 5184e5)) + "）")
                    } else if (1 === o.x.length && "sub_date" === o.x[0].data_type && "C370" !== r) {
                        var x = o.x[0].fid.split("_")[1];
                        title = d.subDateFormat(x, c)
                    } else {
                        var k = [n.Column, n.NStackColumn, n.PStackColumn, n.Bar, n.NStackBar, n.PStackBar, n.Line, n.Waterfall, n.TreeMap, n.Biax].indexOf(r) > -1;
                        2 === o.x.length && k && !h && a.x && a.x.parent ? title = a.x.parent.name + " - " + a.x.name : title = c
                    }
                    f && (u = 0 === o.x.length && 0 === c ? "" : '<p class="text-center tooltips-title">' + d.escapeHtml(title) + "</p>"), u += '<table class="tooltips-table">';
                    var D;
                    if ("C370" === r) {
                        var v = a.point.parent && a.series.nodeMap[a.point.parent],
                            S = a.color,
                            T = o.y[0] && $.trim(bdp.utils.encodeHTML(o.y[0].nick_name || o.y[0].name)) || "",
                            I = a.point.sum || a.point.series.nodeMap[""].val,
                            L = o.y[0] && o.y[0].formatter,
                            A = o.y[0] && o.y[0].aggregator,
                            E = function (e) {
                                return L && A ? d.dataLabelFormatter(L, e, A) : e
                            };
                        if (1 == g.length) {
                            var F = (T || ("en" == t.language ? "count" : "数值")) + "：",
                                M = "en" == t.language ? "rate of total" : "占总值";
                            if (u += '<tr><td style="text-align:right;color:' + a.color + '">' + F + '</td><td style="text-align: left; color:' + S + '">' + E(a.point.value) + '</td></tr><tr><td style="text-align: right;color:' + a.color + '">' + M + '：</td><td style="text-align: right; color:' + S + '">' + (a.point.value / I * 100).toFixed(2) + "% </td></tr>", v) {
                                var j = ("en" == t.language ? "rate of " : "占") + v.name;
                                u += '<tr><td style="text-align: right;color:' + a.color + '">' + j + '：</td><td style="text-align: right; color:' + S + '">' + (a.point.value / v.val * 100).toFixed(2) + "% </td></tr>"
                            }
                            a.point.drillId = a.point.id
                        } else {
                            if (v) {
                                var O = T + ("en" == t.language ? " Total" : "总值");
                                u += '<tr><td style="text-align:right;color:' + a.color + '">' + O + '：</td><td style="text-align: right; color:' + S + '">' + E(v.val) + '&nbsp;&nbsp;</td><td style="text-align: right; color:' + S + '">(' + (100 * v.val / I).toFixed(2) + "%)</td></tr>"
                            }
                            g.sort(function (e, t) {
                                return t.value - e.value
                            }), g.forEach(function (e) {
                                u += '<tr><td style="text-align:right;">' + $.trim(bdp.utils.encodeHTML(e.name + "：")) + '</td><td style="text-align: right;">' + E(e.value) + '&nbsp;&nbsp;</td><td style="text-align: right;">(' + (100 * e.value / I).toFixed(2) + "%)</td></tr>"
                            }), a.point.drillId = a.point.series.drillToByGroup(a.point)
                        }
                    } else if (["C271", "C272"].indexOf(r) > -1) {
                        var P, N, L = o.y[0].formatter,
                            B = o.y[0].nick_name || o.y[0].name;
                        "C271" === r ? (P = a.point.value, D = a.point.color || "#72AFD9") : "C272" === r && (P = a.point.z, D = a.point.color);
                        var z = "";
                        o.y[0].hasOwnProperty("unit_adv") && (N = o.y[0].unit_adv), z = "" != N ? N : p, u += '<tr><td style="text-align:right;color:' + D + '">' + $.trim(bdp.utils.encodeHTML(B)) + '</td><td style="text-align: left; color:' + D + '">： ' + d.dataLabelFormatter(L, P) + z + "</td></tr>"
                    } else {
                        if (["C211", "C241", "C351"].indexOf(r) > -1) {
                            var R, q = t.language || "zh",
                                H = "en" === q ? "Total" : "总计",
                                A = "",
                                L = "",
                                G = g[0].point.index,
                                W = [];
                            a.series.chart.series.forEach(function (e) {
                                e.visible && !/^Navigator/.test(e.name) && W.push(e.data[G])
                            }), R = W.reduce(function (e, t) {
                                return e + t.y
                            }, 0), R = d.dataLabelFormatter(o.y[0].formatter, R, o.y[0].aggregator), u += '<tr><td style="text-align: right; " class="total">' + H + '：</td><td style="text-align: left; " class="total">' + R + "</td></tr>"
                        }
                        var J = Math.floor($(e).height() / 30),
                            V = 0;
                        $.each(g, function (e) {
                            if (!(V > J - 1 || this.isNull)) {
                                V++;
                                var a, i = this,
                                    n = i.series || i,
                                    c = i.color || i.series.color,
                                    f = n._i;
                                if ("C320" === r) {
                                    if (a = i.point.nick_name || i.point.name, h) {
                                        var m = t.language || "zh";
                                        a = s.waterfall_setting ? s.waterfall_setting.sum_name : "en" === m ? "Sum" : "累计值"
                                    }
                                } else a = n.options && n.options.nick_name || n.options.name;
                                a += "：";
                                var _, v = i.series.options.formatter,
                                    b = i.series.options.aggregator,
                                    y = i.y,
                                    w = "",
                                    C = "";
                                if (n.options.hasOwnProperty("unit_adv") && (C = n.options.unit_adv), ["C212", "C242", "C352"].indexOf(r) > -1) {
                                    var x = "";
                                    x = "" != C ? C : p, y = d.dataLabelFormatter(v, y, b), u += '<tr><td style="text-align:right;color:' + c + '">' + $.trim(bdp.utils.encodeHTML(a)) + '</td><td style="text-align: left; color:' + c + '">' + y + x + "（" + i.percentage.toFixed(1) + "%）</td></tr>"
                                } else {
                                    var k = o.y_optional ? o.y.concat(o.y_optional) : o.y,
                                        S = k[f] || k[e];
                                    if (["C211", "C241", "C351"].indexOf(r) > -1 && (S = k[k.length - 1 - (f || e)]), "C243" === r) y = d.dataLabelFormatter(S.formatter, Math.abs(y), b);
                                    else {
                                        var T = v || S && S.formatter;
                                        y = d.timePredicted.checkType(this.series.options, "enable", "area") ? d.dataLabelFormatter(T, this.low || this.point.low, b) + " ~ " + d.dataLabelFormatter(T, this.high || this.point.high, b) : d.dataLabelFormatter(T, y, b)
                                    }
                                    if ("C250" === r) {
                                        var I = s.type_optional;
                                        n.options.yAxis && (p = s.zero_aligned ? l.unit_left || "" : l.unit_right || "");
                                        var L = I[n.options.yAxis];
                                        "column" === n.options.type && "C212" === L && (w = "（" + i.percentage.toFixed(1) + "%）")
                                    }
                                    "C290" === r && (p = ""), _ = "" != C ? y + C + w : y + p + w, D = i.color || n.color, d.timePredicted.checkType(this.series.options, "enable", "area") && (D = g[e - 1].color), c = D, u += '<tr><td style="text-align:right;color:' + D + '">' + $.trim(bdp.utils.encodeHTML(a)) + '</td><td style="text-align: left; color:' + c + '">' + _ + "</td></tr>"
                                }
                            }
                        })
                    }
                    u += "</table>";
                    var U = g.reduce(function (e, t) {
                        return e + t.isNull ? 0 : 1
                    }, 0);
                    if (U > J) {
                        var Y = "zh" == t.language ? "以及其他%d项" : "and other %d items";
                        u += '<div class="exceed-hint">' + Y.replace("%d", U - J) + "</div>"
                    }
                    return '<div class="tooltip-content">' + u + "</div>"
                }

                function n(t, a, n, o) {
                    var s = (a.getChartType(), a.data, a.info, t.altKey && !t.ctrlKey && !t.shiftKey && !t.metaKey),
                        l = (a._getUnit(), $(".global-tooltip")),
                        d = i(o, a),
                        c = "";
                    if (!s) {
                        var p = r(o, a);
                        p && (c = '<div class="altClass"><div><p class="altText nowrap">' + p + "</p></div></div>")
                    }
                    var u = d + c;
                    if (l.length) l.html(u);
                    else {
                        var h = '<div class="global-tooltip">' + u + "</div>";
                        $("body").append(h), l = $(".global-tooltip")
                    }
                    var f = $(e).width(),
                        g = $(e).height(),
                        m = l.width(),
                        _ = l.height();
                    l.css({
                        top: Math.min(t.clientY, g - _ - 20),
                        left: Math.min(t.clientX + 20, f - m - 20)
                    }), l.hasClass("chart-theme-" + a.theme) || (l.removeClass("chart-theme-dark chart-theme-default").addClass("chart-theme-" + a.theme), l.removeClass("display-theme-dark display-theme-light").addClass("display-theme-" + ("default" == a.theme ? "light" : "dark"))), l.hasClass("display-device-" + a.displayDevice) || l.removeClass("display-device-pc display-device-projector display-device-tv").addClass("display-device-" + a.displayDevice), l.show()
                }

                function r(e, a) {
                    var i = localStorage.getItem("useAltTooltipCount");
                    if (localStorage.getItem("BDP_useAltTooltip") || i && "single" != a.info.hover_mode) return !1;
                    if (a.getChartType() == l.TreeMap) {
                        if (e.point.parent == e.series.rootNode) return !1
                    } else {
                        for (var n = 0, r = a.chartInstance.series, o = 0; o < r.length && !(r[o].visible && ++n > 1); o++);
                        if (n < 2) return !1
                    }
                    return '<span style="font-weight:bold">Alt</span>' + ("zh" == t.language ? "键切换多点/单点" : " to switch view-mode")
                }
                var o, s = t.Chart,
                    l = t.ChartType,
                    d = t.helper,
                    c = d.mobileHelper;
                $(e).on("keydown.alt-tooltip", function (t) {
                    if (!e._interectingSplitChart) {
                        t.altKey && !t.ctrlKey && !t.shiftKey && !t.metaKey && a(t, "keydown")
                    }
                }), $(e).on("keyup.alt-tooltip", function (t) {
                    if (!e._interectingSplitChart) {
                        var i;
                        e.event ? i = t.keyCode : t.which && (i = t.which), "18" == i && a(t)
                    }
                }), s.prototype.supportAlt = function () {
                    var e = [l.Line, l.Column, l.NStackColumn, l.PStackColumn, l.Area, l.NStackArea, l.PStackArea, l.Biax, l.ComparisonBar, l.Bar, l.NStackBar, l.PStackBar, l.TreeMap];
                    this.info;
                    return e.indexOf(this.getChartType()) > -1 && !this.isSplitChart() && !this.isMobileMode
                }, s.prototype.hideHoverTooltip = function () {
                    var e = this;
                    e.chartInstance && e.chartInstance.tooltip && e.chartInstance.tooltip.hide(), $(".global-tooltip").hide()
                }, s.prototype._setAltOption = function () {
                    var e = this;
                    e.supportAlt() && $.extend(!0, e.options.plotOptions, {
                        series: {
                            stickyTracking: !0,
                            events: {
                                mouseOut: function (t) {
                                    o = null, e.hideHoverTooltip()
                                },
                                mouseOver: function (t) {
                                    o = e, this.chart.getSelectedPoints().length || $(".global-tooltip").show()
                                }
                            }
                        }
                    })
                }, s.prototype._generateTooltipFormatter = function () {
                    var e = this;
                    return e.supportAlt() ? (e.info.hover_mode || (e.getChartType() == l.TreeMap ? e.info.hover_mode = "single" : e.info.hover_mode = "multiple"), function (t, a) {
                        if (!a || $(".selected-tooltip").length > 0) return !1;
                        var i = a.altKey && !a.ctrlKey && !a.shiftKey && !a.metaKey,
                            r = e.info.hover_mode,
                            o = "single" == r && !i || "single" !== r && i,
                            s = t.chart,
                            c = (s.series, s.hoverPoint);
                        s.hoverPoint.index;
                        if ((isNaN(a.chartX) || isNaN(a.chartY)) && (a.chartX = s.pointer.lastPos.x, a.chartY = s.pointer.lastPos.y), o) {
                            if (s.hoverPoints) {
                                e.getChartType() !== l.TreeMap && (c = d.findNearestPoint(e, a));
                                var p = [];
                                e.isOpenTimePredicted && d.timePredicted.checkType(c.series.options, "enable", "line") && c.series.linkedSeries.forEach(function (e) {
                                    p.push(e.index)
                                });
                                for (var u = s.hoverPoints.length - 1; u >= 0; u--) {
                                    var h = s.hoverPoints[u];
                                    h !== c && p.indexOf(h.series.index) < 0 && (h.setState(), this.points && this.points.splice(u, 1))
                                }
                            }
                        } else {
                            var f = [];
                            if (e.getChartType() == l.TreeMap) {
                                if (s.hoverPoints && s.hoverPoints.forEach(function (e) {
                                        e !== c && e.setState()
                                    }), c.node.parent == c.series.rootNode) o = !0, f.push(c);
                                else {
                                    var g = c.parent;
                                    if (g) {
                                        var m = this.series.nodeMap[g];
                                        if (m && m.children.length) {
                                            var _ = this.series.points;
                                            m.children.forEach(function (e) {
                                                var t = _[e.i];
                                                t !== c && t.setState("hover"), f.push(t)
                                            })
                                        }
                                    }
                                }
                                s.hoverPoints = this.points = f
                            }
                        }
                        return this.point = this.point || c, this.points = this.points || [this.point], this.series = c.series, n(a, e, t, this), !1
                    }) : function () {
                        if ($(".selected-tooltip").length > 0) return !1;
                        var t = this;
                        return t.point || $.extend(!0, t, this.points[0]), e.isMobileMode ? (e.selectedPoint = t.points ? t.points[0].point : t.point, c.tooltipFormatter(t, e.getChartType(), e.data, e.info, e._getUnit())) : i(t, e)
                    }
                }
            }(window, bdpChart),
            function (e, t) {
                var a = t.Chart,
                    i = t.ChartType;
                a.prototype.canSetAxisExtend = function () {
                    var e = this.getChartType();
                    return ["C210", "C211", "C212", "C220", "C240", "C241", "C242", "C243", "C250", "C280", "C290", "C320", "C350", "C351", "C352"].indexOf(e) > -1
                }, a.prototype.getLabelMaxMinForScreen = function (e, a, n) {
                    var r = e.getChartType(),
                        o = e.data,
                        s = e.info,
                        l = e,
                        d = s,
                        c = t.helper,
                        p = r === i.ComparisonBar;
                    n = n || [], a = "right" === a ? "_" + a : a;
                    var u, h, f = a ? "y_optional" : "y",
                        g = c.getPositiveOrNegative(o, f, n),
                        m = 0,
                        _ = 0,
                        v = [i.PStackColumn, i.PStackBar, i.PStackArea].indexOf(r) > -1,
                        b = [i.NStackColumn, i.NStackBar, i.NStackArea].indexOf(r) > -1,
                        y = r === i.Scatter;
                    if (v) "mix" === g ? (m = 100, _ = -100) : "negative" === g ? (m = 0, _ = -100) : "positive" === g && (m = 100, _ = 0);
                    else if (y) {
                        if (o.y[1] && o.y[1].data.length) {
                            var w = Math.max.apply(Math, o.y[1].data),
                                C = Math.min.apply(Math, o.y[1].data);
                            w * C < 0 ? (s.yaxis_max_disabled ? (u = Math.max.apply(Math, o.y[1].data), m = c.formatNumber(w)) : (u = s.yaxis_max, m = u), s.yaxis_min_disabled ? (h = Math.min.apply(Math, o.y[1].data), _ = c.formatNumber(C)) : (h = s.yaxis_min, _ = h)) : (s.yaxis_max_disabled ? (u = Math.max.apply(Math, o.y[1].data), m = c.formatNumber(w), m = Math.max(0, m)) : (u = s.yaxis_max, m = u), s.yaxis_min_disabled ? (h = Math.min.apply(Math, o.y[1].data), _ = c.formatNumber(C), _ = Math.min(0, _)) : (h = s.yaxis_min, _ = h))
                        }
                    } else if (r === i.Waterfall && (s.yaxis_max_disabled = !0, s.yaxis_min_disabled = !0), "mix" !== g || p)
                        if (p) {
                            var x = c.getEdgeValueFromMultiArray(o, "y", "max", r, n),
                                k = c.getEdgeValueFromMultiArray(o, "y", "min"),
                                D = .05 * (x - k),
                                S = s.yaxis_min_disabled,
                                T = s.yaxis_max_disabled,
                                I = s.yaxis_max <= 0 ? x : s.yaxis_max,
                                L = s.yaxis_min < 0 ? 0 : s.yaxis_min;
                            "_right" !== a ? (S ? (u = 0, m = c.formatNumber(u)) : (u = -L, m = -L), T ? (h = -x, _ = c.formatNumber(h)) : (h = -I, _ = -I), l.info.yaxis_auto_zoom && (u = -k, m = Math.min(0, -k + D), _ = -x - D)) : (S ? (h = 0, _ = c.formatNumber(h)) : (h = L, _ = L), T ? (u = x, m = c.formatNumber(u)) : (u = I, m = I), l.info.yaxis_auto_zoom && (h = k, _ = Math.max(0, k - D), m = x + D))
                        } else {
                            if ("positive" == g ? (h = 0, u = l._getYAxisLabelEdgeValue(r, f, "max", n), m = c.formatNumber(u)) : "negative" == g && (u = 0, h = l._getYAxisLabelEdgeValue(r, f, "min", n), _ = c.formatNumber(h)), !b && "y" === f && l.info.yaxis_auto_zoom || "y_optional" === f && l.info.yaxis_auto_zoom_right) {
                                u = c.getEdgeValueFromMultiArray(l.data, f, "max", r, n), h = c.getEdgeValueFromMultiArray(l.data, f, "min", r, n);
                                var D = .05 * (u - h);
                                "positive" == g ? (m = u + D, _ = Math.max(0, h - D), m === _ && (m *= 1.05, _ *= .95)) : "negative" == g && (m = Math.min(0, u + D), _ = h - D, m === _ && (m *= .95, _ *= 1.05))
                            }!d["yaxis_max_disabled" + a] && d["yaxis_max" + a] && (m = Number(d["yaxis_max" + a] || s["yaxis_max" + a])), !d["yaxis_min_disabled" + a] && d["yaxis_min" + a] && (_ = Number(d["yaxis_min" + a] || s["yaxis_min" + a]))
                        }
                    else {
                        var $ = a ? s.yaxis_max_disabled_right : s.yaxis_max_disabled,
                            A = a ? s.yaxis_min_disabled_right : s.yaxis_min_disabled,
                            E = a ? s.yaxis_max_right : s.yaxis_max,
                            F = a ? s.yaxis_min_right : s.yaxis_min;
                        $ ? (u = l._getYAxisLabelEdgeValue(r, f, "max", n), m = c.formatNumber(u)) : (u = E, m = u), A ? (h = l._getYAxisLabelEdgeValue(r, f, "min", n), _ = c.formatNumber(h)) : (h = F, _ = h)
                    }
                    return {
                        max: m,
                        min: _,
                        origin_max: u,
                        origin_min: h
                    }
                }, a.prototype._setGridPlotLine = function () {
                    function a(e) {
                        if ("fullscreen" == i.mode) {
                            var t = [];
                            e.plotLines.map(function (e) {
                                e.className && "highcharts-grid-plot-line" == e.className || t.push(e)
                            }), e.plotLines = t
                        } else "C243" == o && i.options.yAxis.map(function (e) {
                            e.gridLineWidth = 0
                        })
                    }
                    var i = this,
                        n = i.info,
                        r = i.data,
                        o = this.getChartType(),
                        s = n.style;
                    if (!t.configurable.canEditGridPlotLine(o)) return !1;
                    if (!s || !s.gridPlotLine) return !1;
                    var l = 0,
                        d = 0,
                        c = {},
                        p = {},
                        u = i.options.xAxis && "datetime" == i.options.xAxis.type,
                        h = this.getLabelMaxMinForScreen,
                        f = e.location.href.indexOf("data_screen") >= 0,
                        g = e.location.href.indexOf("adv_dash") >= 0;
                    (f || g) && i.options.yAxis.map(function (e) {
                        e.gridLineWidth = 0
                    });
                    var m = s.gridPlotLine;
                    if (i.options.xAxis && m.xAxis)
                        if (m.xAxis.enabled) {
                            if (["C280"].indexOf(o) < 0 && !u) {
                                l = m.xAxis.splitNum, p = r.x.length > 0 ? r.x[0].data : 0, d = 1 * p.length / l;
                                var _ = 1,
                                    v = l;
                                if (["C240", "C241", "C242", "C243"].indexOf(o) >= 0 && (_ = 0, v = l - 1), d)
                                    for (var b = _; b <= v; b++) i.options.xAxis.plotLines = i.options.xAxis.plotLines || [], i.options.xAxis.plotLines.push({
                                        className: "highcharts-grid-plot-line",
                                        color: s.gridPlotLine.xAxis.color,
                                        dashStyle: s.gridPlotLine.xAxis.dashStyle,
                                        value: 0 + d * b - .5,
                                        width: s.gridPlotLine.xAxis.width,
                                        zIndex: 0
                                    })
                            }
                        } else "C280" != o && (i.options.xAxis.plotLines = []);
                    i.options.yAxis && m.yAxis && m.yAxis.enabled && ["C280", "C320"].indexOf(o) < 0 && (l = m.yAxis.splitNum, i.options.yAxis.map(function (e) {
                        if (e.tickPositions) c = e.tickPositions, c.max = c[c.length - 1], c.min = c[0];
                        else if (e.tickPositioner) c = e.tickPositioner(), c.max = c[c.length - 1], c.min = c[0];
                        else {
                            var t = h(i, "y");
                            c.max = t.max, c.min = t.min
                        }
                        a(e), d = Math.abs(c.max - c.min) / l;
                        for (var n = 1; n <= l; n++) e.plotLines = e.plotLines || [], e.plotLines.push({
                            className: "highcharts-grid-plot-line",
                            color: m.yAxis.color,
                            dashStyle: m.yAxis.dashStyle,
                            value: c.min + d * n,
                            width: m.yAxis.width,
                            zIndex: 0
                        })
                    }))
                }, a.prototype._setLegendExtend = function () {
                    var e = this,
                        a = e.info,
                        i = a.style,
                        n = this.getChartType(),
                        r = !(!this.dash_setting || !this.dash_setting.show_legend);
                    if (!t.configurable.canEditChartLegend(n, {
                            info: a
                        })) return $.extend(!0, i, {
                        legend: {
                            enabled: !1
                        }
                    }), !1;
                    if (!i || !i.legend) return $.extend(!0, i, {
                        legend: {
                            enabled: !1
                        }
                    }), !1;
                    var o = angular.copy(i.legend);
                    if (this.isDashboardMode && (o.enabled = !!r && o.enabled), o.enabled)
                        if (["top", "bottom"].indexOf(o.pos) >= 0) {
                            var s = parseInt(o.itemStyle.fontSize);
                            minLineHeight = s <= 14 ? 18 : s, s <= 14 ? (o.itemStyle.paddingTop = "1px", o.maxHeight = 2 * minLineHeight + 28) : o.maxHeight = minLineHeight + 28, "bottom" == o.pos && (o.y = 0)
                        } else e.options.legend.maxHeight = void 0;
                    var l = o.pos;
                    delete o.pos, l ? $.extend(!0, e.options.legend, o) : $.extend(!0, e.options.legend, {
                        itemStyle: o.itemStyle
                    })
                }, a.prototype._setAxisLineStyle = function (e, t) {
                    e.lineColor = t.lineColor ? t.lineColor : e.lineColor, e.lineWidth = t.lineWidth ? t.lineWidth : e.lineWidth, e.lineDashStyle = t.lineStyle ? t.lineStyle : e.lineDashStyle, t.enabled || (e.lineWidth = 0)
                }, a.prototype._setAxisLabelsStyle = function (e, t) {
                    e.labels && t.labels && (e.labels.style ? $.extend(e.labels.style, t.labels) : e.labels.style = t.labels, e.labels.enabled = t.labels.enabled)
                }, a.prototype._setAxisTitleStyle = function (e, t) {
                    if (e.title && t.title) {
                        var a = $(".J_chart_box");
                        t.title.enabled ? (e.title.style ? $.extend(e.title.style, t.title) : e.title.style = t.title, delete e.title.enabled, a.removeClass("hide-axis-title-style")) : (e.title.text = null, a.addClass("hide-axis-title-style"))
                    }
                }, a.prototype._setXAxisExtendStyle = function () {
                    var e = this,
                        t = e.info,
                        a = this.getChartType(),
                        i = t.style.axis.xAxis;
                    this._setAxisLineStyle(e.options.xAxis, i), this._setAxisLabelsStyle(e.options.xAxis, i), "C280" == a && this._setAxisTitleStyle(e.options.xAxis, i), $.cookie("yaxis_min") < 0 || $.cookie("yaxis_min_right") < 0 || e.options.yAxis.map(function (e) {
                        e.plotLines && e.plotLines.length > 0 && e.plotLines.map(function (e) {
                            e.defaultZero && (e.color = i.lineColor ? i.lineColor : e.color, e.width = i.lineWidth ? i.lineWidth : e.width, e.dashStyle = i.lineStyle ? i.lineStyle : e.dashStyle, i.enabled || (e.width = 0))
                        })
                    })
                }, a.prototype._setYAxisExtendStyle = function () {
                    for (var e = this, t = e.info, a = t.style.axis, i = 0, n = e.options.yAxis.length; i < n; i++) {
                        var r = e.options.yAxis[i];
                        r.opposite ? a.yOptionalAxis && (this._setAxisLineStyle(r, a.yOptionalAxis), this._setAxisLabelsStyle(r, a.yOptionalAxis), this._setAxisTitleStyle(r, a.yOptionalAxis)) : a.yAxis && (this._setAxisLineStyle(r, a.yAxis), this._setAxisLabelsStyle(r, a.yAxis), this._setAxisTitleStyle(r, a.yAxis))
                    }
                }, a.prototype._setAxisExtendStyle = function () {
                    var e = this,
                        a = e.info,
                        i = a.style,
                        n = this.getChartType();
                    if (!this.canSetAxisExtend()) return !1;
                    if (!i || !i.axis) return !1;
                    var r = i.axis;
                    if (t.helper.transferAxisOldStyle(r), r.xAxis && this._setXAxisExtendStyle(), (r.yAxis || r.yOptionalAxis) && (this._setYAxisExtendStyle(), "C243" == n)) {
                        var o = e.options.yAxis[1];
                        o.labels.y = 20, o.offset = 0
                    }
                }, a.prototype._setChartTitleStyle = function () {
                    var e = this,
                        a = e.info,
                        i = a.style,
                        n = $("#" + this.ct_id).find(".J_chart_box"),
                        r = this.getChartType();
                    if (!t.configurable.canEditChartSummary(r, {
                            info: a
                        })) return !1;
                    if (bdp.bdpPageStatus.isUnderChartEdit() && (n = $(".J_chart_box")), "fullscreen" == e.mode && (n = $(".fullscreen-chart")), !a.show_total) return n.removeClass("custom-title-style"), n.removeClass("custom-big-title-style"), !1;
                    if (!i || !i.title) return n.removeClass("custom-title-style"), n.removeClass("custom-bigtitle-style"), !1;
                    if (a.show_total) {
                        var o = i.title.style;
                        o && n.addClass("custom-title-style"), $.extend(!0, e.options.title, {
                            style: o
                        });
                        var s = 0,
                            l = parseInt(o.fontSize);
                        l <= 60 ? (48 == l ? s = -9 : (s = -12, bdp.bdpPageStatus.isUnderAdvChartEdit() && (s += 3)), n.removeClass("custom-big-title-style")) : n.addClass("custom-big-title-style"), e.options.title.y = parseInt(o.fontSize) + s
                    }
                }, a.prototype._setChartLabelStyle = function () {
                    var e = this,
                        a = e.info,
                        i = a.style,
                        n = this.getChartType();
                    if (!t.configurable.canEditChartDataLabels(n, {
                            info: a
                        })) return !1;
                    if (!a.show_datalabels) return !1;
                    if (!i || !i.labels) return !1;
                    if ("C230" === n) return !1;
                    var r = i.labels.style,
                        o = e.options.plotOptions;
                    for (var s in o) o[s].dataLabels && (o[s].dataLabels.color = r.color, o[s].dataLabels.style.fontSize = r.fontSize, o[s].dataLabels.style.fontFamily = r.fontFamily)
                }
            }(window, bdpChart),
            function (e, t) {
                function a(e) {
                    h && h.supportSelect() && (e ? h.removeSelectionMask() : h.addSelectionMask())
                }

                function i(e) {
                    var t = e;
                    $(".selection-tooltip-overlay").length || $('<div class="selection-tooltip-overlay"></div>').appendTo($("body")).on("mousedown", function (e) {
                        var a = $(".selected-tooltip"),
                            i = a.find(".action-drilldown");
                        if (i.hasClass("active")) i.removeClass("active"), i.find(".dropdown-list").remove();
                        else if (e.shiftKey) {
                            var n = t.chartInstance.series.map(function (e) {
                                var t = e.options.states;
                                return e.options.states = {
                                    hover: {
                                        enabled: !1
                                    }
                                }, t
                            });
                            t.chartInstance.pointer.onContainerMouseMove(e.originalEvent), t.chartInstance.series.forEach(function (e, t) {
                                e.options.states = n[t]
                            }), t.chartInstance.pointer.onContainerMouseDown(e.originalEvent)
                        } else t.cancelSelection(), t.chartInstance.lastSelectedPoints = []
                    }).on("mousemove", function (e) {
                        "mousedown" == t.chartInstance.mouseIsDown && t.chartInstance.pointer.onContainerMouseMove(e.originalEvent)
                    }).on("click", function (e) {
                        if (!$(".selected-tooltip").find(".action-drilldown").hasClass("active") && e.shiftKey) {
                            var a;
                            if (e = t.chartInstance.pointer.normalize(e), t.chartInstance.hoverPoints) a = u.findNearestPoint(t, e);
                            else if (t.getChartType() == p.Scatter)
                                for (var i = t.chartInstance.series[0].points, n = i.length - 1; n >= 0; n--) {
                                    var r = i[n],
                                        o = r.graphic.radius || r.shapeArgs && r.shapeArgs.r;
                                    if (Math.abs(e.chartX - r.series.chart.plotLeft - r.plotX) < o && Math.abs(e.chartY - r.series.chart.plotTop - r.plotY) < o) {
                                        a = r;
                                        break
                                    }
                                }
                            a && t.selectPoint(a)
                        } else $(this).remove()
                    })
                }

                function n() {
                    $(".selection-tooltip-overlay").remove()
                }

                function r(a, i) {
                    var n = i.getChartType(),
                        r = (i.data, i.info),
                        s = (i._getUnit(), $(".selected-tooltip")),
                        l = a.target.getSelectedPoints();
                    if (!l.length) return s.remove();
                    var d, c = l[0],
                        h = l.length,
                        f = n == t.ChartType.ComparisonBar;
                    t.language = t.language || "zh", c && "object" == typeof c.category ? d = c.category.parent ? c.category.parent.name + "-" + (c.category.userOptions || c.category.name) : c.category.userOptions || c.category.name : c && (d = i._formatXAxisLabel(c.name || c.category, 0, !0));
                    var g;
                    if (1 == r.y.length) {
                        var m = r.y[0].formatter,
                            _ = r.y[0].aggregator;
                        g = function (e) {
                            return u.dataLabelFormatter(m, e, _)
                        }
                    } else g = function (e) {
                        return Highcharts.numberFormat(e, 2)
                    };
                    var v = i.ct_id + "," + n + "," + h;
                    BDPLogger.log("feStatistics", {
                        category: "user_interact",
                        action: "selectTooltip",
                        opt_label: v,
                        opt_value: 1
                    });
                    var b = "zh" == t.language ? {
                        sum: "总计",
                        avg: "平均值",
                        selected: "选择",
                        items: "项"
                    } : {
                        sum: "Sum",
                        avg: "Avg",
                        selected: "selected",
                        items: "items"
                    };
                    if (n !== p.Scatter)
                        if (1 == h) {
                            0 == i.info.x.length && i.info.compare_axis.length && (d = i.data.y[c.series.index].compare_names.slice(1).join("_"));
                            var y = c.color || c.series.color,
                                w = '<p class="tooltips-title">' + b.selected + ": " + d + '</p><table class="tooltips-table"><tr><td style="text-align:left; color:' + y + '">' + c.series.name + '：</td><td style="text-align:left; color:' + y + '">' + c.y + "</td></tr></table>"
                        } else {
                            var C = 0;
                            l.forEach(function (e, t) {
                                C += f && e.negative ? -e.y : e.y
                            });
                            var x = "";
                            if (a.target.xAxis[0] && a.target.xAxis[0].isDatetimeAxis) {
                                var k = l.map(function (e) {
                                    return e.x
                                });
                                k.sort(function (e, t) {
                                    return e - t
                                });
                                var D = i._formatTimeWithField(k[0], i.data.x[0], "abb"),
                                    S = i._formatTimeWithField(k[k.length - 1], i.data.x[0], "abb");
                                to = "zh" == t.language ? "至" : "to", x = "<span class='tooltip-text-light need-split-line'>" + D + "</span><span class='ml4 mr4'>" + to + "</span><span class='tooltip-text-light'>" + S + "</span>"
                            }
                            var w = '<div class="tooltips-hd"><div class="row"><span class="tooltip-text">' + b.selected + '<strong class="mr4">' + h + "</strong>" + b.items + "</span>" + x + '</div><div class="row"><span class="tooltip-text">' + b.sum + '<strong class="tooltip-num">' + g(C) + '</strong></span><span class="tooltip-text">' + b.avg + '<strong class="tooltip-num">' + g(C / h) + "</strong></span></div></div>"
                        }
                    else {
                        var T = r.y[0].nick_name || r.y[0].name,
                            I = r.y[1].nick_name || r.y[1].name;
                        if (1 == h) var w = '<p class="tooltips-title">' + b.selected + ": " + d + '</p><table class="tooltips-table"><tr><td style="text-align:left; color:' + c.color + '">' + T + '：</td><td style="text-align:left; color:' + c.color + '">' + c.x + '</td></tr><tr><td style="text-align:left; color:' + c.color + '">' + I + '：</td><td style="text-align:left; color:' + c.color + '">' + c.y + "</td></tr></table>";
                        else {
                            var L = 0,
                                A = 0;
                            l.forEach(function (e, t) {
                                L += e.x, A += e.y
                            });
                            var w = '<p class="tooltips-title"><span class="tooltip-text">' + b.selected + "<strong>" + h + "</strong>" + b.items + '</span></p><table class="tooltips-table"><tr><td class="tooltip-text tooltip-text-light">' + T + '</td><td class="tooltip-text need-split-line">' + b.sum + '<strong class="tooltip-num">' + g(L) + '</strong></td><td class="tooltip-text">' + b.avg + '<strong class="tooltip-num">' + g(L / h) + '</strong></td></tr><tr><td class="tooltip-text tooltip-text-light">' + I + '</td><td class="tooltip-text need-split-line">' + b.sum + '<strong class="tooltip-num">' + g(A) + '</strong></td><td class="tooltip-text">' + b.avg + '<strong class="tooltip-num">' + g(A / h) + "</strong></td></tr></table>"
                        }
                    }
                    w += '<div class="selected-data-table-wrap"></div>';
                    var E = s.length > 0;
                    if (!E) {
                        s = $('<div class="selected-tooltip"><div class="tooltip-content"></div><div class="toolbar"></div></div>');
                        var F = i.supportFreeDrilldown() ? ["focus", "exclude", "drilldown", "viewdata"] : ["focus", "exclude", "viewdata"],
                            M = "zh" == t.language ? {
                                focus: "聚焦",
                                exclude: "排除",
                                drilldown: "下钻"
                            } : {
                                focus: "Focus",
                                exclude: "Exclude",
                                drilldown: "Drill-down"
                            };
                        F.forEach(function (e) {
                            s.find(".toolbar").append('<span class="action action-%action%" data-action="%action%"><i class="bdp-icon"></i>%action-text%</span>'.replace(/%action%/g, e).replace(/%action-text%/g, M[e] || ""))
                        }), s.on("click", ".action:not(.disabled)", function () {
                            var e = $(this).data("action");
                            switch (e) {
                                case "focus":
                                case "exclude":
                                    $(".selection-tooltip-overlay").remove(), i.enterSelectionView(e), s.remove();
                                    break;
                                case "drilldown":
                                    $(this).find(".dropdown-list").length ? ($(this).removeClass("active"),
                                        $(this).find(".dropdown-list").remove()) : ($(this).addClass("active"), i.showAvailableDrillFields(), $(this).siblings(".action-viewdata").hasClass("active") && ($(this).siblings(".action-viewdata").removeClass("active"), $(".selected-tooltip .selected-data-table-wrap").removeClass("show").animate({
                                        height: 0
                                    }, 200, "swing")));
                                    break;
                                case "viewdata":
                                    $(this).toggleClass("active"), $(this).hasClass("active") ? (i.showSelectedPointsData(), $(this).siblings(".action-drilldown").hasClass("active") && ($(this).siblings(".action-drilldown").removeClass("active"), $(this).siblings(".action-drilldown").find(".dropdown-list").remove())) : $(".selected-tooltip .selected-data-table-wrap").removeClass("show").animate({
                                        height: 0
                                    }, 200, "swing")
                            }
                        }), $("body").append(s), s.draggable({
                            handle: ".drag-handle",
                            drag: function (e, t) {
                                s.css("bottom", "auto")
                            },
                            stop: function (t, a) {
                                var n = $(e).height() - s.offset().top - s.height();
                                s.css({
                                    bottom: n,
                                    top: "auto"
                                });
                                var r = {
                                    category: "user_interact",
                                    action: "chart_interact",
                                    opt_label: JSON.stringify({
                                        ct_id: i.ct_id,
                                        page: i.getCurrentPage(),
                                        view_data: $(".selected-tooltip").find(".selected-data-table").length > 0
                                    })
                                };
                                BDPLogger.log("move_selection_tooltip", r)
                            }
                        })
                    }
                    if (i.supportFreeDrilldown())
                        if (s.addClass("drilldown-enabled"), i.isOpenTimePredicted && u.timePredicted.hasPredictPonier(l)) {
                            var j = "zh" == t.language ? "时序预测结果不支持自由下钻" : "Free Drill-down unavailable if use the prediction";
                            s.find(".action-drilldown").attr("title", j).addClass("disabled")
                        } else s.find(".action-drilldown").attr("title", "").removeClass("disabled");
                    if (s.find(".tooltip-content").html('<div class="drag-handle"></div>' + w), s.find(".action-viewdata").hasClass("active") && i.showSelectedPointsData(!0), !E) {
                        var O, P, N = $(e).width(),
                            B = $(e).height(),
                            z = s.outerWidth(),
                            R = s.outerHeight(),
                            q = a.originalEvent.chartX,
                            H = a.originalEvent.chartY,
                            G = a.target.mouseDownX,
                            W = a.target.mouseDownY;
                        "click" == a.originalEvent.type ? (O = a.originalEvent.clientX + 10, P = B - a.originalEvent.clientY) : (O = q > G ? Math.min(a.selectionBounding.right, N - 30 - z) : Math.max(a.selectionBounding.left - z, 30), P = H > W ? B - a.selectionBounding.bottom : B - a.selectionBounding.top - R), s.css({
                            top: "auto",
                            left: O,
                            bottom: P
                        }), o(s, i)
                    }
                }

                function o(e, t) {
                    e.hasClass("chart-theme-" + t.theme) || (e.removeClass("chart-theme-dark chart-theme-default").addClass("chart-theme-" + t.theme), e.removeClass("display-theme-dark display-theme-light").addClass("display-theme-" + ("default" == t.theme ? "light" : "dark"))), e.hasClass("display-device-" + t.displayDevice) || e.removeClass("display-device-pc display-device-projector display-device-tv").addClass("display-device-" + t.displayDevice)
                }

                function s(e) {
                    var t = 0;
                    return e && e.series.forEach(function (e) {
                        e.visible && !/^Navigator/.test(e.name) && (t += e.points.reduce(function (e, t) {
                            return e + (t.isNull ? 0 : 1)
                        }, 0))
                    }), t
                }

                function l(t) {
                    function a() {
                        n.find(".drill-crumbs").remove(), n.find(".drill-crumbs-wrap").append(o)
                    }
                    var i = t.$elem,
                        n = i.parent(),
                        r = t.optional.free_drill_opt;
                    "fullscreen" === t.mode && (n = $(".fullscreen-modal"));
                    var o = n.find(".drill-crumbs"),
                        s = function (e, t) {
                            var a = e[0];
                            if (a instanceof Array) {
                                if (!a.length) return "全部";
                                var i = "";
                                a.forEach(function (e, a) {
                                    a > 0 && (i += "-"), i += d(e, t[a])
                                }), a = i
                            } else a = d(a, t);
                            return a.length > 60 && (a = a.slice(0, 60) + "..."), bdp.utils.encodeHTML("" + a) + (e.length > 1 ? "(等" + e.length + "项)" : "")
                        },
                        l = function (e) {
                            var t = r.filters[e - 1],
                                a = "";
                            t.values.forEach(function (e) {
                                var i = e.map(function (e, a) {
                                    return d(e, t.fields[a])
                                }).join("-");
                                a += '<div class="freedrill-val-item">' + i + "</div>"
                            });
                            return t.values.length > 1 ? '<span><i class="bdp-icon ico-slicesnav-arrow"></i><a href="javascript:;" class="drill-point-name freedrill-item" data-freedrill-level="' + e + '">' + s(t.values, t.fields) + '<div class="popover">' + a + "</div></a></span>" : '<span><i class="bdp-icon ico-slicesnav-arrow"></i><a href="javascript:;" class="drill-point-name freedrill-item" data-freedrill-level="' + e + '">' + s(t.values, t.fields) + "</a></span>"
                        };
                    if (o.length > 0) {
                        var c = o.find(".freedrill-option").length,
                            p = r.filters.length;
                        c > p ? o.find(".freedrill-option:gt(" + p + ")").remove() : c < p && o.append(l(p))
                    } else {
                        o = $('<div class="drill-crumbs"></div>');
                        var u = $('<span><a href="javascript:;" class="freedrill-item" data-freedrill-level="0">全部</a></span>');
                        o.append(u).append(l(1)), e.location.hash.indexOf("data_screen") >= 0 ? setTimeout(function () {
                            a()
                        }, 10) : a(), t.destroy(), i.css({
                            bottom: "edit" == t.mode ? 48 : 22
                        })
                    }
                    o.off("click.free_drill").on("click.free_drill", ".freedrill-item", function () {
                        var e = +$(this).data("freedrill-level");
                        e != t.optional.free_drill_opt.filters.length && (0 == e ? (delete t.optional.free_drill_opt, o.remove()) : (t.optional.free_drill_opt.target_fields = t.optional.free_drill_opt.target_fields.slice(0, e), t.optional.free_drill_opt.filters = t.optional.free_drill_opt.filters.slice(0, e), o.find("a[data-freedrill-level]:gt(" + e + ")").each(function (e) {
                            $(this).parent().remove()
                        })), t.emit("refreshData"))
                    })
                }

                function d(e, t) {
                    if ("date" == t.data_type) {
                        if (e = +e, isNaN(e)) return "NaN";
                        var a = t.granularity || "day",
                            i = t.granularity_name || "",
                            n = t.month_start_day || 0;
                        if ("hour" !== a && "minute" !== a && "second" !== a || (a = "g_" + a), "week" === a) {
                            n = 1, i && (n = t.week_start_day_of_week);
                            var r = new Date(e).getDay();
                            r > n ? e -= 864e5 * (r - n) : e += 864e5 * (n - r)
                        }
                        return u.checkGranularity(a, e, i, n)
                    }
                    return e
                }
                var c = t.Chart,
                    p = t.ChartType,
                    u = t.helper,
                    h = null;
                $(e).on("keydown.shift-select", function (t) {
                    if (!e._interectingSplitChart) {
                        !t.altKey && !t.ctrlKey && t.shiftKey && !t.metaKey && a(!0)
                    }
                }), $(e).on("keyup.shift-select", function (t) {
                    if (!e._interectingSplitChart) {
                        var i;
                        e.event ? i = t.keyCode : t.which && (i = t.which), "16" == i && a(!1)
                    }
                }), c.prototype.supportSelect = function () {
                    var e = [p.Line, p.Column, p.NStackColumn, p.PStackColumn, p.Area, p.NStackArea, p.PStackArea, p.Biax, p.ComparisonBar, p.Bar, p.NStackBar, p.PStackBar, p.Scatter, p.Waterfall];
                    this.info;
                    return e.indexOf(this.getChartType()) > -1 && !this.isSplitChart() && !this.isMobileMode
                }, c.prototype.supportFreeDrilldown = function () {
                    var e = this.info.free_drill_fields;
                    return e && e.length > 0
                }, c.prototype._setSelectOption = function () {
                    var e = this;
                    e.supportSelect() && (e.options.chart.zoomType = "xy", $.extend(!0, e.options.chart.events, {
                        mouseenterYAxisArea: function (t) {
                            var a = e.$elem.find(".set-yaxis-sort");
                            if (a.length && a.addClass("visible"), "fullscreen" == e.mode) {
                                var i = e.$elem.find(".zoom.bdp-icon");
                                i.length && i.addClass("visible")
                            }
                        },
                        mouseoutYAxisArea: function (t) {
                            var a = e.$elem.find(".set-yaxis-sort");
                            if (a.length && a.removeClass("visible"), "fullscreen" == e.mode) {
                                var i = e.$elem.find(".zoom.bdp-icon");
                                i.length && i.removeClass("visible")
                            }
                        },
                        dragStart: function (t) {
                            e.hideHoverTooltip(), this.hoverPoints && (this.hoverPoints.forEach(function (e) {
                                e.setState()
                            }), this.hoverPoints = []), e.chartInstance.tooltip.hide(), i(e)
                        },
                        dragOver: function (t) {
                            var a = this.getSelectedPoints();
                            if (a.length > 0) {
                                t.originalEvent.shiftKey || e.addSelectionMask();
                                var i = this.options.chart.type || "line";
                                "scatter" != i && "bubble" != i || a.forEach(function (t) {
                                    !t.graphic || e.chartInstance.lastSelectedPoints && e.chartInstance.lastSelectedPoints.indexOf(t) > -1 || t.selected && t.select(!0, !0)
                                }), h = e, r(t, e)
                            } else n();
                            $(".selection-range-hint").remove(), e.chartInstance.lastSelectedPoints = [].concat(a)
                        },
                        selection: function (t) {
                            return e.selectPointsByDrag(this, t, e), !1
                        }
                    }))
                }, c.prototype.disableSelect = function () {
                    this.supportSelect() && this.chartInstance && (this.chartInstance.options.disableSelection = !0)
                }, c.prototype.enableSelect = function () {
                    this.supportSelect() && this.chartInstance && delete this.chartInstance.options.disableSelection
                }, c.prototype.selectPoint = function (e, t) {
                    var a = this,
                        o = a.chartInstance.getSelectedPoints();
                    if (h = a, p.Waterfall == a.getChartType() && e.isSum) return !1;
                    if ($(".selection-tooltip-overlay").length || (i(a), a.chartInstance.hoverPoints && a.chartInstance.hoverPoints.forEach(function (t) {
                            t !== e && t.setState()
                        })), a.hideHoverTooltip(), e.selected) {
                        e.select(!1, !0);
                        var s = o.indexOf(e);
                        o.splice(s, 1), o.length || n()
                    } else e.select(!0, !0), o.push(e);
                    a.chartInstance.lastSelectedPoints = [].concat(o), r({
                        originalEvent: t,
                        target: a.chartInstance
                    }, a)
                }, c.prototype.cancelSelection = function (e) {
                    var t = this,
                        a = t.chartInstance,
                        i = (a.options.chart.type, a.getSelectedPoints());
                    t.removeSelectionMask(), e || (h = null, $(".selected-tooltip").remove(), i.forEach(function (e) {
                        e.select && e.select(!1, !0)
                    }), a.selectedPoints = null)
                }, c.prototype.removeSelectionMask = function () {
                    var e = this,
                        t = e.chartInstance,
                        a = t.options.chart.type || "line";
                    "line spline area areaspline".indexOf(a) > -1 ? t.series.forEach(function (e) {
                        /^Navigator/.test(e.name) || e.group && e.group.attr("opacity", 1)
                    }) : t.series.forEach(function (e) {
                        /^Navigator/.test(e.name) || e.points.forEach(function (e) {
                            e.graphic && !e.selected && e.graphic.attr("opacity", 1)
                        })
                    })
                }, c.prototype.addSelectionMask = function () {
                    var e = this,
                        t = e.chartInstance,
                        a = t.options.chart.type || "line",
                        i = t.getSelectedPoints();
                    if (i.length)
                        if ("line spline area areaspline".indexOf(a) > -1) {
                            var n = {};
                            i.forEach(function (e) {
                                n[e.series.index] = !0
                            }), t.series.forEach(function (e) {
                                e.visible && !/^Navigator/.test(e.name) && !n[e.index] && e.group && e.group.attr("opacity", .3)
                            })
                        } else t.series.forEach(function (e) {
                            e.visible && !/^Navigator/.test(e.name) && e.points.forEach(function (e) {
                                !e.selected && e.graphic && e.graphic.attr("opacity", .3)
                            })
                        })
                }, c.prototype.selectPointsByDrag = function (e, a, i) {
                    var n = i.info.chart_type == p.ComparisonBar && "pos_side" == i.info.comparison_xaxis_pos,
                        r = i.chartInstance.lastSelectedPoints || [],
                        s = [];
                    Highcharts.each(e.series, function (e) {
                        if (i.isOpenTimePredicted && u.timePredicted.checkType(e.options, "enable", "area")) return !1;
                        var t = i.getChartType(),
                            o = t == p.Scatter,
                            l = 0;
                        t == p.Biax && (l = a.yAxis.map(function (e) {
                            return e.axis
                        }).indexOf(e.yAxis)), /^Navigator/.test(e.name) || Highcharts.each(e.points, function (e) {
                            if (!(a.originalEvent.shiftKey && r.indexOf(e) > -1)) {
                                var d;
                                if (o) d = e.x >= a.xAxis[0].min && e.x <= a.xAxis[0].max && e.y >= a.yAxis[0].min && e.y <= a.yAxis[0].max, d ? (s.push(e), e.selected = !0) : e.selected = !1;
                                else {
                                    var c = $(a.target.container).find(".highcharts-plot-background")[0].getBoundingClientRect(),
                                        h = $(a.target.container).find(".highcharts-root")[0].getBoundingClientRect(),
                                        f = c.left - h.left,
                                        g = c.top - h.top,
                                        m = a.target.mouseDownX - f,
                                        _ = a.target.mouseDownY - g,
                                        v = a.originalEvent.chartX - f,
                                        b = a.originalEvent.chartY - g,
                                        y = Math.min(m, v),
                                        w = Math.max(m, v),
                                        C = Math.min(_, b),
                                        x = Math.max(_, b);
                                    if (t == p.Biax) {
                                        var k = e.series.options.type;
                                        "column" == k ? t = e.stackTotal ? p.NStackColumn : p.Column : ["line", "spline"].indexOf(k) > -1 && (t = p.Line)
                                    }
                                    if (n) {
                                        var D = $(a.target.container)[0].getBoundingClientRect(),
                                            S = c.left - D.left,
                                            T = c.width + S,
                                            I = c.right + S;
                                        c = {
                                            left: c.left,
                                            right: I,
                                            bottom: c.bottom,
                                            top: c.top,
                                            width: T,
                                            height: c.height
                                        }
                                    }
                                    var d, L = u.pointAbsPosInPlotArea(e, i.getChartType(), c, l),
                                        A = L.pointLeftX,
                                        E = L.pointRightX,
                                        F = L.pointTopY,
                                        M = L.pointBottomY;
                                    if ([p.Line, p.Area, p.NStackArea, p.PStackArea].indexOf(t) < 0) d = (A <= y && E >= y || A >= y && E <= w || A <= y && E >= w || w >= A && y <= A) && (M >= C && F <= C || F >= C && M <= x || F <= x && M >= x), p.Waterfall == t && e.isSum && (d = !1);
                                    else if (t == p.Line) d = e.x >= a.xAxis[0].min && e.x <= a.xAxis[0].max && e.y >= a.yAxis[l].min && e.y <= a.yAxis[l].max;
                                    else {
                                        var j = t == p.PStackArea ? e.stackY : e.stackY || F;
                                        d = A >= a.xAxis[0].min && A <= a.xAxis[0].max && j >= a.yAxis[0].min && j <= a.yAxis[0].max
                                    }
                                    d && null !== e.y && e.series.visible ? (e.select(!0, !0), s.push(e)) : !d && e.selected && e.select(!1, !0)
                                }
                            }
                        })
                    });
                    var l = e.pointer.selectionMarker;
                    if (l)
                        if (a.xAxis[0].max < a.xAxis[0].axis.min || a.xAxis[0].min > a.xAxis[0].axis.max || !s.length) $(".selection-range-hint").remove();
                        else {
                            var d = l.element.getBoundingClientRect(),
                                c = $(".selection-range-hint");
                            if (c.length || (c = $('<div class="selection-range-hint"></div>'), o(c, i), c.appendTo($("body"))), e.xAxis[0] && e.xAxis[0].isDatetimeAxis) {
                                var h = s.map(function (e) {
                                    return e.x
                                });
                                h.sort(function (e, t) {
                                    return e - t
                                });
                                var f = i._formatTimeWithField(h[0], i.data.x[0], "abb"),
                                    g = i._formatTimeWithField(h[h.length - 1], i.data.x[0], "abb");
                                to = "zh" == t.language ? "至" : "to", timeRange = "<span class='selection-range'><span class='start-time'>" + f + "</span><span class='ml4 mr4'>" + to + "</span><span class='end-time'>" + g + "</span></span>", c.html(timeRange), c.css({
                                    top: d.top - 30,
                                    left: d.left
                                })
                            } else {
                                var m = s.length;
                                c.html('<span class="selection-range"><strong>' + m + "</strong>项"), c.css({
                                    top: d.top - 30,
                                    left: d.left
                                })
                            }
                        }
                    a.originalEvent.shiftKey && (s = s.concat(r)), e.selectedPoints = s, i.hideHoverTooltip()
                }, c.prototype.enterSelectionView = function (a) {
                    var i = this;
                    if (this.chartInstance) {
                        var n = this.chartInstance.getSelectedPoints();
                        if (n && n.length > 0) {
                            var r = {
                                category: "user_interact",
                                action: "chart_interact",
                                opt_label: JSON.stringify({
                                    ct_id: i.ct_id,
                                    page: i.getCurrentPage(),
                                    total_count: s(i.chartInstance),
                                    selected_count: n.length,
                                    view_data: $(".selected-tooltip").find(".selected-data-table").length > 0
                                })
                            };
                            BDPLogger.log("selection_" + a, r);
                            var o;
                            if ("focus" == a) o = i.getSelectedData();
                            else {
                                var l = {},
                                    d = [],
                                    c = (i._isStackChart(), i.getChartType() == p.Scatter),
                                    u = i.getChartType() == p.ComparisonBar,
                                    h = i.getChartType() == p.Biax,
                                    f = i.chartInstance.xAxis[0] && i.chartInstance.xAxis[0].isDatetimeAxis;
                                n.forEach(function (e) {
                                    var t = e.series.index,
                                        a = e.index;
                                    if (f && (a = i.getXIndexOfPoint(e)), l[a] || (l[a] = []), e.series.stackKey && !u) {
                                        var n = e.series.chart.series.length - 1;
                                        e.series.chart.navigator && e.series.chart.navigator.baseSeries && (n -= e.series.chart.navigator.baseSeries.length), t = n - t, h && (t = e.series.options.yAxis ? i.data.y.length + t : t - i.data.y_optional.length)
                                    }
                                    l[a].push(t), d.indexOf(t) < 0 && d.push(t)
                                });
                                var g = Object.keys(l).map(function (e) {
                                    return +e
                                });
                                g.sort(function (e, t) {
                                    return t - e
                                }), d.sort(function (e, t) {
                                    return e - t
                                });
                                var m = i.selectionData || i.origin_data;
                                o = angular.copy(m);
                                var _ = [];
                                g.forEach(function (e) {
                                    var t = !0;
                                    o.y.concat(o.y_optional).forEach(function (a, i) {
                                        (l[e].indexOf(i) > -1 || c || $.isArray(a.data[e]) || !a.data[e]) && (a.data[e] = null), null !== a.data[e] && (t = !1)
                                    }), t && _.push(e)
                                });
                                var v = o.x.concat(o.y).concat(o.y_optional);
                                _.forEach(function (e) {
                                    v.forEach(function (t) {
                                        t.data.splice(e, 1)
                                    }), c && o.bubble_sizes.splice(e, 1)
                                })
                            }
                            i.data = o, i.chartData = angular.copy(o), i.selectionData = angular.copy(o), i.destroy(), i.renderChart(), i.selectionOptCount || (i.selectionOptCount = {
                                focus: 0,
                                exclude: 0
                            }), i.selectionOptCount[a] += 1;
                            var b, y;
                            if (i.isDashboardMode ? (b = i.$elem.parents(".chart-box").find(".J-revert-selection"), y = "dashboard") : "edit" == i.mode ? (b = i.$elem.parents("#chartBox").find(".J-revert-selection"), y = "edit") : "fullscreen" == i.mode && (b = $(".fullscreen-modal").find(".J-revert-selection"), y = "fullscreen"), b.show(), e.getGuideVal) {
                                var w = e.getGuideVal("revertSelectionGuide");
                                if (!w[y]) {
                                    var C = "zh" == t.language ? "您可以点击此处清除聚焦和排除操作" : "Click to restore",
                                        x = {
                                            isfixed: "dashboard" !== y,
                                            direction: "bottom",
                                            className: "revert-selection-guide",
                                            deviation: {
                                                horizontal: -1,
                                                vertical: 8
                                            }
                                        };
                                    "fullscreen" == y && $.extend(!0, x, {
                                        isfixed: !0,
                                        direction: "left",
                                        deviation: {
                                            vertical: 0,
                                            horizontal: -4
                                        },
                                        tipsDeviation: {
                                            vertical: -14,
                                            horizontal: -8
                                        }
                                    }), e.bdpGuideVeil.creatDotGuide(b, C, null, x), w[y] = 1, e.setGuideApi("revertSelectionGuide", w)
                                }
                            }
                        }
                    }
                }, c.prototype.exitSelectionView = function () {
                    var e = this;
                    e.data = angular.copy(e.origin_data), e.chartData = angular.copy(e.origin_data), e.selectionData = null, e.destroy(), e.renderChart(), e.hideRevertSelectionBtn();
                    var t = {
                        category: "user_interact",
                        action: "chart_interact",
                        opt_label: JSON.stringify({
                            ct_id: e.ct_id,
                            page: e.getCurrentPage(),
                            focus_count: e.selectionOptCount.focus,
                            exclude_count: e.selectionOptCount.exclude,
                            view_data: $(".selected-tooltip").find(".selected-data-table").length > 0
                        })
                    };
                    BDPLogger.log("selection_revert", t), e.selectionOptCount = null
                }, c.prototype.hideRevertSelectionBtn = function () {
                    this.isDashboardMode ? this.$elem.parents(".chart-box").find(".J-revert-selection").hide() : "edit" == this.mode ? this.$elem.parents("#chartBox").find(".J-revert-selection").hide() : "fullscreen" == this.mode && $(".fullscreen-modal").find(".J-revert-selection").hide(), $(".revert-selection-guide").remove()
                }, c.prototype.showAvailableDrillFields = function () {
                    var a = this.getAvailableDrillFields();
                    if (a) {
                        var i = "zh" == t.language ? "请选择下钻维度" : "Select dimension to drill-down",
                            n = $('<div class="dropdown-list"></div>'),
                            r = $('<ul class="list-bd"></ul>');
                        hasDateField = !1, a.length > 5 ? n.append('<div class="query-text-wrap"><i class="bdp-icon ico-search"></i><input type="text" class="query-text" placeholder="' + i + '"/></div>') : n.append('<div class="hint nowrap">' + i + "</div>"), a.forEach(function (e, a) {
                            var i = $('<li class="field-item"></li>'),
                                n = e.name;
                            if ("date" == e.data_type) {
                                hasDateField = !0;
                                var o = ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
                                    s = "zh" == t.language ? {
                                        year: "按年",
                                        quarter: "按季",
                                        month: "按月",
                                        week: "按周",
                                        day: "按日",
                                        hour: "按时",
                                        minute: "按分",
                                        second: "按秒"
                                    } : {
                                        year: "by Year",
                                        quarter: "by Quarter",
                                        month: "by Month",
                                        week: "by Week",
                                        day: "by Day",
                                        hour: "by Hour",
                                        minute: "by Minute",
                                        second: "by Second"
                                    };
                                i.append('<div class="item-content-wrap"><i class="bdp-icon ico-triangle-right"></i>' + n + "</div>");
                                var l = $('<div class="sub-item-list nowrap"></div>');
                                o.forEach(function (e) {
                                    var t = $('<div class="field-item sub-item item-content-wrap nowrap">' + s[e] + "</div>");
                                    t.attr("data-granularity", e), t.attr("data-index", a), l.append(t)
                                }), i.append(l)
                            } else i.append('<div class="item-content-wrap">' + n + "</div>");
                            i.attr("title", n), i.attr("data-index", a), r.append(i)
                        }), hasDateField && n.addClass("need-more-pl"), n.append(r);
                        var o = this;
                        r.on("click", ".field-item", function () {
                            var e = +$(this).attr("data-index"),
                                t = $(this).attr("data-granularity"),
                                i = a[e];
                            return "date" == i.data_type && (i.granularity = t || "day"), $(".selection-tooltip-overlay").remove(), o.drilldownSelectedPoints(i), !1
                        }), r.on("click", ".ico-triangle-right", function (e) {
                            return $(this).parents(".field-item").toggleClass("show-sub-list"), !1
                        }), n.find(".query-text").change(function () {
                            var e = $(this).val();
                            e ? (r.find(".item-content-wrap:not(.sub-item):not(:contains(" + e + "))").parent().hide(), r.find(".item-content-wrap:contains(" + e + ")").parent().show()) : r.find(".field-item").show()
                        }).keyup($.debounce(300, function () {
                            $(this).change()
                        })).click(function (e) {
                            return !1
                        });
                        var s = $(".selected-tooltip");
                        s.find(".action-drilldown").append(n);
                        var l = $(e).height(),
                            d = $(e).width(),
                            c = n.width(),
                            p = n.height(),
                            u = n.offset(),
                            h = {
                                left: Math.max(c + u.left - (d - 30), 0),
                                top: Math.max(p + u.top - (l - 10), 0)
                            };
                        (h.left > 0 || h.top > 0) && s.css({
                            bottom: l - (u.top - h.top),
                            left: s.offset().left - h.left
                        })
                    }
                }, c.prototype.getAvailableDrillFields = function () {
                    var e = this.info.x.concat(this.info.compare_axis).map(function (e) {
                            return "date" !== e.data_type ? e.fid : ""
                        }),
                        t = this.optional.free_drill_opt;
                    t && (e = e.concat(t.target_fields.map(function (e) {
                        return "date" !== e.data_type ? e.fid : ""
                    })));
                    var a = this.info.free_drill_fields || [];
                    return a = a.filter(function (t) {
                        return e.indexOf(t.fid) < 0 && t
                    }), a.length > 0 && a
                }, c.prototype.drilldownSelectedPoints = function (e) {
                    var t = this,
                        a = this.optional.free_drill_opt || {
                                target_fields: [],
                                filters: []
                            },
                        i = this.chartInstance.getSelectedPoints(),
                        n = this.info.x.length > 0,
                        r = this.info.compare_axis.length > 0,
                        o = t.getChartType() == p.Scatter,
                        s = t.getChartType() == p.ComparisonBar,
                        d = [],
                        c = {};
                    i.forEach(function (e) {
                        var a = [];
                        if (n)
                            if (o) {
                                var i = e.index;
                                a = t.data.x.map(function (e) {
                                    return "" + e.data[i]
                                })
                            } else if (e.category && e.category.parent) t.data.x.forEach(function (t) {
                                a.push(t.data[e.index] + "")
                            });
                            else {
                                var l = e.name && "slice" !== e.name.toString().toLowerCase() ? e.name : e.x;
                                a.push(l + "")
                            }
                        if (r) {
                            var p = e.series.index;
                            e.series.stackKey && !s && (p = t.data.y.length - 1 - p);
                            var u = t.data.y[p];
                            if (u) {
                                var h = u.compare_values.slice(1);
                                a = a.concat(h)
                            }
                        }
                        c[JSON.stringify(a)] || (c[JSON.stringify(a)] = 1, d.push(a))
                    }), a.filters.push({
                        fields: this.info.x.concat(this.info.compare_axis),
                        values: d
                    }), a.target_fields.push(e), this.optional.free_drill_opt = a;
                    var u = {
                        category: "user_interact",
                        action: "chart_interact",
                        opt_label: JSON.stringify({
                            ct_id: t.ct_id,
                            drill_level: a.filters.length,
                            field_type: e.data_type,
                            page: t.getCurrentPage(),
                            view_data: $(".selected-tooltip").find(".selected-data-table").length > 0
                        })
                    };
                    BDPLogger.log("free_drilldown", u), l(this), this.emit("refreshData"), $(".selected-tooltip").remove()
                }, c.prototype.showSelectedPointsData = function (a) {
                    var i = this,
                        n = this.getSelectedData();
                    if (n) {
                        var r = this.info,
                            o = (r.x.concat(r.compare_axis).concat(r.y), []),
                            s = n.x[0] && n.x[0].data.length || 1,
                            l = {},
                            c = [],
                            p = +new Date;
                        if (i.isOpenTimePredicted && r.compare_axis.length > 0) var h = {},
                            f = !1,
                            g = !1;
                        n.x.concat(r.compare_axis).concat(n.y).concat(n.y_optional).forEach(function (e) {
                            var t = e.uniq_id;
                            t || (t = e.uniq_id = p++), i.isOpenTimePredicted && (r.compare_axis.length > 0 ? (u.timePredicted.checkType(e, "enable", "line") && (f = !0), u.timePredicted.checkType(e, "enable", "area") && (g = !0)) : u.timePredicted.checkType(e, "enable", "all") && (t = e.uniq_id = p++)), l[t] || ((n.y.indexOf(e) > -1 || n.y_optional.indexOf(e) > -1) && (e.align = "right"), l[t] = e, c.push(t))
                        });
                        var m, _;
                        r.compare_axis.length > 0 && (i.isOpenTimePredicted && f && (uniq_id = p + 10, h.val = uniq_id, l[uniq_id] = {
                            name: "zh" == t.language ? "预测值" : "Predicted value"
                        }, c.push(uniq_id), g && (uniq_id = p + 100, h.range = uniq_id, l[uniq_id] = {
                            name: "zh" == t.language ? "置信区间" : "Prediction interval"
                        }, c.push(uniq_id))), m = {}, _ = [], n.y.concat(n.y_optional).forEach(function (e, t) {
                            var a = JSON.stringify(e.compare_values.slice(1));
                            void 0 === m[a] && (m[a] = [], _.push(a)), m[a].push(e)
                        }));
                        for (var v = 0; v < s; v++) {
                            var b = {};
                            n.x.forEach(function (e) {
                                var t = e.uniq_id,
                                    a = e.data[v];
                                a = null === a || void 0 === a ? "--" : d(a, e), b[t] = a
                            }), _ ? _.forEach(function (e) {
                                var t = $.extend({}, b);
                                JSON.parse(e).forEach(function (e, a) {
                                    var i = r.compare_axis[a],
                                        n = i.uniq_id;
                                    e = null === e || void 0 === e ? "--" : d(e, i), t[n] = e
                                });
                                var a = !0;
                                m[e].forEach(function (e) {
                                    var n = e.uniq_id,
                                        r = e.data[v];
                                    i.isOpenTimePredicted && u.timePredicted.checkType(e, "enable", "line") && (n = h.val), i.isOpenTimePredicted && u.timePredicted.checkType(e, "enable", "area") && (n = h.range), null === r || void 0 === r ? r = "--" : (a = !1, r = $.isArray(e.data[v]) ? null === e.data[v][0] || void 0 === e.data[v][0] ? "--" : u.dataLabelFormatter(e.formatter, e.data[v][0], e.aggregator) + " ~ " + u.dataLabelFormatter(e.formatter, e.data[v][1], e.aggregator) : u.dataLabelFormatter(e.formatter, e.data[v], e.aggregator)), t[n] = r
                                }), a || o.push(t)
                            }) : (n.y.concat(n.y_optional).forEach(function (e, t) {
                                var a = e.uniq_id,
                                    i = e.data[v];
                                i = null === i || void 0 === i ? "--" : $.isArray(e.data[v]) ? null === e.data[v][0] || void 0 === e.data[v][0] ? "--" : u.dataLabelFormatter(e.formatter, e.data[v][0], e.aggregator) + " ~ " + u.dataLabelFormatter(e.formatter, e.data[v][1], e.aggregator) : u.dataLabelFormatter(e.formatter, e.data[v], e.aggregator), b[a] = i
                            }), o.push(b))
                        }
                        var y = $('<table class="selected-data-table"><thead><tr></tr></thead><tbody></tbody></table>'),
                            w = y.find("thead tr"),
                            C = y.find("tbody");
                        c.forEach(function (e) {
                            var t = l[e];
                            w.append("<th>" + (t.compare_names && t.compare_names[0] || t.nick_name || t.alias_name || t.name) + "</th>")
                        }), o.forEach(function (e) {
                            var t = $("<tr></tr>");
                            c.forEach(function (a) {
                                var i = l[a],
                                    n = e[a],
                                    r = i.align || "center";
                                null !== n && void 0 !== n || (n = "--", r = "center"), t.append('<td style="text-align:' + r + '">' + n + "</td>")
                            }), C.append(t)
                        });
                        var x = $(".selected-tooltip .selected-data-table-wrap");
                        x.html(y);
                        var k = 32 * (Math.min(6, o.length) + 1);
                        a ? x.css("height", k) : x.animate({
                            height: k
                        }, 200, "swing"), o.length > 6 ? x.addClass("overflow-y-scroll").addClass("show") : x.removeClass("overflow-y-scroll").addClass("show");
                        var D = ($(e).height(), $(e).width()),
                            S = $(".selected-tooltip").get(0).getBoundingClientRect(),
                            T = {
                                bottom: Math.max(S.height + k + 10 - S.bottom, 0),
                                left: Math.max(S.left + S.width - (D - 10), 0)
                            };
                        (T.bottom > 0 || T.left > 0) && $(".selected-tooltip").css({
                            bottom: parseInt($(".selected-tooltip").css("bottom")) - T.bottom,
                            left: S.left - T.left
                        });
                        var I = {
                            category: "user_interact",
                            action: "chart_interact",
                            opt_label: JSON.stringify({
                                ct_id: i.ct_id,
                                page: i.getCurrentPage(),
                                view_data: $(".selected-tooltip").find(".selected-data-table").length > 0
                            })
                        };
                        BDPLogger.log("view_selected_data", I)
                    }
                }, c.prototype.getSelectedData = function () {
                    var e = this,
                        t = this.chartInstance.getSelectedPoints();
                    if (t && t.length > 0) {
                        var a = {},
                            i = {},
                            n = [],
                            r = e.getChartType() == p.Scatter,
                            o = e.getChartType() == p.ComparisonBar,
                            s = e.getChartType() == p.Biax,
                            l = (e._isStackChart(), e.chartInstance.xAxis[0] && e.chartInstance.xAxis[0].isDatetimeAxis);
                        t.forEach(function (t) {
                            var r = t.series.index,
                                d = t.index;
                            if (l && (d = e.getXIndexOfPoint(t)), a[d] || (a[d] = []), t.series.stackKey && !o) {
                                var c = t.series.chart.series.length - 1;
                                t.series.chart.navigator && t.series.chart.navigator.baseSeries && (c -= t.series.chart.navigator.baseSeries.length), r = c - r, s && (r = t.series.options.yAxis ? e.data.y.length + r : r - e.data.y_optional.length)
                            }
                            a[d].push(r), n.indexOf(r) < 0 && (n.push(r), e.isOpenTimePredicted && u.timePredicted.checkType(t.series.options, "enable", "line") && t.series.linkedSeries && t.series.linkedSeries.length > 0 && t.series.linkedSeries.forEach(function (e) {
                                n.push(e.index)
                            }), i[r] = t.series.color)
                        });
                        var d = Object.keys(a).map(function (e) {
                                return +e
                            }),
                            c = e.selectionData || e.origin_data,
                            h = angular.copy(c);
                        return d.sort(function (e, t) {
                            return e - t
                        }), r ? n = e.origin_data.y.map(function (e, t) {
                            return t
                        }) : (n.sort(function (e, t) {
                            return e - t
                        }), h.selectionColors = [], n.forEach(function (e) {
                            i[e] && h.selectionColors.push(i[e])
                        })), h.x.concat(h.y).concat(h.y_optional).forEach(function (e) {
                            e.data = []
                        }), r && (h.bubble_sizes = []), d.forEach(function (e) {
                            c.x.forEach(function (t, a) {
                                h.x[a].data.push(t.data[e])
                            }), r && h.bubble_sizes.push(c.bubble_sizes[e]), c.y.concat(c.y_optional).forEach(function (t, i) {
                                if (!(n.indexOf(i) < 0)) {
                                    var o = null;
                                    (a[e].indexOf(i) > -1 || r || $.isArray(t.data[e])) && (o = t.data[e]), i < c.y.length ? h.y[i].data.push(o) : h.y_optional[i - c.y.length].data.push(o)
                                }
                            })
                        }), e.getChartType() == p.ComparisonBar ? 0 == h.y[0].data.length ? h.y[0].data = h.y[1].data.map(function (e) {
                            return null
                        }) : 0 == h.y[1].data.length && (h.y[1].data = h.y[0].data.map(function (e) {
                            return null
                        })) : (h.y_optional = h.y_optional.filter(function (e, t) {
                            return n.indexOf(t + h.y.length) > -1
                        }), h.y = h.y.filter(function (e, t) {
                            return n.indexOf(t) > -1
                        })), h
                    }
                    return !1
                }
            }(window, bdpChart),
            function (e, t) {
                var a = t.helper;
                ChartType = t.ChartType, a.findNearestPoint = function (e, t) {
                    var a, i = e.chartInstance,
                        n = e.getChartType(),
                        r = 1 / 0;
                    if (n == ChartType.Waterfall) a = i.hoverPoints[0];
                    else if (n == ChartType.Scatter) a = i.hoverPoint;
                    else {
                        var o = e.getChartType() == ChartType.ComparisonBar,
                            s = t.chartX - i.plotLeft,
                            l = t.chartY - i.plotTop;
                        i.hoverPoints.forEach(function (t) {
                            if (t.series.visible && !/^Navigator/.test(t.series.name) && t.graphic) {
                                var n, d;
                                if ("circle" == t.graphic.symbol) n = Math.abs(s - t.plotX), d = Math.abs(l - t.plotY), n = n > t.graphic.radius ? n : 0, d = d > t.graphic.radius ? d : 0;
                                else if ("rect" == t.shapeType || "path" == t.shapeType) {
                                    var c = "path" == t.shapeType ? t.dlBox : t.shapeArgs,
                                        p = c.width,
                                        u = c.height;
                                    if ("bar" == t.series.type) {
                                        var h = c.x,
                                            f = c.y;
                                        if (o && ("pos_side" == e.info.comparison_xaxis_pos && (plotWidth = 2 * i.yAxis[0].width + 16), 0 == t.series.index)) switch (e.info.comparison_xaxis_pos) {
                                            case "pos_left":
                                            case "pos_middle":
                                                f += i.yAxis[0].right;
                                                break;
                                            case "pos_right":
                                                f += i.yAxis[0].right - 50;
                                                break;
                                            case "pos_side":
                                                f += i.yAxis[0].width + 10
                                        }
                                        c = {
                                            width: u,
                                            height: p,
                                            x: i.plotWidth - u - f,
                                            y: i.plotHeight - p - h
                                        }, p = c.width, u = c.height
                                    }
                                    void 0 === t.stackTotal || o ? "column" == t.series.type || o ? (d = 0, n = Math.max(c.x - s, 0, s - (c.x + p))) : "bar" == t.series.type && (n = 0, d = Math.max(c.y - l, 0, l - (c.y + u))) : (n = Math.max(c.x - s, 0, s - (c.x + p)), d = Math.max(c.y - l, 0, l - (c.y + u)))
                                }
                                var g = n * n + d * d;
                                g < r ? (r = g, a = t) : g == r && t.series.index > a.series.index && (r = g, a = t)
                            }
                        })
                    }
                    return a
                }
            }(window, bdpChart),
            function (e, t) {
                var a = t.helper,
                    i = (a.mobileHelper, t.ChartType, {
                        setSeriesColor: function (e, t, a) {
                            var i = 0,
                                n = this;
                            t ? angular.forEach(e, function (t, r) {
                                n.checkType(t, "open", "all") ? (i += 1, "area" == t.time_seires_setting.series_type ? t.color = e[r - 1].color : "line" == t.time_seires_setting.series_type && (t.color = e[r - 1] ? e[r - 1].color : a[r])) : t.series_color ? t.color = t.series_color : t.color || (t.color = a[(r - i) % a.length])
                            }) : angular.forEach(e, function (t, r) {
                                n.checkType(t, "open", "all") ? "area" == t.time_seires_setting.series_type ? (i += 1, t.time_seires_setting.series_color ? t.color = t.time_seires_setting.series_color : t.color = e[r - 1].color) : "line" == t.time_seires_setting.series_type && (t.time_seires_setting.series_color ? t.color = t.time_seires_setting.series_color : t.color = a[(r - i) % a.length]) : t.series_color ? t.color = t.series_color : t.color = a[(r - i) % a.length]
                            })
                        },
                        isOpen: function (e, t) {
                            if ("C220" != e || !e || !t) return !1;
                            for (var a = 0, i = t.length; a < i; a++)
                                if (this.checkType(t[a], "open")) return !0;
                            return !1
                        },
                        hasPredictPonier: function (e) {
                            for (var t = 0; t < e.length; t++)
                                if (this.checkType(e[t].series.options, "open", "all")) return !0;
                            return !1
                        },
                        hasYError: function (e) {
                            var t = 0;
                            return e.forEach(function (e, a) {
                                e.time_seires_setting && e.time_seires_setting.predictable === !1 && (t += 1)
                            }), t > 0 && (t == e.length ? "chart.timePredicted.allError" : "chart.timePredicted.partError")
                        },
                        checkType: function (e, t, a) {
                            var i = !0;
                            if (e.time_seires_setting) switch (a) {
                                case "all":
                                    i = "line" == e.time_seires_setting.series_type || "area" == e.time_seires_setting.series_type;
                                    break;
                                case "origin":
                                    i = "line" != e.time_seires_setting.series_type && "area" != e.time_seires_setting.series_type;
                                    break;
                                case "line":
                                    i = "line" == e.time_seires_setting.series_type;
                                    break;
                                case "area":
                                    i = "area" == e.time_seires_setting.series_type;
                                    break;
                                default:
                                    i = !0
                            }
                            return e.time_seires_setting && (!t || e.time_seires_setting.enable) && i
                        },
                        extendAreaRangeOpt: function (e, t) {
                            e.type = t ? "areasplinerange" : "arearange", e.lineWidth = 0, e.lineColor = "transparent", e.linkedTo = ":previous", e.zIndex = 0, e.fillOpacity = .2
                        },
                        getSubsChartBySplit: function (e) {
                            for (var t = {}, a = 0; a < e.length; a++) {
                                var i = e[a].compare_values.slice(1).join("");
                                t[i] ? t[i].push(a) : t[i] = [a]
                            }
                            var n = [];
                            for (var r in t) n.push(t[r]);
                            return n
                        }
                    });
                $.extend(!0, a, {
                    timePredicted: i
                })
            }(window, bdpChart),
            function (e, t) {
                function a(a) {
                    if (e.localStorage) {
                        if (!(e.localStorage.getItem("BDP_hasShowAltGuide") || !1) && !a.$elem.find(".alt-guide").length) {
                            var i = $("<div>").addClass("alt-guide"),
                                n = "zh" == t.language ? "按住<strong>Alt</strong>键显示全部选中项的标签" : "Hold<strong>Alt</strong>to show all selected labels";
                            i.html(n), a.$elem.append(i)
                        }
                    }
                }

                function i(e, t, a) {
                    t.find("ul.bdp-legend").remove();
                    var i = $("<ul>").addClass("bdp-legend").css({
                        position: "absolute",
                        top: parseInt(t.css("padding-top")) + 5 + "px",
                        left: parseInt(t.css("padding-left")) + 5 + "px",
                        "z-index": 2,
                        width: t.width() - 10,
                        "text-align": "left"
                    });
                    return e.forEach(function (e) {
                        var t = $("<li>").css({
                                display: "inline-block",
                                "margin-right": "20px",
                                cursor: "pointer"
                            }).addClass("bdp-legend-item"),
                            a = $("<i>").css({
                                display: "inline-block",
                                background: e.color,
                                width: "6px",
                                height: "6px",
                                "border-radius": "50%",
                                verticalAlign: "middle",
                                "margin-right": "3px"
                            }),
                            n = $("<span>").text(e.text);
                        t.append(a).append(n), i.append(t)
                    }), t.append(i), i.on("click", "li.bdp-legend-item", function () {
                        var e = $(this).index();
                        $(this).hasClass("disabled") ? $(this).css("opacity", "1") : $(this).css("opacity", ".5"), $(this).toggleClass("disabled"), a.chartInstances.forEach(function (t) {
                            for (var a = t.series.length, i = e, n = 0; n < a && !(i < 0); n++) {
                                var r = t.series[n].options;
                                o.timePredicted.checkType(r, "enable", "all") || (i -= 1)
                            }
                            var s = t.series[n - 1];
                            s.hoverPoint && s.hoverPoint.setState(), s.setVisible(!s.visible)
                        })
                    }), i
                }
                var n = t.Chart,
                    r = t.ChartType,
                    o = t.helper,
                    s = !1,
                    l = !1;
                $(e).off("keydown.split").on("keydown.split", function (t) {
                    if (t.altKey) {
                        if (65 == t.keyCode && (s = !s), l = !0, e._interectingSplitChart) {
                            var a = e._interectingSplitChart.chartInstances,
                                i = e._interectingSplitChart;
                            a.forEach(function (e) {
                                if (e != i._interectingSubChart) {
                                    var t = e.series.map(function (e) {
                                        return e.hoverPoint
                                    });
                                    t && (t = t.filter(function (e) {
                                        return e && !e.isNull
                                    }), t.length && e.tooltip.refresh(t))
                                }
                            })
                        }
                        if (e.localStorage) {
                            e.localStorage.getItem("BDP_hasShowAltGuide") || !1 || (e.localStorage.setItem("BDP_hasShowAltGuide", 1), $("body").find(".chart .alt-guide").remove())
                        }
                    } else l = !1
                }), $(e).off("keyup.split").on("keyup.split", function (t) {
                    if (l && (l = !1, e._interectingSplitChart && !s)) {
                        var a = e._interectingSplitChart;
                        a.chartInstances.forEach(function (e) {
                            e != a._interectingSubChart && e.tooltip.hide()
                        })
                    }
                }), n.prototype.isSplitChart = function () {
                    var e = this.getChartType(),
                        t = [r.Line, r.Column, r.Bar, r.Area].indexOf(e) >= 0 && this.info.compare_axis.length && this.info.split_compare || e == r.Gauge && this.info.compare_axis.length;
                    return !this.isMobileMode && t
                }, n.prototype.renderChartInSplitMode = function (e) {
                    this.chartInstances && this.chartInstances.length && (this.chartInstances.forEach(function (e) {
                        e.destroy()
                    }), this.$elem.off("click", ".load-more"), this.$elem.html(""));
                    var a = [];
                    this.chartInstances = a, this._visibleSubChartsCount = 0;
                    var n = (this.info.yAxis, this),
                        o = n.getChartType();
                    if ([r.Gauge, r.KPICard].indexOf(o) < 0) {
                        var s = [];
                        this.info.yAxis.forEach(function (t, a) {
                            t && t.name && s.push({
                                text: t.name,
                                color: t.series_color || e.colors[a % e.colors.length]
                            })
                        }), i(s, this.$elem, this)
                    }
                    var l = this._getGridSetting(),
                        d = l.rows,
                        c = l.cols,
                        p = l.splitCount;
                    l.offset, l.boxWidth, l.boxHeight;
                    if (p > d * c) {
                        this.$elem.css({
                            "overflow-y": "auto",
                            "overflow-x": "hidden"
                        }), p = d * c;
                        var u = ("zh" == t.language ? "加载更多" : "Load more") + "...";
                        this.$elem.append("<div class='load-more' style='position: absolute; line-height: 30px; height: 30px; text-align: center; width: " + this.$elem.width() + "px;'>" + u + "</div>"), this.$elem.on("click", ".load-more", function () {
                            n.renderSubCharts(e)
                        })
                    }
                    this._allSeries = e.series, this.renderSubCharts(e)
                },
                    n.prototype.renderSubCharts = function (i) {
                        var n = this.chartInstances,
                            d = this.info.yAxis,
                            c = this._getGridSetting(),
                            p = c.rows,
                            u = c.cols,
                            h = Math.min(c.splitCount - this._visibleSubChartsCount, p * u),
                            f = c.offset,
                            g = c.boxWidth,
                            m = c.boxHeight,
                            _ = this,
                            v = this.data;
                        this.getChartType();
                        if (_.isOpenTimePredicted) {
                            var b = o.timePredicted.getSubsChartBySplit(this._allSeries);
                            c.splitCount = b.length, h = Math.min(c.splitCount - this._visibleSubChartsCount, p * u)
                        }
                        if (!(h <= 0)) {
                            for (var y = this._visibleSubChartsCount; y < h + this._visibleSubChartsCount; y++) {
                                var w = $("<div>"),
                                    C = {
                                        left: g * (y % u) + f.left,
                                        top: m * parseInt(y / u) + f.top
                                    };
                                w.css({
                                    position: "absolute",
                                    left: C.left + "px",
                                    top: C.top + "px",
                                    width: g,
                                    height: m
                                }), y == c.splitCount - 1 && w.css("margin-bottom", this.$elem.css("padding-bottom")), this.$elem.append(w), i.series = null;
                                var x = angular.copy(i);
                                if (i.series = this._allSeries, this.data.guide_line && (this.data.guide_line.forEach(function (e) {
                                        "calculate" === e.value_type && (e.value = e.values[y])
                                    }), this._setGuideLine()), this.getChartType() == r.Gauge) {
                                    x.yAxis[y].plotLines = i.yAxis[0].plotLines, x.yAxis = [x.yAxis[y], {
                                        lineWidth: 0
                                    }], x.series = [this._allSeries[y]];
                                    var k = x.series[0].data[0],
                                        D = this.data.gauge_setting.name || this.data.y[0].name,
                                        S = this.info.gauge_setting.unit || "",
                                        T = '<div class="solidgauge-title"><p class="unit">' + t.helper.dataLabelFormatter(v.y[0].formatter, k, v.y[0].aggregator) + S + '</p><p class="title" >' + this.data.y[y].compare_names.slice(1).join("_") + '</p><p class="title" >' + D + "</p></div>";
                                    x.title = {
                                        text: T,
                                        floating: !0,
                                        y: .05 * m
                                    }
                                } else {
                                    if (_.isOpenTimePredicted) {
                                        for (var I = [], L = 0; L < b[y].length; L++) I.push(this._allSeries[b[y][L]]);
                                        o.timePredicted.setSeriesColor(I, !0, this.options.colors)
                                    } else
                                        for (var I = [], A = this._allSeries.length / d.length, E = 0; E < d.length; E++) I.push(this._allSeries[y + E * A]);
                                    x.series = I;
                                    var F = I[0].compare_names.slice(1).join("_");
                                    $.extend(!0, x, {
                                        title: {
                                            text: F,
                                            align: "center",
                                            style: {
                                                height: "22px"
                                            }
                                        },
                                        legend: {
                                            enabled: !1
                                        },
                                        yAxis: [{
                                            plotLines: i.yAxis[0].plotLines
                                        }],
                                        tooltip: {
                                            shared: !0
                                        },
                                        plotOptions: {
                                            series: {
                                                stickyTracking: !0,
                                                events: {
                                                    mouseOut: function (t) {
                                                        var a = this.chart;
                                                        (!this.chart.hoverPoint || this.chart.hoverPoint && "" == this.chart.hoverPoint.state) && (n.forEach(function (e) {
                                                            e != a && (e.series.forEach(function (e) {
                                                                e.hoverPoint && e.hoverPoint.setState(), e.hoverPoint = null
                                                            }), e.tooltip.hide())
                                                        }), _._interectingSubChart = null, e._interectingSplitChart = null, _._triggerPointIndex = -1, _.$elem.find(".alt-guide").hide())
                                                    },
                                                    mouseOver: function () {
                                                        _.$elem.find(".alt-guide").show()
                                                    }
                                                },
                                                point: {
                                                    events: {
                                                        mouseOver: function (t) {
                                                            var i = this.index;
                                                            this.series.index;
                                                            if (t && _._triggerPointIndex !== i) {
                                                                var r = this.series.chart;
                                                                _._interectingSubChart = r, e._interectingSplitChart = _, _._triggerPointIndex = i, n.forEach(function (e) {
                                                                    e != r && e.series.forEach(function (t) {
                                                                        var a = t.points[i];
                                                                        if (!a) return !1;
                                                                        if (t.hoverPoint && t.hoverPoint.setState(), a.setState("hover"), t.hoverPoint = a, l || s) {
                                                                            var n = e.series.map(function (e) {
                                                                                return e.points[i]
                                                                            });
                                                                            n && (n = n.filter(function (e) {
                                                                                return e && !e.isNull
                                                                            }), n.length ? e.tooltip.refresh(n) : (e.tooltip.hide(), t.hoverPoint = null))
                                                                        }
                                                                    })
                                                                }), a(_)
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    })
                                }
                                w.highcharts(x), n.push(w.highcharts())
                            }
                            this._visibleSubChartsCount += h, this._visibleSubChartsCount >= c.splitCount ? (this.$elem.find(".load-more").remove(), this.$elem.off("click", ".load-more"), i = null, this.$elem.find("")) : this.$elem.find(".load-more").css({
                                top: m * Math.ceil(this._visibleSubChartsCount / u) + f.top
                            })
                        }
                    }, n.prototype._getGridSetting = function () {
                    var e, t = this.info.yAxis,
                        a = this.data.y.length / t.length,
                        i = 20,
                        n = this.getChartType();
                    n != r.Gauge && n != r.KPICard || (a = this.data.y.length, i = 0);
                    var o, s;
                    return this.info.split_compare_setting ? (o = this.info.split_compare_setting.rows, s = this.info.split_compare_setting.cols) : o = s = a > 16 ? 4 : Math.ceil(Math.sqrt(a)), e = a > o * s ? 30 : 0, {
                        rows: o,
                        cols: s,
                        boxWidth: (o * s < a && this.isDashboardMode ? this.$elem.width() - 15 : this.$elem.width()) / s,
                        boxHeight: (this.$elem.height() - i - e) / o,
                        offset: {
                            left: parseInt(this.$elem.css("padding-left")),
                            top: parseInt(this.$elem.css("padding-top")) + i
                        },
                        splitCount: a
                    }
                }
            }(window, bdpChart),
            function (e, t) {
                var a = (t.helper, t.ChartType, t.Chart),
                    i = {
                        dark: {
                            title: {
                                style: {
                                    color: "rgba(255, 255, 255, 0.5)"
                                }
                            },
                            xAxis: {
                                title: {
                                    style: {
                                        color: "rgba(255, 255, 255, 0.5)"
                                    }
                                },
                                labels: {
                                    style: {
                                        color: "rgba(255, 255, 255, 0.5)"
                                    }
                                },
                                lineColor: "rgba(255, 255, 255, 0.1)"
                            },
                            yAxis: [{
                                title: {
                                    style: {
                                        color: "rgba(255, 255, 255, 0.5)"
                                    }
                                },
                                labels: {
                                    style: {
                                        color: "rgba(255, 255, 255, 0.5)"
                                    }
                                }
                            }],
                            legend: {
                                itemStyle: {
                                    color: "#fff"
                                }
                            },
                            tooltip: {
                                backgroundColor: "none",
                                borderWidth: 0,
                                style: {
                                    padding: 0
                                }
                            }
                        },
                        default: {}
                    },
                    n = {
                        default: {
                            pc: {
                                bg: "#fff"
                            },
                            projector: {
                                bg: "#fff",
                                xAxis: {
                                    title: {
                                        style: {
                                            color: "rgba(0, 0, 0, 0.8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(0, 0, 0, 0.8)"
                                        }
                                    },
                                    lineColor: "rgba(0, 0, 0, 0.1)"
                                },
                                yAxis: [{
                                    title: {
                                        style: {
                                            color: "rgba(0, 0, 0, 0.8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(0, 0, 0, 0.8)"
                                        }
                                    }
                                }],
                                legend: {
                                    itemStyle: {
                                        color: "rgba(0, 0, 0, 0.6)"
                                    }
                                },
                                plotOptions: {
                                    map: {
                                        nullColor: "#DCDEE0",
                                        dataLabels: {
                                            style: {
                                                color: "rgba(0, 0, 0, 0.8)"
                                            }
                                        }
                                    }
                                }
                            },
                            tv: {
                                bg: "#fff",
                                xAxis: {
                                    title: {
                                        style: {
                                            color: "rgba(0,0,0,0.8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(0,0,0,0.8)"
                                        }
                                    },
                                    lineColor: "rgba(0, 0, 0, 0.05)"
                                },
                                yAxis: [{
                                    title: {
                                        style: {
                                            color: "rgba(0,0,0,0.8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(0,0,0,0.8)"
                                        }
                                    }
                                }],
                                plotOptions: {
                                    map: {
                                        dataLabels: {
                                            style: {
                                                color: "gba(0, 0, 0, 0.8)"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        dark: {
                            pc: {
                                bg: "#24273E"
                            },
                            projector: {
                                bg: "#1a1d29",
                                xAxis: {
                                    title: {
                                        style: {
                                            color: "rgba(255, 255, 255, .8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(255, 255, 255, .8)"
                                        }
                                    },
                                    lineColor: "rgba(255, 255, 255, 0.3)"
                                },
                                yAxis: [{
                                    title: {
                                        style: {
                                            color: "rgba(255, 255, 255, .8)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(285, 255, 255, .8)"
                                        }
                                    }
                                }],
                                plotOptions: {
                                    map: {
                                        nullColor: "rgba(0, 0, 0, .4)",
                                        dataLabels: {
                                            style: {
                                                color: "rgba(255, 255, 255, .8)"
                                            }
                                        }
                                    }
                                }
                            },
                            tv: {
                                bg: "#000000",
                                xAxis: {
                                    title: {
                                        style: {
                                            color: "rgba(255, 255, 255, .5)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(255, 255, 255, .5)"
                                        }
                                    },
                                    lineColor: "rgba(255, 255, 255, 0.3)"
                                },
                                yAxis: [{
                                    title: {
                                        style: {
                                            color: "rgba(255, 255, 255, .5)"
                                        }
                                    },
                                    labels: {
                                        style: {
                                            color: "rgba(255, 255, 255, .5)"
                                        }
                                    }
                                }],
                                plotOptions: {
                                    map: {
                                        nullColor: "rgba(255, 255, 255, .05)",
                                        dataLabels: {
                                            style: {
                                                color: "rgba(255, 255, 255, .8)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    };
                a.prototype.setDisplayStyle = function (e, t, a) {
                    this.displayDevice === e && this.theme === t || (this.theme = t, this.themeColor = i[t], this.displayDevice = e, this.deviceStyle = n[t][e], this.info && (this.destroy(), this.renderChart(a)))
                }, a.prototype.setDisplayDevice = function (e, t) {
                    this.setDisplayStyle(e, this.theme, t)
                }, a.prototype.setTheme = function (e, t) {
                    this.setDisplayStyle(this.displayDevice, e, t)
                }, t.themeColors = i, t.deviceStyles = n
            }(window, bdpChart),
            function () {
                var e = {
                    font_family: '"Avenir", "wf_SegoeUI", "Segoe UI", "Segoe", "Segoe WP", "Tahoma", "Verdana", "Arial", "sans-serif"',
                    date_format: {
                        millisecond: "%H:%M:%S.%L",
                        second: "%H:%M:%S",
                        minute: "%H:%M",
                        hour: "%H:%M",
                        day: "%Y年%b月%e日"
                    }
                };
                Highcharts.setOptions({
                    global: {
                        useUTC: !1
                    },
                    lang: {
                        contextButtonTitle: "图表导出菜单",
                        printChart: "打印图表",
                        downloadJPEG: "导出为JPEG格式",
                        downloadPDF: "导出为PDF格式",
                        downloadPNG: "导出为PNG格式",
                        downloadSVG: "导出SVG格式",
                        drillUpText: "向下攥取",
                        loading: "",
                        shortMonths: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                        months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                        weekdays: ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
                        numericSymbols: ["K", "M", "B", "T", "P", "E"],
                        thousandsSep: ",",
                        resetZoom: "重置缩放",
                        resetZoomTitle: "重置到默认级别",
                        noData: "当前图表无数据"
                    },
                    chart: {
                        backgroundColor: null,
                        spacingTop: 10,
                        spacingLeft: 1,
                        spacingRight: 0,
                        spacingBottom: 4,
                        style: {
                            fontFamily: e.font_family
                        }
                    },
                    title: {
                        useHTML: !0,
                        align: "left",
                        margin: 10,
                        style: {
                            height: "60px",
                            lineHeight: "20px",
                            fontSize: "12px",
                            color: "#333",
                            zIndex: 0
                        },
                        y: 3
                    },
                    exporting: {
                        enabled: !1,
                        url: "/api/chart/export_png",
                        buttons: {
                            contextButton: {}
                        }
                    },
                    legend: {
                        layout: "vertical",
                        align: "right",
                        verticalAlign: "top",
                        itemMarginBottom: 0,
                        symbolRadius: 3,
                        symbolHeight: 6,
                        symbolWidth: 6,
                        navigation: {
                            activeColor: "#999",
                            animation: !0,
                            arrowSize: 8,
                            inactiveColor: "#CCC",
                            style: {
                                color: "#666",
                                fontSize: "12px"
                            }
                        },
                        itemStyle: {
                            color: "#a5a5a5",
                            fontFamily: e.font_family,
                            fontSize: "12px",
                            fontWeight: "normal"
                        }
                    },
                    xAxis: {
                        allowDecimals: !1,
                        lineColor: "#ccc",
                        labels: {
                            style: {
                                fontSize: "10px"
                            }
                        },
                        tickLength: 0
                    },
                    yAxis: [{
                        title: {
                            text: "",
                            style: {
                                fontSize: "10px"
                            }
                        },
                        labels: {
                            style: {
                                fontSize: "10px"
                            }
                        },
                        maxPadding: .02,
                        gridLineWidth: 0
                    }],
                    tooltip: {
                        animation: !1,
                        borderWidth: 0,
                        borderRadius: 0,
                        shadow: !1,
                        followPointer: !0,
                        followTouchMove: !0,
                        shared: !0,
                        useHTML: !0,
                        hideDelay: 0,
                        backgroundColor: "none",
                        style: {
                            padding: "0px"
                        }
                    },
                    plotOptions: {
                        column: {
                            borderWidth: 0
                        },
                        bar: {
                            borderWidth: 0
                        },
                        pie: {
                            cursor: "pointer",
                            showInLegend: !0,
                            dataLabels: {
                                distance: -24,
                                style: {
                                    color: "#fefefe",
                                    fontSize: "10px",
                                    textOutline: "1px 1px rgba(0,0,0,0.4)"
                                },
                                softConnector: !0
                            },
                            states: {
                                hover: {
                                    halo: {
                                        size: 0
                                    }
                                }
                            },
                            borderWidth: 0
                        },
                        series: {
                            turboThreshold: 1501,
                            animation: !1
                        }
                    },
                    credits: {
                        enabled: !1
                    }
                })
            }(),
            function (e) {
                function t(e, t) {
                    if (!Array.isArray(e)) return !1;
                    for (var a = 0, i = e.length; a < i; a++)
                        if (e[a].uniq_id == t) return !0;
                    return !1
                }

                function a(t, a, r, o, d, c, p, u, h, f, g, m, C, x, k, D, S) {
                    return {
                        restrict: "A",
                        controller: "yAxisUnitController",
                        link: function (m, T, I) {
                            function L() {
                                m.$watch(I.bdpChart, function (t) {
                                    if (t && null == K && (m.$bdpChart = K = new e.Chart(I.displayMode, t), K.on("data", O).on("load", function (e, t) {
                                            var a = e.getChartType();
                                            [b.WordCloud, b.Sankey, b.Table].indexOf(a) < 0 && (l(e, m, t, c), a !== b.KPICard && H(t, e)), s(e, m, p, {
                                                is_load: !0
                                            })
                                        }).on("redraw", function (e, t) {
                                            l(e, m, t, c), s(e, m, p, {
                                                is_redraw: !0
                                            }), e.canDrawMarkPoint() && (H(t, e), m.$broadcast("reflow"))
                                        }).on("drilldown", function (e, t) {
                                            m.inAddingMarkPoint ? W(e, t) : t.isLoadingData() || (bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash() ? u(function () {
                                                B(e, t)
                                            }, 10) : B(e, t))
                                        }).on("refreshData", function () {
                                            this.destroy(), t.optional._t = +new Date, m.$$phase || m.$digest()
                                        }).on("saveWithOpt", N).on("data-loading", function () {
                                            T.parents("li.gridster-item").addClass("data-loading")
                                        }).on("data-loaded", function () {
                                            T.parents("li.gridster-item").removeClass("data-loading"), T.removeClass("bdp-chart-loading")
                                        }).on("jumpToOtherDash", Y), "edit" == K.mode ? K.on("pointClick", function (e, t) {
                                            m.inAddingMarkPoint && W(e, t)
                                        }).on("setNickName", function (e, t) {
                                            c.setNickName(e, t)
                                        }) : K.isDashboardMode ? (K.on("refreshLinkedCharts", U), m.$watch(function () {
                                            return I.displayMode
                                        }, function (e) {
                                            K.setMode(e)
                                        }), K.on("reflow", function () {
                                            t.read_cache = !1, t.optional._t = new Date
                                        })) : "fullscreen" === K.mode && K.on("reflow", function () {
                                            t.optional._t = new Date
                                        })), K) {
                                        var a = X.getLinkValue(t.ct_id),
                                            i = !1;
                                        "fullscreen" === K.mode && (i = m.$eval(I.autoplay));
                                        var n = {};
                                        if ("edit" != K.mode) {
                                            a && a.length > 0 && (n.linked_value = a);
                                            var r = m.global.globalDashFilterItems;
                                            !r || $.isEmptyObject(r) || t.optional.dsh_filter || (n.dsh_filter = [], angular.forEach(r, function (e, t) {
                                                n.dsh_filter.push({
                                                    df_id: e.df_id,
                                                    range: e.range,
                                                    data_type: e.data_type,
                                                    granularity: e.granularity,
                                                    range_type: e.range_type
                                                })
                                            }))
                                        }
                                        var o = T.attr("data-from-websocket");
                                        if (o && (n.from = o, T.removeAttr("data-from-websocket")), window.BDP_visibilityChangeFlag) {
                                            var d = T.attr("data-page-active");
                                            d && (n.page_active = d, T.removeAttr("data-page-active"))
                                        }
                                        K.draw(T, t, n, i, m, c)
                                    }
                                }, !0)
                            }

                            function A() {
                                var e = $(".J_filterWrap"),
                                    t = $(".J_filterWrap_hidden"),
                                    a = $(".J_filter", e),
                                    i = $(".J_dateGranularity", e),
                                    n = $(".J_filter_hidden", t),
                                    r = $(".J_dateGranularity_hidden", t),
                                    o = e.width(),
                                    s = o / 2 - 40,
                                    l = n.width(),
                                    d = r.width() + 24,
                                    c = (l + 2) / o * 100,
                                    p = d / o * 100;
                                e.css({
                                    visibility: "hidden"
                                }), a.css({
                                    width: (c > 100 ? 100 : c) + "%"
                                }), i.css({
                                    width: (p > 100 ? 100 : p) + "%"
                                }), l < s && d < s ? a.css({
                                    width: "50%"
                                }) : l >= s && d >= s ? (a.css({
                                    width: "50%"
                                }), i.css({
                                    width: "50%"
                                })) : l + d >= o && l >= s && d <= s ? a.css({
                                    width: (o - d - 40) / o * 100 + "%"
                                }) : l + d >= o && l <= s && d >= s && 0 != l && i.css({
                                    width: (o - l - 40) / o * 100 + "%"
                                }), e.attr("has-add-diff", "true"), e.css({
                                    visibility: "visible",
                                    minWidth: "1000px"
                                })
                            }

                            function E(t) {
                                var a = "zh" === e.language ? "行" : " Row ",
                                    i = [];
                                if ([].concat(t.y, t.y_optional || []).map(function (e) {
                                        var t = angular.copy(e);
                                        i.push(t)
                                    }), "C200" == t.chart_type && t.tb_statistic && (t.tb_statistic.number_row && t.y.forEach(function (e, t) {
                                        var n = e.number_row_formula;
                                        if ("SUM" == n && (n = "TOTAL"), n) {
                                            var o = angular.copy(e.row_setting);
                                            o.name = (e.nick_name || e.name) + "(" + a + r[n] + ")", i.push(o)
                                        }
                                    }), t.tb_statistic.row)) {
                                    var n = angular.copy(t.tb_statistic.row_setting);
                                    n.name = m.tips.rowSummary, i.push(n)
                                }
                                return i
                            }

                            function F(e, t, a) {
                                var i, n = e.sort_items.sort_item_type,
                                    r = e.data_type;
                                if (0 == n) {
                                    if (void 0 === r)
                                        for (var o = a.length - 1; o >= 0; o--)
                                            if (a[o].uniq_id === e.uniq_id) {
                                                r = a[o].data_type;
                                                break
                                            }
                                    i = "date" === r ? m.tips.date : m.tips.letter
                                } else if (2 == n) i = m.tips.custom;
                                else if (1 == n) {
                                    var s = e.sort_items.aggregator_sort.uniq_id;
                                    "uniqIdForSum" === s ? i = m.tips["chart.totalOfMeasures"] : t.forEach(function (e) {
                                        e.uniq_id === s && (i = e.nick_name || e.name + m.setAdvanceAggregatorName(e))
                                    })
                                } else 3 == n && (i = m.tips.percentage);
                                return i
                            }

                            function M(e, t) {
                                for (var a, i = 0, n = t.length; i < n; i++) {
                                    var r = t[i];
                                    if (e.uniq_id === r.uniq_id) {
                                        "x" === e.axis || "compare_axis" === e.axis ? a = r.nick_name || r.name : "y" === e.axis && (a = r.nick_name || r.name + m.setAdvanceAggregatorName(r));
                                        break
                                    }
                                }
                                return a
                            }

                            function j(e, t) {
                                if (t && t.length) {
                                    var a = E(e);
                                    t.forEach(function (t) {
                                        void 0 === t.sort_items && (t.sort_items = {
                                            sort_item_type: 0
                                        }, "y" === t.axis && (t.sort_items = {
                                            sort_item_type: 1,
                                            aggregator_sort: {
                                                uniq_id: t.uniq_id,
                                                parent_uniq_id: t.parent_uniq_id
                                            }
                                        })), t.sort_items.selectedName = F(t, a, e.x), t.name = M(t, [].concat(e.x, e.compare_axis || [], a)), "sum" === t.fid && (t.name = m.tips["chart.totalOfMeasures"])
                                    })
                                }
                            }

                            function O(t) {
                                function a(e) {
                                    function t(e) {
                                        angular.forEach(e, function (e) {
                                            e.hasOwnProperty("uniq_id") ? e.hasOwnProperty("aggregator") || (x[e.uniq_id] ? (C[e.fid] ? e.uniq_id = C[e.fid] : (e.uniq_id = m.temp_uniq_id++, C[e.fid] = e.uniq_id), x[e.uniq_id] = !0) : (C[e.fid] = e.uniq_id, x[e.uniq_id] = !0)) : C[e.fid] ? e.uniq_id = C[e.fid] : (e.uniq_id = m.temp_uniq_id++, C[e.fid] = e.uniq_id), e.items && e.items.length > 0 && t(e.items)
                                        })
                                    }
                                    t(e)
                                }
                                var r = e.language || "zh";
                                m.selected_type = t.getChartType(), "C400" == m.selected_type && "edit" != t.mode && c.global.watterMark && bdp.utils.browser().ie && (t.watermark = {
                                    url: c.global.dshWatermarkImg,
                                    repeat: "repeat"
                                }), m.global.watch = new Date, m.global.chartData = t.data, m.global.chartInfo = t.info;
                                var o = t.info,
                                    l = t.data;
                                void 0 !== o.drill_level && (m.drill_level = o.drill_level), m.description = o.description, m.right_comment = o.right_comment;
                                var d;
                                if ("C500" == m.selected_type) {
                                    var h = function (e, t, a) {
                                            e.ct_id = t, e.tb_id = a, e.items && e.items.length > 0 && e.items.forEach(function (e) {
                                                h(e, t, a)
                                            })
                                        },
                                        f = t.views && t.views.map(function (e) {
                                                return e.info.filter_list_inner.forEach(function (t) {
                                                    h(t, e.info.chart_id, e.info.tb_id)
                                                }), e.info.filter_list_inner
                                            });
                                    d = Array.prototype.concat.apply([], f)
                                } else d = t.info.filter_list_inner;
                                var _;
                                if ("edit" === t.mode) {
                                    if (["C400", "C500"].indexOf(m.selected_type) < 0 && !t.isSubView && (m.viewMeta = m.chart_ops.meta.level[o.drill_level], j(o, m.viewMeta.advanced_sort)), S.info = o, S.data = l, o && window.bdpChart.helper.timePredicted.isOpen(m.selected_type, o.yAxis)) {
                                        var b = window.bdpChart.helper.timePredicted.hasYError(l.y);
                                        b && g(D.instant(b))
                                    }
                                    m.temp_uniq_id = (new Date).getTime(), m.isGranularity = o.enable_change_granularity;
                                    var C = {},
                                        x = {};
                                    if (a(d), m.chart_ops.meta.filter_list_inner instanceof Array) a(m.chart_ops.meta.filter_list_inner);
                                    else if (t.info.level_fields)
                                        for (var k = t.info.level_fields.length || 1, T = 0; T < k; T++) a(m.chart_ops.meta.filter_list_inner[T]);
                                    _ = m.chart_ops.meta.filter_list_inner, _ = angular.copy(d), w.handler(t, _), d = _, m.$broadcast("checkChartTypeCondition", m.selected_type, "");
                                    var I = e.ChartType;
                                    if ([I.GIS, I.Custom].indexOf(m.selected_type) < 0) {
                                        m.selected_type == I.WordCloud && (m.wordCloudValues = l.x[0].data);
                                        var L = m.chart_ops.meta.level[m.drill_level];
                                        if (t.isSplitChart() && !L.split_compare_setting) {
                                            var E = t.data.y.length / t.info.y.length;
                                            t.info.split_compare_setting = L.split_compare_setting = E < 16 ? {
                                                rows: Math.ceil(Math.sqrt(E)),
                                                cols: Math.ceil(Math.sqrt(E))
                                            } : {
                                                rows: 4,
                                                cols: 4
                                            }
                                        }
                                        t.supportNavigator() && void 0 === t.info.navigator_setting && (m.chart_ops.meta.level[m.drill_level].navigator_setting = {
                                            enabled: !1,
                                            start: 0,
                                            end: 1
                                        }, m.saveChartImmediate({
                                            only_save_meta: !0
                                        }), t.info.navigator_setting = {
                                            enabled: !1,
                                            start: 0,
                                            end: 1
                                        })
                                    }
                                    if ("C500" == o.chart_type && m.codeEditor) {
                                        var F = m.codeEditor.getValue();
                                        !F && o.meta.custom_chart_setting && o.meta.custom_chart_setting.code !== F && m.codeEditor.setValue(o.meta.custom_chart_setting.code || "")
                                    }
                                } else if ("chartTpl" === t.mode);
                                else {
                                    i(t, o.filter_list);
                                    var M, L;
                                    if (d && (M = bdp.utils.handleInnerFilterLevel(d), w.handler(t, M)), m.dashStandardItems[Z]) {
                                        if (L = m.dashStandardItems[Z].children[0].meta, L.x = o.xAxis, L.y = o.yAxis, L.compare_axis = o.compare_axis || [], L.y_optional = o.yAxisOptional || [], L.compare_axis = o.compare_axis || [], L.allMetricFields = (o.y || []).concat(o.y_optional || []), L.allMetricFields.forEach(function (e) {
                                                e.row_setting && !$.isEmptyObject(e.row_setting) && L.allMetricFields.push(angular.copy(e.row_setting))
                                            }), o.tb_statistic && angular.isObject(o.tb_statistic.row_setting) && o.tb_statistic.row) {
                                            var O = o.tb_statistic.row_setting;
                                            O.name = O.nick_name || ("zh" == r ? "行总计" : "Row Summary"), L.allMetricFields.splice(O.pos, 0, O)
                                        }
                                        L.filter_list_inner = M, L.diff_filter = o.diff_filter, L.adv_date_list = o.adv_date_list, L.hasTotal = o.yAxis && 1 == o.yAxis.length, L.tb_statistic = o.tb_statistic;
                                        var N = ["C261", "C290", "C300", "C310", "C320", "C330", "C340", "C400", "C360", "C370", "C500"].indexOf(L.type) > -1,
                                            B = !y,
                                            z = L.chart_jump && "1" == L.chart_jump.can_jump,
                                            R = L && L.level_fields && L.level_fields.length > 1;
                                        L.supportChain = !(N || B || z || R), L.dash_setting && (L.dash_setting.show_datalabels = o.show_datalabels, L.show_total = o.show_total), "C500" == t.getChartType() ? t.views && (L.tb_update_time = 1e3 * (Math.max.apply(null, t.views.map(function (e) {
                                                return e.info.tb_update_time
                                            })) || o.update_time)) : L.tb_update_time = 1e3 * o.tb_update_time, L.description = o.description, L.isGranularity = o.enable_change_granularity, "C500" == t.getChartType() && t.views && t.views.length > 0 && (L.adv_date_list = t.views[0].info.adv_date_list, L.diff_filter = t.views[0].info.diff_filter), L.is_js_chart = "C500" == o.chart_type && o.meta && o.meta.custom_chart_setting && "javascript" == o.meta.custom_chart_setting.mode, defined(o.fullscreen_granularity) || (o.fullscreen_granularity = !0), L.fullscreen_granularity = o.fullscreen_granularity
                                    }
                                    var q = [];
                                    [].concat(o.y || [], o.y_optional || []).forEach(function (e) {
                                        e.yoyQoqSetting && e.yoyQoqSetting.allow_dash && (e.yoyQoqSetting.name = e.nick_name || e.name, e.yoyQoqSetting.aggregatorName = m.setAdvanceAggregatorName(e, !0), e.yoyQoqSetting.uniq_id = e.uniq_id, q.push(angular.copy(e.yoyQoqSetting)))
                                    }), L.compareDateFilter && q.forEach(function (e) {
                                        L.compareDateFilter.forEach(function (t) {
                                            e.uniq_id == t.uniq_id && (e.compareType = t.compareType, e.customName = t.customName)
                                        })
                                    }), L.compareDateFilter = q, v.canSetAdvancedSort(o, o.chart_type) && (L.advanced_sort = o.advanced_sort, L.is_advanced_sort = o.is_advanced_sort, j(o, L.advanced_sort), t.on("dashboard_click_sort", function () {
                                        u(function () {
                                            L.is_advanced_sort = 0
                                        })
                                    }));
                                    var I = e.ChartType;
                                    if (L.split_compare = o.split_compare, L.show_navigator = o.navigator_setting && o.navigator_setting.enabled && [I.Line, I.Column, I.NStackColumn, I.PStackColumn, I.Sankey, I.Area, I.NStackArea, I.PStackArea, I.Biax].indexOf(o.chart_type) > -1, void 0 === o.show_datalabels && (o.show_datalabels = ["C230", "C271", "C272", "C330", "C360"].indexOf(o.chart_type) > -1), L.drillChartType = t.getChartType(), "fullscreen" === t.mode) {
                                        clearTimeout(ee), ee = setTimeout(function () {
                                            A()
                                        });
                                        var H, G = $(".fullscreen-modal"),
                                            W = G.find(".dash-filter-wrap").height(),
                                            J = G.find(".drill-crumbs-wrap").height();
                                        H = W > 0 ? W + J + 79 : 15 + J + 111, t.$elem.css({
                                            top: H
                                        })
                                    }
                                }
                                "C280" == t.getChartType() && t.data.bubble_size_groups && (m.bubble_size_groups = t.data.bubble_size_groups), m.fullscreen && (m.fullscreen.chart_type = m.selected_type), "C500" == m.selected_type || m.$$phase || m.$digest(), "edit" === t.mode && (m.getChartArgsHeight && m.getChartArgsHeight(), m.loadingData = !1, "C400" !== m.selected_type && $("#chartBox").find(".chart-inner-filter").length ? t.$elem.css({
                                    top: $("#chartBox").find(".chart-inner-filter").height() + 10
                                }) : "C400" !== m.selected_type && t.$elem.css({
                                    top: 47
                                }), setTimeout(function () {
                                    m.draw_chart_url && m.draw_chart_url.options && bdp.utils.reDrawWithoutHighCharts(m.draw_chart_url.options, t.getChartType())
                                }, 100)), t.data && t.data.y && t.data.y.length > 0 && n(t.data, t.info), P(t), "C400" !== m.selected_type && t.isEmptyChart() && s(t, m, p, {
                                    is_load: !0
                                }), m.$broadcast("chart_data_load", t), m.$broadcast("chart_data_warn", t.info.warn_info), m.$broadcast("current_level_inner_filter", d, t.info.chart_id)
                            }

                            function P(e) {
                                if (c.global.watterMark && "edit" != e.mode) {
                                    var t = "";
                                    t = "dark" === e.theme ? "water-mark-white" : "water-mark-dark";
                                    var a = e.$elem;
                                    if (t)
                                        if (bdp.utils.browser().ie) a.removeClass("water-mark-white water-mark-dark").addClass(t);
                                        else if (0 == a.parent().find(".chart-water-mark").length) {
                                            var i = document.createElement("div");
                                            i.className = "water-mark chart-water-mark " + t, a.parent().append(i)
                                        } else a.parent().find(".chart-water-mark").removeClass("water-mark-white water-mark-dark").addClass(t)
                                }
                            }

                            function N(e, t, a) {
                                _(t, e, m, a)
                            }

                            function B(e, t) {
                                var a, i, n = t.info.xAxis[0],
                                    r = n.granularity || "day",
                                    o = n.granularity_name || "",
                                    s = n.month_start_day || 0,
                                    l = t.getChartType(),
                                    d = "C200" === l,
                                    c = "C280" === l;
                                if (c) {
                                    var p = e.index;
                                    a = t.data.x[0].data[p], i = "date" == n.data_type ? v.checkGranularity(r, a, o, s) : "sub_date" == n.data_type ? v.subDateFormat(n.fid.split("_")[1], a) : a
                                } else if (d) a = e.val, i = e.text;
                                else if ("C300" === l) {
                                    var u = e.source,
                                        h = e.target;
                                    a = {
                                        type: "C300",
                                        fid: t.info.xAxis[0].fid,
                                        source: {
                                            stage: u.origin_value,
                                            state: u.origin_name_value
                                        },
                                        target: {
                                            stage: h.origin_value,
                                            state: h.origin_name_value
                                        }
                                    }, i = "date" == n.data_type ? v.checkGranularity(r, u.origin_value, o, s) + u.name + " ~ " + v.checkGranularity(r, h.origin_value, o, s) + h.name : "sub_date" == n.data_type ? v.subDateFormat(n.fid.split("_")[1], u.origin_value) + u.name + " ~ " + v.subDateFormat(n.fid.split("_")[1], h.origin_value) + h.name : u.origin_value + u.name + " ~ " + h.origin_value + h.name
                                } else if ("C330" === l) i = e.label.raw, a = t.origin_data.x[0].data[e.index];
                                else {
                                    if ("C320" === l && e.isSum) return;
                                    a = e.name && "slice" !== e.name.toString().toLowerCase() ? e.name : e.x, "date" === n.data_type ? ("week" === r && o && (a += 864e5 * (n.week_start_day_of_week - 1), s = n.week_start_day_of_week), i = v.checkGranularity(r, a, o, s), a = 2 == t.info.x.length ? t.xMap[e.name] : t.xMap[e.x], "C230" === l && ["其它", "Else"].indexOf(e.options.x) >= 0 && (i = e.options.x, a = e.options.x)) : i = "sub_date" == n.data_type ? v.subDateFormat(n.fid.split("_")[1], e.name) : e.name
                                }
                                var f = t.optional;
                                f.drill_field = t.info.xAxis[0].fid, f.drill_level = 1 + (f.drill_level >>> 0), angular.isArray(f.drill_value) ? f.drill_value.push(a) : f.drill_value = [a], "edit" == t.mode && (m.drill_field = f.drill_field, m.drill_value = f.drill_value), m.drillOption = t.optional, q(f.drill_level, t), z(t.$elem, t.info.xAxis[0], i, t.optional)
                            }

                            function z(e, t, a, i) {
                                function n() {
                                    r.find(".drill-crumbs").remove(), r.find(".drill-crumbs-wrap").append(o), r.find(".backToMainChart").off("click").on("click", {
                                        chart: K
                                    }, R), r.find(".back-chart" + i.drill_level).on("click", {
                                        chart: K
                                    }, R)
                                }
                                var r = e.parent();
                                "fullscreen" === K.mode && (r = $(".fullscreen-modal"));
                                var o = r.find(".drill-crumbs");
                                if (a = bdp.utils.encodeHTML(a), o.length > 0) o.append('<i class="bdp-icon ico-slicesnav-arrow"></i><span><a href="javascript:;" class="drill-point-name back-chart' + i.drill_level + '" data-level="' + i.drill_level + '" title="' + a + '">' + a + "</a></span>"), r.find(".back-chart" + i.drill_level).off("click").on("click", {
                                    chart: K
                                }, R);
                                else {
                                    o = angular.element('<div class="drill-crumbs"></div>');
                                    var s = bdp.utils.encodeHTML(t.nick_name || t.name),
                                        l = angular.element('<span class="nowrap drill-crumbs-name" title="' + s + '"><a href="javascript:;" class="backToMainChart" data-level="0">' + s + "</a></span>");
                                    o.append(l).append('<i class="bdp-icon ico-slicesnav-arrow"></i><span><a href="javascript:;" class="drill-point-name back-chart' + i.drill_level + '" data-level="' + i.drill_level + '" title="' + a + '">' + a + "</a></span>"), bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash() ? setTimeout(function () {
                                        n()
                                    }, 10) : n()
                                }
                                e.css({
                                    bottom: 22
                                }), "chart_edit" == c.view && e.css({
                                    bottom: 48
                                })
                            }

                            function R(e) {
                                var t = angular.element(this),
                                    a = t.parents(".drill-crumbs-wrap").siblings(".chart");
                                $(".chart-error").remove();
                                var i = t.attr("data-level") >>> 0;
                                0 == i ? (a.css({
                                    bottom: 0
                                }), bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash() ? setTimeout(function () {
                                    t.parents(".drill-crumbs").remove()
                                }, 10) : t.parents(".drill-crumbs").remove()) : t.parent().nextAll().remove(), q(i, e.data.chart, a), a.attr("data-drill", "true"), a.attr("data-drill-status", "false")
                            }

                            function q(e, t, a) {
                                var i = t && t.$elem || a,
                                    n = {};
                                t && (t.destroy(), n = t.optional || {});
                                var r = m.$eval(I.bdpChart);
                                r.read_cache = !1, $.extend(r.optional, n);
                                var o = r.optional || {};
                                0 == e ? (delete o.drill_field, delete o.drill_level, delete o.drill_value) : (o.drill_level = e, o.drill_value = o.drill_value.slice(0, e)), delete o.free_drill_opt, m.isDrawDrillChart = !0, m.$$phase || m.$digest(), i.attr("data-drill-status", "true")
                            }

                            function H(e, t) {
                                if (t.canDrawMarkPoint()) {
                                    var i = $(e.container).parent();
                                    i.find(".hchart-mark-point").remove();
                                    var n = $("<div chart-mark-points></div>").appendTo(i),
                                        r = [],
                                        o = t.info.chart_type;
                                    angular.forEach(t.markPoints, function (a) {
                                        var i = G(e, a, t.getChartType());
                                        if (null != i) {
                                            var n = a.comment.length > 25 ? 150 : hz.cutString.getP(a.comment);
                                            n += 5, n = Math.min(150, n), "edit" == t.mode && (n = Math.max(100, n)), r.push({
                                                point: i,
                                                pointModel: a,
                                                pos: V(i, 16, 16, t.mode, o),
                                                widthStyle: {
                                                    width: n + "px"
                                                },
                                                posStyle: {
                                                    "margin-left": -n / 2 - 15 + "px"
                                                },
                                                show: m.show_chart_description
                                            })
                                        }
                                    });
                                    var s = m.$new();
                                    s.markPoints = r, s.mode = t.mode, s.ct_id = t.ct_id, s.$on("toggleAllPoints", function (e, t) {
                                        angular.forEach(s.markPoints, function (e) {
                                            e.show = void 0 == t ? !e.show : t
                                        })
                                    }), s.$on("displayMarkPointModel", function (e, t) {
                                        angular.forEach(s.markPoints, function (e, a) {
                                            e.show = a == t
                                        })
                                    }), s.$on("reflow", function () {
                                        bdp.utils.throttle(function () {
                                            angular.forEach(s.markPoints, function (e) {
                                                e.pos = V(e.point, 16, 16, t.mode)
                                            }), s.$$phase || s.$digest()
                                        }, 100)()
                                    }), setTimeout(function () {
                                        a(n)(s)
                                    }, 100)
                                }
                            }

                            function G(e, t, a) {
                                var i = e.series[t.seriesIndex].points;
                                if ("C240" == a || "C243" == a) {
                                    var n = e.series.length,
                                        r = "C243" == a ? t.seriesIndex : n - 1 - t.seriesIndex;
                                    i = e.series[r].points
                                }
                                if (t.xDataIndex >= i.length) return null;
                                if ("C243" !== a)
                                    for (var o = 0; o <= t.xDataIndex; o++)
                                        if (i[o].index == t.xDataIndex) return i[o];
                                return i[t.xDataIndex]
                            }

                            function W(e, a) {
                                var i = e.series._i,
                                    n = e.index,
                                    r = a.info.yAxis.concat(a.info.yAxisOptional),
                                    o = 2 == a.info.xAxis.length,
                                    s = o ? 1 : 0,
                                    l = e.series.options.time_seires_setting;
                                if (l && l.series_type) return g("暂不支持对预测值做数据标注"), !1;
                                var d = null;
                                (d = J(e, a)) ? m.editMarkPoint(d, a.ct_id): t.open({
                                    template: "/static/partials/dialogTemplates/mark_point_model.html",
                                    className: "ngdialog-theme-default ngdialog-small",
                                    scope: m,
                                    data: {
                                        point: {
                                            ct_id: a.ct_id,
                                            xaxis_id: a.info.xAxis[s].fid,
                                            xaxis_value: a.data.x[s].data[n],
                                            yaxis_id: r[i].fid,
                                            yaxis_uniq_id: r[i].uniq_id,
                                            originPoint: e
                                        },
                                        xAxis: a.info.xAxis[s],
                                        type: "create"
                                    },
                                    controller: "EditMarkPointCtrl"
                                })
                            }

                            function J(e, t) {
                                for (var a = t.getChartType(), i = 0, n = t.markPoints.length; i < n; i++) {
                                    var r = t.markPoints[i];
                                    if (G(e.series.chart, r, a) == e) return r
                                }
                                return null
                            }

                            function V(e, t, a, i, n) {
                                if (e.series) {
                                    var r, o = e.series,
                                        s = o.chart,
                                        l = o.type,
                                        d = "C243" == n,
                                        c = {},
                                        p = s.options.plotOptions[l] && void 0 != s.options.plotOptions[l].stacking && !d;
                                    if (p) {
                                        var u = e.index;
                                        e = s.series[0].points[u] || e
                                    }
                                    if (!o.visible) return {
                                        left: -100,
                                        top: -100
                                    };
                                    switch (l) {
                                        case "line":
                                        case "spline":
                                            var h = Math.round(e.plotX),
                                                f = Math.round(e.plotY);
                                            c.left = o.xAxis.pos + h, c.top = o.yAxis.pos + f, e.dataLabel && m.show_data_label && f >= 20 && (c.top -= 16);
                                            break;
                                        case "column":
                                        case "waterfall":
                                            r = p || e.series.options.borderRadiusBottomLeft ? e.originShapeArgs : e.shapeArgs, c.left = o.xAxis.pos + r.x + r.width / 2, c.top = o.yAxis.pos + Math.max(0, r.y), e.dataLabel && m.show_data_label && r.y >= 20 && (c.top -= 16);
                                            break;
                                        case "bar":
                                            r = (p || e.series.options.borderRadiusTopLeft ? e.originShapeArgs : e.shapeArgs) || e.shapeArgs, c.left = d ? e.series._i ? o.yAxis.pos + r.height + 6 : o.yAxis.len + o.yAxis.pos - Math.max(0, r.height) + 12 : o.yAxis.len + o.yAxis.pos - Math.max(0, r.y), c.top = o.xAxis.len + o.xAxis.pos - r.x - r.width;
                                            break;
                                        case "area":
                                        case "areaspline":
                                            var h = Math.round(e.plotX),
                                                f = Math.round(e.plotY);
                                            c.left = o.xAxis.pos + h, c.top = o.yAxis.pos + f, e.dataLabel && m.show_data_label && f >= 20 && (c.top -= 16)
                                    }
                                    return "bar" != l ? (c.left -= t / 2, c.top = c.top - a - 3) : (c.left = c.left - t, c.top = c.top - 3 - a), "edit" === i && (c.left = c.left + 40, c.top = c.top + 32), c
                                }
                            }

                            function U(e, t) {
                                $(".J_dash_edit_content").length && $(".J_dash_edit_content").attr("issetFilter", "0"), X.init(e, t)
                            }

                            function Y(e, t) {
                                var a = m.all_project_list || angular.copy(x.getTreeCache());
                                if (a) C.check(e, t, a);
                                else {
                                    var i = [];
                                    (bdp.bdpPageStatus.isUnderAdvDash() || "dash-fullscreen" === m.view) && (i = [0, 2]), bdp.bdpPageStatus.isUnderDataScreen() && (i = [1]);
                                    var n = {
                                        categories: angular.toJson(i)
                                    };
                                    f.project.getTree(n).then(function (i) {
                                        i && (a = angular.copy(i.proj), k.initDeep(a, 0), x.setTreeCache(a), C.check(e, t, a))
                                    })
                                }
                            }
                            h(["date", "letter", "custom", "percentage", "rowSummary", "chart.totalOfMeasures"], m);
                            var X = {};
                            m.filterDisplay = !1;
                            var Q = m.$watch(I.lazyLoaded, function (e) {
                                    e === !1 && (L(), Q())
                                }),
                                K = null,
                                Z = m.$eval(I.index),
                                ee = null;
                            m.chartOptions = {}, m.formulaKeyMap = r, m.setAdvanceAggregatorName = o, m.formatFieldPercentile = d;
                            var te = [];
                            y === !1 && (m.dashStandardItems || []).forEach(function (e) {
                                var t = e.children[0].meta.type;
                                t && ["C101", "C102", "C103", "C104", "C105"].indexOf(t) > -1 || te.push(e), y = te.length > 1
                            }), void 0 != I.index && m.$watch(I.index, function (e) {
                                Z = e
                            }), m.getCurrentLayerFilter = function (e) {
                                var t = m.drill_level || 0;
                                return e instanceof Array ? e : e[t]
                            }, X = {
                                init: function (e, t) {
                                    var a = t.info.chart_type;
                                    if ("C200" === a) return void X.initFromTable(e, t);
                                    var i = t.optional.link_info,
                                        n = t.ct_id,
                                        r = t.data.x,
                                        o = ["C271", "C272"],
                                        s = [],
                                        l = {
                                            x: e.x,
                                            name: e.name,
                                            index: e.index,
                                            hzCode: e["hz-code"]
                                        };
                                    $.inArray(a, o) > -1 ? s.push(e.name) : angular.forEach(r, function (t) {
                                        var a = X.getXDataIndex(e.series.data, t.data, e.index);
                                        s.push(t.data[a])
                                    }), void 0 === t.linked && (t.linked = !0), angular.equals(s, t.pointData) ? t.linked = !t.linked : t.linked = !0, c.mainChartContainer = X.getAllMainChart(t.linked, !1, s, i, n, l), X.updateColor(e, t, n, s), t.pointData = s, X.reGetLinkData(i), m.$$phase || m.$apply(), t.linked ? t.disableSelect() : t.enableSelect()
                                },
                                getXDataIndex: function (e, t, a) {
                                    var i = a,
                                        n = e.length,
                                        r = t.length,
                                        o = 0,
                                        s = !0;
                                    if (n > r && n >= a)
                                        for (var l = 0; l < a; l++) {
                                            s = !0;
                                            for (var d = o; d < r; d++)
                                                if (e[l].name == t[d] || e[l].x == t[d]) {
                                                    o = d, s = !1;
                                                    break
                                                }
                                            s && i--
                                        }
                                    return i
                                },
                                initFromTable: function (e, t) {
                                    var a = t.optional.link_info,
                                        i = t.ct_id,
                                        n = (t.data.x, t.info.chart_type, t.pointData);
                                    t.linked = !1;
                                    for (var r = 0, o = n.length; r < o; r++)
                                        if (n[r]) {
                                            t.linked = !0;
                                            break
                                        }
                                    c.mainChartContainer = X.getAllMainChart(t.linked, !0, n, a, i), t.pointData = n, X.reGetLinkData(a), m.$$phase || m.$apply()
                                },
                                getAllMainChart: function (e, t, a, i, n, r) {
                                    var o = c.mainChartContainer.slice(0),
                                        s = $.inArray(n, c.mainChartIdContainer);
                                    if (e) {
                                        if (s > -1) return o[s].pointData = a, !t && (o[s].pointInfo = r), o;
                                        var l = {
                                            ctId: n,
                                            linkInfo: i,
                                            pointData: a,
                                            pointInfo: r
                                        };
                                        !t && (l.pointInfo = r), o.push(l), c.mainChartIdContainer.push(n)
                                    } else angular.forEach(o, function (e, t) {
                                        e.ctId == n && o.splice(t, 1)
                                    }), c.mainChartIdContainer.splice(s, 1);
                                    return o
                                },
                                getLinkValue: function (e) {
                                    var t = [];
                                    return angular.forEach(c.mainChartContainer, function (a, i) {
                                        var n = a.ctId,
                                            r = a.pointData;
                                        angular.forEach(a.linkInfo, function (a, i) {
                                            if (a.link_ct_id == e) {
                                                var o = [];
                                                angular.forEach(a.field_map, function (e, t) {
                                                    r[e.index] && o.push({
                                                        field: e.field,
                                                        index: e.index,
                                                        field_value: r[e.index]
                                                    })
                                                }), t.push({
                                                    ct_id: n,
                                                    select_fields: o
                                                })
                                            }
                                        })
                                    }), t
                                },
                                refreshSubChart: function (e, t) {
                                    delete e.options.optional.filter_list, e.options.read_cache = !1, e.options.optional.linked_value = t, e.options.optional._t = new Date
                                },
                                reGetLinkData: function (e) {
                                    angular.forEach(m.draw_chart_url, function (t, a) {
                                        var i = t.options.ct_id;
                                        angular.forEach(e, function (e, a) {
                                            if (e.link_ct_id == i) {
                                                var n = X.getLinkValue(i);
                                                X.refreshSubChart(t, n)
                                            }
                                        })
                                    })
                                },
                                updateColor: function (e, t, a, i) {
                                    function n(a) {
                                        t.linked ? (a.xAxis[0].removePlotLine("chartLinkPlotLine"), a.xAxis[0].addPlotLine({
                                            value: e.x,
                                            color: "rgba(134,139,156,0.5)",
                                            width: 1,
                                            id: "chartLinkPlotLine"
                                        })) : a.xAxis[0].removePlotLine("chartLinkPlotLine")
                                    }

                                    function r(e, n) {
                                        angular.forEach(e, function (e, r) {
                                            var o = t.options.chart.type || e.type;
                                            if (["pie", "map"].indexOf(o) > -1) {
                                                var s, d = e.data;
                                                d.length > 1 && (angular.forEach(d, function (e, t) {
                                                    (e.x || e.name) == i[0] ? s = t : angular.isNumber(t) && (d[t].selected = !1, d[t].sliced = !1)
                                                }), angular.isNumber(s) && (d[s].selected || d[s].sliced ? (d[s].selected = !1, d[s].sliced = !1, d[s].select = !1) : (d[s].selected = !0, d[s].sliced = !0, d[s].select = !0)))
                                            } else {
                                                t.linked ? angular.forEach(e.data, function (t, o) {
                                                    var s = [];
                                                    if (angular.forEach(l, function (t, a) {
                                                            var i = X.getXDataIndex(e.data, t.data, o);
                                                            s.push(t.data[i])
                                                        }), angular.equals(i, s)) {
                                                        var d;
                                                        c.mainChartColorContainer[a] && angular.forEach(c.mainChartColorContainer[a].chartColor[n][r], function (e, t) {
                                                            for (var a in e) angular.equals(a, i.toString()) && (d = e[a])
                                                        }), d && (t.color = d)
                                                    } else t.color = "#ccc"
                                                }) : angular.forEach(e.data, function (e, t) {
                                                    var i;
                                                    if (c.mainChartColorContainer[a])
                                                        for (var o in c.mainChartColorContainer[a].chartColor[n][r][t]) i = c.mainChartColorContainer[a].chartColor[n][r][t][o];
                                                    e.color = i
                                                })
                                            }
                                        })
                                    }
                                    var o = (e.index, []);
                                    $.each(e.series.chart.series, function (t) {
                                        /^Navigator/.test(e.series.chart.series[t].name) || o.push(e.series.chart.series[t])
                                    });
                                    var s = t.info.chart_type,
                                        l = t.data.x;
                                    if ("C220" === s || "C250" === s)
                                        if ("C250" === s) {
                                            var d;
                                            o && o.forEach(function (e) {
                                                "line" == e.type && (d = !0)
                                            });
                                            var p = e.series.chart;
                                            d && n(p), r(t.options.series, 0), e.series.chart.update({
                                                series: t.options.series
                                            })
                                        } else if (t.isSplitChart()) t.chartInstances.forEach(function (e) {
                                            n(e)
                                        });
                                        else {
                                            var p = e.series.chart;
                                            n(p)
                                        } else t.isSplitChart() ? t.chartInstances.forEach(function (e, t) {
                                        r(e.options.series, t), e.update({
                                            series: e.options.series
                                        })
                                    }) : (r(t.options.series, 0), e.series.chart.update({
                                        series: t.options.series
                                    }))
                                }
                            }
                        }
                    }
                }

                function i(e, t) {
                    var a = e.info.drill_level,
                        i = e.info.level_fields;
                    if (angular.forEach(t, function (e) {
                            void 0 != e.inner_range && delete e.disabled
                        }), a)
                        for (var n = 0, r = Number(a); n < r; n++) angular.forEach(t, function (e) {
                            for (var t = 0; t < a; t++) void 0 != e.inner_range && e.fid == i[t].fid && (e.disabled = !0)
                        })
                }

                function n(e, t) {
                    for (var a, i = 0; i < e.y.length; i++) {
                        a = e.y[i].data;
                        for (var n = 0; n < a.length; n++) "INF" === a[n] && (a[n] = 0)
                    }
                    if ("C250" === t.type)
                        for (var r, o = 0; o < e.y_optional.length; o++) {
                            r = e.y_optional[o].data;
                            for (var s = 0; s < r.length; s++) "INF" == r[s] && (r[s] = 0)
                        }
                }

                function r(e, t, a) {
                    var i = e.info,
                        n = i.yAxis || [],
                        r = i.yAxisOptional || [],
                        o = n.concat(r);
                    o = d(o.slice(), t);
                    for (var s, l, c = [], p = 0; p < o.length; p++) s = o[p], s && (l = s.nick_name || s.name + t.setAdvanceAggregatorName(s)), l || (l = s.name), c.push({
                        uniq_id: s.uniq_id,
                        name: s.nick_name || s.name,
                        color: s.series_color || a[(p + 0) % a.length],
                        show_name: l
                    });
                    return c
                }

                function o(e) {
                    var t = e.info,
                        a = $("g.highcharts-legend-item");
                    if (t && t.style && t.style.legend && t.style.legend.enabled) {
                        var i = t.style.legend,
                            n = parseInt(i.itemStyle.fontSize);
                        parseInt(i.itemStyle.lineHeight);
                        a.children().each(function (e, t) {
                            (n = n < 12 ? 12 : n) > 12 && $(t).css("transform", "translateY(-" + (n - 8) / 2 + "px)")
                        })
                    }
                }

                function s(e, t, a, i) {
                    if ((bdp.bdpPageStatus.isUnderDataScreen() || bdp.bdpPageStatus.isUnderAdvDash()) && (t.$emit("emitChartStyle", {
                            chart: e,
                            needFresh: !!t.isDrawDrillChart,
                            opts: i || {}
                        }), t.isDrawDrillChart = !1), a.path().indexOf("chart_edit") >= 0) {
                        var i = {
                            chart: e,
                            isOnlyRedraw: !!t.saveChartOnlyRedraw
                        };
                        t.$emit("emitChartConfiguration", i)
                    }
                    t.saveChartOnlyRedraw = void 0
                }

                function l(t, a, i, n) {
                    var s = $.cookie("locale"),
                        l = t.getChartType(),
                        d = e.ChartType,
                        u = t.info;
                    if ("edit" === t.mode) {
                        if (u.navigator_setting && u.navigator_setting.enabled) {
                            window.localStorage.getItem("hasUseNavigator") || (a.showNavigatorGuide = !0)
                        }
                        l !== d.GIS && p(t, a);
                        var f;
                        if (l === d.Waterfall) {
                            var _ = u.waterfall_setting && u.waterfall_setting.color_theme || e.getColorsByType("C320", "bdp");
                            a.seriesColors = [{
                                name: "en" === s ? "Increased" : "增长",
                                color: _[0],
                                show_name: "en" === s ? "Increased" : "增长"
                            }, {
                                name: "en" === s ? "Decreased" : "下降",
                                color: _[1],
                                show_name: "en" === s ? "Decreased" : "下降"
                            }]
                        } else if (l === d.Funnel) {
                            var _ = u.funnel_setting && u.funnel_setting.color_theme || e.getColorsByType("C330", "bdp");
                            if (a.seriesColors = [], t.data.x.length)
                                for (var b = t.data.x[0].data, y = 0; y < b.length; y++) {
                                    if ("date" === t.data.x[0].data_type) {
                                        var w = t.data.x[0].granularity;
                                        ["hour", "minute", "second"].indexOf(w) > -1 && (w = "g_" + w), f = v.checkGranularity(w, b[y])
                                    } else f = b[y];
                                    a.seriesColors.push({
                                        name: b[y],
                                        color: _[y % _.length],
                                        show_name: f
                                    })
                                } else {
                                var C = u.yAxis || [],
                                    x = u.yAxisOptional || [],
                                    k = C.concat(x);
                                k.forEach(function (e) {
                                    delete e.series_color
                                }), a.seriesColors = r(t, a, _)
                            }
                            a.seriesColors.splice(a.seriesColors.length - 1, 1)
                        } else if (l === d.Pie) {
                            var _ = e.getColorsByType("C230", "bdp");
                            delete t.info.color_setting.is_seires, t.data.x.length && !$.isEmptyObject(t.info.color_setting) || (u.y[0].series_color && (_ = [].concat(u.y).map(function (e) {
                                return e.series_color
                            })), a.seriesColors = r(t, a, _))
                        } else if (l === d.KPICard) {
                            var _ = e.getColorsByType("C310", "bdp");
                            a.seriesColors = r(t, a, _);
                            var D = a.chart_ops.meta.level[0].tb_conditional_formatting;
                            $.isEmptyObject(D) || 0 === D.length || D.forEach(function (e, t) {
                                for (var i = 0; i < a.seriesColors.length; i++)
                                    if (e.uniq_id === a.seriesColors[i].uniq_id) {
                                        a.seriesColors.splice(i, 1);
                                        break
                                    }
                            })
                        } else if (l === d.GIS) {
                            var S = a.viewData.currentLayer;
                            if (S) {
                                a.seriesColors = [];
                                for (var T = 0, I = S.y.length; T < I; T++) {
                                    var L = S.y[T];
                                    a.seriesColors.push({
                                        color: L.series_color,
                                        show_name: L.nick_name || L.name
                                    })
                                }
                            }
                        } else [d.Sunburst, d.TreeMap, d.AreaMap, d.BubbleMap].indexOf(l) < 0 && (a.seriesColors = c(i, a, t));
                        t._isStackChart() && (a.seriesColors = a.seriesColors.reverse()), a.$$phase || a.$digest()
                    }(i && $(i.container).find(".highcharts-yaxis").length > 0 && "C370" !== l || "C250" === l || "C261" === l) && (["C210", "C211", "C212", "C220", "C240", "C242", "C241", "C243", "C250", "C350", "C351", "C352"].indexOf(l) > -1 && h(a, t, i, n), "fullscreen" === t.mode && ["C210", "C220", "C240", "C243", "C250", "C350"].indexOf(l) > -1 && "mix" !== v.getPositiveOrNegative(t.data, "y") && g(t, i), "edit" === t.mode && (m(a, a.chart_ops), a.originChartTitle = a.chart_ops.name)), e.configurable.canEditChartLegend(l, t) && o(t)
                }

                function d(e, t) {
                    return angular.forEach(e, function (e) {
                        t.formatFieldPercentile(e)
                    }), e
                }

                function c(a, i, n) {
                    var o = n.info;
                    if (o.compare_axis && o.compare_axis.length) {
                        return r(n, i, e.getColorsByType(o.chart_type, "bdp"))
                    }
                    var s = o.hasOwnProperty("yAxis") ? o.yAxis : [],
                        l = o.hasOwnProperty("yAxisOptional") ? o.yAxisOptional : [],
                        c = [],
                        p = a.options.colors,
                        u = a.options.plotOptions,
                        h = u.bar && ("percent" === u.bar.stacking || "normal" === u.bar.stacking) || u.column && ("percent" === u.column.stacking || "normal" === u.column.stacking) || u.area && ("percent" === u.area.stacking || "normal" === u.area.stacking);
                    (0 === o.xAxis.length && h || "C250" == o.chart_type || "C243" == o.chart_type) && (h = !1), "C250" === o.chart_type && (["C211", "C212"].indexOf(o.type_optional[0]) > -1 && s.reverse(), ["C211", "C212"].indexOf(o.type_optional[1]) > -1 && l.reverse());
                    var f = s.concat(l);
                    f = d(angular.copy(f), i);
                    for (var g = a.options.series, m = g.length, _ = "", b = "", y = 0, w = 0, C = m; w < C; w++) {
                        var x = g[w],
                            k = f[w - y];
                        if (v.timePredicted.checkType(x, "enable", "all")) {
                            if (y += 1, "area" == x.time_seires_setting.series_type) continue;
                            _ = x.nick_name ? x.nick_name : x.name + i.setAdvanceAggregatorName(x), b = x.name, c.push({
                                uniq_id: x.uniq_id,
                                fid: x.fid,
                                aggregator: x.aggregator,
                                name: b,
                                color: x.color || p[x._colorIndex],
                                show_name: _ || b,
                                time_seires_setting: {
                                    enable: !0
                                }
                            })
                        } else t(c, x.uniq_id) || (h && (k = f[m - 1 - w]), k && (_ = k.nick_name ? k.nick_name : k.name + i.setAdvanceAggregatorName(k), b = k.name), _ || (h ? (_ = g[m - 1 - w].name, b = g[m - 1 - w].name) : (_ = x.name, b = x.name)), c.push({
                            uniq_id: x.uniq_id,
                            fid: x.fid,
                            aggregator: x.aggregator,
                            name: b,
                            color: x.color || p[x._colorIndex],
                            show_name: _ || b
                        }))
                    }
                    return h ? c.reverse() : c
                }

                function p(e, t) {
                    var a = e.$elem,
                        i = a.find(".highcharts-title"),
                        n = e.info.drill_level,
                        r = e.getChartType(),
                        o = e.info,
                        s = !o.hasOwnProperty("show_total") || !!o.show_total,
                        l = o.xAxis.length > 0 ? o.xAxis[0].data_type : "",
                        d = "sub_date" === l || "date" === l,
                        c = "C200 C230 C250 C261 C271 C300 C310 C330".indexOf(r) < 0 && !o.split_compare;
                    if (i.length > 0 && c) {
                        var p = $(i[0]),
                            u = p.context.offsetTop,
                            h = "";
                        h = d ? o.title_formula || "LAST" : o.title_formula || "TOTAL";
                        var f = t.formulaKeyMap,
                            g = f[h] || ("zh" === t.language ? "总计" : "Total"),
                            m = "";
                        d && (m = '<li class="dropdown-item"><a>' + f.LAST + "</a></li>");
                        var v = $('<div class="set-layer-title"><div class="pa hz-chart-title-set"><span class="cursor-pointer hz-chart-title">' + g + '<i class="bdp-icon ico-triangle-down"></i></span><ul class="hz-chart-title-formula dropdown-wrap cursor-pointer"><li class="dropdown-item"><a>' + f.TOTAL + '</a></li><li class="dropdown-item"><a>' + f.AVG + '</a></li><li class="dropdown-item"><a>' + f.MAX + '</a></li><li class="dropdown-item"><a>' + f.MIN + "</a></li>" + m + "</ul></div></div>").appendTo(a),
                            b = 0,
                            y = "auto",
                            w = $(".highcharts-title .hz-chart-title-default");
                        "LAST" == h && (b = w.width(), y = 5 - w.width(), u -= 5), v.find(".hz-chart-title-set").css({
                            left: b,
                            right: y,
                            top: u - 3
                        }).hover(function () {
                            $(this).find(".hz-chart-title-formula").show()
                        }, function () {
                            $(this).find(".hz-chart-title-formula").hide()
                        });
                        var C = ["TOTAL", "AVERAGE", "MAX", "MIN", "LAST"];
                        a.find(".hz-chart-title-formula").children("li").click(function () {
                            var e = $(this).index();
                            _({
                                title_formula: C[e]
                            }, n, t), $(this).parent().hide()
                        }), s ? $(".set-layer-title").show() : $(".set-layer-title").hide()
                    }
                }

                function u(e, t) {
                    var a = e.axisTitle && e.axisTitle.element,
                        i = t.getBoundingClientRect(),
                        n = Math.ceil(i.width),
                        r = Math.ceil(i.height);
                    return {
                        x: a && f(a.attributes, "x"),
                        y: a && f(a.attributes, "y"),
                        width: n,
                        height: r
                    }
                }

                function h(e, t, a, i) {
                    var n = t.info,
                        r = n.sort,
                        o = r && r.type || "default",
                        s = n.xAxis.length > 0 ? n.xAxis[0].data_type : "",
                        l = n.chart_type,
                        d = t.$elem,
                        c = d.find(".highcharts-axis-title"),
                        p = d.find(".set-yaxis-sort"),
                        h = d.find(".set-yaxis-sort:eq(1)"),
                        f = d.find(".dot-guide-sort"),
                        g = n.compare_axis && n.compare_axis.length,
                        m = r && "" !== r.type ? r.type : "default",
                        _ = "default",
                        v = "default";
                    if (c.position() && a.yAxis) {
                        if ("date" !== s && n.xAxis.length && n.yAxis.length && !p.length) {
                            if (["C243"].indexOf(l) > -1 && t.data.y.length > 1 || "C250" == l ? (r && (g ? 1 == r.col_index ? _ = m : 2 == r.col_index && (v = m) : (_ = r.fid == n.y[0].fid ? m : "default", ("C243" == l && r.fid == n.y[1].fid || "C250" == l && n.y_optional && n.y_optional.length > 0 && r.fid == n.y_optional[0].fid) && (v = m))), p = $('<span class="set-yaxis-sort ' + _ + '"><i class="bdp-icon ico-sort-' + _ + '1"></i></span>').appendTo(d), h = $('<span class="set-yaxis-sort ' + v + '"><i class="bdp-icon ico-sort-' + v + '1"></i></span>').appendTo(d), h.click(function (a) {
                                    C(a, t, e, i, 1)
                                })) : p = $('<span class="set-yaxis-sort ' + o + '"><i class="bdp-icon ico-sort-' + o + '1"></i></span>').appendTo(d), 3 == i.enterprise_type && i.personalInfo && 5 == i.personalInfo.chart_guide && location.href.indexOf("chart_edit") >= 0) {
                                var b = $('                    <div class="pa dot-guide-sort">                         <div class="circle-group">                            <div class="circle4"></div>                            <div class="circle3"></div>                            <div class="circle2"></div>                            <div class="circle1"></div>                        </div>                    </div>                ').appendTo(d).position({
                                    my: "left top",
                                    at: "left top",
                                    of: ".set-yaxis-sort"
                                });
                                b.on("click.dotguideSort", function (e) {
                                    b.remove(), i.personalInfo.chart_guide = 0;
                                    $.ajax({
                                        url: "/api/user/guide_set",
                                        type: "POST",
                                        dataType: "json",
                                        data: {
                                            chart_guide: "0"
                                        }
                                    }).done(function (e) {
                                        0 !== e.status && errorHandle(e.errstr)
                                    }).fail(function (e) {
                                        errorHandle(e)
                                    })
                                }), f = b
                            }
                            p.click(function (a) {
                                C(a, t, e, i, 0)
                            })
                        }
                        var y = function (e, i) {
                                var n = u(a.yAxis[i], c[i]),
                                    r = "edit" === t.mode ? {
                                        left: +n.x - .5 * n.width + 18,
                                        bottom: a.chartHeight - n.y + 26,
                                        transform: "rotate(90deg)"
                                    } : {
                                        left: +n.x - .5 * n.width - 22,
                                        bottom: a.chartHeight - n.y - 6,
                                        transform: "rotate(90deg)"
                                    };
                                e.css(r), 0 == i && f && f.css({
                                    left: r.left - 6,
                                    top: r.top + 11
                                })
                            },
                            w = function (e, i) {
                                var n = u(a.yAxis[i], c[i]),
                                    r = "edit" === t.mode ? +n.x + 26 : +n.x - 14;
                                1 == i && (r += 8);
                                var o = "edit" === t.mode ? {
                                    left: r,
                                    top: +n.y - .5 * n.height + 6
                                } : {
                                    left: r,
                                    top: +n.y - .5 * n.height - 26
                                };
                                e.css(o), 0 == i && f && f.css({
                                    left: o.left - 6,
                                    top: o.top + 11
                                })
                            };
                        ["C240", "C241", "C242", "C243"].indexOf(l) > -1 ? (c[0] && y(p, 0), "C243" == l && c[1] && y(h, 1)) : "C261" !== l && (c[0] && w(p, 0), "C250" == l && c[1] && w(h, 1))
                    }
                }

                function f(e, t) {
                    if (e.length) {
                        return e.getNamedItem(t).value
                    }
                }

                function g(e, t) {
                    var a, i, n = e.$elem,
                        r = e.info.chart_type,
                        o = n.find(".highcharts-axis-title"),
                        s = n.find(".zoom"),
                        l = n.find(".zoom:eq(1)");
                    if (o.position() && t.yAxis) {
                        e.zoomYaxis = void 0 === e.zoomYaxis ? e.info.yaxis_auto_zoom : e.zoomYaxis, e.zoomYaxisRight = void 0 === e.zoomYaxisRight ? e.info.yaxis_auto_zoom_right : e.zoomYaxisRight;
                        var d = e.zoomYaxis ? "ico-zoomout-white" : "ico-zoomin-white",
                            c = e.zoomYaxisRight ? "ico-zoomout-white" : "ico-zoomin-white";
                        e.info.xAxis.length && e.info.yAxis.length && !s.length && (s = $('<i class="pa cursor-pointer zoom bdp-icon ' + d + '"></i>').appendTo(n), (["C243"].indexOf(r) > -1 && e.data.y.length > 1 || "C250" == r) && (l = $('<i class="pa cursor-pointer zoom bdp-icon ' + c + '"></i>').appendTo(n), l.on("click", function (t) {
                            x(t, e, 1)
                        })), s.on("click", function (t) {
                            x(t, e, "C243" == r ? 1 : 0)
                        }));
                        var p = function (e, i) {
                                var n = u(t.yAxis[i], o[i]);
                                a = n.x - .5 * n.width - 44, e.css({
                                    left: a,
                                    bottom: t.chartHeight - n.y - 3
                                })
                            },
                            h = function (n, r) {
                                var s = u(t.yAxis[r], o[r]);
                                a = s.x - 11, i = s.y - .5 * s.height - 48, "edit" === e.mode && (a += 40, i += 32), 1 == r && (a += 8), n.css({
                                    left: a,
                                    top: i
                                })
                            };
                        ["C240", "C241", "C242", "C243"].indexOf(r) > -1 ? (o[0] && p(s, 0), "C243" == r && o[1] && p(l, 1)) : "C261" !== r && (o[0] && h(s, 0), "C250" == r && o[1] && h(l, 1))
                    }
                }

                function m(t, a) {
                    var i = a.meta;
                    t.chartSetting = {};
                    var n = e.helper,
                        r = i.level[t.drill_level],
                        o = "",
                        s = $.cookie("yaxis_max"),
                        l = $.cookie("yaxis_min"),
                        d = r.yaxis_max,
                        c = r.yaxis_min;
                    if (r.yaxis_name ? o = r.yaxis_name : "C280" == r.chart_type && r.y_scatter ? o = r.y_scatter.length && r.y_scatter[0].name : r.y.length > 0 && (o = r.y[0].name), t.chartSetting.yaxis_left = {}, "C243" === r.chart_type) {
                        var p = "",
                            u = t.$bdpChart.data;
                        r.compare_axis && r.compare_axis.length ? (o = r.yaxis_name || u.y[0].nick_name, p = r.yaxis_name_right || u.y[1] && u.y[1].nick_name || "") : p = r.yaxis_name_right || r.y[1] && r.y[1].name || o;
                        var h = n.getEdgeValueFromMultiArray(u, "y", "max");
                        s = h, l = 0;
                        var f = r.yaxis_max,
                            g = r.yaxis_min;
                        d = f <= 0 ? h : f, c = g < 0 ? 0 : g
                    }
                    if (t.chartSetting.yaxis_left = {
                            name: o,
                            unit: r.yaxis_unit,
                            max_value: +(r.yaxis_max_disabled ? s : d),
                            min_value: +(r.yaxis_min_disabled ? l : c),
                            max_disabled: "C261" !== a.type && !!r.yaxis_max_disabled,
                            min_disabled: !!r.yaxis_min_disabled,
                            auto_zoom: r.yaxis_auto_zoom || !1
                        }, "C243" === r.chart_type && (t.chartSetting.yaxis_left.rightName = p), "C280" === r.chart_type) {
                        var m = r.xaxis_name;
                        !m && r.y.length && (m = r.y[0].name), t.chartSetting.xaxis = {
                            name: m,
                            unit: r.xaxis_unit
                        }
                    }
                    if ("C250" === r.chart_type) {
                        var _ = void 0 === r.yaxis_max_disabled_right,
                            v = void 0 === r.yaxis_min_disabled_right,
                            b = r.yaxis_name_right;
                        b || (b = r.y_optional.length ? r.y_optional[0].name : ""), t.chartSetting.yaxis_right = {
                            name: b,
                            unit: r.yaxis_unit_right,
                            max_value: +(_ || r.yaxis_max_disabled_right ? $.cookie("yaxis_max_right") : r.yaxis_max_right),
                            min_value: +(v || r.yaxis_min_disabled_right ? $.cookie("yaxis_min_right") : r.yaxis_min_right),
                            max_disabled: !!_ || !!r.yaxis_max_disabled_right,
                            min_disabled: !!v || !!r.yaxis_min_disabled_right,
                            auto_zoom: r.yaxis_auto_zoom_right || !1
                        }
                    }
                    t.originChartSetting = angular.copy(t.chartSetting)
                }

                function _(e, t, a, i) {
                    i || (i = {
                        not_need_redraw: !1
                    });
                    var n = a.chart_ops.meta.level[t];
                    if (e.need_replace)
                        for (var r in e) "need_replace" !== r && (n[r] = e[r]);
                    else $.extend(!0, n, e);
                    a.saveChartImmediate({
                        only_save_meta: i.only_save_meta,
                        not_need_redraw: i.not_need_redraw,
                        only_refresh_data: !0,
                        is_drill_chart: !!t
                    })
                }
                angular.module("bdp.charts", [])
                .directive("bdpChart", a);
                var v = e.helper,
                    b = e.ChartType,
                    y = !1;
                a.$inject = ["ngDialog", "$compile", "formulaKeyMap", "setAdvanceAggregatorName", "formatFieldPercentile", "$rootScope", "$location", "$timeout", "$jsTipTranslate", "commonService", "errHint", "$state", "chartJumpFuns", "projectTreeCache", "multipleProService", "$translate", "chartEditService"];
                var w = {
                        travase: function (e) {
                            angular.forEach(e, function (e) {
                                delete e.disabled, e.items && e.items.length > 0 && w.travase(e.items)
                            })
                        },
                        disabledItem: function (e, t) {
                            angular.forEach(t, function (t) {
                                t.hasOwnProperty("inner_adv_type") || (t.inner_adv_type = ""), t.fid == e && "" == t.inner_adv_type ? t.disabled = !0 : t.items && t.items.length > 0 && w.disabledItem(e, t.items)
                            })
                        },
                        handler: function (e, t) {
                            var a = e.info.drill_level,
                                i = e.info.level_fields;
                            if (w.travase(t), a)
                                for (var n = 0, r = Number(a); n < r; n++) w.disabledItem(i[n].fid, t)
                        }
                    },
                    C = function (e, t, a, i, n) {
                        e.stopPropagation();
                        var r, o = t.info,
                            s = o.chart_type,
                            l = (t.$elem, e.currentTarget.className),
                            d = "default",
                            c = t.info.sort,
                            p = t.data.y[0];
                        switch (/(?:^|\s+)(desc|asc)(?:\s+|$)/.test(l) && (d = RegExp.$1), d) {
                            case "desc":
                                r = "asc";
                                break;
                            case "asc":
                                r = "";
                                break;
                            default:
                                r = "desc"
                        }
                        var u = "C243" == s && o.compare_axis && o.compare_axis.length;
                        "C250" == s && 1 == n && (p = t.data.y_optional[0]);
                        var h = p.uniq_id;
                        c && c.uniq_id && "y" == c.axis && c.uniq_id === h || (c = {
                            fid: p.fid,
                            uniq_id: h
                        });
                        var f = {
                            axis: "y",
                            type: r,
                            fid: c.fid,
                            uniq_id: c.uniq_id
                        };
                        u ? f.col_index = n + 1 : "C243" == s && (f.col_index = n, n && (f.fid = t.data.y[1].fid, f.uniq_id = t.data.y[1].uniq_id)), "edit" === t.mode ? _({
                            is_advanced_sort: 0,
                            sort: f
                        }, o.drill_level, a) : t.drawWithOption({
                            sort: f,
                            rootScope: i
                        }), $(e.currentTarget).removeClass(d).addClass(r || "default"), $(e.currentTarget).find(".bdp-icon").removeClass("ico-sort-" + d + "1").addClass("ico-sort-" + (r || "default") + "1")
                    },
                    x = function (t, a, i) {
                        t.stopPropagation();
                        var n, r, o = (a.$elem, a.info.chart_type),
                            s = [b.PStackColumn, b.PStackBar, b.PStackArea].indexOf(o) > -1,
                            l = o === b.ComparisonBar,
                            d = s || l ? 1 : 1.2,
                            c = "y",
                            p = a.zoomYaxis;
                        "C250" == o && 1 == i && (c = "y_optional", p = a.zoomYaxisRight);
                        var u = !1;
                        if ("C250" === o && "C211" === a.info.type_optional[i] && (u = !0), u ? (n = v.getSumByColumnFromMultiArray(a.data, c, "min"), r = v.getSumByColumnFromMultiArray(a.data, c, "max")) : (n = v.getEdgeValueFromMultiArray(a.data, c, "min"), r = v.getEdgeValueFromMultiArray(a.data, c, "max")), r !== n) {
                            if (p) {
                                var h = a.options.yAxis[i].tickPositions || a.options.yAxis[i].tickPositioner(),
                                    f = e.helper.formatNumber(h[h.length - 1] * d),
                                    g = [0, f.mul(.25), f.mul(.5), f.mul(.75), f];
                                if (h[h.length - 1] > 0) {
                                    if (a.options.yAxis[i].tickPositions = g, "C243" === o) {
                                        var m = [-g[4], -g[3], -g[2], -g[1], -g[0]];
                                        a.options.yAxis[0].tickPositions = m, a.options.yAxis[1].tickPositions = g
                                    }
                                } else f = e.helper.formatNumber(h[0]), a.options.yAxis[i].tickPositions = [f, f.mul(.75), f.mul(.5), f.mul(.25), 0]
                            } else {
                                var _, y = r > 0 && n >= 0 ? "positive" : r <= 0 && n < 0 ? "negative" : "mix",
                                    w = .05 * (r - n);
                                "positive" == y ? _ = v.getAdjustValue(r + w, Math.max(0, n - w)) : "negative" == y && (_ = v.getAdjustValue(Math.min(0, r + w), n - w));
                                var C = _.max.sub(_.min),
                                    g = [_.min, _.min.add(C.mul(.25)), _.min.add(C.mul(.5)), _.min.add(C.mul(.75)), _.max];
                                if (a.options.yAxis[i].tickPositions = g, "C243" === o) {
                                    var m = [-g[4], -g[3], -g[2], -g[1], -g[0]];
                                    a.options.yAxis[0].tickPositions = m, a.options.yAxis[1].tickPositions = g
                                }
                            }
                            a._setGridPlotLine(), "C250" == o && 1 == i ? a.zoomYaxisRight = !a.zoomYaxisRight : a.zoomYaxis = !a.zoomYaxis, a.chartInstance = Highcharts.chart(a.$elem[0], a.options)
                        }
                    }
            }(bdpChart),
            function (e) {
                angular.module("bdp.charts")
                .service("chartEditService", ["$filter", function (e) {
                    var t = {},
                        a = {},
                        i = {};
                    this.currMeta = t, this.info = a, this.data = i, this.destory = function () {
                        t = {}, a = {}, i = {}
                    }
                }]);
                e.helper, e.ChartType
            }(bdpChart),
            function () {
                function e(e, t, a) {
                    var i;
                    e.lazySaveYaxisUnit = function (t, a, n) {
                        var r = 600;
                        13 == t.keyCode && (r = 0), clearTimeout(i), i = setTimeout(function () {
                            e.setYaxisUnit(a, n)
                        }, r)
                    }, e.ifEnterDownForY = function (t, a, i) {
                        13 == t.keyCode && e.setYaxisUnit(a, i)
                    }, e.setYaxisUnit = function (a, i) {
                        if (!e.originChartSetting) return !1;
                        var n = e.originChartSetting["yaxis_" + i];
                        if (JSON.stringify(n) == JSON.stringify(a)) return !1;
                        var r = a.rightName,
                            o = a.name,
                            s = a.unit,
                            l = Number(a.max_value),
                            d = Number(a.min_value),
                            c = a.max_disabled,
                            p = a.min_disabled;
                        if ("" == o) return t(e.tips["chart.shouldHaveTitle"]), e.chartSetting["yaxis_" + i].name = n.name, !1;
                        if ("C243" == e.selected_type && (d < 0 && (t(e.tips["chart.testMinValue"]), e.chartSetting["yaxis_" + i].min = 0, d = 0), l <= 0 && (t(e.tips["chart.testMaxValue"]), e.chartSetting["yaxis_" + i].max = n.max_value, l = n.max_value), "" == r)) return t(e.tips["chart.shouldHaveTitle"]), e.chartSetting["yaxis_" + i].rightName = n.rightName, !1;
                        if (!a.max_disabled && !a.min_disabled && l <= d) return t(e.tips["chart.minLessThanMax"]), !1;
                        var u = {},
                            h = "right" == i ? "_right" : "";
                        u["yaxis_unit" + h] = s, u["yaxis_max" + h] = l, u["yaxis_min" + h] = d, u["yaxis_max_disabled" + h] = c || !1, u["yaxis_min_disabled" + h] = p || !1;
                        u["yaxis_name" + h] = o, "C243" == e.selected_type && (u.yaxis_name_right = r), $.extend(!0, e.viewMeta, u);
                        var f = {
                                only_redraw: !0,
                                is_drill_chart: !!e.drill_level
                            },
                            g = e.$bdpChart;
                        if (n.unit !== s && 1 === g.data.y.length) {
                            var m = g.data.summary;
                            if (m && 1 === m.supply_summary.length) {
                                var _ = m.supply_summary[0];
                                _.s_value = _.s_value.replace(n.unit, s)
                            }
                        }
                        e.saveChartImmediate(f), angular.copy(a, e.originChartSetting["yaxis_" + i])
                    }, e.setValueAuto = function (t, a) {
                        if (a = "right" === a ? "Right" : "Left", !e.chartSetting) return !1;
                        "Left" === a ? ("C243" == e.selected_type ? e.chartSetting.yaxis_left[t + "_value"] = +$.cookie("yaxis_" + t + "_right") : e.chartSetting.yaxis_left[t + "_value"] = +$.cookie("yaxis_" + t), e.setYaxisUnit(e.chartSetting.yaxis_left, "left")) : (e.chartSetting.yaxis_right[t + "_value"] = +$.cookie("yaxis_" + t + "_right"), e.setYaxisUnit(e.chartSetting.yaxis_right, "right")), setTimeout(function () {
                            "max" == t ? $("#yAxis" + a + "MaxInput").select().focus() : "min" == t && $("#yAxis" + a + "MinInput").select().focus()
                        }, 100)
                    }, e.setZeroAligned = function () {
                        var t = e.viewMeta;
                        t.zero_aligned && (t.yaxis_max_disabled = !0, t.yaxis_min_disabled = !0, t.yaxis_max_disabled_right = !0, t.yaxis_min_disabled_right = !0), e.saveChartImmediate()
                    }, e.canSetAxisValue = function (t) {
                        var a = e.viewMeta,
                            i = a.chart_type;
                        return ["C212", "C242", "C250", "C320", "C352"].indexOf(i) < 0 || "C250" == i && ["C212", "C242", "C352"].indexOf(a.type_optional[t]) < 0
                    }, e.canSetZoom = function () {
                        var t = e.viewMeta.chart_type;
                        return ["C210", "C220", "C240", "C243", "C250", "C350"].indexOf(t) > -1
                    }, e.setZoomState = function (t) {
                        var a = e.viewMeta;
                        a["left" == t ? "yaxis_auto_zoom" : "yaxis_auto_zoom_right"] = e.chartSetting["yaxis_" + t].auto_zoom, "left" === t ? (a.yaxis_max_disabled = !0, a.yaxis_min_disabled = !0) : "right" === t && (a.yaxis_max_disabled_right = !0, a.yaxis_min_disabled_right = !0), e.saveChartImmediate()
                    }, e.judgeIsEnterPressForX = function (t) {
                        13 == t.keyCode && e.saveXaxisVareCheckDirty()
                    }, e.saveXaxisVareCheckDirty = function () {
                        if (!e.chartSetting) return !1;
                        var a = e.chartSetting.xaxis,
                            i = e.originChartSetting.xaxis;
                        if (!i || JSON.stringify(i) == JSON.stringify(a)) return !1;
                        if ("" == a.name) return t("X轴标题不能为空。"), e.chartSetting.xaxis.name = i.name, !1;
                        var n = {
                            only_redraw: !0,
                            is_drill_chart: !!e.drill_level
                        };
                        i.name != a.name && (e.viewMeta.xaxis_name = a.name), i.unit != a.unit && (e.viewMeta.xaxis_unit = a.unit, n.not_need_redraw = !1), e.saveChartImmediate(n), angular.copy(a, e.originChartSetting.xaxis)
                    }, a(["chart.shouldHaveTitle", "chart.testMinValue", "chart.testMaxValue", "chart.minLessThanMax"], e)
                }
                angular.module("bdp.charts")
                .controller("yAxisUnitController", e), 
                e.$inject = ["$scope", "errHint", "$jsTipTranslate"]
            }(),
            function (e) {
                function t(e, t, a) {
                    return a ? e.offsetTop : $(e).position(t).top
                }
                var a = null,
                    i = function (e, t, a) {
                        a = a || {}, e = e || document, this.container = $(e), this.containerParent = e !== document ? this.container.parent() : $(window), this.diff = a.diff || 100, this.selector = t, this.options = a || {}, this.timer = null, this.isMobile = a.isMobile || !1, this.isMobile && "J_ScrollWrap" !== this.containerParent.attr("id") && (this.containerParent = this.containerParent.parents("#J_ScrollWrap")), this._init()
                    };
                i.prototype = {
                    _init: function () {
                        this.threshold = this._getThreshold(), this.items = this._filterItems(), this.items.length && (this._loader(!0), this._initLoadEvent())
                    },
                    _getThreshold: function () {
                        return this.containerParent.height() + this.diff
                    },
                    _filterItems: function () {
                        return this.container.find(this.selector)
                    },
                    _initLoadEvent: function () {
                        var e = this,
                            t = this.containerParent;
                        this.containerParent.on("scroll.lazy", bdp.utils.debounce(function (a) {
                            t.removeClass("scroll-cover"), 0 !== e.items.length && e._loader()
                        }, 25)), t.on("scroll.cover", function (e) {
                            $("body").trigger("dashboard-scroll-start"), t.hasClass("scroll-cover") || t.addClass("scroll-cover")
                        }), this.options.handleResize && $(window).on("resize.lazy", function () {
                            e.threshold = e._getThreshold(), e._loader(!0)
                        })
                    },
                    _loader: function (e) {
                        var t = this;
                        this.container, this.containerParent;
                        clearTimeout(a), a = setTimeout(function () {
                            t._loadItems(e), 0 === t.items.length && $(window).off("resize.lazy")
                        }, 100)
                    },
                    fireLoad: function () {
                        this.threshold = this._getThreshold(), this._loader(!0)
                    },
                    destroy: function () {
                        $(window).off("resize.lazy"), this.containerParent.off("scroll.lazy"), this.containerParent.off("scroll.cover"), clearTimeout(a), clearTimeout(this.timer), a = null
                    },
                    _loadItems: function (e) {
                        var a = this.options;
                        if ($.isFunction(a.onItemLoad)) {
                            var i = this.containerParent.scrollTop();
                            if (e || !(i < this.options.diff)) {
                                for (var n = this.items, r = this.container, o = this.threshold + i, s = !1, l = [], d = 0, c = n.length; d < c; d++) {
                                    var p = n[d],
                                        u = t(p, r, this.isMobile);
                                    u <= o && u + $(p).height() >= i ? (s = !0, a.onItemLoad(p)) : l.push(p)
                                }
                                s && $.isFunction(a.onItemsLoad) && a.onItemsLoad(), this.items = l, clearTimeout(this.timer), l.length <= 0 || (this.timer = setTimeout(function () {
                                    for (var e, i = 0, s = l.length; i < s; i++) {
                                        var d = n[i];
                                        t(d, r) <= o ? (e = !0, a.onItemLoad(d)) : l.push(d)
                                    }
                                    e && $.isFunction(a.onItemsLoad) && a.onItemsLoad(), this.items = l
                                }, 6e4))
                            }
                        }
                    }
                }, e.LazyLoad = i
            }(bdpChart), 
            angular.module("bdp.charts")
            .controller("EditMarkPointCtrl", ["$scope", "errHint", "commonService", "ngDialog", function (e, t, a, i) {
            var n = e.point = e.ngDialogData.point;
            if (e.type = e.ngDialogData.type, "create" == e.type) {
                var r = e.formatXValue = n.xaxis_value,
                    o = e.xAxis = e.ngDialogData.xAxis;
                if ("date" == o.data_type) {
                    var s = o.granularity || "day",
                        l = o.granularity_name || "",
                        d = o.month_start_day || 0,
                        c = bdpChart.helper.checkGranularity(s, r, l, d);
                    "week" === s && (c += "（" + Highcharts.dateFormat("%b/%e", new Date(r)) + "~" + Highcharts.dateFormat("%b/%e", new Date(r + 5184e5)) + "）"), e.formatXValue = c
                }
            }
            e.save = function () {
                function r(a) {
                    var n = a;
                    "0" == n.status ? (i.closeAll(), e.saveChartImmediate()) : t(n.errstr)
                }
                if (!n.comment) return t("标注内容不能为空"), !1;
                "create" == e.type ? a.fieldComment.create({
                    ct_id: n.ct_id,
                    xaxis_id: n.xaxis_id.split("_")[0],
                    xaxis_value: n.xaxis_value,
                    yaxis_id: n.yaxis_id,
                    yaxis_uniq_id: n.yaxis_uniq_id,
                    comment: n.comment
                }).then(r) : a.fieldComment.modify({
                    ct_id: n.ct_id,
                    fc_id: n.fc_id,
                    comment: n.comment
                }).then(r)
            }
        }]), 
        angular.module("ui.bootstrap.bindHtml").directive("markPointTooltipPopup", function () {
            return {
                restrict: "EA",
                replace: !0,
                scope: {
                    content: "@",
                    placement: "@",
                    animation: "&",
                    isOpen: "&"
                },
                templateUrl: "/static/js/dashboard/tpl/markPointTooltip.html"
            }
        }).directive("markPointTooltip", ["$tooltip", function (e) {
            return e("markPointTooltip", "tooltip", "mouseenter")
        }])
    }();